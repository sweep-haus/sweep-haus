/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CollectionDrop,
  CollectionDropInterface,
} from "../../contracts/CollectionDrop";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001bb565b60006200003a6200013260201b60201c565b90508060000160089054906101000a900460ff161562000086576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146200012f5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff6040516200012691906200019e565b60405180910390a15b50565b600080620001456200014e60201b60201c565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b600067ffffffffffffffff82169050919050565b620001988162000179565b82525050565b6000602082019050620001b560008301846200018d565b92915050565b61298480620001cb6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102cb578063b88d4fde146102e7578063c87b56dd14610303578063e985e9c514610333578063f2fde38b1461036357610116565b806370a0823114610255578063715018a6146102855780638da5cb5b1461028f57806395d89b41146102ad57610116565b8063095ea7b3116100e9578063095ea7b3146101b557806323b872dd146101d157806342842e0e146101ed5780636352211e146102095780636a6278421461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063077f224a14610169578063081812fc14610185575b600080fd5b61013560048036038101906101309190611d43565b61037f565b6040516101429190611d8b565b60405180910390f35b610153610461565b6040516101609190611e36565b60405180910390f35b610183600480360381019061017e9190611feb565b610502565b005b61019f600480360381019061019a91906120ac565b61069d565b6040516101ac91906120e8565b60405180910390f35b6101cf60048036038101906101ca9190612103565b6106b9565b005b6101eb60048036038101906101e69190612143565b6106cf565b005b61020760048036038101906102029190612143565b6107d1565b005b610223600480360381019061021e91906120ac565b6107f1565b60405161023091906120e8565b60405180910390f35b610253600480360381019061024e9190612196565b610803565b005b61026f600480360381019061026a9190612196565b61082b565b60405161027c91906121d2565b60405180910390f35b61028d6108f4565b005b610297610908565b6040516102a491906120e8565b60405180910390f35b6102b5610940565b6040516102c29190611e36565b60405180910390f35b6102e560048036038101906102e09190612219565b6109e1565b005b61030160048036038101906102fc91906122fa565b6109f7565b005b61031d600480360381019061031891906120ac565b610a1c565b60405161032a9190611e36565b60405180910390f35b61034d6004803603810190610348919061237d565b610a85565b60405161035a9190611d8b565b60405180910390f35b61037d60048036038101906103789190612196565b610b27565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a575061045982610bad565b5b9050919050565b6060600061046d610c17565b905080600001805461047e906123ec565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906123ec565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b505050505091505090565b600061050c610c3f565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561055a5750825b9050600060018367ffffffffffffffff1614801561058f575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561059d575080155b156105d4576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106245760018560000160086101000a81548160ff0219169083151502179055505b61062e8888610c53565b61063786610c69565b83156106935760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161068a9190612476565b60405180910390a15b5050505050505050565b60006106a882610c7d565b506106b282610d05565b9050919050565b6106cb82826106c6610d50565b610d58565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107415760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161073891906120e8565b60405180910390fd5b60006107558383610750610d50565b610d6a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107cb578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107c293929190612491565b60405180910390fd5b50505050565b6107ec838383604051806020016040528060008152506109f7565b505050565b60006107fc82610c7d565b9050919050565b6000806000815480929190610817906124f7565b9190505590506108278282610f97565b5050565b600080610836610c17565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108aa5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108a191906120e8565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6108fc610fb5565b610906600061103c565b565b600080610913611113565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6060600061094c610c17565b905080600101805461095d906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610989906123ec565b80156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b505050505091505090565b6109f36109ec610d50565b838361113b565b5050565b610a028484846106cf565b610a16610a0d610d50565b858585856112b9565b50505050565b6060610a2782610c7d565b506000610a3261146a565b90506000815111610a525760405180602001604052806000815250610a7d565b80610a5c846114a7565b604051602001610a6d92919061257b565b6040516020818303038152906040525b915050919050565b600080610a90610c17565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b610b2f610fb5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ba15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b9891906120e8565b60405180910390fd5b610baa8161103c565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b600080610c4a611575565b90508091505090565b610c5b6115a0565b610c6582826115e0565b5050565b610c716115a0565b610c7a8161161d565b50565b600080610c89836116a3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cfc57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610cf391906121d2565b60405180910390fd5b80915050919050565b600080610d10610c17565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b610d6583838360016116ee565b505050565b600080610d75610c17565b90506000610d82856116a3565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610dc457610dc38185876118c2565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e5757610e066000866000806116ee565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610edc5760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b610fb1828260405180602001604052806000815250611986565b5050565b610fbd610d50565b73ffffffffffffffffffffffffffffffffffffffff16610fdb610908565b73ffffffffffffffffffffffffffffffffffffffff161461103a57610ffe610d50565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161103191906120e8565b60405180910390fd5b565b6000611046611113565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000611145610c17565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b857826040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111af91906120e8565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31846040516112ab9190611d8b565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611463578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161131894939291906125f4565b6020604051808303816000875af192505050801561135457506040513d601f19601f820116820180604052508101906113519190612655565b60015b6113d8573d8060008114611384576040519150601f19603f3d011682016040523d82523d6000602084013e611389565b606091505b5060008151036113d057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113c791906120e8565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461146157836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161145891906120e8565b60405180910390fd5b505b5050505050565b60606040518060400160405280600781526020017f697066733a2f2f00000000000000000000000000000000000000000000000000815250905090565b6060600060016114b6846119aa565b01905060008167ffffffffffffffff8111156114d5576114d4611e62565b5b6040519080825280601f01601f1916602001820160405280156115075781602001600182028036833780820191505090505b509050600082602083010190505b60011561156a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161155e5761155d612682565b5b04945060008503611515575b819350505050919050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6115a8611afd565b6115de576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6115e86115a0565b60006115f2610c17565b9050828160000190816116059190612853565b50818160010190816116179190612853565b50505050565b6116256115a0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116975760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161168e91906120e8565b60405180910390fd5b6116a08161103c565b50565b6000806116ae610c17565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006116f8610c17565b905081806117335750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561186757600061174385610c7d565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156117ae57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117c157506117bf8185610a85565b155b1561180357836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117fa91906120e8565b60405180910390fd5b821561186557848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6118cd838383611b1d565b61198157600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194257806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161193991906121d2565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611978929190612925565b60405180910390fd5b505050565b6119908383611bde565b6119a561199b610d50565b60008585856112b9565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a08577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119fe576119fd612682565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a45576d04ee2d6d415b85acef81000000008381611a3b57611a3a612682565b5b0492506020810190505b662386f26fc100008310611a7457662386f26fc100008381611a6a57611a69612682565b5b0492506010810190505b6305f5e1008310611a9d576305f5e1008381611a9357611a92612682565b5b0492506008810190505b6127108310611ac2576127108381611ab857611ab7612682565b5b0492506004810190505b60648310611ae55760648381611adb57611ada612682565b5b0492506002810190505b600a8310611af4576001810190505b80915050919050565b6000611b07610c3f565b60000160089054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bd557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b965750611b958484610a85565b5b80611bd457508273ffffffffffffffffffffffffffffffffffffffff16611bbc83610d05565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c505760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c4791906120e8565b60405180910390fd5b6000611c5e83836000610d6a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cd25760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611cc991906120e8565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d2081611ceb565b8114611d2b57600080fd5b50565b600081359050611d3d81611d17565b92915050565b600060208284031215611d5957611d58611ce1565b5b6000611d6784828501611d2e565b91505092915050565b60008115159050919050565b611d8581611d70565b82525050565b6000602082019050611da06000830184611d7c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611de0578082015181840152602081019050611dc5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e0882611da6565b611e128185611db1565b9350611e22818560208601611dc2565b611e2b81611dec565b840191505092915050565b60006020820190508181036000830152611e508184611dfd565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e9a82611dec565b810181811067ffffffffffffffff82111715611eb957611eb8611e62565b5b80604052505050565b6000611ecc611cd7565b9050611ed88282611e91565b919050565b600067ffffffffffffffff821115611ef857611ef7611e62565b5b611f0182611dec565b9050602081019050919050565b82818337600083830152505050565b6000611f30611f2b84611edd565b611ec2565b905082815260208101848484011115611f4c57611f4b611e5d565b5b611f57848285611f0e565b509392505050565b600082601f830112611f7457611f73611e58565b5b8135611f84848260208601611f1d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fb882611f8d565b9050919050565b611fc881611fad565b8114611fd357600080fd5b50565b600081359050611fe581611fbf565b92915050565b60008060006060848603121561200457612003611ce1565b5b600084013567ffffffffffffffff81111561202257612021611ce6565b5b61202e86828701611f5f565b935050602084013567ffffffffffffffff81111561204f5761204e611ce6565b5b61205b86828701611f5f565b925050604061206c86828701611fd6565b9150509250925092565b6000819050919050565b61208981612076565b811461209457600080fd5b50565b6000813590506120a681612080565b92915050565b6000602082840312156120c2576120c1611ce1565b5b60006120d084828501612097565b91505092915050565b6120e281611fad565b82525050565b60006020820190506120fd60008301846120d9565b92915050565b6000806040838503121561211a57612119611ce1565b5b600061212885828601611fd6565b925050602061213985828601612097565b9150509250929050565b60008060006060848603121561215c5761215b611ce1565b5b600061216a86828701611fd6565b935050602061217b86828701611fd6565b925050604061218c86828701612097565b9150509250925092565b6000602082840312156121ac576121ab611ce1565b5b60006121ba84828501611fd6565b91505092915050565b6121cc81612076565b82525050565b60006020820190506121e760008301846121c3565b92915050565b6121f681611d70565b811461220157600080fd5b50565b600081359050612213816121ed565b92915050565b600080604083850312156122305761222f611ce1565b5b600061223e85828601611fd6565b925050602061224f85828601612204565b9150509250929050565b600067ffffffffffffffff82111561227457612273611e62565b5b61227d82611dec565b9050602081019050919050565b600061229d61229884612259565b611ec2565b9050828152602081018484840111156122b9576122b8611e5d565b5b6122c4848285611f0e565b509392505050565b600082601f8301126122e1576122e0611e58565b5b81356122f184826020860161228a565b91505092915050565b6000806000806080858703121561231457612313611ce1565b5b600061232287828801611fd6565b945050602061233387828801611fd6565b935050604061234487828801612097565b925050606085013567ffffffffffffffff81111561236557612364611ce6565b5b612371878288016122cc565b91505092959194509250565b6000806040838503121561239457612393611ce1565b5b60006123a285828601611fd6565b92505060206123b385828601611fd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061240457607f821691505b602082108103612417576124166123bd565b5b50919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061246061245b6124568461241d565b61243b565b612427565b9050919050565b61247081612445565b82525050565b600060208201905061248b6000830184612467565b92915050565b60006060820190506124a660008301866120d9565b6124b360208301856121c3565b6124c060408301846120d9565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250282612076565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612534576125336124c8565b5b600182019050919050565b600081905092915050565b600061255582611da6565b61255f818561253f565b935061256f818560208601611dc2565b80840191505092915050565b6000612587828561254a565b9150612593828461254a565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006125c68261259f565b6125d081856125aa565b93506125e0818560208601611dc2565b6125e981611dec565b840191505092915050565b600060808201905061260960008301876120d9565b61261660208301866120d9565b61262360408301856121c3565b818103606083015261263581846125bb565b905095945050505050565b60008151905061264f81611d17565b92915050565b60006020828403121561266b5761266a611ce1565b5b600061267984828501612640565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026127137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126d6565b61271d86836126d6565b95508019841693508086168417925050509392505050565b600061275061274b61274684612076565b61243b565b612076565b9050919050565b6000819050919050565b61276a83612735565b61277e61277682612757565b8484546126e3565b825550505050565b600090565b612793612786565b61279e818484612761565b505050565b5b818110156127c2576127b760008261278b565b6001810190506127a4565b5050565b601f821115612807576127d8816126b1565b6127e1846126c6565b810160208510156127f0578190505b6128046127fc856126c6565b8301826127a3565b50505b505050565b600082821c905092915050565b600061282a6000198460080261280c565b1980831691505092915050565b60006128438383612819565b9150826002028217905092915050565b61285c82611da6565b67ffffffffffffffff81111561287557612874611e62565b5b61287f82546123ec565b61288a8282856127c6565b600060209050601f8311600181146128bd57600084156128ab578287015190505b6128b58582612837565b86555061291d565b601f1984166128cb866126b1565b60005b828110156128f3578489015182556001820191506020850194506020810190506128ce565b86831015612910578489015161290c601f891682612819565b8355505b6001600288020188555050505b505050505050565b600060408201905061293a60008301856120d9565b61294760208301846121c3565b939250505056fea2646970667358221220d9ab05bcb0b5b5fa24a2f94ba0933412c2773fa05224c5854f9406921d98ae9164736f6c63430008180033";

type CollectionDropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectionDropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CollectionDrop__factory extends ContractFactory {
  constructor(...args: CollectionDropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      CollectionDrop & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CollectionDrop__factory {
    return super.connect(runner) as CollectionDrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionDropInterface {
    return new Interface(_abi) as CollectionDropInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CollectionDrop {
    return new Contract(address, _abi, runner) as unknown as CollectionDrop;
  }
}
