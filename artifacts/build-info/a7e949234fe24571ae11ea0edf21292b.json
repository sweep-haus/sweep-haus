{"id":"a7e949234fe24571ae11ea0edf21292b","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {Arrays} from \"@openzeppelin/contracts/utils/Arrays.sol\";\nimport {IERC1155Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC1155\n    struct ERC1155Storage {\n        mapping(uint256 id => mapping(address account => uint256)) _balances;\n\n        mapping(address account => mapping(address operator => bool)) _operatorApprovals;\n\n        // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n        string _uri;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC1155\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC1155StorageLocation = 0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500;\n\n    function _getERC1155Storage() private pure returns (ERC1155Storage storage $) {\n        assembly {\n            $.slot := ERC1155StorageLocation\n        }\n    }\n\n    /**\n     * @dev See {_setURI}.\n     */\n    function __ERC1155_init(string memory uri_) internal onlyInitializing {\n        __ERC1155_init_unchained(uri_);\n    }\n\n    function __ERC1155_init_unchained(string memory uri_) internal onlyInitializing {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        return $._operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = $._balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    $._balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                $._balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        $._uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC1155Storage storage $ = _getERC1155Storage();\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IERC721Metadata} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {ERC165Upgradeable} from \"../../utils/introspection/ERC165Upgradeable.sol\";\nimport {IERC721Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721Upgradeable is Initializable, ContextUpgradeable, ERC165Upgradeable, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC721\n    struct ERC721Storage {\n        // Token name\n        string _name;\n\n        // Token symbol\n        string _symbol;\n\n        mapping(uint256 tokenId => address) _owners;\n\n        mapping(address owner => uint256) _balances;\n\n        mapping(uint256 tokenId => address) _tokenApprovals;\n\n        mapping(address owner => mapping(address operator => bool)) _operatorApprovals;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC721\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC721StorageLocation = 0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300;\n\n    function _getERC721Storage() private pure returns (ERC721Storage storage $) {\n        assembly {\n            $.slot := ERC721StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    function __ERC721_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC721_init_unchained(name_, symbol_);\n    }\n\n    function __ERC721_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC721Storage storage $ = _getERC721Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165Upgradeable, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return $._balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        return $._tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        unchecked {\n            $._balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        ERC721Storage storage $ = _getERC721Storage();\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                $._balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                $._balances[to] += 1;\n            }\n        }\n\n        $._owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        $._tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        ERC721Storage storage $ = _getERC721Storage();\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        $._operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.20;\n\nimport {Create2} from \"../utils/Create2.sol\";\nimport {Errors} from \"../utils/Errors.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n */\nlibrary Clones {\n    error CloneArgumentsTooLong();\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        return clone(implementation, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n     * to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function clone(address implementation, uint256 value) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create(value, 0x09, 0x37)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple times will revert, since\n     * the clones cannot be deployed twice at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        return cloneDeterministic(implementation, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n     * a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministic(\n        address implementation,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        assembly (\"memory-safe\") {\n            // Cleans the upper 96 bits of the `implementation` word, then packs the first 3 bytes\n            // of the `implementation` address with the bytecode before the address.\n            mstore(0x00, or(shr(0xe8, shl(0x60, implementation)), 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000))\n            // Packs the remaining 17 bytes of `implementation` with the bytecode after the address.\n            mstore(0x20, or(shl(0x78, implementation), 0x5af43d82803e903d91602b57fd5bf3))\n            instance := create2(value, 0x09, 0x37, salt)\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(add(ptr, 0x38), deployer)\n            mstore(add(ptr, 0x24), 0x5af43d82803e903d91602b57fd5bf3ff)\n            mstore(add(ptr, 0x14), implementation)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n            mstore(add(ptr, 0x58), salt)\n            mstore(add(ptr, 0x78), keccak256(add(ptr, 0x0c), 0x37))\n            predicted := and(keccak256(add(ptr, 0x43), 0x55), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create opcode, which should never revert.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneWithImmutableArgs(address implementation, bytes memory args) internal returns (address instance) {\n        return cloneWithImmutableArgs(implementation, args, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n     * parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        uint256 value\n    ) internal returns (address instance) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        assembly (\"memory-safe\") {\n            instance := create(value, add(bytecode, 0x20), mload(bytecode))\n        }\n        if (instance == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n     * immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n     * access the arguments within the implementation, use {fetchCloneArgs}.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n     * `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n     * at the same address.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal returns (address instance) {\n        return cloneDeterministicWithImmutableArgs(implementation, args, salt, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n     * but with a `value` parameter to send native currency to the new contract.\n     *\n     * WARNING: This function does not check if `implementation` has code. A clone that points to an address\n     * without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n     * have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n     *\n     * NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n     * to always have enough balance for new deployments. Consider exposing this function under a payable method.\n     */\n    function cloneDeterministicWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        uint256 value\n    ) internal returns (address instance) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.deploy(value, salt, bytecode);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        bytes memory bytecode = _cloneCodeWithImmutableArgs(implementation, args);\n        return Create2.computeAddress(salt, keccak256(bytecode), deployer);\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}.\n     */\n    function predictDeterministicAddressWithImmutableArgs(\n        address implementation,\n        bytes memory args,\n        bytes32 salt\n    ) internal view returns (address predicted) {\n        return predictDeterministicAddressWithImmutableArgs(implementation, args, salt, address(this));\n    }\n\n    /**\n     * @dev Get the immutable args attached to a clone.\n     *\n     * - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n     *   function will return an empty array.\n     * - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n     *   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n     *   creation.\n     * - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n     *   function should only be used to check addresses that are known to be clones.\n     */\n    function fetchCloneArgs(address instance) internal view returns (bytes memory) {\n        bytes memory result = new bytes(instance.code.length - 45); // revert if length is too short\n        assembly (\"memory-safe\") {\n            extcodecopy(instance, add(result, 32), 45, mload(result))\n        }\n        return result;\n    }\n\n    /**\n     * @dev Helper that prepares the initcode of the proxy with immutable args.\n     *\n     * An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n     * `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n     * abi.encodePacked is more expensive but also more portable and easier to review.\n     *\n     * NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n     * With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes.\n     */\n    function _cloneCodeWithImmutableArgs(\n        address implementation,\n        bytes memory args\n    ) private pure returns (bytes memory) {\n        if (args.length > 24531) revert CloneArgumentsTooLong();\n        return\n            abi.encodePacked(\n                hex\"61\",\n                uint16(args.length + 45),\n                hex\"3d81600a3d39f3363d3d373d3d3d363d73\",\n                implementation,\n                hex\"5af43d82803e903d91602b57fd5bf3\",\n                args\n            );\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Create2.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Create2.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev There's no code to deploy.\n     */\n    error Create2EmptyBytecode();\n\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n        if (bytecode.length == 0) {\n            revert Create2EmptyBytecode();\n        }\n        assembly (\"memory-safe\") {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n            // if no address was created, and returndata is not empty, bubble revert\n            if and(iszero(addr), not(iszero(returndatasize()))) {\n                let p := mload(0x40)\n                returndatacopy(p, 0, returndatasize())\n                revert(p, returndatasize())\n            }\n        }\n        if (addr == address(0)) {\n            revert Errors.FailedDeployment();\n        }\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := and(keccak256(start, 85), 0xffffffffffffffffffffffffffffffffffffffff)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/CollectionDrop.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract CollectionDrop is Initializable, ERC721Upgradeable, OwnableUpgradeable {\n    uint256 private _nextTokenId;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        string memory name,\n        string memory symbol,\n        address initialOwner\n    ) public initializer {\n        __ERC721_init(name, symbol);\n        __Ownable_init(initialOwner);\n    }\n\n    function mint(address to) public {\n        uint256 tokenId = _nextTokenId++;\n        _safeMint(to, tokenId);\n    }\n\n    function _baseURI() internal pure override returns (string memory) {\n        return \"ipfs://\";\n    }\n}"},"contracts/EditionDrop.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\ncontract EditionDrop is Initializable, ERC1155Upgradeable, OwnableUpgradeable {\n    uint256 private _nextTokenId;\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        string memory uri,\n        address initialOwner\n    ) public initializer {\n        __ERC1155_init(uri);\n        __Ownable_init(initialOwner);\n    }\n\n    function mint(address to, uint256 amount) public {\n        uint256 tokenId = _nextTokenId++;\n        _mint(to, tokenId, amount, \"\");\n    }\n}"},"contracts/NFTFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"./CollectionDrop.sol\";\nimport \"./EditionDrop.sol\";\n\ncontract NFTFactory {\n    address public immutable collectionDropImplementation;\n    address public immutable editionDropImplementation;\n\n    address[] private _collectionContracts;\n    address[] private _editionContracts;\n\n    event CollectionDropDeployed(address indexed contractAddress, string name, string symbol, address indexed owner);\n    event EditionDropDeployed(address indexed contractAddress, string uri, address indexed owner);\n\n    constructor(address _collectionDropImplementation, address _editionDropImplementation) {\n        collectionDropImplementation = _collectionDropImplementation;\n        editionDropImplementation = _editionDropImplementation;\n    }\n\n    function createCollectionDrop(string memory name, string memory symbol, address owner) external {\n        address clone = Clones.clone(collectionDropImplementation);\n        CollectionDrop(clone).initialize(name, symbol, owner);\n        _collectionContracts.push(clone);\n        emit CollectionDropDeployed(clone, name, symbol, owner);\n    }\n\n    function createEditionDrop(string memory uri, address owner) external {\n        address clone = Clones.clone(editionDropImplementation);\n        EditionDrop(clone).initialize(uri, owner);\n        _editionContracts.push(clone);\n        emit EditionDropDeployed(clone, uri, owner);\n    }\n\n    function getCollectionContracts() external view returns (address[] memory) {\n        return _collectionContracts;\n    }\n\n    function getEditionContracts() external view returns (address[] memory) {\n        return _editionContracts;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"Initializable":[462],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":2586,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":463,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,2585,462],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[462]},"id":463,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":462,"linearizedBaseContracts":[462],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":462,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":462,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1079:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4709:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4704:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4704:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4724:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4739:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4724:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4744:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4724:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4704:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4773:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4768:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4768:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4788:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4803:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4788:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4816:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$462","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4808:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4808:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4808:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:4:1","memberName":"code","nodeType":"MemberAccess","src":"4808:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:1","memberName":"length","nodeType":"MemberAccess","src":"4808:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4808:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4788:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4768:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4853:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4854:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4870:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4871:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4853:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4849:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4885:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4906:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4906:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4899:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4949:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4951:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4949:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4949:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4949:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4981:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4977:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4997:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5011:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5013:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5011:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5029:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5011:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5011:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5053:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5068:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5064:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5084:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5098:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5100:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5098:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5116:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5098:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5098:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5152:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5140:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5140:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5135:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1102:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6289:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6384:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6355:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6355:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6355:20:1"},"referencedDeclaration":205,"src":"6355:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"6388:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6388:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6355:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6429:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6431:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6429:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6448:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6450:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6448:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6466:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6448:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6429:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6425:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6475:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6496:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6489:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6539:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6541:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6539:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6556:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6539:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6539:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6573:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6575:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6573:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6591:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6573:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6573:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6605:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6616:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6618:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6616:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6634:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6616:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6616:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6666:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6654:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6649:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5177:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6259:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6280:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6273:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6273:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6272:16:1"},"src":"6250:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6919:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6929:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6929:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6929:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6959:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6687:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6900:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6916:2:1"},"src":"6891:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7134:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7148:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7149:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7144:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7168:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7189:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7189:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7182:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6973:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7091:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7109:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7134:0:1"},"scope":462,"src":"7082:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7758:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7853:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7824:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7824:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7824:20:1"},"referencedDeclaration":205,"src":"7824:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"7857:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7857:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7824:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7898:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7900:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7898:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7894:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7915:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7936:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7936:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7929:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7983:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7985:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7983:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8006:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8006:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8001:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8001:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8014:3:1","memberName":"max","nodeType":"MemberAccess","src":"8001:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7983:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7979:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8019:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8033:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8035:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8033:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8055:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8050:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8063:3:1","memberName":"max","nodeType":"MemberAccess","src":"8050:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8033:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8033:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8102:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8097:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8097:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8110:3:1","memberName":"max","nodeType":"MemberAccess","src":"8097:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8085:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8085:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8080:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7229:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7718:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7738:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7758:0:1"},"scope":462,"src":"7709:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8306:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8323:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8323:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8323:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8316:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8137:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8250:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8272:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8298:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8298:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8297:8:1"},"scope":462,"src":"8241:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8541:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8558:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8558:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8585:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8558:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8551:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8375:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8494:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8509:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8535:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8535:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8534:6:1"},"scope":462,"src":"8485:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8896:45:1","statements":[{"expression":{"id":444,"name":"INITIALIZABLE_STORAGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"8913:21:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"8906:28:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8611:203:1","text":" @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_initializableStorageSlot","nameLocation":"8828:25:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8853:2:1"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"8887:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8887:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8886:9:1"},"scope":462,"src":"8819:122:1","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":460,"nodeType":"Block","src":"9161:115:1","statements":[{"assignments":[455],"declarations":[{"constant":false,"id":455,"mutability":"mutable","name":"slot","nameLocation":"9179:4:1","nodeType":"VariableDeclaration","scope":460,"src":"9171:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":454,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9171:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":458,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":456,"name":"_initializableStorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"9186:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_bytes32_$","typeString":"function () pure returns (bytes32)"}},"id":457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9186:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9171:42:1"},{"AST":{"nativeSrc":"9232:38:1","nodeType":"YulBlock","src":"9232:38:1","statements":[{"nativeSrc":"9246:14:1","nodeType":"YulAssignment","src":"9246:14:1","value":{"name":"slot","nativeSrc":"9256:4:1","nodeType":"YulIdentifier","src":"9256:4:1"},"variableNames":[{"name":"$.slot","nativeSrc":"9246:6:1","nodeType":"YulIdentifier","src":"9246:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":452,"isOffset":false,"isSlot":true,"src":"9246:6:1","suffix":"slot","valueSize":1},{"declaration":455,"isOffset":false,"isSlot":false,"src":"9256:4:1","valueSize":1}],"id":459,"nodeType":"InlineAssembly","src":"9223:47:1"}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"8947:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":461,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"9080:24:1","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"9104:2:1"},"returnParameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"$","nameLocation":"9158:1:1","nodeType":"VariableDeclaration","scope":461,"src":"9129:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":451,"nodeType":"UserDefinedTypeName","pathNode":{"id":450,"name":"InitializableStorage","nameLocations":["9129:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"9129:20:1"},"referencedDeclaration":205,"src":"9129:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"9128:32:1"},"scope":462,"src":"9071:205:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":463,"src":"2349:6929:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:9166:1"},"id":1},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","exportedSymbols":{"Arrays":[4714],"ContextUpgradeable":[2585],"ERC1155Upgradeable":[1459],"ERC1155Utils":[3496],"ERC165Upgradeable":[2625],"IERC1155":[3284],"IERC1155Errors":[2762],"IERC1155MetadataURI":[3342],"IERC165":[6587],"Initializable":[462]},"id":1460,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":464,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":466,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":3285,"src":"135:76:2","symbolAliases":[{"foreign":{"id":465,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","id":468,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":3343,"src":"212:109:2","symbolAliases":[{"foreign":{"id":467,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"220:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","id":470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":3497,"src":"322:90:2","symbolAliases":[{"foreign":{"id":469,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"330:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":2586,"src":"413:70:2","symbolAliases":[{"foreign":{"id":471,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"421:18:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":6588,"src":"484:80:2","symbolAliases":[{"foreign":{"id":473,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"492:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":476,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":2626,"src":"565:82:2","symbolAliases":[{"foreign":{"id":475,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"573:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"@openzeppelin/contracts/utils/Arrays.sol","id":478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":4715,"src":"648:64:2","symbolAliases":[{"foreign":{"id":477,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"656:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":480,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":2763,"src":"713:85:2","symbolAliases":[{"foreign":{"id":479,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"721:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1460,"sourceUnit":463,"src":"799:66:2","symbolAliases":[{"foreign":{"id":481,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"807:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":484,"name":"Initializable","nameLocations":["1092:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1092:13:2"},"id":485,"nodeType":"InheritanceSpecifier","src":"1092:13:2"},{"baseName":{"id":486,"name":"ContextUpgradeable","nameLocations":["1107:18:2"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"1107:18:2"},"id":487,"nodeType":"InheritanceSpecifier","src":"1107:18:2"},{"baseName":{"id":488,"name":"ERC165Upgradeable","nameLocations":["1127:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2625,"src":"1127:17:2"},"id":489,"nodeType":"InheritanceSpecifier","src":"1127:17:2"},{"baseName":{"id":490,"name":"IERC1155","nameLocations":["1146:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":3284,"src":"1146:8:2"},"id":491,"nodeType":"InheritanceSpecifier","src":"1146:8:2"},{"baseName":{"id":492,"name":"IERC1155MetadataURI","nameLocations":["1156:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":3342,"src":"1156:19:2"},"id":493,"nodeType":"InheritanceSpecifier","src":"1156:19:2"},{"baseName":{"id":494,"name":"IERC1155Errors","nameLocations":["1177:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":2762,"src":"1177:14:2"},"id":495,"nodeType":"InheritanceSpecifier","src":"1177:14:2"}],"canonicalName":"ERC1155Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"867:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1459,"linearizedBaseContracts":[1459,2762,3342,3284,2625,6587,2585,462],"name":"ERC1155Upgradeable","nameLocation":"1070:18:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":499,"libraryName":{"id":496,"name":"Arrays","nameLocations":["1204:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4714,"src":"1204:6:2"},"nodeType":"UsingForDirective","src":"1198:27:2","typeName":{"baseType":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1215:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":498,"nodeType":"ArrayTypeName","src":"1215:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":503,"libraryName":{"id":500,"name":"Arrays","nameLocations":["1236:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":4714,"src":"1236:6:2"},"nodeType":"UsingForDirective","src":"1230:27:2","typeName":{"baseType":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":502,"nodeType":"ArrayTypeName","src":"1247:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"canonicalName":"ERC1155Upgradeable.ERC1155Storage","documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"1263:65:2","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC1155"},"id":519,"members":[{"constant":false,"id":510,"mutability":"mutable","name":"_balances","nameLocation":"1424:9:2","nodeType":"VariableDeclaration","scope":519,"src":"1365:68:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":509,"keyName":"id","keyNameLocation":"1381:2:2","keyType":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1365:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":508,"keyName":"account","keyNameLocation":"1403:7:2","keyType":{"id":506,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1387:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1506:18:2","nodeType":"VariableDeclaration","scope":519,"src":"1444:80:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":515,"keyName":"account","keyNameLocation":"1460:7:2","keyType":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1444:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":514,"keyName":"operator","keyNameLocation":"1487:8:2","keyType":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"1479:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1471:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":513,"name":"bool","nodeType":"ElementaryTypeName","src":"1499:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"_uri","nameLocation":"1660:4:2","nodeType":"VariableDeclaration","scope":519,"src":"1653:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":517,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC1155Storage","nameLocation":"1340:14:2","nodeType":"StructDefinition","scope":1459,"src":"1333:338:2","visibility":"public"},{"constant":true,"id":522,"mutability":"constant","name":"ERC1155StorageLocation","nameLocation":"1813:22:2","nodeType":"VariableDeclaration","scope":1459,"src":"1788:116:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838386265353336643532343063323734613362316433613162653534343832666439636161323934663038633632613763646535363966343961336334353030","id":521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1838:66:2","typeDescriptions":{"typeIdentifier":"t_rational_61850824141875340645484003952679861077730695310785076753205161524670616061184_by_1","typeString":"int_const 6185...(69 digits omitted)...1184"},"value":"0x88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500"},"visibility":"private"},{"body":{"id":529,"nodeType":"Block","src":"1989:81:2","statements":[{"AST":{"nativeSrc":"2008:56:2","nodeType":"YulBlock","src":"2008:56:2","statements":[{"nativeSrc":"2022:32:2","nodeType":"YulAssignment","src":"2022:32:2","value":{"name":"ERC1155StorageLocation","nativeSrc":"2032:22:2","nodeType":"YulIdentifier","src":"2032:22:2"},"variableNames":[{"name":"$.slot","nativeSrc":"2022:6:2","nodeType":"YulIdentifier","src":"2022:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":526,"isOffset":false,"isSlot":true,"src":"2022:6:2","suffix":"slot","valueSize":1},{"declaration":522,"isOffset":false,"isSlot":false,"src":"2032:22:2","valueSize":1}],"id":528,"nodeType":"InlineAssembly","src":"1999:65:2"}]},"id":530,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC1155Storage","nameLocation":"1920:18:2","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[],"src":"1938:2:2"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"$","nameLocation":"1986:1:2","nodeType":"VariableDeclaration","scope":530,"src":"1963:24:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":525,"nodeType":"UserDefinedTypeName","pathNode":{"id":524,"name":"ERC1155Storage","nameLocations":["1963:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"1963:14:2"},"referencedDeclaration":519,"src":"1963:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"src":"1962:26:2"},"scope":1459,"src":"1911:159:2","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":542,"nodeType":"Block","src":"2189:47:2","statements":[{"expression":{"arguments":[{"id":539,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2224:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":538,"name":"__ERC1155_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"2199:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2199:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":541,"nodeType":"ExpressionStatement","src":"2199:30:2"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"2076:38:2","text":" @dev See {_setURI}."},"id":543,"implemented":true,"kind":"function","modifiers":[{"id":536,"kind":"modifierInvocation","modifierName":{"id":535,"name":"onlyInitializing","nameLocations":["2172:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2172:16:2"},"nodeType":"ModifierInvocation","src":"2172:16:2"}],"name":"__ERC1155_init","nameLocation":"2128:14:2","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"uri_","nameLocation":"2157:4:2","nodeType":"VariableDeclaration","scope":543,"src":"2143:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":532,"name":"string","nodeType":"ElementaryTypeName","src":"2143:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2142:20:2"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"2189:0:2"},"scope":1459,"src":"2119:117:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":554,"nodeType":"Block","src":"2322:30:2","statements":[{"expression":{"arguments":[{"id":551,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"2340:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":550,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"2332:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"2332:13:2"}]},"id":555,"implemented":true,"kind":"function","modifiers":[{"id":548,"kind":"modifierInvocation","modifierName":{"id":547,"name":"onlyInitializing","nameLocations":["2305:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2305:16:2"},"nodeType":"ModifierInvocation","src":"2305:16:2"}],"name":"__ERC1155_init_unchained","nameLocation":"2251:24:2","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":545,"mutability":"mutable","name":"uri_","nameLocation":"2290:4:2","nodeType":"VariableDeclaration","scope":555,"src":"2276:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":544,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2275:20:2"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"2322:0:2"},"scope":1459,"src":"2242:110:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2624,6586],"body":{"id":585,"nodeType":"Block","src":"2505:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":566,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2534:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":568,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"2554:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$3284_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$3284_$","typeString":"type(contract IERC1155)"}],"id":567,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2549:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$3284","typeString":"type(contract IERC1155)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2564:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"2549:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2534:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2591:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":574,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"2611:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$3342_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$3342_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":573,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2606:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$3342","typeString":"type(contract IERC1155MetadataURI)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2632:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"2606:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2591:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":581,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2683:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":579,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2659:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Upgradeable_$1459_$","typeString":"type(contract super ERC1155Upgradeable)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2665:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"2659:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2534:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":565,"id":584,"nodeType":"Return","src":"2515:180:2"}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"2358:23:2","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":586,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2395:17:2","nodeType":"FunctionDefinition","overrides":{"id":562,"nodeType":"OverrideSpecifier","overrides":[{"id":560,"name":"ERC165Upgradeable","nameLocations":["2462:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":2625,"src":"2462:17:2"},{"id":561,"name":"IERC165","nameLocations":["2481:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"2481:7:2"}],"src":"2453:36:2"},"parameters":{"id":559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"interfaceId","nameLocation":"2420:11:2","nodeType":"VariableDeclaration","scope":586,"src":"2413:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":557,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2413:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2412:20:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"2499:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":563,"name":"bool","nodeType":"ElementaryTypeName","src":"2499:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2498:6:2"},"scope":1459,"src":"2386:316:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3341],"body":{"id":603,"nodeType":"Block","src":"3176:87:2","statements":[{"assignments":[596],"declarations":[{"constant":false,"id":596,"mutability":"mutable","name":"$","nameLocation":"3209:1:2","nodeType":"VariableDeclaration","scope":603,"src":"3186:24:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":595,"nodeType":"UserDefinedTypeName","pathNode":{"id":594,"name":"ERC1155Storage","nameLocations":["3186:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"3186:14:2"},"referencedDeclaration":519,"src":"3186:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":599,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":597,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3213:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$519_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3213:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3186:47:2"},{"expression":{"expression":{"id":600,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"3250:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3252:4:2","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":518,"src":"3250:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":593,"id":602,"nodeType":"Return","src":"3243:13:2"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"2708:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3110:3:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":604,"src":"3114:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":588,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3113:18:2"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":604,"src":"3161:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":591,"name":"string","nodeType":"ElementaryTypeName","src":"3161:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3160:15:2"},"scope":1459,"src":"3101:162:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3222],"body":{"id":627,"nodeType":"Block","src":"3384:105:2","statements":[{"assignments":[616],"declarations":[{"constant":false,"id":616,"mutability":"mutable","name":"$","nameLocation":"3417:1:2","nodeType":"VariableDeclaration","scope":627,"src":"3394:24:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":615,"nodeType":"UserDefinedTypeName","pathNode":{"id":614,"name":"ERC1155Storage","nameLocations":["3394:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"3394:14:2"},"referencedDeclaration":519,"src":"3394:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":617,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"3421:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$519_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3421:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3394:47:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":620,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"3458:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3460:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":510,"src":"3458:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":623,"indexExpression":{"id":622,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3470:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":625,"indexExpression":{"id":624,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"3474:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3458:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":613,"id":626,"nodeType":"Return","src":"3451:31:2"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"3269:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":628,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3307:9:2","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"account","nameLocation":"3325:7:2","nodeType":"VariableDeclaration","scope":628,"src":"3317:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"id","nameLocation":"3342:2:2","nodeType":"VariableDeclaration","scope":628,"src":"3334:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"3334:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3316:29:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":628,"src":"3375:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"3375:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3374:9:2"},"scope":1459,"src":"3298:191:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3235],"body":{"id":697,"nodeType":"Block","src":"3788:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":641,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3802:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3811:6:2","memberName":"length","nodeType":"MemberAccess","src":"3802:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"3821:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3825:6:2","memberName":"length","nodeType":"MemberAccess","src":"3821:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3802:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":654,"nodeType":"IfStatement","src":"3798:121:2","trueBody":{"id":653,"nodeType":"Block","src":"3833:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":647,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"3880:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3884:6:2","memberName":"length","nodeType":"MemberAccess","src":"3880:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":649,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3892:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3901:6:2","memberName":"length","nodeType":"MemberAccess","src":"3892:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":646,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"3854:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3854:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"RevertStatement","src":"3847:61:2"}]}},{"assignments":[659],"declarations":[{"constant":false,"id":659,"mutability":"mutable","name":"batchBalances","nameLocation":"3946:13:2","nodeType":"VariableDeclaration","scope":697,"src":"3929:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":658,"nodeType":"ArrayTypeName","src":"3929:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":666,"initialValue":{"arguments":[{"expression":{"id":663,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3976:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3985:6:2","memberName":"length","nodeType":"MemberAccess","src":"3976:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3962:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"3966:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":661,"nodeType":"ArrayTypeName","src":"3966:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3962:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3929:63:2"},{"body":{"id":693,"nodeType":"Block","src":"4049:112:2","statements":[{"expression":{"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":678,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4063:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":680,"indexExpression":{"id":679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4077:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4063:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":684,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4120:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":682,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4092:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4101:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4606,"src":"4092:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4092:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4147:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":686,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"4124:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4128:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"4124:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4124:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":681,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4082:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4082:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4063:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":692,"nodeType":"ExpressionStatement","src":"4063:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4023:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":672,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4027:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4036:6:2","memberName":"length","nodeType":"MemberAccess","src":"4027:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4023:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"initializationExpression":{"assignments":[668],"declarations":[{"constant":false,"id":668,"mutability":"mutable","name":"i","nameLocation":"4016:1:2","nodeType":"VariableDeclaration","scope":694,"src":"4008:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"4008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":670,"initialValue":{"hexValue":"30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4020:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4008:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4044:3:2","subExpression":{"id":675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"4046:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":677,"nodeType":"ExpressionStatement","src":"4044:3:2"},"nodeType":"ForStatement","src":"4003:158:2"},{"expression":{"id":695,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"4178:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":640,"id":696,"nodeType":"Return","src":"4171:20:2"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"3495:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"3655:14:2","nodeType":"FunctionDefinition","parameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":632,"mutability":"mutable","name":"accounts","nameLocation":"3696:8:2","nodeType":"VariableDeclaration","scope":698,"src":"3679:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"3679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":631,"nodeType":"ArrayTypeName","src":"3679:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"ids","nameLocation":"3731:3:2","nodeType":"VariableDeclaration","scope":698,"src":"3714:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":634,"nodeType":"ArrayTypeName","src":"3714:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3669:71:2"},"returnParameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"3770:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":637,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ArrayTypeName","src":"3770:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3769:18:2"},"scope":1459,"src":"3646:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3243],"body":{"id":713,"nodeType":"Block","src":"4308:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":707,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4337:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"4351:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":710,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"4361:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":706,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"4318:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"ExpressionStatement","src":"4318:52:2"}]},"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"4204:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":714,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4242:17:2","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"operator","nameLocation":"4268:8:2","nodeType":"VariableDeclaration","scope":714,"src":"4260:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"4260:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"approved","nameLocation":"4283:8:2","nodeType":"VariableDeclaration","scope":714,"src":"4278:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":702,"name":"bool","nodeType":"ElementaryTypeName","src":"4278:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4259:33:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"4308:0:2"},"scope":1459,"src":"4233:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3253],"body":{"id":737,"nodeType":"Block","src":"4508:120:2","statements":[{"assignments":[726],"declarations":[{"constant":false,"id":726,"mutability":"mutable","name":"$","nameLocation":"4541:1:2","nodeType":"VariableDeclaration","scope":737,"src":"4518:24:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":725,"nodeType":"UserDefinedTypeName","pathNode":{"id":724,"name":"ERC1155Storage","nameLocations":["4518:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"4518:14:2"},"referencedDeclaration":519,"src":"4518:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":727,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"4545:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$519_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4545:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4518:47:2"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":730,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"4582:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4584:18:2","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":516,"src":"4582:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":733,"indexExpression":{"id":732,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"4603:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4582:29:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":735,"indexExpression":{"id":734,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"4612:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4582:39:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":723,"id":736,"nodeType":"Return","src":"4575:46:2"}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"4383:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":738,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4421:16:2","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"account","nameLocation":"4446:7:2","nodeType":"VariableDeclaration","scope":738,"src":"4438:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"4438:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"operator","nameLocation":"4463:8:2","nodeType":"VariableDeclaration","scope":738,"src":"4455:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"4455:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4437:35:2"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":738,"src":"4502:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":721,"name":"bool","nodeType":"ElementaryTypeName","src":"4502:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4501:6:2"},"scope":1459,"src":"4412:216:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3267],"body":{"id":781,"nodeType":"Block","src":"4776:238:2","statements":[{"assignments":[753],"declarations":[{"constant":false,"id":753,"mutability":"mutable","name":"sender","nameLocation":"4794:6:2","nodeType":"VariableDeclaration","scope":781,"src":"4786:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"4786:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":756,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":754,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4803:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4803:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4786:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":757,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"4829:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":758,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4837:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4829:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4847:31:2","subExpression":{"arguments":[{"id":761,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"4865:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":762,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4871:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":760,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"4848:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4848:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4829:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":772,"nodeType":"IfStatement","src":"4825:129:2","trueBody":{"id":771,"nodeType":"Block","src":"4880:74:2","statements":[{"errorCall":{"arguments":[{"id":767,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"4930:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"4938:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":766,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"4901:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4901:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":770,"nodeType":"RevertStatement","src":"4894:49:2"}]}},{"expression":{"arguments":[{"id":774,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"4981:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"4987:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":776,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"4991:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":747,"src":"4995:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":778,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"5002:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":773,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1138,"src":"4963:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"4963:44:2"}]},"documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"4634:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":782,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4672:16:2","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"from","nameLocation":"4697:4:2","nodeType":"VariableDeclaration","scope":782,"src":"4689:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"4689:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"to","nameLocation":"4711:2:2","nodeType":"VariableDeclaration","scope":782,"src":"4703:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"4703:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"id","nameLocation":"4723:2:2","nodeType":"VariableDeclaration","scope":782,"src":"4715:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4715:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"value","nameLocation":"4735:5:2","nodeType":"VariableDeclaration","scope":782,"src":"4727:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"4727:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"data","nameLocation":"4755:4:2","nodeType":"VariableDeclaration","scope":782,"src":"4742:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"4742:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4688:72:2"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"4776:0:2"},"scope":1459,"src":"4663:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3283],"body":{"id":827,"nodeType":"Block","src":"5233:245:2","statements":[{"assignments":[799],"declarations":[{"constant":false,"id":799,"mutability":"mutable","name":"sender","nameLocation":"5251:6:2","nodeType":"VariableDeclaration","scope":827,"src":"5243:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":802,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":800,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5260:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5260:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5243:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":803,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5286:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":804,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5294:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5286:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5304:31:2","subExpression":{"arguments":[{"id":807,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5322:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5328:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":806,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"5305:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5305:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5286:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"IfStatement","src":"5282:129:2","trueBody":{"id":817,"nodeType":"Block","src":"5337:74:2","statements":[{"errorCall":{"arguments":[{"id":813,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"5387:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5395:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":812,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"5358:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5358:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":816,"nodeType":"RevertStatement","src":"5351:49:2"}]}},{"expression":{"arguments":[{"id":820,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5443:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"5449:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":822,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"5453:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":823,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"5458:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"5466:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":819,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"5420:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":826,"nodeType":"ExpressionStatement","src":"5420:51:2"}]},"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"5020:24:2","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":828,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"5058:21:2","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"from","nameLocation":"5097:4:2","nodeType":"VariableDeclaration","scope":828,"src":"5089:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"5089:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"to","nameLocation":"5119:2:2","nodeType":"VariableDeclaration","scope":828,"src":"5111:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"5111:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"ids","nameLocation":"5148:3:2","nodeType":"VariableDeclaration","scope":828,"src":"5131:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"5131:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":789,"nodeType":"ArrayTypeName","src":"5131:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":793,"mutability":"mutable","name":"values","nameLocation":"5178:6:2","nodeType":"VariableDeclaration","scope":828,"src":"5161:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":792,"nodeType":"ArrayTypeName","src":"5161:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"data","nameLocation":"5207:4:2","nodeType":"VariableDeclaration","scope":828,"src":"5194:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":794,"name":"bytes","nodeType":"ElementaryTypeName","src":"5194:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5079:138:2"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[],"src":"5233:0:2"},"scope":1459,"src":"5049:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":991,"nodeType":"Block","src":"6286:1237:2","statements":[{"assignments":[844],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"$","nameLocation":"6319:1:2","nodeType":"VariableDeclaration","scope":991,"src":"6296:24:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"ERC1155Storage","nameLocations":["6296:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"6296:14:2"},"referencedDeclaration":519,"src":"6296:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":847,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":845,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"6323:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$519_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6323:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6296:47:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":848,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6357:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6361:6:2","memberName":"length","nodeType":"MemberAccess","src":"6357:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":850,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6371:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6378:6:2","memberName":"length","nodeType":"MemberAccess","src":"6371:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6357:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":861,"nodeType":"IfStatement","src":"6353:117:2","trueBody":{"id":860,"nodeType":"Block","src":"6386:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":854,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6433:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6437:6:2","memberName":"length","nodeType":"MemberAccess","src":"6433:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":856,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6445:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6452:6:2","memberName":"length","nodeType":"MemberAccess","src":"6445:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":853,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6407:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":859,"nodeType":"RevertStatement","src":"6400:59:2"}]}},{"assignments":[863],"declarations":[{"constant":false,"id":863,"mutability":"mutable","name":"operator","nameLocation":"6488:8:2","nodeType":"VariableDeclaration","scope":991,"src":"6480:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":866,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":864,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6499:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6499:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6480:31:2"},{"body":{"id":952,"nodeType":"Block","src":"6563:656:2","statements":[{"assignments":[879],"declarations":[{"constant":false,"id":879,"mutability":"mutable","name":"id","nameLocation":"6585:2:2","nodeType":"VariableDeclaration","scope":952,"src":"6577:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":884,"initialValue":{"arguments":[{"id":882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6613:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":880,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6590:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6594:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"6590:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6590:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6577:38:2"},{"assignments":[886],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"value","nameLocation":"6637:5:2","nodeType":"VariableDeclaration","scope":952,"src":"6629:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"6629:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[{"id":889,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6671:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":887,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"6645:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"6645:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6645:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6629:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6692:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6708:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6700:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"6700:7:2","typeDescriptions":{}}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6700:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6692:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":933,"nodeType":"IfStatement","src":"6688:424:2","trueBody":{"id":932,"nodeType":"Block","src":"6712:400:2","statements":[{"assignments":[899],"declarations":[{"constant":false,"id":899,"mutability":"mutable","name":"fromBalance","nameLocation":"6738:11:2","nodeType":"VariableDeclaration","scope":932,"src":"6730:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"6730:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":906,"initialValue":{"baseExpression":{"baseExpression":{"expression":{"id":900,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"6752:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6754:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":510,"src":"6752:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":903,"indexExpression":{"id":902,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"6764:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6752:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":905,"indexExpression":{"id":904,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6768:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6752:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6730:43:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"6795:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6809:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6795:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"6791:129:2","trueBody":{"id":917,"nodeType":"Block","src":"6816:104:2","statements":[{"errorCall":{"arguments":[{"id":911,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"6872:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":912,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"6878:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6891:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":914,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"6898:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":910,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"6845:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6845:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":916,"nodeType":"RevertStatement","src":"6838:63:2"}]}},{"id":931,"nodeType":"UncheckedBlock","src":"6937:161:2","statements":[{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":919,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7036:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7038:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":510,"src":"7036:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":924,"indexExpression":{"id":921,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"7048:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7036:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":925,"indexExpression":{"id":922,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"7052:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7036:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"7060:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7074:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7060:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7036:43:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"nodeType":"ExpressionStatement","src":"7036:43:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":934,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"7130:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7136:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"7136:7:2","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7136:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7130:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":951,"nodeType":"IfStatement","src":"7126:83:2","trueBody":{"id":950,"nodeType":"Block","src":"7148:61:2","statements":[{"expression":{"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":940,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"7166:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7168:9:2","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":510,"src":"7166:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":945,"indexExpression":{"id":942,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"7178:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7166:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":946,"indexExpression":{"id":943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"7182:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7166:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"7189:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7166:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":949,"nodeType":"ExpressionStatement","src":"7166:28:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6542:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":872,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"6546:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6550:6:2","memberName":"length","nodeType":"MemberAccess","src":"6546:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6542:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":953,"initializationExpression":{"assignments":[868],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"i","nameLocation":"6535:1:2","nodeType":"VariableDeclaration","scope":953,"src":"6527:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"6527:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":870,"initialValue":{"hexValue":"30","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6539:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6527:13:2"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6558:3:2","subExpression":{"id":875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6560:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ExpressionStatement","src":"6558:3:2"},"nodeType":"ForStatement","src":"6522:697:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":954,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7233:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7237:6:2","memberName":"length","nodeType":"MemberAccess","src":"7233:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7247:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7233:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":989,"nodeType":"Block","src":"7441:76:2","statements":[{"eventCall":{"arguments":[{"id":982,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"7474:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":983,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"7484:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"7490:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":985,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7494:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":986,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"7499:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":981,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7460:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7460:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"EmitStatement","src":"7455:51:2"}]},"id":990,"nodeType":"IfStatement","src":"7229:288:2","trueBody":{"id":980,"nodeType":"Block","src":"7250:185:2","statements":[{"assignments":[959],"declarations":[{"constant":false,"id":959,"mutability":"mutable","name":"id","nameLocation":"7272:2:2","nodeType":"VariableDeclaration","scope":980,"src":"7264:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"7264:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":964,"initialValue":{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7300:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":960,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7277:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7281:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"7277:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7277:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7264:38:2"},{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"value","nameLocation":"7324:5:2","nodeType":"VariableDeclaration","scope":980,"src":"7316:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"7316:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":971,"initialValue":{"arguments":[{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7358:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":967,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"7332:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7339:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"7332:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7332:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7316:44:2"},{"eventCall":{"arguments":[{"id":973,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"7394:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"7404:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"7410:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":976,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7414:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7418:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"7379:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7379:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"EmitStatement","src":"7374:50:2"}]}}]},"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"5484:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":992,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6188:7:2","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"from","nameLocation":"6204:4:2","nodeType":"VariableDeclaration","scope":992,"src":"6196:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"to","nameLocation":"6218:2:2","nodeType":"VariableDeclaration","scope":992,"src":"6210:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"6210:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"ids","nameLocation":"6239:3:2","nodeType":"VariableDeclaration","scope":992,"src":"6222:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ArrayTypeName","src":"6222:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"values","nameLocation":"6261:6:2","nodeType":"VariableDeclaration","scope":992,"src":"6244:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":837,"name":"uint256","nodeType":"ElementaryTypeName","src":"6244:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ArrayTypeName","src":"6244:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6195:73:2"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"6286:0:2"},"scope":1459,"src":"6179:1344:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1071,"nodeType":"Block","src":"8293:509:2","statements":[{"expression":{"arguments":[{"id":1009,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"8311:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8317:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"8321:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1012,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8326:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1008,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"8303:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8303:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1014,"nodeType":"ExpressionStatement","src":"8303:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1015,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8347:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8361:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8353:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"8353:7:2","typeDescriptions":{}}},"id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8353:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8347:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1070,"nodeType":"IfStatement","src":"8343:453:2","trueBody":{"id":1069,"nodeType":"Block","src":"8365:431:2","statements":[{"assignments":[1022],"declarations":[{"constant":false,"id":1022,"mutability":"mutable","name":"operator","nameLocation":"8387:8:2","nodeType":"VariableDeclaration","scope":1069,"src":"8379:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"8379:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1025,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1023,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"8398:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8398:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8379:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1026,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"8428:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8432:6:2","memberName":"length","nodeType":"MemberAccess","src":"8428:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8442:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8428:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1067,"nodeType":"Block","src":"8674:112:2","statements":[{"expression":{"arguments":[{"id":1059,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8733:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1060,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"8743:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1061,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8749:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1062,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"8753:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1063,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8758:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1064,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8766:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1056,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"8692:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$3496_$","typeString":"type(library ERC1155Utils)"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8705:27:2","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3495,"src":"8692:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"ExpressionStatement","src":"8692:79:2"}]},"id":1068,"nodeType":"IfStatement","src":"8424:362:2","trueBody":{"id":1055,"nodeType":"Block","src":"8445:223:2","statements":[{"assignments":[1031],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"id","nameLocation":"8471:2:2","nodeType":"VariableDeclaration","scope":1055,"src":"8463:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"8463:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1036,"initialValue":{"arguments":[{"hexValue":"30","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8499:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1032,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"8476:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8480:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"8476:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8476:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8463:38:2"},{"assignments":[1038],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"value","nameLocation":"8527:5:2","nodeType":"VariableDeclaration","scope":1055,"src":"8519:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"8519:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1043,"initialValue":{"arguments":[{"hexValue":"30","id":1041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8561:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":1039,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8535:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8542:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4632,"src":"8535:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8519:44:2"},{"expression":{"arguments":[{"id":1047,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"8617:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"8627:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"8633:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1050,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"8637:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"8641:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1052,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8648:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1044,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"8581:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$3496_$","typeString":"type(library ERC1155Utils)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:22:2","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":3421,"src":"8581:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1054,"nodeType":"ExpressionStatement","src":"8581:72:2"}]}}]}}]},"documentation":{"id":993,"nodeType":"StructuredDocumentation","src":"7529:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"8111:26:2","nodeType":"FunctionDefinition","parameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":995,"mutability":"mutable","name":"from","nameLocation":"8155:4:2","nodeType":"VariableDeclaration","scope":1072,"src":"8147:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"8147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"to","nameLocation":"8177:2:2","nodeType":"VariableDeclaration","scope":1072,"src":"8169:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":996,"name":"address","nodeType":"ElementaryTypeName","src":"8169:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"ids","nameLocation":"8206:3:2","nodeType":"VariableDeclaration","scope":1072,"src":"8189:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"8189:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":999,"nodeType":"ArrayTypeName","src":"8189:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"values","nameLocation":"8236:6:2","nodeType":"VariableDeclaration","scope":1072,"src":"8219:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"8219:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ArrayTypeName","src":"8219:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"data","nameLocation":"8265:4:2","nodeType":"VariableDeclaration","scope":1072,"src":"8252:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1004,"name":"bytes","nodeType":"ElementaryTypeName","src":"8252:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8137:138:2"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[],"src":"8293:0:2"},"scope":1459,"src":"8102:700:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1137,"nodeType":"Block","src":"9367:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1086,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9381:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9387:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"9387:7:2","typeDescriptions":{}}},"id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9387:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9381:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"9377:88:2","trueBody":{"id":1099,"nodeType":"Block","src":"9399:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9451:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9443:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"9443:7:2","typeDescriptions":{}}},"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9443:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1092,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"9420:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9420:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1098,"nodeType":"RevertStatement","src":"9413:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1101,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9478:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9494:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9486:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"9486:7:2","typeDescriptions":{}}},"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9486:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9478:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"9474:88:2","trueBody":{"id":1114,"nodeType":"Block","src":"9498:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9548:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9540:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"9540:7:2","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9540:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1107,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"9519:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9519:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1113,"nodeType":"RevertStatement","src":"9512:39:2"}]}},{"assignments":[1120,1123],"declarations":[{"constant":false,"id":1120,"mutability":"mutable","name":"ids","nameLocation":"9589:3:2","nodeType":"VariableDeclaration","scope":1137,"src":"9572:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"9572:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1119,"nodeType":"ArrayTypeName","src":"9572:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"values","nameLocation":"9611:6:2","nodeType":"VariableDeclaration","scope":1137,"src":"9594:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"9594:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1122,"nodeType":"ArrayTypeName","src":"9594:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1128,"initialValue":{"arguments":[{"id":1125,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"9640:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1081,"src":"9644:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1124,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"9621:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9621:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"9571:79:2"},{"expression":{"arguments":[{"id":1130,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"9687:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1131,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9693:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"9697:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1133,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"9702:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1134,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"9710:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1129,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"9660:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9660:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1136,"nodeType":"ExpressionStatement","src":"9660:55:2"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"8808:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1138,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"9268:17:2","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"from","nameLocation":"9294:4:2","nodeType":"VariableDeclaration","scope":1138,"src":"9286:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"9286:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"to","nameLocation":"9308:2:2","nodeType":"VariableDeclaration","scope":1138,"src":"9300:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"9300:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"id","nameLocation":"9320:2:2","nodeType":"VariableDeclaration","scope":1138,"src":"9312:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"9312:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"value","nameLocation":"9332:5:2","nodeType":"VariableDeclaration","scope":1138,"src":"9324:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1080,"name":"uint256","nodeType":"ElementaryTypeName","src":"9324:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"data","nameLocation":"9352:4:2","nodeType":"VariableDeclaration","scope":1138,"src":"9339:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1082,"name":"bytes","nodeType":"ElementaryTypeName","src":"9339:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9285:72:2"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[],"src":"9367:0:2"},"scope":1459,"src":"9259:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1192,"nodeType":"Block","src":"10302:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"10316:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10330:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10322:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"10322:7:2","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10322:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10316:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"10312:88:2","trueBody":{"id":1167,"nodeType":"Block","src":"10334:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10386:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10378:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"10378:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10378:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1160,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"10355:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10355:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"10348:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1169,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"10413:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10421:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"10421:7:2","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10421:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10413:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"10409:88:2","trueBody":{"id":1182,"nodeType":"Block","src":"10433:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10483:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10475:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"10475:7:2","typeDescriptions":{}}},"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10475:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"10454:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10454:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1181,"nodeType":"RevertStatement","src":"10447:39:2"}]}},{"expression":{"arguments":[{"id":1185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"10533:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1186,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1143,"src":"10539:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1187,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"10543:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1188,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"10548:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1189,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"10556:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1184,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"10506:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10506:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"10506:55:2"}]},"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"9728:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"10132:22:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"from","nameLocation":"10172:4:2","nodeType":"VariableDeclaration","scope":1193,"src":"10164:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"to","nameLocation":"10194:2:2","nodeType":"VariableDeclaration","scope":1193,"src":"10186:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"10186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"ids","nameLocation":"10223:3:2","nodeType":"VariableDeclaration","scope":1193,"src":"10206:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"10206:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1145,"nodeType":"ArrayTypeName","src":"10206:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"values","nameLocation":"10253:6:2","nodeType":"VariableDeclaration","scope":1193,"src":"10236:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"10236:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1148,"nodeType":"ArrayTypeName","src":"10236:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"data","nameLocation":"10282:4:2","nodeType":"VariableDeclaration","scope":1193,"src":"10269:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1150,"name":"bytes","nodeType":"ElementaryTypeName","src":"10269:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10154:138:2"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"10302:0:2"},"scope":1459,"src":"10123:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1211,"nodeType":"Block","src":"11446:89:2","statements":[{"assignments":[1201],"declarations":[{"constant":false,"id":1201,"mutability":"mutable","name":"$","nameLocation":"11479:1:2","nodeType":"VariableDeclaration","scope":1211,"src":"11456:24:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1200,"nodeType":"UserDefinedTypeName","pathNode":{"id":1199,"name":"ERC1155Storage","nameLocations":["11456:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"11456:14:2"},"referencedDeclaration":519,"src":"11456:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1204,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1202,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"11483:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$519_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11483:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11456:47:2"},{"expression":{"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1205,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"11513:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11515:4:2","memberName":"_uri","nodeType":"MemberAccess","referencedDeclaration":518,"src":"11513:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1208,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"11522:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"11513:15:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1210,"nodeType":"ExpressionStatement","src":"11513:15:2"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"10574:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"11399:7:2","nodeType":"FunctionDefinition","parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"newuri","nameLocation":"11421:6:2","nodeType":"VariableDeclaration","scope":1212,"src":"11407:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1195,"name":"string","nodeType":"ElementaryTypeName","src":"11407:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11406:22:2"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[],"src":"11446:0:2"},"scope":1459,"src":"11390:145:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1263,"nodeType":"Block","src":"11995:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"12009:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12015:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"12015:7:2","typeDescriptions":{}}},"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12015:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12009:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"nodeType":"IfStatement","src":"12005:88:2","trueBody":{"id":1237,"nodeType":"Block","src":"12027:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12079:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12071:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"12071:7:2","typeDescriptions":{}}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12071:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1230,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"12048:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12048:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"RevertStatement","src":"12041:41:2"}]}},{"assignments":[1243,1246],"declarations":[{"constant":false,"id":1243,"mutability":"mutable","name":"ids","nameLocation":"12120:3:2","nodeType":"VariableDeclaration","scope":1263,"src":"12103:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"12103:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1242,"nodeType":"ArrayTypeName","src":"12103:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1246,"mutability":"mutable","name":"values","nameLocation":"12142:6:2","nodeType":"VariableDeclaration","scope":1263,"src":"12125:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12125:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1245,"nodeType":"ArrayTypeName","src":"12125:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[{"id":1248,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"12171:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"12175:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1247,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"12152:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12102:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12226:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12218:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"12218:7:2","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12218:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"12230:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1258,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12234:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1259,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"12239:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"12247:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1252,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"12191:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12191:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"12191:61:2"}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"11541:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1264,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11922:5:2","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"to","nameLocation":"11936:2:2","nodeType":"VariableDeclaration","scope":1264,"src":"11928:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"11928:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"id","nameLocation":"11948:2:2","nodeType":"VariableDeclaration","scope":1264,"src":"11940:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"11940:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"value","nameLocation":"11960:5:2","nodeType":"VariableDeclaration","scope":1264,"src":"11952:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"11952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"data","nameLocation":"11980:4:2","nodeType":"VariableDeclaration","scope":1264,"src":"11967:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1220,"name":"bytes","nodeType":"ElementaryTypeName","src":"11967:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11927:58:2"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"11995:0:2"},"scope":1459,"src":"11913:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"12797:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1278,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"12811:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12825:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12817:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"12817:7:2","typeDescriptions":{}}},"id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12817:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12811:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1292,"nodeType":"IfStatement","src":"12807:88:2","trueBody":{"id":1291,"nodeType":"Block","src":"12829:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12881:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12873:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"12873:7:2","typeDescriptions":{}}},"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12873:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1284,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"12850:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12850:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"RevertStatement","src":"12843:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12939:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12931:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"12931:7:2","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12931:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1298,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"12943:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1299,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"12947:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1300,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"12952:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1301,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"12960:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1293,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"12904:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1303,"nodeType":"ExpressionStatement","src":"12904:61:2"}]},"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"12265:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1305,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"12699:10:2","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"to","nameLocation":"12718:2:2","nodeType":"VariableDeclaration","scope":1305,"src":"12710:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"12710:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"ids","nameLocation":"12739:3:2","nodeType":"VariableDeclaration","scope":1305,"src":"12722:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1269,"nodeType":"ArrayTypeName","src":"12722:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"values","nameLocation":"12761:6:2","nodeType":"VariableDeclaration","scope":1305,"src":"12744:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"12744:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"12744:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"data","nameLocation":"12782:4:2","nodeType":"VariableDeclaration","scope":1305,"src":"12769:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1274,"name":"bytes","nodeType":"ElementaryTypeName","src":"12769:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12709:78:2"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"12797:0:2"},"scope":1459,"src":"12690:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1354,"nodeType":"Block","src":"13331:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"13345:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13361:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13353:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"13353:7:2","typeDescriptions":{}}},"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13353:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13345:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1329,"nodeType":"IfStatement","src":"13341:88:2","trueBody":{"id":1328,"nodeType":"Block","src":"13365:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13415:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13407:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"13407:7:2","typeDescriptions":{}}},"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13407:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1321,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"13386:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13386:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1327,"nodeType":"RevertStatement","src":"13379:39:2"}]}},{"assignments":[1334,1337],"declarations":[{"constant":false,"id":1334,"mutability":"mutable","name":"ids","nameLocation":"13456:3:2","nodeType":"VariableDeclaration","scope":1354,"src":"13439:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"13439:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1333,"nodeType":"ArrayTypeName","src":"13439:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"values","nameLocation":"13478:6:2","nodeType":"VariableDeclaration","scope":1354,"src":"13461:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"13461:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1336,"nodeType":"ArrayTypeName","src":"13461:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1342,"initialValue":{"arguments":[{"id":1339,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"13507:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"13511:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1338,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"13488:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13488:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13438:79:2"},{"expression":{"arguments":[{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"13554:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13568:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13560:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"13560:7:2","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13560:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"13572:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1350,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"13577:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13585:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1343,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"13527:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13527:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"13527:61:2"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"12978:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13275:5:2","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"from","nameLocation":"13289:4:2","nodeType":"VariableDeclaration","scope":1355,"src":"13281:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"13281:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"id","nameLocation":"13303:2:2","nodeType":"VariableDeclaration","scope":1355,"src":"13295:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"13295:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"value","nameLocation":"13315:5:2","nodeType":"VariableDeclaration","scope":1355,"src":"13307:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"13307:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13280:41:2"},"returnParameters":{"id":1314,"nodeType":"ParameterList","parameters":[],"src":"13331:0:2"},"scope":1459,"src":"13266:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1393,"nodeType":"Block","src":"14041:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"14055:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14071:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14063:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"14063:7:2","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14063:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14055:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1381,"nodeType":"IfStatement","src":"14051:88:2","trueBody":{"id":1380,"nodeType":"Block","src":"14075:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14125:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14117:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"14117:7:2","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14117:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1373,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"14096:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14096:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"RevertStatement","src":"14089:39:2"}]}},{"expression":{"arguments":[{"id":1383,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"14175:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"14181:7:2","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1388,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"14193:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1389,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"14198:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14206:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1382,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"14148:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14148:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"ExpressionStatement","src":"14148:61:2"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"13601:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1394,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"13960:10:2","nodeType":"FunctionDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"from","nameLocation":"13979:4:2","nodeType":"VariableDeclaration","scope":1394,"src":"13971:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1357,"name":"address","nodeType":"ElementaryTypeName","src":"13971:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"ids","nameLocation":"14002:3:2","nodeType":"VariableDeclaration","scope":1394,"src":"13985:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"13985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1360,"nodeType":"ArrayTypeName","src":"13985:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"values","nameLocation":"14024:6:2","nodeType":"VariableDeclaration","scope":1394,"src":"14007:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"14007:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1363,"nodeType":"ArrayTypeName","src":"14007:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13970:61:2"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"14041:0:2"},"scope":1459,"src":"13951:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1441,"nodeType":"Block","src":"14528:281:2","statements":[{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"$","nameLocation":"14561:1:2","nodeType":"VariableDeclaration","scope":1441,"src":"14538:24:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"},"typeName":{"id":1405,"nodeType":"UserDefinedTypeName","pathNode":{"id":1404,"name":"ERC1155Storage","nameLocations":["14538:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":519,"src":"14538:14:2"},"referencedDeclaration":519,"src":"14538:14:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage"}},"visibility":"internal"}],"id":1409,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1407,"name":"_getERC1155Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"14565:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC1155Storage_$519_storage_ptr_$","typeString":"function () pure returns (struct ERC1155Upgradeable.ERC1155Storage storage pointer)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14565:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"14538:47:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1410,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"14599:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14619:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14611:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"14611:7:2","typeDescriptions":{}}},"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14611:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14599:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1424,"nodeType":"IfStatement","src":"14595:94:2","trueBody":{"id":1423,"nodeType":"Block","src":"14623:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14675:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14667:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"14667:7:2","typeDescriptions":{}}},"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14667:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1416,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"14644:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14644:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"RevertStatement","src":"14637:41:2"}]}},{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1425,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"14698:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_ERC1155Storage_$519_storage_ptr","typeString":"struct ERC1155Upgradeable.ERC1155Storage storage pointer"}},"id":1429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14700:18:2","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":516,"src":"14698:20:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1430,"indexExpression":{"id":1427,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"14719:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14698:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1431,"indexExpression":{"id":1428,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"14726:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14698:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1432,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"14738:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14698:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1434,"nodeType":"ExpressionStatement","src":"14698:48:2"},{"eventCall":{"arguments":[{"id":1436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"14776:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"14783:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1438,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"14793:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1435,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"14761:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14761:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"EmitStatement","src":"14756:46:2"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"14222:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1442,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"14444:18:2","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"owner","nameLocation":"14471:5:2","nodeType":"VariableDeclaration","scope":1442,"src":"14463:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"operator","nameLocation":"14486:8:2","nodeType":"VariableDeclaration","scope":1442,"src":"14478:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"14478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"approved","nameLocation":"14501:8:2","nodeType":"VariableDeclaration","scope":1442,"src":"14496:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1400,"name":"bool","nodeType":"ElementaryTypeName","src":"14496:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14462:48:2"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"14528:0:2"},"scope":1459,"src":"14435:374:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"15083:664:2","statements":[{"AST":{"nativeSrc":"15118:623:2","nodeType":"YulBlock","src":"15118:623:2","statements":[{"nativeSrc":"15176:21:2","nodeType":"YulAssignment","src":"15176:21:2","value":{"arguments":[{"kind":"number","nativeSrc":"15192:4:2","nodeType":"YulLiteral","src":"15192:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"15186:5:2","nodeType":"YulIdentifier","src":"15186:5:2"},"nativeSrc":"15186:11:2","nodeType":"YulFunctionCall","src":"15186:11:2"},"variableNames":[{"name":"array1","nativeSrc":"15176:6:2","nodeType":"YulIdentifier","src":"15176:6:2"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"15254:6:2","nodeType":"YulIdentifier","src":"15254:6:2"},{"kind":"number","nativeSrc":"15262:1:2","nodeType":"YulLiteral","src":"15262:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15247:6:2","nodeType":"YulIdentifier","src":"15247:6:2"},"nativeSrc":"15247:17:2","nodeType":"YulFunctionCall","src":"15247:17:2"},"nativeSrc":"15247:17:2","nodeType":"YulExpressionStatement","src":"15247:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"15385:6:2","nodeType":"YulIdentifier","src":"15385:6:2"},{"kind":"number","nativeSrc":"15393:4:2","nodeType":"YulLiteral","src":"15393:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15381:3:2","nodeType":"YulIdentifier","src":"15381:3:2"},"nativeSrc":"15381:17:2","nodeType":"YulFunctionCall","src":"15381:17:2"},{"name":"element1","nativeSrc":"15400:8:2","nodeType":"YulIdentifier","src":"15400:8:2"}],"functionName":{"name":"mstore","nativeSrc":"15374:6:2","nodeType":"YulIdentifier","src":"15374:6:2"},"nativeSrc":"15374:35:2","nodeType":"YulFunctionCall","src":"15374:35:2"},"nativeSrc":"15374:35:2","nodeType":"YulExpressionStatement","src":"15374:35:2"},{"nativeSrc":"15500:27:2","nodeType":"YulAssignment","src":"15500:27:2","value":{"arguments":[{"name":"array1","nativeSrc":"15514:6:2","nodeType":"YulIdentifier","src":"15514:6:2"},{"kind":"number","nativeSrc":"15522:4:2","nodeType":"YulLiteral","src":"15522:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15510:3:2","nodeType":"YulIdentifier","src":"15510:3:2"},"nativeSrc":"15510:17:2","nodeType":"YulFunctionCall","src":"15510:17:2"},"variableNames":[{"name":"array2","nativeSrc":"15500:6:2","nodeType":"YulIdentifier","src":"15500:6:2"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"15547:6:2","nodeType":"YulIdentifier","src":"15547:6:2"},{"kind":"number","nativeSrc":"15555:1:2","nodeType":"YulLiteral","src":"15555:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"15540:6:2","nodeType":"YulIdentifier","src":"15540:6:2"},"nativeSrc":"15540:17:2","nodeType":"YulFunctionCall","src":"15540:17:2"},"nativeSrc":"15540:17:2","nodeType":"YulExpressionStatement","src":"15540:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"15581:6:2","nodeType":"YulIdentifier","src":"15581:6:2"},{"kind":"number","nativeSrc":"15589:4:2","nodeType":"YulLiteral","src":"15589:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15577:3:2","nodeType":"YulIdentifier","src":"15577:3:2"},"nativeSrc":"15577:17:2","nodeType":"YulFunctionCall","src":"15577:17:2"},{"name":"element2","nativeSrc":"15596:8:2","nodeType":"YulIdentifier","src":"15596:8:2"}],"functionName":{"name":"mstore","nativeSrc":"15570:6:2","nodeType":"YulIdentifier","src":"15570:6:2"},"nativeSrc":"15570:35:2","nodeType":"YulFunctionCall","src":"15570:35:2"},"nativeSrc":"15570:35:2","nodeType":"YulExpressionStatement","src":"15570:35:2"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15707:4:2","nodeType":"YulLiteral","src":"15707:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"15717:6:2","nodeType":"YulIdentifier","src":"15717:6:2"},{"kind":"number","nativeSrc":"15725:4:2","nodeType":"YulLiteral","src":"15725:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15713:3:2","nodeType":"YulIdentifier","src":"15713:3:2"},"nativeSrc":"15713:17:2","nodeType":"YulFunctionCall","src":"15713:17:2"}],"functionName":{"name":"mstore","nativeSrc":"15700:6:2","nodeType":"YulIdentifier","src":"15700:6:2"},"nativeSrc":"15700:31:2","nodeType":"YulFunctionCall","src":"15700:31:2"},"nativeSrc":"15700:31:2","nodeType":"YulExpressionStatement","src":"15700:31:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1451,"isOffset":false,"isSlot":false,"src":"15176:6:2","valueSize":1},{"declaration":1451,"isOffset":false,"isSlot":false,"src":"15254:6:2","valueSize":1},{"declaration":1451,"isOffset":false,"isSlot":false,"src":"15385:6:2","valueSize":1},{"declaration":1451,"isOffset":false,"isSlot":false,"src":"15514:6:2","valueSize":1},{"declaration":1454,"isOffset":false,"isSlot":false,"src":"15500:6:2","valueSize":1},{"declaration":1454,"isOffset":false,"isSlot":false,"src":"15547:6:2","valueSize":1},{"declaration":1454,"isOffset":false,"isSlot":false,"src":"15581:6:2","valueSize":1},{"declaration":1454,"isOffset":false,"isSlot":false,"src":"15717:6:2","valueSize":1},{"declaration":1445,"isOffset":false,"isSlot":false,"src":"15400:8:2","valueSize":1},{"declaration":1447,"isOffset":false,"isSlot":false,"src":"15596:8:2","valueSize":1}],"flags":["memory-safe"],"id":1456,"nodeType":"InlineAssembly","src":"15093:648:2"}]},"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"14815:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"14934:18:2","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"element1","nameLocation":"14970:8:2","nodeType":"VariableDeclaration","scope":1458,"src":"14962:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"14962:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"element2","nameLocation":"14996:8:2","nodeType":"VariableDeclaration","scope":1458,"src":"14988:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1446,"name":"uint256","nodeType":"ElementaryTypeName","src":"14988:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14952:58:2"},"returnParameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"array1","nameLocation":"15050:6:2","nodeType":"VariableDeclaration","scope":1458,"src":"15033:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1449,"name":"uint256","nodeType":"ElementaryTypeName","src":"15033:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ArrayTypeName","src":"15033:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"array2","nameLocation":"15075:6:2","nodeType":"VariableDeclaration","scope":1458,"src":"15058:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"15058:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1453,"nodeType":"ArrayTypeName","src":"15058:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15032:50:2"},"scope":1459,"src":"14925:822:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1460,"src":"1052:14697:2","usedErrors":[211,214,2727,2732,2737,2744,2749,2754,2761],"usedEvents":[219,3181,3196,3205,3212]}],"src":"109:15641:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"ERC165Upgradeable":[2625],"ERC721Upgradeable":[2539],"ERC721Utils":[3736],"IERC165":[6587],"IERC721":[3613],"IERC721Errors":[2715],"IERC721Metadata":[3659],"Initializable":[462],"Strings":[6575]},"id":2540,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1461,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":1463,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":3614,"src":"133:73:3","symbolAliases":[{"foreign":{"id":1462,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","id":1465,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":3660,"src":"207:100:3","symbolAliases":[{"foreign":{"id":1464,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"215:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","id":1467,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":3737,"src":"308:87:3","symbolAliases":[{"foreign":{"id":1466,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"316:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":1469,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":2586,"src":"396:70:3","symbolAliases":[{"foreign":{"id":1468,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"404:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":1471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":6576,"src":"467:66:3","symbolAliases":[{"foreign":{"id":1470,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6575,"src":"475:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":1473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":6588,"src":"534:80:3","symbolAliases":[{"foreign":{"id":1472,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"542:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","file":"../../utils/introspection/ERC165Upgradeable.sol","id":1475,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":2626,"src":"615:82:3","symbolAliases":[{"foreign":{"id":1474,"name":"ERC165Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"623:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":1477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":2763,"src":"698:84:3","symbolAliases":[{"foreign":{"id":1476,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"706:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":1479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2540,"sourceUnit":463,"src":"783:66:3","symbolAliases":[{"foreign":{"id":1478,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"791:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1481,"name":"Initializable","nameLocations":["1138:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"1138:13:3"},"id":1482,"nodeType":"InheritanceSpecifier","src":"1138:13:3"},{"baseName":{"id":1483,"name":"ContextUpgradeable","nameLocations":["1153:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":2585,"src":"1153:18:3"},"id":1484,"nodeType":"InheritanceSpecifier","src":"1153:18:3"},{"baseName":{"id":1485,"name":"ERC165Upgradeable","nameLocations":["1173:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2625,"src":"1173:17:3"},"id":1486,"nodeType":"InheritanceSpecifier","src":"1173:17:3"},{"baseName":{"id":1487,"name":"IERC721","nameLocations":["1192:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3613,"src":"1192:7:3"},"id":1488,"nodeType":"InheritanceSpecifier","src":"1192:7:3"},{"baseName":{"id":1489,"name":"IERC721Metadata","nameLocations":["1201:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":3659,"src":"1201:15:3"},"id":1490,"nodeType":"InheritanceSpecifier","src":"1201:15:3"},{"baseName":{"id":1491,"name":"IERC721Errors","nameLocations":["1218:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":2715,"src":"1218:13:3"},"id":1492,"nodeType":"InheritanceSpecifier","src":"1218:13:3"}],"canonicalName":"ERC721Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"851:247:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2539,"linearizedBaseContracts":[2539,2715,3659,3613,2625,6587,2585,462],"name":"ERC721Upgradeable","nameLocation":"1117:17:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1495,"libraryName":{"id":1493,"name":"Strings","nameLocations":["1244:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":6575,"src":"1244:7:3"},"nodeType":"UsingForDirective","src":"1238:26:3","typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"ERC721Upgradeable.ERC721Storage","documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"1270:64:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC721"},"id":1519,"members":[{"constant":false,"id":1498,"mutability":"mutable","name":"_name","nameLocation":"1399:5:3","nodeType":"VariableDeclaration","scope":1519,"src":"1392:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1497,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"_symbol","nameLocation":"1446:7:3","nodeType":"VariableDeclaration","scope":1519,"src":"1439:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1499,"name":"string","nodeType":"ElementaryTypeName","src":"1439:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"_owners","nameLocation":"1500:7:3","nodeType":"VariableDeclaration","scope":1519,"src":"1464:43:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1503,"keyName":"tokenId","keyNameLocation":"1480:7:3","keyType":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1472:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1464:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"1491:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"_balances","nameLocation":"1552:9:3","nodeType":"VariableDeclaration","scope":1519,"src":"1518:43:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1507,"keyName":"owner","keyNameLocation":"1534:5:3","keyType":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1518:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1506,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1608:15:3","nodeType":"VariableDeclaration","scope":1519,"src":"1572:51:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1511,"keyName":"tokenId","keyNameLocation":"1588:7:3","keyType":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1572:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"1599:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"constant":false,"id":1518,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1694:18:3","nodeType":"VariableDeclaration","scope":1519,"src":"1634:78:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1517,"keyName":"owner","keyNameLocation":"1650:5:3","keyType":{"id":1513,"name":"address","nodeType":"ElementaryTypeName","src":"1642:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1634:59:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1516,"keyName":"operator","keyNameLocation":"1675:8:3","keyType":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1659:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1515,"name":"bool","nodeType":"ElementaryTypeName","src":"1687:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"}],"name":"ERC721Storage","nameLocation":"1346:13:3","nodeType":"StructDefinition","scope":2539,"src":"1339:380:3","visibility":"public"},{"constant":true,"id":1522,"mutability":"constant","name":"ERC721StorageLocation","nameLocation":"1860:21:3","nodeType":"VariableDeclaration","scope":2539,"src":"1835:115:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1835:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307838306262326236333863633230626334643061363064363639343066336162346130306331643762333133343937636138326662306234616230303739333030","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1884:66:3","typeDescriptions":{"typeIdentifier":"t_rational_58226744478722834339948329933988999792353370511964151963072532422914231210752_by_1","typeString":"int_const 5822...(69 digits omitted)...0752"},"value":"0x80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300"},"visibility":"private"},{"body":{"id":1529,"nodeType":"Block","src":"2033:80:3","statements":[{"AST":{"nativeSrc":"2052:55:3","nodeType":"YulBlock","src":"2052:55:3","statements":[{"nativeSrc":"2066:31:3","nodeType":"YulAssignment","src":"2066:31:3","value":{"name":"ERC721StorageLocation","nativeSrc":"2076:21:3","nodeType":"YulIdentifier","src":"2076:21:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2066:6:3","nodeType":"YulIdentifier","src":"2066:6:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1526,"isOffset":false,"isSlot":true,"src":"2066:6:3","suffix":"slot","valueSize":1},{"declaration":1522,"isOffset":false,"isSlot":false,"src":"2076:21:3","valueSize":1}],"id":1528,"nodeType":"InlineAssembly","src":"2043:64:3"}]},"id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC721Storage","nameLocation":"1966:17:3","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[],"src":"1983:2:3"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"$","nameLocation":"2030:1:3","nodeType":"VariableDeclaration","scope":1530,"src":"2008:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1525,"nodeType":"UserDefinedTypeName","pathNode":{"id":1524,"name":"ERC721Storage","nameLocations":["2008:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"2008:13:3"},"referencedDeclaration":1519,"src":"2008:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"src":"2007:25:3"},"scope":2539,"src":"1957:156:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1545,"nodeType":"Block","src":"2325:56:3","statements":[{"expression":{"arguments":[{"id":1541,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2359:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1542,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"2366:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1540,"name":"__ERC721_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"2335:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1544,"nodeType":"ExpressionStatement","src":"2335:39:3"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"2119:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1546,"implemented":true,"kind":"function","modifiers":[{"id":1538,"kind":"modifierInvocation","modifierName":{"id":1537,"name":"onlyInitializing","nameLocations":["2308:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2308:16:3"},"nodeType":"ModifierInvocation","src":"2308:16:3"}],"name":"__ERC721_init","nameLocation":"2241:13:3","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"name_","nameLocation":"2269:5:3","nodeType":"VariableDeclaration","scope":1546,"src":"2255:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1532,"name":"string","nodeType":"ElementaryTypeName","src":"2255:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"symbol_","nameLocation":"2290:7:3","nodeType":"VariableDeclaration","scope":1546,"src":"2276:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1534,"name":"string","nodeType":"ElementaryTypeName","src":"2276:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2254:44:3"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"2325:0:3"},"scope":2539,"src":"2232:149:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"2490:116:3","statements":[{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"$","nameLocation":"2522:1:3","nodeType":"VariableDeclaration","scope":1573,"src":"2500:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1556,"nodeType":"UserDefinedTypeName","pathNode":{"id":1555,"name":"ERC721Storage","nameLocations":["2500:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"2500:13:3"},"referencedDeclaration":1519,"src":"2500:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1560,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1558,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"2526:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2500:45:3"},{"expression":{"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1561,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2555:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1563,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2557:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"2555:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1564,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"2565:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2555:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1566,"nodeType":"ExpressionStatement","src":"2555:15:3"},{"expression":{"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1567,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"2580:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2582:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":1500,"src":"2580:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1570,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"2592:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2580:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1572,"nodeType":"ExpressionStatement","src":"2580:19:3"}]},"id":1574,"implemented":true,"kind":"function","modifiers":[{"id":1553,"kind":"modifierInvocation","modifierName":{"id":1552,"name":"onlyInitializing","nameLocations":["2473:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2473:16:3"},"nodeType":"ModifierInvocation","src":"2473:16:3"}],"name":"__ERC721_init_unchained","nameLocation":"2396:23:3","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"name_","nameLocation":"2434:5:3","nodeType":"VariableDeclaration","scope":1574,"src":"2420:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1547,"name":"string","nodeType":"ElementaryTypeName","src":"2420:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"symbol_","nameLocation":"2455:7:3","nodeType":"VariableDeclaration","scope":1574,"src":"2441:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1549,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2419:44:3"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"2490:0:3"},"scope":2539,"src":"2387:219:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2624,6586],"body":{"id":1604,"nodeType":"Block","src":"2759:192:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2788:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1587,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"2808:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3613_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3613_$","typeString":"type(contract IERC721)"}],"id":1586,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2803:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3613","typeString":"type(contract IERC721)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2817:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2803:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2788:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1591,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2844:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1593,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"2864:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3659_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3659_$","typeString":"type(contract IERC721Metadata)"}],"id":1592,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2859:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2859:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3659","typeString":"type(contract IERC721Metadata)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2881:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"2859:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2844:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2788:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1600,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2932:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1598,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2908:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721Upgradeable_$2539_$","typeString":"type(contract super ERC721Upgradeable)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2914:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2624,"src":"2908:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2908:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2788:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1584,"id":1603,"nodeType":"Return","src":"2769:175:3"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"2612:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2649:17:3","nodeType":"FunctionDefinition","overrides":{"id":1581,"nodeType":"OverrideSpecifier","overrides":[{"id":1579,"name":"ERC165Upgradeable","nameLocations":["2716:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":2625,"src":"2716:17:3"},{"id":1580,"name":"IERC165","nameLocations":["2735:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"2735:7:3"}],"src":"2707:36:3"},"parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"interfaceId","nameLocation":"2674:11:3","nodeType":"VariableDeclaration","scope":1605,"src":"2667:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1576,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2667:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2666:20:3"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"2753:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1582,"name":"bool","nodeType":"ElementaryTypeName","src":"2753:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2752:6:3"},"scope":2539,"src":"2640:311:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3538],"body":{"id":1639,"nodeType":"Block","src":"3057:193:3","statements":[{"assignments":[1615],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"$","nameLocation":"3089:1:3","nodeType":"VariableDeclaration","scope":1639,"src":"3067:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1614,"nodeType":"UserDefinedTypeName","pathNode":{"id":1613,"name":"ERC721Storage","nameLocations":["3067:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"3067:13:3"},"referencedDeclaration":1519,"src":"3067:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1616,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3093:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3093:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3067:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"3126:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3143:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3135:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1620,"name":"address","nodeType":"ElementaryTypeName","src":"3135:7:3","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3126:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1633,"nodeType":"IfStatement","src":"3122:87:3","trueBody":{"id":1632,"nodeType":"Block","src":"3147:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"3187:7:3","typeDescriptions":{}}},"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1625,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3168:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1631,"nodeType":"RevertStatement","src":"3161:37:3"}]}},{"expression":{"baseExpression":{"expression":{"id":1634,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"3225:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3227:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"3225:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1637,"indexExpression":{"id":1636,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"3237:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3225:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1612,"id":1638,"nodeType":"Return","src":"3218:25:3"}]},"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"2957:23:3","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2994:9:3","nodeType":"FunctionDefinition","parameters":{"id":1609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1608,"mutability":"mutable","name":"owner","nameLocation":"3012:5:3","nodeType":"VariableDeclaration","scope":1640,"src":"3004:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"3004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3003:15:3"},"returnParameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1640,"src":"3048:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3048:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3047:9:3"},"scope":2539,"src":"2985:265:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3546],"body":{"id":1652,"nodeType":"Block","src":"3356:46:3","statements":[{"expression":{"arguments":[{"id":1649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"3387:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1648,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"3373:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3373:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1647,"id":1651,"nodeType":"Return","src":"3366:29:3"}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"3256:23:3","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":1653,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3293:7:3","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"tokenId","nameLocation":"3309:7:3","nodeType":"VariableDeclaration","scope":1653,"src":"3301:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"3301:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3300:17:3"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1653,"src":"3347:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3346:9:3"},"scope":2539,"src":"3284:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3644],"body":{"id":1668,"nodeType":"Block","src":"3504:86:3","statements":[{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"$","nameLocation":"3536:1:3","nodeType":"VariableDeclaration","scope":1668,"src":"3514:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1660,"nodeType":"UserDefinedTypeName","pathNode":{"id":1659,"name":"ERC721Storage","nameLocations":["3514:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"3514:13:3"},"referencedDeclaration":1519,"src":"3514:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1664,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3540:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3514:45:3"},{"expression":{"expression":{"id":1665,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3576:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3578:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"3576:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1658,"id":1667,"nodeType":"Return","src":"3569:14:3"}]},"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"3408:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3453:4:3","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[],"src":"3457:2:3"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1669,"src":"3489:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1656,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3488:15:3"},"scope":2539,"src":"3444:146:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3650],"body":{"id":1684,"nodeType":"Block","src":"3694:88:3","statements":[{"assignments":[1677],"declarations":[{"constant":false,"id":1677,"mutability":"mutable","name":"$","nameLocation":"3726:1:3","nodeType":"VariableDeclaration","scope":1684,"src":"3704:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1676,"nodeType":"UserDefinedTypeName","pathNode":{"id":1675,"name":"ERC721Storage","nameLocations":["3704:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"3704:13:3"},"referencedDeclaration":1519,"src":"3704:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1680,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1678,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"3730:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3730:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3704:45:3"},{"expression":{"expression":{"id":1681,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"3766:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3768:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":1500,"src":"3766:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1674,"id":1683,"nodeType":"Return","src":"3759:16:3"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"3596:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3641:6:3","nodeType":"FunctionDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"3647:2:3"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1685,"src":"3679:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1672,"name":"string","nodeType":"ElementaryTypeName","src":"3679:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3678:15:3"},"scope":2539,"src":"3632:150:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3658],"body":{"id":1720,"nodeType":"Block","src":"3903:176:3","statements":[{"expression":{"arguments":[{"id":1694,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"3927:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1693,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"3913:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1696,"nodeType":"ExpressionStatement","src":"3913:22:3"},{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"baseURI","nameLocation":"3960:7:3","nodeType":"VariableDeclaration","scope":1720,"src":"3946:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1697,"name":"string","nodeType":"ElementaryTypeName","src":"3946:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1701,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1699,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"3970:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3970:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"3946:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1704,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"4003:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3997:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1702,"name":"bytes","nodeType":"ElementaryTypeName","src":"3997:5:3","typeDescriptions":{}}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3997:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4012:6:3","memberName":"length","nodeType":"MemberAccess","src":"3997:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4021:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3997:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4070:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3997:75:3","trueExpression":{"arguments":[{"id":1712,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"4039:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1713,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"4048:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":5287,"src":"4048:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4025:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1709,"name":"string","nodeType":"ElementaryTypeName","src":"4025:6:3","typeDescriptions":{}}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4032:6:3","memberName":"concat","nodeType":"MemberAccess","src":"4025:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1692,"id":1719,"nodeType":"Return","src":"3990:82:3"}]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"3788:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":1721,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"3833:8:3","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"tokenId","nameLocation":"3850:7:3","nodeType":"VariableDeclaration","scope":1721,"src":"3842:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1687,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3841:17:3"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1721,"src":"3888:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1690,"name":"string","nodeType":"ElementaryTypeName","src":"3888:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3887:15:3"},"scope":2539,"src":"3824:255:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1729,"nodeType":"Block","src":"4387:26:3","statements":[{"expression":{"hexValue":"","id":1727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4404:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1726,"id":1728,"nodeType":"Return","src":"4397:9:3"}]},"documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"4085:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"4330:8:3","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"4338:2:3"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"4372:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1724,"name":"string","nodeType":"ElementaryTypeName","src":"4372:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4371:15:3"},"scope":2539,"src":"4321:92:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3586],"body":{"id":1745,"nodeType":"Block","src":"4508:52:3","statements":[{"expression":{"arguments":[{"id":1739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"4527:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"4531:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1741,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4540:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4540:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1738,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2390,2464],"referencedDeclaration":2390,"src":"4518:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4518:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"ExpressionStatement","src":"4518:35:3"}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"4419:23:3","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":1746,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4456:7:3","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"to","nameLocation":"4472:2:3","nodeType":"VariableDeclaration","scope":1746,"src":"4464:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"tokenId","nameLocation":"4484:7:3","nodeType":"VariableDeclaration","scope":1746,"src":"4476:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1734,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4463:29:3"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[],"src":"4508:0:3"},"scope":2539,"src":"4447:113:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3602],"body":{"id":1762,"nodeType":"Block","src":"4670:78:3","statements":[{"expression":{"arguments":[{"id":1755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"4694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1754,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"4680:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1757,"nodeType":"ExpressionStatement","src":"4680:22:3"},{"expression":{"arguments":[{"id":1759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"4733:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1758,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"4720:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4720:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1753,"id":1761,"nodeType":"Return","src":"4713:28:3"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"4566:23:3","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":1763,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4603:11:3","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"tokenId","nameLocation":"4623:7:3","nodeType":"VariableDeclaration","scope":1763,"src":"4615:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"4615:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4614:17:3"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1763,"src":"4661:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"4661:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4660:9:3"},"scope":2539,"src":"4594:154:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3594],"body":{"id":1778,"nodeType":"Block","src":"4857:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1772,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"4886:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4886:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1774,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4900:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1775,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"4910:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1771,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"4867:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4867:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"4867:52:3"}]},"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"4754:23:3","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4791:17:3","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"operator","nameLocation":"4817:8:3","nodeType":"VariableDeclaration","scope":1779,"src":"4809:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"4809:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"approved","nameLocation":"4832:8:3","nodeType":"VariableDeclaration","scope":1779,"src":"4827:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1767,"name":"bool","nodeType":"ElementaryTypeName","src":"4827:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4808:33:3"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"4857:0:3"},"scope":2539,"src":"4782:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3612],"body":{"id":1802,"nodeType":"Block","src":"5054:116:3","statements":[{"assignments":[1791],"declarations":[{"constant":false,"id":1791,"mutability":"mutable","name":"$","nameLocation":"5086:1:3","nodeType":"VariableDeclaration","scope":1802,"src":"5064:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1790,"nodeType":"UserDefinedTypeName","pathNode":{"id":1789,"name":"ERC721Storage","nameLocations":["5064:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"5064:13:3"},"referencedDeclaration":1519,"src":"5064:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1794,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1792,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"5090:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5090:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5064:45:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":1795,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"5126:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5128:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"5126:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1798,"indexExpression":{"id":1797,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"5147:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5126:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1800,"indexExpression":{"id":1799,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"5154:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5126:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1788,"id":1801,"nodeType":"Return","src":"5119:44:3"}]},"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"4932:23:3","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":1803,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4969:16:3","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"owner","nameLocation":"4994:5:3","nodeType":"VariableDeclaration","scope":1803,"src":"4986:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"operator","nameLocation":"5009:8:3","nodeType":"VariableDeclaration","scope":1803,"src":"5001:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1783,"name":"address","nodeType":"ElementaryTypeName","src":"5001:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4985:33:3"},"returnParameters":{"id":1788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1803,"src":"5048:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1786,"name":"bool","nodeType":"ElementaryTypeName","src":"5048:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5047:6:3"},"scope":2539,"src":"4960:210:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3578],"body":{"id":1848,"nodeType":"Block","src":"5284:498:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"5298:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5312:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5304:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"5304:7:3","typeDescriptions":{}}},"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5298:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1827,"nodeType":"IfStatement","src":"5294:87:3","trueBody":{"id":1826,"nodeType":"Block","src":"5316:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5367:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5359:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"5359:7:3","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1819,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"5337:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5337:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1825,"nodeType":"RevertStatement","src":"5330:40:3"}]}},{"assignments":[1829],"declarations":[{"constant":false,"id":1829,"mutability":"mutable","name":"previousOwner","nameLocation":"5607:13:3","nodeType":"VariableDeclaration","scope":1848,"src":"5599:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"5599:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1836,"initialValue":{"arguments":[{"id":1831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"5631:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1832,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5635:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1833,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"5644:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1830,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"5623:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5623:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5599:58:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1837,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"5671:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"5688:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5671:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1847,"nodeType":"IfStatement","src":"5667:109:3","trueBody":{"id":1846,"nodeType":"Block","src":"5694:82:3","statements":[{"errorCall":{"arguments":[{"id":1841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"5736:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5742:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1843,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"5751:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1840,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"5715:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5715:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"RevertStatement","src":"5708:57:3"}]}}]},"documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"5176:23:3","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5213:12:3","nodeType":"FunctionDefinition","parameters":{"id":1811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"from","nameLocation":"5234:4:3","nodeType":"VariableDeclaration","scope":1849,"src":"5226:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1805,"name":"address","nodeType":"ElementaryTypeName","src":"5226:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"to","nameLocation":"5248:2:3","nodeType":"VariableDeclaration","scope":1849,"src":"5240:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1807,"name":"address","nodeType":"ElementaryTypeName","src":"5240:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"tokenId","nameLocation":"5260:7:3","nodeType":"VariableDeclaration","scope":1849,"src":"5252:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1809,"name":"uint256","nodeType":"ElementaryTypeName","src":"5252:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5225:43:3"},"returnParameters":{"id":1812,"nodeType":"ParameterList","parameters":[],"src":"5284:0:3"},"scope":2539,"src":"5204:578:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3568],"body":{"id":1866,"nodeType":"Block","src":"5892:56:3","statements":[{"expression":{"arguments":[{"id":1860,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"5919:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"5925:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"5929:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1859,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1867,1897],"referencedDeclaration":1897,"src":"5902:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5902:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1865,"nodeType":"ExpressionStatement","src":"5902:39:3"}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"5788:23:3","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5825:16:3","nodeType":"FunctionDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"from","nameLocation":"5850:4:3","nodeType":"VariableDeclaration","scope":1867,"src":"5842:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1851,"name":"address","nodeType":"ElementaryTypeName","src":"5842:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"to","nameLocation":"5864:2:3","nodeType":"VariableDeclaration","scope":1867,"src":"5856:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1853,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"tokenId","nameLocation":"5876:7:3","nodeType":"VariableDeclaration","scope":1867,"src":"5868:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5841:43:3"},"returnParameters":{"id":1858,"nodeType":"ParameterList","parameters":[],"src":"5892:0:3"},"scope":2539,"src":"5816:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3558],"body":{"id":1896,"nodeType":"Block","src":"6085:130:3","statements":[{"expression":{"arguments":[{"id":1880,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"6108:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6114:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1882,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6118:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1879,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"6095:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6095:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1884,"nodeType":"ExpressionStatement","src":"6095:31:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1888,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"6170:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6170:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1890,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"6184:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1891,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"6190:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1892,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"6194:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1893,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"6203:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1885,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"6136:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3736_$","typeString":"type(library ERC721Utils)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6148:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"6136:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6136:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1895,"nodeType":"ExpressionStatement","src":"6136:72:3"}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"5954:23:3","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":1897,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5991:16:3","nodeType":"FunctionDefinition","parameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"from","nameLocation":"6016:4:3","nodeType":"VariableDeclaration","scope":1897,"src":"6008:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1869,"name":"address","nodeType":"ElementaryTypeName","src":"6008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"to","nameLocation":"6030:2:3","nodeType":"VariableDeclaration","scope":1897,"src":"6022:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1871,"name":"address","nodeType":"ElementaryTypeName","src":"6022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"tokenId","nameLocation":"6042:7:3","nodeType":"VariableDeclaration","scope":1897,"src":"6034:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"6034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"data","nameLocation":"6064:4:3","nodeType":"VariableDeclaration","scope":1897,"src":"6051:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1875,"name":"bytes","nodeType":"ElementaryTypeName","src":"6051:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6007:62:3"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[],"src":"6085:0:3"},"scope":2539,"src":"5982:233:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1916,"nodeType":"Block","src":"6805:97:3","statements":[{"assignments":[1907],"declarations":[{"constant":false,"id":1907,"mutability":"mutable","name":"$","nameLocation":"6837:1:3","nodeType":"VariableDeclaration","scope":1916,"src":"6815:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1906,"nodeType":"UserDefinedTypeName","pathNode":{"id":1905,"name":"ERC721Storage","nameLocations":["6815:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"6815:13:3"},"referencedDeclaration":1519,"src":"6815:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1910,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1908,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"6841:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6841:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6815:45:3"},{"expression":{"baseExpression":{"expression":{"id":1911,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"6877:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:7:3","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":1504,"src":"6877:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1914,"indexExpression":{"id":1913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"6887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6877:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1904,"id":1915,"nodeType":"Return","src":"6870:25:3"}]},"documentation":{"id":1898,"nodeType":"StructuredDocumentation","src":"6221:504:3","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6739:8:3","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1900,"mutability":"mutable","name":"tokenId","nameLocation":"6756:7:3","nodeType":"VariableDeclaration","scope":1917,"src":"6748:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"6748:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6747:17:3"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1917,"src":"6796:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1902,"name":"address","nodeType":"ElementaryTypeName","src":"6796:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6795:9:3"},"scope":2539,"src":"6730:172:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1936,"nodeType":"Block","src":"7097:105:3","statements":[{"assignments":[1927],"declarations":[{"constant":false,"id":1927,"mutability":"mutable","name":"$","nameLocation":"7129:1:3","nodeType":"VariableDeclaration","scope":1936,"src":"7107:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":1926,"nodeType":"UserDefinedTypeName","pathNode":{"id":1925,"name":"ERC721Storage","nameLocations":["7107:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"7107:13:3"},"referencedDeclaration":1519,"src":"7107:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":1930,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1928,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"7133:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7133:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7107:45:3"},{"expression":{"baseExpression":{"expression":{"id":1931,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"7169:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":1932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7171:15:3","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":1512,"src":"7169:17:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1934,"indexExpression":{"id":1933,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"7187:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7169:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1924,"id":1935,"nodeType":"Return","src":"7162:33:3"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"6908:105:3","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1937,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"7027:12:3","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"tokenId","nameLocation":"7048:7:3","nodeType":"VariableDeclaration","scope":1937,"src":"7040:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1919,"name":"uint256","nodeType":"ElementaryTypeName","src":"7040:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7039:17:3"},"returnParameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"7088:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1922,"name":"address","nodeType":"ElementaryTypeName","src":"7088:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7087:9:3"},"scope":2539,"src":"7018:184:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"7622:163:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7651:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7670:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1950,"name":"address","nodeType":"ElementaryTypeName","src":"7662:7:3","typeDescriptions":{}}},"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7651:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7689:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1956,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7698:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7689:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1959,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"7726:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1960,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7733:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1958,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"7709:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7709:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7689:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1964,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"7758:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"7745:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7745:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"7770:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7745:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7689:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1969,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7651:127:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1948,"id":1971,"nodeType":"Return","src":"7632:146:3"}]},"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"7208:300:3","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"7522:13:3","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"owner","nameLocation":"7544:5:3","nodeType":"VariableDeclaration","scope":1973,"src":"7536:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"spender","nameLocation":"7559:7:3","nodeType":"VariableDeclaration","scope":1973,"src":"7551:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"7551:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"tokenId","nameLocation":"7576:7:3","nodeType":"VariableDeclaration","scope":1973,"src":"7568:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"7568:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7535:49:3"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"7616:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1946,"name":"bool","nodeType":"ElementaryTypeName","src":"7616:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7615:6:3"},"scope":2539,"src":"7513:272:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2009,"nodeType":"Block","src":"8314:271:3","statements":[{"condition":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8328:39:3","subExpression":{"arguments":[{"id":1984,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8343:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1985,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"8350:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1986,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"8359:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1983,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"8329:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"nodeType":"IfStatement","src":"8324:255:3","trueBody":{"id":2007,"nodeType":"Block","src":"8369:210:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1989,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"8387:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8404:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8396:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1990,"name":"address","nodeType":"ElementaryTypeName","src":"8396:7:3","typeDescriptions":{}}},"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8396:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8387:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2005,"nodeType":"Block","src":"8485:84:3","statements":[{"errorCall":{"arguments":[{"id":2001,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1978,"src":"8537:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2002,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"8546:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2000,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"8510:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8510:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2004,"nodeType":"RevertStatement","src":"8503:51:3"}]},"id":2006,"nodeType":"IfStatement","src":"8383:186:3","trueBody":{"id":1999,"nodeType":"Block","src":"8408:71:3","statements":[{"errorCall":{"arguments":[{"id":1996,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"8456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1995,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"8433:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8433:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1998,"nodeType":"RevertStatement","src":"8426:38:3"}]}}]}}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"7791:421:3","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"8226:16:3","nodeType":"FunctionDefinition","parameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"owner","nameLocation":"8251:5:3","nodeType":"VariableDeclaration","scope":2010,"src":"8243:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"8243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"spender","nameLocation":"8266:7:3","nodeType":"VariableDeclaration","scope":2010,"src":"8258:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1977,"name":"address","nodeType":"ElementaryTypeName","src":"8258:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1980,"mutability":"mutable","name":"tokenId","nameLocation":"8283:7:3","nodeType":"VariableDeclaration","scope":2010,"src":"8275:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"8275:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8242:49:3"},"returnParameters":{"id":1982,"nodeType":"ParameterList","parameters":[],"src":"8314:0:3"},"scope":2539,"src":"8217:368:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2033,"nodeType":"Block","src":"9302:135:3","statements":[{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"$","nameLocation":"9334:1:3","nodeType":"VariableDeclaration","scope":2033,"src":"9312:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":2019,"nodeType":"UserDefinedTypeName","pathNode":{"id":2018,"name":"ERC721Storage","nameLocations":["9312:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"9312:13:3"},"referencedDeclaration":1519,"src":"9312:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":2023,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2021,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"9338:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9338:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"9312:45:3"},{"id":2032,"nodeType":"UncheckedBlock","src":"9367:64:3","statements":[{"expression":{"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2024,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"9391:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9393:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"9391:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2028,"indexExpression":{"id":2026,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"9403:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2015,"src":"9415:5:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9391:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2031,"nodeType":"ExpressionStatement","src":"9391:29:3"}]}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"8591:631:3","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"9236:16:3","nodeType":"FunctionDefinition","parameters":{"id":2016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"account","nameLocation":"9261:7:3","nodeType":"VariableDeclaration","scope":2034,"src":"9253:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"9253:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2015,"mutability":"mutable","name":"value","nameLocation":"9278:5:3","nodeType":"VariableDeclaration","scope":2034,"src":"9270:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2014,"name":"uint128","nodeType":"ElementaryTypeName","src":"9270:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9252:32:3"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[],"src":"9302:0:3"},"scope":2539,"src":"9227:210:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"10125:761:3","statements":[{"assignments":[2048],"declarations":[{"constant":false,"id":2048,"mutability":"mutable","name":"$","nameLocation":"10157:1:3","nodeType":"VariableDeclaration","scope":2135,"src":"10135:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":2047,"nodeType":"UserDefinedTypeName","pathNode":{"id":2046,"name":"ERC721Storage","nameLocations":["10135:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"10135:13:3"},"referencedDeclaration":1519,"src":"10135:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":2051,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2049,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"10161:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"10135:45:3"},{"assignments":[2053],"declarations":[{"constant":false,"id":2053,"mutability":"mutable","name":"from","nameLocation":"10198:4:3","nodeType":"VariableDeclaration","scope":2135,"src":"10190:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"10190:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2057,"initialValue":{"arguments":[{"id":2055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10214:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2054,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"10205:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10205:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10190:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10282:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10298:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10290:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"10290:7:3","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10290:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10282:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2071,"nodeType":"IfStatement","src":"10278:86:3","trueBody":{"id":2070,"nodeType":"Block","src":"10302:62:3","statements":[{"expression":{"arguments":[{"id":2065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"10333:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2066,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"10339:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2067,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10345:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2064,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"10316:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10316:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"10316:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"10408:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10424:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10416:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2073,"name":"address","nodeType":"ElementaryTypeName","src":"10416:7:3","typeDescriptions":{}}},"id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10416:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10408:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2101,"nodeType":"IfStatement","src":"10404:258:3","trueBody":{"id":2100,"nodeType":"Block","src":"10428:234:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10541:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10533:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"10533:7:3","typeDescriptions":{}}},"id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10533:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2083,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10545:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10562:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10554:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:3","typeDescriptions":{}}},"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10554:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10566:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2078,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2390,2464],"referencedDeclaration":2464,"src":"10524:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10524:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"ExpressionStatement","src":"10524:48:3"},{"id":2099,"nodeType":"UncheckedBlock","src":"10587:65:3","statements":[{"expression":{"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2091,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"10615:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2094,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10617:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"10615:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2095,"indexExpression":{"id":2093,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"10627:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10615:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10636:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10615:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2098,"nodeType":"ExpressionStatement","src":"10615:22:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"10676:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10690:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10682:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"10682:7:3","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10682:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10676:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2118,"nodeType":"IfStatement","src":"10672:109:3","trueBody":{"id":2117,"nodeType":"Block","src":"10694:87:3","statements":[{"id":2116,"nodeType":"UncheckedBlock","src":"10708:63:3","statements":[{"expression":{"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2108,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"10736:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10738:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":1508,"src":"10736:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2112,"indexExpression":{"id":2110,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"10748:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10736:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10755:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10736:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"nodeType":"ExpressionStatement","src":"10736:20:3"}]}]}},{"expression":{"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2119,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"10791:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10793:7:3","memberName":"_owners","nodeType":"MemberAccess","referencedDeclaration":1504,"src":"10791:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2123,"indexExpression":{"id":2121,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10801:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10791:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2124,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"10812:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10791:23:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2126,"nodeType":"ExpressionStatement","src":"10791:23:3"},{"eventCall":{"arguments":[{"id":2128,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"10839:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2129,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"10845:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2130,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"10849:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2127,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"10830:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10830:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2132,"nodeType":"EmitStatement","src":"10825:32:3"},{"expression":{"id":2133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"10875:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2045,"id":2134,"nodeType":"Return","src":"10868:11:3"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"9443:582:3","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2136,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"10039:7:3","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"to","nameLocation":"10055:2:3","nodeType":"VariableDeclaration","scope":2136,"src":"10047:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2036,"name":"address","nodeType":"ElementaryTypeName","src":"10047:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"tokenId","nameLocation":"10067:7:3","nodeType":"VariableDeclaration","scope":2136,"src":"10059:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"10059:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"auth","nameLocation":"10084:4:3","nodeType":"VariableDeclaration","scope":2136,"src":"10076:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"10076:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10046:43:3"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2136,"src":"10116:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2043,"name":"address","nodeType":"ElementaryTypeName","src":"10116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10115:9:3"},"scope":2539,"src":"10030:856:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2185,"nodeType":"Block","src":"11261:274:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"11275:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11289:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11281:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"11281:7:3","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11281:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11275:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2158,"nodeType":"IfStatement","src":"11271:87:3","trueBody":{"id":2157,"nodeType":"Block","src":"11293:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11344:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11336:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"11336:7:3","typeDescriptions":{}}},"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11336:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2150,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"11314:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11314:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2156,"nodeType":"RevertStatement","src":"11307:40:3"}]}},{"assignments":[2160],"declarations":[{"constant":false,"id":2160,"mutability":"mutable","name":"previousOwner","nameLocation":"11375:13:3","nodeType":"VariableDeclaration","scope":2185,"src":"11367:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"11367:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2169,"initialValue":{"arguments":[{"id":2162,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"11399:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"11403:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11420:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11412:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2164,"name":"address","nodeType":"ElementaryTypeName","src":"11412:7:3","typeDescriptions":{}}},"id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11412:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2161,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"11391:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11391:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11367:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2170,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"11437:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11462:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11454:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"11454:7:3","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11454:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11437:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2184,"nodeType":"IfStatement","src":"11433:96:3","trueBody":{"id":2183,"nodeType":"Block","src":"11466:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11515:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11507:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"11507:7:3","typeDescriptions":{}}},"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11507:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2176,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"11487:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11487:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2182,"nodeType":"RevertStatement","src":"11480:38:3"}]}}]},"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"10892:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2186,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11217:5:3","nodeType":"FunctionDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"to","nameLocation":"11231:2:3","nodeType":"VariableDeclaration","scope":2186,"src":"11223:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2138,"name":"address","nodeType":"ElementaryTypeName","src":"11223:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2141,"mutability":"mutable","name":"tokenId","nameLocation":"11243:7:3","nodeType":"VariableDeclaration","scope":2186,"src":"11235:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"11235:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11222:29:3"},"returnParameters":{"id":2143,"nodeType":"ParameterList","parameters":[],"src":"11261:0:3"},"scope":2539,"src":"11208:327:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2200,"nodeType":"Block","src":"11943:43:3","statements":[{"expression":{"arguments":[{"id":2195,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"11963:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2196,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2191,"src":"11967:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11976:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2194,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2201,2231],"referencedDeclaration":2231,"src":"11953:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11953:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"ExpressionStatement","src":"11953:26:3"}]},"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"11541:340:3","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"11895:9:3","nodeType":"FunctionDefinition","parameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"to","nameLocation":"11913:2:3","nodeType":"VariableDeclaration","scope":2201,"src":"11905:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2188,"name":"address","nodeType":"ElementaryTypeName","src":"11905:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2191,"mutability":"mutable","name":"tokenId","nameLocation":"11925:7:3","nodeType":"VariableDeclaration","scope":2201,"src":"11917:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2190,"name":"uint256","nodeType":"ElementaryTypeName","src":"11917:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11904:29:3"},"returnParameters":{"id":2193,"nodeType":"ParameterList","parameters":[],"src":"11943:0:3"},"scope":2539,"src":"11886:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2230,"nodeType":"Block","src":"12291:123:3","statements":[{"expression":{"arguments":[{"id":2212,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"12307:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2213,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"12311:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"12301:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12301:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2215,"nodeType":"ExpressionStatement","src":"12301:18:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2219,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"12363:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12363:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12385:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12377:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"12377:7:3","typeDescriptions":{}}},"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12377:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2225,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"12389:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"12393:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2227,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"12402:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2216,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"12329:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3736_$","typeString":"type(library ERC721Utils)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12341:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"12329:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2229,"nodeType":"ExpressionStatement","src":"12329:78:3"}]},"documentation":{"id":2202,"nodeType":"StructuredDocumentation","src":"11992:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"12216:9:3","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"to","nameLocation":"12234:2:3","nodeType":"VariableDeclaration","scope":2231,"src":"12226:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"12226:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"tokenId","nameLocation":"12246:7:3","nodeType":"VariableDeclaration","scope":2231,"src":"12238:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"12238:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2208,"mutability":"mutable","name":"data","nameLocation":"12268:4:3","nodeType":"VariableDeclaration","scope":2231,"src":"12255:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"12255:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12225:48:3"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[],"src":"12291:0:3"},"scope":2539,"src":"12207:207:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2263,"nodeType":"Block","src":"12781:186:3","statements":[{"assignments":[2238],"declarations":[{"constant":false,"id":2238,"mutability":"mutable","name":"previousOwner","nameLocation":"12799:13:3","nodeType":"VariableDeclaration","scope":2263,"src":"12791:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"12791:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2250,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12831:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12823:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"12823:7:3","typeDescriptions":{}}},"id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12823:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2244,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"12835:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12852:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12844:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"12844:7:3","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12844:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2239,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"12815:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12815:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12791:64:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2251,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"12869:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12894:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12886:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"12886:7:3","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12886:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12869:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2262,"nodeType":"IfStatement","src":"12865:96:3","trueBody":{"id":2261,"nodeType":"Block","src":"12898:63:3","statements":[{"errorCall":{"arguments":[{"id":2258,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"12942:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2257,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"12919:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12919:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2260,"nodeType":"RevertStatement","src":"12912:38:3"}]}}]},"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"12420:315:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2264,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12749:5:3","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"tokenId","nameLocation":"12763:7:3","nodeType":"VariableDeclaration","scope":2264,"src":"12755:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"12755:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12754:17:3"},"returnParameters":{"id":2236,"nodeType":"ParameterList","parameters":[],"src":"12781:0:3"},"scope":2539,"src":"12740:227:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2323,"nodeType":"Block","src":"13362:389:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"13376:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13390:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13382:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2275,"name":"address","nodeType":"ElementaryTypeName","src":"13382:7:3","typeDescriptions":{}}},"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13376:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2288,"nodeType":"IfStatement","src":"13372:87:3","trueBody":{"id":2287,"nodeType":"Block","src":"13394:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13445:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13437:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"13437:7:3","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13437:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2280,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2697,"src":"13415:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13415:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2286,"nodeType":"RevertStatement","src":"13408:40:3"}]}},{"assignments":[2290],"declarations":[{"constant":false,"id":2290,"mutability":"mutable","name":"previousOwner","nameLocation":"13476:13:3","nodeType":"VariableDeclaration","scope":2323,"src":"13468:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"13468:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2299,"initialValue":{"arguments":[{"id":2292,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"13500:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2293,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13504:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13521:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13513:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2294,"name":"address","nodeType":"ElementaryTypeName","src":"13513:7:3","typeDescriptions":{}}},"id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13513:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2291,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"13492:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13492:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13468:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2300,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"13538:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13563:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13555:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2301,"name":"address","nodeType":"ElementaryTypeName","src":"13555:7:3","typeDescriptions":{}}},"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13555:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13538:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2311,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"13640:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2312,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"13657:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13640:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2321,"nodeType":"IfStatement","src":"13636:109:3","trueBody":{"id":2320,"nodeType":"Block","src":"13663:82:3","statements":[{"errorCall":{"arguments":[{"id":2315,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"13705:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2316,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13711:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2317,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"13720:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2314,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"13684:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13684:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2319,"nodeType":"RevertStatement","src":"13677:57:3"}]}},"id":2322,"nodeType":"IfStatement","src":"13534:211:3","trueBody":{"id":2310,"nodeType":"Block","src":"13567:63:3","statements":[{"errorCall":{"arguments":[{"id":2307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"13611:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2306,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"13588:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13588:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2309,"nodeType":"RevertStatement","src":"13581:38:3"}]}}]},"documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"12973:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2324,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"13300:9:3","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"from","nameLocation":"13318:4:3","nodeType":"VariableDeclaration","scope":2324,"src":"13310:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"13310:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"to","nameLocation":"13332:2:3","nodeType":"VariableDeclaration","scope":2324,"src":"13324:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"13324:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"tokenId","nameLocation":"13344:7:3","nodeType":"VariableDeclaration","scope":2324,"src":"13336:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2270,"name":"uint256","nodeType":"ElementaryTypeName","src":"13336:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13309:43:3"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[],"src":"13362:0:3"},"scope":2539,"src":"13291:460:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2341,"nodeType":"Block","src":"14760:53:3","statements":[{"expression":{"arguments":[{"id":2335,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"14784:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2336,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"14790:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2331,"src":"14794:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14803:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2334,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2342,2372],"referencedDeclaration":2372,"src":"14770:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14770:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"14770:36:3"}]},"documentation":{"id":2325,"nodeType":"StructuredDocumentation","src":"13757:923:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2342,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"14694:13:3","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2327,"mutability":"mutable","name":"from","nameLocation":"14716:4:3","nodeType":"VariableDeclaration","scope":2342,"src":"14708:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"14708:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"to","nameLocation":"14730:2:3","nodeType":"VariableDeclaration","scope":2342,"src":"14722:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"14722:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"tokenId","nameLocation":"14742:7:3","nodeType":"VariableDeclaration","scope":2342,"src":"14734:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"14734:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14707:43:3"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[],"src":"14760:0:3"},"scope":2539,"src":"14685:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2371,"nodeType":"Block","src":"15152:127:3","statements":[{"expression":{"arguments":[{"id":2355,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"15172:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2356,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"15178:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2357,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"15182:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2354,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"15162:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15162:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2359,"nodeType":"ExpressionStatement","src":"15162:28:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2363,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"15234:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15234:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2365,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"15248:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2366,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"15254:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2367,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"15258:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2368,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"15267:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2360,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"15200:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3736_$","typeString":"type(library ERC721Utils)"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15212:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"15200:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2370,"nodeType":"ExpressionStatement","src":"15200:72:3"}]},"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"14819:226:3","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2372,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"15059:13:3","nodeType":"FunctionDefinition","parameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"from","nameLocation":"15081:4:3","nodeType":"VariableDeclaration","scope":2372,"src":"15073:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"15073:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"to","nameLocation":"15095:2:3","nodeType":"VariableDeclaration","scope":2372,"src":"15087:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"15087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"tokenId","nameLocation":"15107:7:3","nodeType":"VariableDeclaration","scope":2372,"src":"15099:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"15099:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"data","nameLocation":"15129:4:3","nodeType":"VariableDeclaration","scope":2372,"src":"15116:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2350,"name":"bytes","nodeType":"ElementaryTypeName","src":"15116:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15072:62:3"},"returnParameters":{"id":2353,"nodeType":"ParameterList","parameters":[],"src":"15152:0:3"},"scope":2539,"src":"15050:229:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"15792:50:3","statements":[{"expression":{"arguments":[{"id":2383,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"15811:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"15815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2385,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"15824:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15830:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2382,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2390,2464],"referencedDeclaration":2464,"src":"15802:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15802:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2388,"nodeType":"ExpressionStatement","src":"15802:33:3"}]},"documentation":{"id":2373,"nodeType":"StructuredDocumentation","src":"15285:432:3","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"15731:8:3","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"to","nameLocation":"15748:2:3","nodeType":"VariableDeclaration","scope":2390,"src":"15740:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"15740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"tokenId","nameLocation":"15760:7:3","nodeType":"VariableDeclaration","scope":2390,"src":"15752:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"auth","nameLocation":"15777:4:3","nodeType":"VariableDeclaration","scope":2390,"src":"15769:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2378,"name":"address","nodeType":"ElementaryTypeName","src":"15769:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15739:43:3"},"returnParameters":{"id":2381,"nodeType":"ParameterList","parameters":[],"src":"15792:0:3"},"scope":2539,"src":"15722:120:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"16118:625:3","statements":[{"assignments":[2404],"declarations":[{"constant":false,"id":2404,"mutability":"mutable","name":"$","nameLocation":"16150:1:3","nodeType":"VariableDeclaration","scope":2463,"src":"16128:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":2403,"nodeType":"UserDefinedTypeName","pathNode":{"id":2402,"name":"ERC721Storage","nameLocations":["16128:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"16128:13:3"},"referencedDeclaration":1519,"src":"16128:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":2407,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2405,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"16154:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16154:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"16128:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2408,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"16239:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2409,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"16252:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16268:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16260:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"16260:7:3","typeDescriptions":{}}},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16260:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16252:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16239:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2454,"nodeType":"IfStatement","src":"16235:460:3","trueBody":{"id":2453,"nodeType":"Block","src":"16272:423:3","statements":[{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"owner","nameLocation":"16294:5:3","nodeType":"VariableDeclaration","scope":2453,"src":"16286:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2416,"name":"address","nodeType":"ElementaryTypeName","src":"16286:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2421,"initialValue":{"arguments":[{"id":2419,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"16316:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2418,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"16302:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16302:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16286:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2422,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"16452:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16468:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16460:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2423,"name":"address","nodeType":"ElementaryTypeName","src":"16460:7:3","typeDescriptions":{}}},"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16460:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16452:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"16474:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2429,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"16483:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16474:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16452:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16491:30:3","subExpression":{"arguments":[{"id":2433,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"16509:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2434,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"16516:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2432,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"16492:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16492:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16452:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2443,"nodeType":"IfStatement","src":"16448:142:3","trueBody":{"id":2442,"nodeType":"Block","src":"16523:67:3","statements":[{"errorCall":{"arguments":[{"id":2439,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"16570:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2438,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"16548:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16548:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2441,"nodeType":"RevertStatement","src":"16541:34:3"}]}},{"condition":{"id":2444,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"16608:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2452,"nodeType":"IfStatement","src":"16604:81:3","trueBody":{"id":2451,"nodeType":"Block","src":"16619:66:3","statements":[{"eventCall":{"arguments":[{"id":2446,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"16651:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2447,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"16658:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2448,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"16662:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2445,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"16642:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16642:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2450,"nodeType":"EmitStatement","src":"16637:33:3"}]}}]}},{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2455,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2404,"src":"16705:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16707:15:3","memberName":"_tokenApprovals","nodeType":"MemberAccess","referencedDeclaration":1512,"src":"16705:17:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2459,"indexExpression":{"id":2457,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"16723:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16705:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2460,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"16734:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16705:31:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2462,"nodeType":"ExpressionStatement","src":"16705:31:3"}]},"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"15848:171:3","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"16033:8:3","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"to","nameLocation":"16050:2:3","nodeType":"VariableDeclaration","scope":2464,"src":"16042:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2392,"name":"address","nodeType":"ElementaryTypeName","src":"16042:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"tokenId","nameLocation":"16062:7:3","nodeType":"VariableDeclaration","scope":2464,"src":"16054:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"16054:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2397,"mutability":"mutable","name":"auth","nameLocation":"16079:4:3","nodeType":"VariableDeclaration","scope":2464,"src":"16071:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2396,"name":"address","nodeType":"ElementaryTypeName","src":"16071:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"emitEvent","nameLocation":"16090:9:3","nodeType":"VariableDeclaration","scope":2464,"src":"16085:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2398,"name":"bool","nodeType":"ElementaryTypeName","src":"16085:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16041:59:3"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[],"src":"16118:0:3"},"scope":2539,"src":"16024:719:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2508,"nodeType":"Block","src":"17045:276:3","statements":[{"assignments":[2476],"declarations":[{"constant":false,"id":2476,"mutability":"mutable","name":"$","nameLocation":"17077:1:3","nodeType":"VariableDeclaration","scope":2508,"src":"17055:23:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"},"typeName":{"id":2475,"nodeType":"UserDefinedTypeName","pathNode":{"id":2474,"name":"ERC721Storage","nameLocations":["17055:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":1519,"src":"17055:13:3"},"referencedDeclaration":1519,"src":"17055:13:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage"}},"visibility":"internal"}],"id":2479,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2477,"name":"_getERC721Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1530,"src":"17081:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC721Storage_$1519_storage_ptr_$","typeString":"function () pure returns (struct ERC721Upgradeable.ERC721Storage storage pointer)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17081:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"17055:45:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2480,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"17114:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17134:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17126:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2481,"name":"address","nodeType":"ElementaryTypeName","src":"17126:7:3","typeDescriptions":{}}},"id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17126:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17114:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2491,"nodeType":"IfStatement","src":"17110:91:3","trueBody":{"id":2490,"nodeType":"Block","src":"17138:63:3","statements":[{"errorCall":{"arguments":[{"id":2487,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"17181:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2486,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"17159:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17159:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"RevertStatement","src":"17152:38:3"}]}},{"expression":{"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":2492,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"17210:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC721Storage_$1519_storage_ptr","typeString":"struct ERC721Upgradeable.ERC721Storage storage pointer"}},"id":2496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17212:18:3","memberName":"_operatorApprovals","nodeType":"MemberAccess","referencedDeclaration":1518,"src":"17210:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2497,"indexExpression":{"id":2494,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"17231:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17210:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2498,"indexExpression":{"id":2495,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"17238:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17210:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2499,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"17250:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17210:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"ExpressionStatement","src":"17210:48:3"},{"eventCall":{"arguments":[{"id":2503,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"17288:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2504,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"17295:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2505,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"17305:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2502,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"17273:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17273:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2507,"nodeType":"EmitStatement","src":"17268:46:3"}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"16749:198:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"16961:18:3","nodeType":"FunctionDefinition","parameters":{"id":2472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"owner","nameLocation":"16988:5:3","nodeType":"VariableDeclaration","scope":2509,"src":"16980:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"16980:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"operator","nameLocation":"17003:8:3","nodeType":"VariableDeclaration","scope":2509,"src":"16995:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"16995:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2471,"mutability":"mutable","name":"approved","nameLocation":"17018:8:3","nodeType":"VariableDeclaration","scope":2509,"src":"17013:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2470,"name":"bool","nodeType":"ElementaryTypeName","src":"17013:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16979:48:3"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[],"src":"17045:0:3"},"scope":2539,"src":"16952:369:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2537,"nodeType":"Block","src":"17628:169:3","statements":[{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"owner","nameLocation":"17646:5:3","nodeType":"VariableDeclaration","scope":2537,"src":"17638:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2517,"name":"address","nodeType":"ElementaryTypeName","src":"17638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2522,"initialValue":{"arguments":[{"id":2520,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"17663:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2519,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"17654:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17654:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17638:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"17685:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17702:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17694:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"17694:7:3","typeDescriptions":{}}},"id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17694:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17685:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"17681:88:3","trueBody":{"id":2533,"nodeType":"Block","src":"17706:63:3","statements":[{"errorCall":{"arguments":[{"id":2530,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"17750:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2529,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"17727:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17727:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2532,"nodeType":"RevertStatement","src":"17720:38:3"}]}},{"expression":{"id":2535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"17785:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2516,"id":2536,"nodeType":"Return","src":"17778:12:3"}]},"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"17327:224:3","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2538,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"17565:13:3","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"tokenId","nameLocation":"17587:7:3","nodeType":"VariableDeclaration","scope":2538,"src":"17579:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2511,"name":"uint256","nodeType":"ElementaryTypeName","src":"17579:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17578:17:3"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2538,"src":"17619:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"17619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17618:9:3"},"scope":2539,"src":"17556:241:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2540,"src":"1099:16700:3","usedErrors":[211,214,2673,2678,2687,2692,2697,2704,2709,2714],"usedEvents":[219,3512,3521,3530]}],"src":"107:17693:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[2585],"Initializable":[462]},"id":2586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2541,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":2543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2586,"sourceUnit":463,"src":"126:63:4","symbolAliases":[{"foreign":{"id":2542,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2545,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"728:13:4"},"id":2546,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2585,"linearizedBaseContracts":[2585,462],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":2551,"nodeType":"Block","src":"800:7:4","statements":[]},"id":2552,"implemented":true,"kind":"function","modifiers":[{"id":2549,"kind":"modifierInvocation","modifierName":{"id":2548,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":2585,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2557,"nodeType":"Block","src":"875:7:4","statements":[]},"id":2558,"implemented":true,"kind":"function","modifiers":[{"id":2555,"kind":"modifierInvocation","modifierName":{"id":2554,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":2585,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2566,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":2563,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2562,"id":2565,"nodeType":"Return","src":"959:17:4"}]},"id":2567,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2567,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2560,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":2585,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2575,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":2572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2571,"id":2574,"nodeType":"Return","src":"1066:15:4"}]},"id":2576,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":2568,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":2585,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":2581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2580,"id":2582,"nodeType":"Return","src":"1176:8:4"}]},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":2585,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2586,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol","exportedSymbols":{"ERC165Upgradeable":[2625],"IERC165":[6587],"Initializable":[462]},"id":2626,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2587,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":2589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2626,"sourceUnit":6588,"src":"140:80:5","symbolAliases":[{"foreign":{"id":2588,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"148:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":2591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2626,"sourceUnit":463,"src":"221:66:5","symbolAliases":[{"foreign":{"id":2590,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"229:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2593,"name":"Initializable","nameLocations":["808:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"808:13:5"},"id":2594,"nodeType":"InheritanceSpecifier","src":"808:13:5"},{"baseName":{"id":2595,"name":"IERC165","nameLocations":["823:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"823:7:5"},"id":2596,"nodeType":"InheritanceSpecifier","src":"823:7:5"}],"canonicalName":"ERC165Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"289:479:5","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2625,"linearizedBaseContracts":[2625,6587,462],"name":"ERC165Upgradeable","nameLocation":"787:17:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":2601,"nodeType":"Block","src":"888:7:5","statements":[]},"id":2602,"implemented":true,"kind":"function","modifiers":[{"id":2599,"kind":"modifierInvocation","modifierName":{"id":2598,"name":"onlyInitializing","nameLocations":["871:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"871:16:5"},"nodeType":"ModifierInvocation","src":"871:16:5"}],"name":"__ERC165_init","nameLocation":"846:13:5","nodeType":"FunctionDefinition","parameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"859:2:5"},"returnParameters":{"id":2600,"nodeType":"ParameterList","parameters":[],"src":"888:0:5"},"scope":2625,"src":"837:58:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2607,"nodeType":"Block","src":"962:7:5","statements":[]},"id":2608,"implemented":true,"kind":"function","modifiers":[{"id":2605,"kind":"modifierInvocation","modifierName":{"id":2604,"name":"onlyInitializing","nameLocations":["945:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"945:16:5"},"nodeType":"ModifierInvocation","src":"945:16:5"}],"name":"__ERC165_init_unchained","nameLocation":"910:23:5","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"933:2:5"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"962:0:5"},"scope":2625,"src":"901:68:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6586],"body":{"id":2623,"nodeType":"Block","src":"1084:64:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"1101:11:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2618,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"1121:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6587_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6587_$","typeString":"type(contract IERC165)"}],"id":2617,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1116:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1116:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6587","typeString":"type(contract IERC165)"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1130:11:5","memberName":"interfaceId","nodeType":"MemberAccess","src":"1116:25:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1101:40:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2615,"id":2622,"nodeType":"Return","src":"1094:47:5"}]},"documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"974:23:5","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2624,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1011:17:5","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2611,"mutability":"mutable","name":"interfaceId","nameLocation":"1036:11:5","nodeType":"VariableDeclaration","scope":2624,"src":"1029:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2610,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1029:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1028:20:5"},"returnParameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2624,"src":"1078:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2613,"name":"bool","nodeType":"ElementaryTypeName","src":"1078:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1077:6:5"},"scope":2625,"src":"1002:146:5","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2626,"src":"769:381:5","usedErrors":[211,214],"usedEvents":[219]}],"src":"114:1037:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[2762],"IERC20Errors":[2667],"IERC721Errors":[2715]},"id":2763,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2627,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"138:141:6","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":2667,"linearizedBaseContracts":[2667],"name":"IERC20Errors","nameLocation":"290:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2629,"nodeType":"StructuredDocumentation","src":"309:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":2637,"name":"ERC20InsufficientBalance","nameLocation":"629:24:6","nodeType":"ErrorDefinition","parameters":{"id":2636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"sender","nameLocation":"662:6:6","nodeType":"VariableDeclaration","scope":2637,"src":"654:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"balance","nameLocation":"678:7:6","nodeType":"VariableDeclaration","scope":2637,"src":"670:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2632,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2635,"mutability":"mutable","name":"needed","nameLocation":"695:6:6","nodeType":"VariableDeclaration","scope":2637,"src":"687:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:6"},"src":"623:80:6"},{"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"709:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":2642,"name":"ERC20InvalidSender","nameLocation":"872:18:6","nodeType":"ErrorDefinition","parameters":{"id":2641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"sender","nameLocation":"899:6:6","nodeType":"VariableDeclaration","scope":2642,"src":"891:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2639,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:6"},"src":"866:41:6"},{"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"913:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":2647,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:6","nodeType":"ErrorDefinition","parameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:6","nodeType":"VariableDeclaration","scope":2647,"src":"1104:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2644,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:6"},"src":"1077:45:6"},{"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"1128:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":2656,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:6","nodeType":"ErrorDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"spender","nameLocation":"1519:7:6","nodeType":"VariableDeclaration","scope":2656,"src":"1511:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:6","nodeType":"VariableDeclaration","scope":2656,"src":"1528:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"needed","nameLocation":"1555:6:6","nodeType":"VariableDeclaration","scope":2656,"src":"1547:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:6"},"src":"1478:85:6"},{"documentation":{"id":2657,"nodeType":"StructuredDocumentation","src":"1569:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":2661,"name":"ERC20InvalidApprover","nameLocation":"1754:20:6","nodeType":"ErrorDefinition","parameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"approver","nameLocation":"1783:8:6","nodeType":"VariableDeclaration","scope":2661,"src":"1775:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2658,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:6"},"src":"1748:45:6"},{"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"1799:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":2666,"name":"ERC20InvalidSpender","nameLocation":"2005:19:6","nodeType":"ErrorDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"spender","nameLocation":"2033:7:6","nodeType":"VariableDeclaration","scope":2666,"src":"2025:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:6"},"src":"1999:43:6"}],"scope":2763,"src":"280:1764:6","usedErrors":[2637,2642,2647,2656,2661,2666],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"2046:143:6","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":2715,"linearizedBaseContracts":[2715],"name":"IERC721Errors","nameLocation":"2200:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"2220:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":2673,"name":"ERC721InvalidOwner","nameLocation":"2450:18:6","nodeType":"ErrorDefinition","parameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"owner","nameLocation":"2477:5:6","nodeType":"VariableDeclaration","scope":2673,"src":"2469:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:6"},"src":"2444:40:6"},{"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"2490:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":2678,"name":"ERC721NonexistentToken","nameLocation":"2633:22:6","nodeType":"ErrorDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:6","nodeType":"VariableDeclaration","scope":2678,"src":"2656:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:6"},"src":"2627:46:6"},{"documentation":{"id":2679,"nodeType":"StructuredDocumentation","src":"2679:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":2687,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:6","nodeType":"ErrorDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"sender","nameLocation":"3008:6:6","nodeType":"VariableDeclaration","scope":2687,"src":"3000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:6","nodeType":"VariableDeclaration","scope":2687,"src":"3016:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2682,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"owner","nameLocation":"3041:5:6","nodeType":"VariableDeclaration","scope":2687,"src":"3033:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:6"},"src":"2973:75:6"},{"documentation":{"id":2688,"nodeType":"StructuredDocumentation","src":"3054:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":2692,"name":"ERC721InvalidSender","nameLocation":"3217:19:6","nodeType":"ErrorDefinition","parameters":{"id":2691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"sender","nameLocation":"3245:6:6","nodeType":"VariableDeclaration","scope":2692,"src":"3237:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2689,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:6"},"src":"3211:42:6"},{"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"3259:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":2697,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:6","nodeType":"ErrorDefinition","parameters":{"id":2696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2695,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:6","nodeType":"VariableDeclaration","scope":2697,"src":"3451:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2694,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:6"},"src":"3423:46:6"},{"documentation":{"id":2698,"nodeType":"StructuredDocumentation","src":"3475:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":2704,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:6","nodeType":"ErrorDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"operator","nameLocation":"3768:8:6","nodeType":"VariableDeclaration","scope":2704,"src":"3760:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:6","nodeType":"VariableDeclaration","scope":2704,"src":"3778:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:6"},"src":"3727:68:6"},{"documentation":{"id":2705,"nodeType":"StructuredDocumentation","src":"3801:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":2709,"name":"ERC721InvalidApprover","nameLocation":"3986:21:6","nodeType":"ErrorDefinition","parameters":{"id":2708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2707,"mutability":"mutable","name":"approver","nameLocation":"4016:8:6","nodeType":"VariableDeclaration","scope":2709,"src":"4008:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:6"},"src":"3980:46:6"},{"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"4032:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":2714,"name":"ERC721InvalidOperator","nameLocation":"4240:21:6","nodeType":"ErrorDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"operator","nameLocation":"4270:8:6","nodeType":"VariableDeclaration","scope":2714,"src":"4262:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:6"},"src":"4234:46:6"}],"scope":2763,"src":"2190:2092:6","usedErrors":[2673,2678,2687,2692,2697,2704,2709,2714],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"4284:145:6","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":2762,"linearizedBaseContracts":[2762],"name":"IERC1155Errors","nameLocation":"4440:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2717,"nodeType":"StructuredDocumentation","src":"4461:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":2727,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:6","nodeType":"ErrorDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2719,"mutability":"mutable","name":"sender","nameLocation":"4868:6:6","nodeType":"VariableDeclaration","scope":2727,"src":"4860:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2718,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"balance","nameLocation":"4884:7:6","nodeType":"VariableDeclaration","scope":2727,"src":"4876:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2723,"mutability":"mutable","name":"needed","nameLocation":"4901:6:6","nodeType":"VariableDeclaration","scope":2727,"src":"4893:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2725,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:6","nodeType":"VariableDeclaration","scope":2727,"src":"4909:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:6"},"src":"4827:99:6"},{"documentation":{"id":2728,"nodeType":"StructuredDocumentation","src":"4932:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":2732,"name":"ERC1155InvalidSender","nameLocation":"5095:20:6","nodeType":"ErrorDefinition","parameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"sender","nameLocation":"5124:6:6","nodeType":"VariableDeclaration","scope":2732,"src":"5116:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:6"},"src":"5089:43:6"},{"documentation":{"id":2733,"nodeType":"StructuredDocumentation","src":"5138:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":2737,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:6","nodeType":"ErrorDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2735,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:6","nodeType":"VariableDeclaration","scope":2737,"src":"5331:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2734,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:6"},"src":"5302:47:6"},{"documentation":{"id":2738,"nodeType":"StructuredDocumentation","src":"5355:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":2744,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:6","nodeType":"ErrorDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2740,"mutability":"mutable","name":"operator","nameLocation":"5659:8:6","nodeType":"VariableDeclaration","scope":2744,"src":"5651:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"owner","nameLocation":"5677:5:6","nodeType":"VariableDeclaration","scope":2744,"src":"5669:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2741,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:6"},"src":"5616:68:6"},{"documentation":{"id":2745,"nodeType":"StructuredDocumentation","src":"5690:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":2749,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:6","nodeType":"ErrorDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"approver","nameLocation":"5906:8:6","nodeType":"VariableDeclaration","scope":2749,"src":"5898:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:6"},"src":"5869:47:6"},{"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"5922:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":2754,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:6","nodeType":"ErrorDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"operator","nameLocation":"6161:8:6","nodeType":"VariableDeclaration","scope":2754,"src":"6153:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:6"},"src":"6124:47:6"},{"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"6177:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":2761,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:6","nodeType":"ErrorDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:6","nodeType":"VariableDeclaration","scope":2761,"src":"6494:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:6","nodeType":"VariableDeclaration","scope":2761,"src":"6513:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2758,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:6"},"src":"6462:73:6"}],"scope":2763,"src":"4430:2107:6","usedErrors":[2727,2732,2737,2744,2749,2754,2761],"usedEvents":[]}],"src":"112:6426:6"},"id":6},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[3161],"Create2":[4845],"Errors":[4867]},"id":3162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2764,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","file":"../utils/Create2.sol","id":2766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3162,"sourceUnit":4846,"src":"126:45:7","symbolAliases":[{"foreign":{"id":2765,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"134:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"../utils/Errors.sol","id":2768,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3162,"sourceUnit":4868,"src":"172:43:7","symbolAliases":[{"foreign":{"id":2767,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"180:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"217:599:7","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method."},"fullyImplemented":true,"id":3161,"linearizedBaseContracts":[3161],"name":"Clones","nameLocation":"825:6:7","nodeType":"ContractDefinition","nodes":[{"errorSelector":"94289054","id":2771,"name":"CloneArgumentsTooLong","nameLocation":"844:21:7","nodeType":"ErrorDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[],"src":"865:2:7"},"src":"838:30:7"},{"body":{"id":2784,"nodeType":"Block","src":"1480:48:7","statements":[{"expression":{"arguments":[{"id":2780,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"1503:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1519:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2779,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[2785,2830],"referencedDeclaration":2830,"src":"1497:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (address,uint256) returns (address)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2778,"id":2783,"nodeType":"Return","src":"1490:31:7"}]},"documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"874:526:7","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":2785,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"1414:5:7","nodeType":"FunctionDefinition","parameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"implementation","nameLocation":"1428:14:7","nodeType":"VariableDeclaration","scope":2785,"src":"1420:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2773,"name":"address","nodeType":"ElementaryTypeName","src":"1420:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1419:24:7"},"returnParameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"instance","nameLocation":"1470:8:7","nodeType":"VariableDeclaration","scope":2785,"src":"1462:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2776,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1461:18:7"},"scope":3161,"src":"1405:123:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"2345:820:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2797,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2367:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":2796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2359:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"2359:7:7","typeDescriptions":{}}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2373:7:7","memberName":"balance","nodeType":"MemberAccess","src":"2359:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"2383:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2359:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2814,"nodeType":"IfStatement","src":"2355:123:7","trueBody":{"id":2813,"nodeType":"Block","src":"2390:88:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2446:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":2806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2438:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2805,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:7","typeDescriptions":{}}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:7:7","memberName":"balance","nodeType":"MemberAccess","src":"2438:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"2461:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2802,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"2411:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2418:19:7","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4855,"src":"2411:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2411:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2812,"nodeType":"RevertStatement","src":"2404:63:7"}]}},{"AST":{"nativeSrc":"2512:553:7","nodeType":"YulBlock","src":"2512:553:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2717:4:7","nodeType":"YulLiteral","src":"2717:4:7","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2730:4:7","nodeType":"YulLiteral","src":"2730:4:7","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"2740:4:7","nodeType":"YulLiteral","src":"2740:4:7","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"2746:14:7","nodeType":"YulIdentifier","src":"2746:14:7"}],"functionName":{"name":"shl","nativeSrc":"2736:3:7","nodeType":"YulIdentifier","src":"2736:3:7"},"nativeSrc":"2736:25:7","nodeType":"YulFunctionCall","src":"2736:25:7"}],"functionName":{"name":"shr","nativeSrc":"2726:3:7","nodeType":"YulIdentifier","src":"2726:3:7"},"nativeSrc":"2726:36:7","nodeType":"YulFunctionCall","src":"2726:36:7"},{"kind":"number","nativeSrc":"2764:48:7","nodeType":"YulLiteral","src":"2764:48:7","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"2723:2:7","nodeType":"YulIdentifier","src":"2723:2:7"},"nativeSrc":"2723:90:7","nodeType":"YulFunctionCall","src":"2723:90:7"}],"functionName":{"name":"mstore","nativeSrc":"2710:6:7","nodeType":"YulIdentifier","src":"2710:6:7"},"nativeSrc":"2710:104:7","nodeType":"YulFunctionCall","src":"2710:104:7"},"nativeSrc":"2710:104:7","nodeType":"YulExpressionStatement","src":"2710:104:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2935:4:7","nodeType":"YulLiteral","src":"2935:4:7","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2948:4:7","nodeType":"YulLiteral","src":"2948:4:7","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"2954:14:7","nodeType":"YulIdentifier","src":"2954:14:7"}],"functionName":{"name":"shl","nativeSrc":"2944:3:7","nodeType":"YulIdentifier","src":"2944:3:7"},"nativeSrc":"2944:25:7","nodeType":"YulFunctionCall","src":"2944:25:7"},{"kind":"number","nativeSrc":"2971:32:7","nodeType":"YulLiteral","src":"2971:32:7","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"2941:2:7","nodeType":"YulIdentifier","src":"2941:2:7"},"nativeSrc":"2941:63:7","nodeType":"YulFunctionCall","src":"2941:63:7"}],"functionName":{"name":"mstore","nativeSrc":"2928:6:7","nodeType":"YulIdentifier","src":"2928:6:7"},"nativeSrc":"2928:77:7","nodeType":"YulFunctionCall","src":"2928:77:7"},"nativeSrc":"2928:77:7","nodeType":"YulExpressionStatement","src":"2928:77:7"},{"nativeSrc":"3018:37:7","nodeType":"YulAssignment","src":"3018:37:7","value":{"arguments":[{"name":"value","nativeSrc":"3037:5:7","nodeType":"YulIdentifier","src":"3037:5:7"},{"kind":"number","nativeSrc":"3044:4:7","nodeType":"YulLiteral","src":"3044:4:7","type":"","value":"0x09"},{"kind":"number","nativeSrc":"3050:4:7","nodeType":"YulLiteral","src":"3050:4:7","type":"","value":"0x37"}],"functionName":{"name":"create","nativeSrc":"3030:6:7","nodeType":"YulIdentifier","src":"3030:6:7"},"nativeSrc":"3030:25:7","nodeType":"YulFunctionCall","src":"3030:25:7"},"variableNames":[{"name":"instance","nativeSrc":"3018:8:7","nodeType":"YulIdentifier","src":"3018:8:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2788,"isOffset":false,"isSlot":false,"src":"2746:14:7","valueSize":1},{"declaration":2788,"isOffset":false,"isSlot":false,"src":"2954:14:7","valueSize":1},{"declaration":2793,"isOffset":false,"isSlot":false,"src":"3018:8:7","valueSize":1},{"declaration":2790,"isOffset":false,"isSlot":false,"src":"3037:5:7","valueSize":1}],"flags":["memory-safe"],"id":2815,"nodeType":"InlineAssembly","src":"2487:578:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"3078:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3098:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3090:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2817,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:7","typeDescriptions":{}}},"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3090:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3078:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2828,"nodeType":"IfStatement","src":"3074:85:7","trueBody":{"id":2827,"nodeType":"Block","src":"3102:57:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2822,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"3123:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3130:16:7","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":4861,"src":"3123:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3123:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"RevertStatement","src":"3116:32:7"}]}}]},"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"1534:716:7","text":" @dev Same as {xref-Clones-clone-address-}[clone], but with a `value` parameter to send native currency\n to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"2264:5:7","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"implementation","nameLocation":"2278:14:7","nodeType":"VariableDeclaration","scope":2830,"src":"2270:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2787,"name":"address","nodeType":"ElementaryTypeName","src":"2270:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"value","nameLocation":"2302:5:7","nodeType":"VariableDeclaration","scope":2830,"src":"2294:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"2294:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:39:7"},"returnParameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"instance","nameLocation":"2335:8:7","nodeType":"VariableDeclaration","scope":2830,"src":"2327:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2792,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2326:18:7"},"scope":3161,"src":"2255:910:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2846,"nodeType":"Block","src":"3977:67:7","statements":[{"expression":{"arguments":[{"id":2841,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"4013:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"4029:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4035:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2840,"name":"cloneDeterministic","nodeType":"Identifier","overloadedDeclarations":[2847,2894],"referencedDeclaration":2894,"src":"3994:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes32,uint256) returns (address)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2839,"id":2845,"nodeType":"Return","src":"3987:50:7"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"3171:699:7","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple times will revert, since\n the clones cannot be deployed twice at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"3884:18:7","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"implementation","nameLocation":"3911:14:7","nodeType":"VariableDeclaration","scope":2847,"src":"3903:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2835,"mutability":"mutable","name":"salt","nameLocation":"3935:4:7","nodeType":"VariableDeclaration","scope":2847,"src":"3927:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3927:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3902:38:7"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"instance","nameLocation":"3967:8:7","nodeType":"VariableDeclaration","scope":2847,"src":"3959:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2837,"name":"address","nodeType":"ElementaryTypeName","src":"3959:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3958:18:7"},"scope":3161,"src":"3875:169:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2893,"nodeType":"Block","src":"4952:827:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2861,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4974:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":2860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4966:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2859,"name":"address","nodeType":"ElementaryTypeName","src":"4966:7:7","typeDescriptions":{}}},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4980:7:7","memberName":"balance","nodeType":"MemberAccess","src":"4966:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4990:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4966:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2878,"nodeType":"IfStatement","src":"4962:123:7","trueBody":{"id":2877,"nodeType":"Block","src":"4997:88:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2871,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5053:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5045:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"5045:7:7","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5045:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5059:7:7","memberName":"balance","nodeType":"MemberAccess","src":"5045:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"5068:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2866,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"5018:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5025:19:7","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4855,"src":"5018:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5018:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2876,"nodeType":"RevertStatement","src":"5011:63:7"}]}},{"AST":{"nativeSrc":"5119:560:7","nodeType":"YulBlock","src":"5119:560:7","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5324:4:7","nodeType":"YulLiteral","src":"5324:4:7","type":"","value":"0x00"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5337:4:7","nodeType":"YulLiteral","src":"5337:4:7","type":"","value":"0xe8"},{"arguments":[{"kind":"number","nativeSrc":"5347:4:7","nodeType":"YulLiteral","src":"5347:4:7","type":"","value":"0x60"},{"name":"implementation","nativeSrc":"5353:14:7","nodeType":"YulIdentifier","src":"5353:14:7"}],"functionName":{"name":"shl","nativeSrc":"5343:3:7","nodeType":"YulIdentifier","src":"5343:3:7"},"nativeSrc":"5343:25:7","nodeType":"YulFunctionCall","src":"5343:25:7"}],"functionName":{"name":"shr","nativeSrc":"5333:3:7","nodeType":"YulIdentifier","src":"5333:3:7"},"nativeSrc":"5333:36:7","nodeType":"YulFunctionCall","src":"5333:36:7"},{"kind":"number","nativeSrc":"5371:48:7","nodeType":"YulLiteral","src":"5371:48:7","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000"}],"functionName":{"name":"or","nativeSrc":"5330:2:7","nodeType":"YulIdentifier","src":"5330:2:7"},"nativeSrc":"5330:90:7","nodeType":"YulFunctionCall","src":"5330:90:7"}],"functionName":{"name":"mstore","nativeSrc":"5317:6:7","nodeType":"YulIdentifier","src":"5317:6:7"},"nativeSrc":"5317:104:7","nodeType":"YulFunctionCall","src":"5317:104:7"},"nativeSrc":"5317:104:7","nodeType":"YulExpressionStatement","src":"5317:104:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5542:4:7","nodeType":"YulLiteral","src":"5542:4:7","type":"","value":"0x20"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5555:4:7","nodeType":"YulLiteral","src":"5555:4:7","type":"","value":"0x78"},{"name":"implementation","nativeSrc":"5561:14:7","nodeType":"YulIdentifier","src":"5561:14:7"}],"functionName":{"name":"shl","nativeSrc":"5551:3:7","nodeType":"YulIdentifier","src":"5551:3:7"},"nativeSrc":"5551:25:7","nodeType":"YulFunctionCall","src":"5551:25:7"},{"kind":"number","nativeSrc":"5578:32:7","nodeType":"YulLiteral","src":"5578:32:7","type":"","value":"0x5af43d82803e903d91602b57fd5bf3"}],"functionName":{"name":"or","nativeSrc":"5548:2:7","nodeType":"YulIdentifier","src":"5548:2:7"},"nativeSrc":"5548:63:7","nodeType":"YulFunctionCall","src":"5548:63:7"}],"functionName":{"name":"mstore","nativeSrc":"5535:6:7","nodeType":"YulIdentifier","src":"5535:6:7"},"nativeSrc":"5535:77:7","nodeType":"YulFunctionCall","src":"5535:77:7"},"nativeSrc":"5535:77:7","nodeType":"YulExpressionStatement","src":"5535:77:7"},{"nativeSrc":"5625:44:7","nodeType":"YulAssignment","src":"5625:44:7","value":{"arguments":[{"name":"value","nativeSrc":"5645:5:7","nodeType":"YulIdentifier","src":"5645:5:7"},{"kind":"number","nativeSrc":"5652:4:7","nodeType":"YulLiteral","src":"5652:4:7","type":"","value":"0x09"},{"kind":"number","nativeSrc":"5658:4:7","nodeType":"YulLiteral","src":"5658:4:7","type":"","value":"0x37"},{"name":"salt","nativeSrc":"5664:4:7","nodeType":"YulIdentifier","src":"5664:4:7"}],"functionName":{"name":"create2","nativeSrc":"5637:7:7","nodeType":"YulIdentifier","src":"5637:7:7"},"nativeSrc":"5637:32:7","nodeType":"YulFunctionCall","src":"5637:32:7"},"variableNames":[{"name":"instance","nativeSrc":"5625:8:7","nodeType":"YulIdentifier","src":"5625:8:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2850,"isOffset":false,"isSlot":false,"src":"5353:14:7","valueSize":1},{"declaration":2850,"isOffset":false,"isSlot":false,"src":"5561:14:7","valueSize":1},{"declaration":2857,"isOffset":false,"isSlot":false,"src":"5625:8:7","valueSize":1},{"declaration":2852,"isOffset":false,"isSlot":false,"src":"5664:4:7","valueSize":1},{"declaration":2854,"isOffset":false,"isSlot":false,"src":"5645:5:7","valueSize":1}],"flags":["memory-safe"],"id":2879,"nodeType":"InlineAssembly","src":"5094:585:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"5692:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5712:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5704:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"5704:7:7","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5704:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5692:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2892,"nodeType":"IfStatement","src":"5688:85:7","trueBody":{"id":2891,"nodeType":"Block","src":"5716:57:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2886,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"5737:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5744:16:7","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":4861,"src":"5737:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5737:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2890,"nodeType":"RevertStatement","src":"5730:32:7"}]}}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"4050:750:7","text":" @dev Same as {xref-Clones-cloneDeterministic-address-bytes32-}[cloneDeterministic], but with\n a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":2894,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"4814:18:7","nodeType":"FunctionDefinition","parameters":{"id":2855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"implementation","nameLocation":"4850:14:7","nodeType":"VariableDeclaration","scope":2894,"src":"4842:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"salt","nameLocation":"4882:4:7","nodeType":"VariableDeclaration","scope":2894,"src":"4874:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4874:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"value","nameLocation":"4904:5:7","nodeType":"VariableDeclaration","scope":2894,"src":"4896:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"4896:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4832:83:7"},"returnParameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"instance","nameLocation":"4942:8:7","nodeType":"VariableDeclaration","scope":2894,"src":"4934:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"4934:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4933:18:7"},"scope":3161,"src":"4805:974:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2907,"nodeType":"Block","src":"6054:537:7","statements":[{"AST":{"nativeSrc":"6089:496:7","nodeType":"YulBlock","src":"6089:496:7","statements":[{"nativeSrc":"6103:22:7","nodeType":"YulVariableDeclaration","src":"6103:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"6120:4:7","nodeType":"YulLiteral","src":"6120:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"6114:5:7","nodeType":"YulIdentifier","src":"6114:5:7"},"nativeSrc":"6114:11:7","nodeType":"YulFunctionCall","src":"6114:11:7"},"variables":[{"name":"ptr","nativeSrc":"6107:3:7","nodeType":"YulTypedName","src":"6107:3:7","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6149:3:7","nodeType":"YulIdentifier","src":"6149:3:7"},{"kind":"number","nativeSrc":"6154:4:7","nodeType":"YulLiteral","src":"6154:4:7","type":"","value":"0x38"}],"functionName":{"name":"add","nativeSrc":"6145:3:7","nodeType":"YulIdentifier","src":"6145:3:7"},"nativeSrc":"6145:14:7","nodeType":"YulFunctionCall","src":"6145:14:7"},{"name":"deployer","nativeSrc":"6161:8:7","nodeType":"YulIdentifier","src":"6161:8:7"}],"functionName":{"name":"mstore","nativeSrc":"6138:6:7","nodeType":"YulIdentifier","src":"6138:6:7"},"nativeSrc":"6138:32:7","nodeType":"YulFunctionCall","src":"6138:32:7"},"nativeSrc":"6138:32:7","nodeType":"YulExpressionStatement","src":"6138:32:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6194:3:7","nodeType":"YulIdentifier","src":"6194:3:7"},{"kind":"number","nativeSrc":"6199:4:7","nodeType":"YulLiteral","src":"6199:4:7","type":"","value":"0x24"}],"functionName":{"name":"add","nativeSrc":"6190:3:7","nodeType":"YulIdentifier","src":"6190:3:7"},"nativeSrc":"6190:14:7","nodeType":"YulFunctionCall","src":"6190:14:7"},{"kind":"number","nativeSrc":"6206:34:7","nodeType":"YulLiteral","src":"6206:34:7","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff"}],"functionName":{"name":"mstore","nativeSrc":"6183:6:7","nodeType":"YulIdentifier","src":"6183:6:7"},"nativeSrc":"6183:58:7","nodeType":"YulFunctionCall","src":"6183:58:7"},"nativeSrc":"6183:58:7","nodeType":"YulExpressionStatement","src":"6183:58:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6265:3:7","nodeType":"YulIdentifier","src":"6265:3:7"},{"kind":"number","nativeSrc":"6270:4:7","nodeType":"YulLiteral","src":"6270:4:7","type":"","value":"0x14"}],"functionName":{"name":"add","nativeSrc":"6261:3:7","nodeType":"YulIdentifier","src":"6261:3:7"},"nativeSrc":"6261:14:7","nodeType":"YulFunctionCall","src":"6261:14:7"},{"name":"implementation","nativeSrc":"6277:14:7","nodeType":"YulIdentifier","src":"6277:14:7"}],"functionName":{"name":"mstore","nativeSrc":"6254:6:7","nodeType":"YulIdentifier","src":"6254:6:7"},"nativeSrc":"6254:38:7","nodeType":"YulFunctionCall","src":"6254:38:7"},"nativeSrc":"6254:38:7","nodeType":"YulExpressionStatement","src":"6254:38:7"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"6312:3:7","nodeType":"YulIdentifier","src":"6312:3:7"},{"kind":"number","nativeSrc":"6317:42:7","nodeType":"YulLiteral","src":"6317:42:7","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73"}],"functionName":{"name":"mstore","nativeSrc":"6305:6:7","nodeType":"YulIdentifier","src":"6305:6:7"},"nativeSrc":"6305:55:7","nodeType":"YulFunctionCall","src":"6305:55:7"},"nativeSrc":"6305:55:7","nodeType":"YulExpressionStatement","src":"6305:55:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6384:3:7","nodeType":"YulIdentifier","src":"6384:3:7"},{"kind":"number","nativeSrc":"6389:4:7","nodeType":"YulLiteral","src":"6389:4:7","type":"","value":"0x58"}],"functionName":{"name":"add","nativeSrc":"6380:3:7","nodeType":"YulIdentifier","src":"6380:3:7"},"nativeSrc":"6380:14:7","nodeType":"YulFunctionCall","src":"6380:14:7"},{"name":"salt","nativeSrc":"6396:4:7","nodeType":"YulIdentifier","src":"6396:4:7"}],"functionName":{"name":"mstore","nativeSrc":"6373:6:7","nodeType":"YulIdentifier","src":"6373:6:7"},"nativeSrc":"6373:28:7","nodeType":"YulFunctionCall","src":"6373:28:7"},"nativeSrc":"6373:28:7","nodeType":"YulExpressionStatement","src":"6373:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6425:3:7","nodeType":"YulIdentifier","src":"6425:3:7"},{"kind":"number","nativeSrc":"6430:4:7","nodeType":"YulLiteral","src":"6430:4:7","type":"","value":"0x78"}],"functionName":{"name":"add","nativeSrc":"6421:3:7","nodeType":"YulIdentifier","src":"6421:3:7"},"nativeSrc":"6421:14:7","nodeType":"YulFunctionCall","src":"6421:14:7"},{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6451:3:7","nodeType":"YulIdentifier","src":"6451:3:7"},{"kind":"number","nativeSrc":"6456:4:7","nodeType":"YulLiteral","src":"6456:4:7","type":"","value":"0x0c"}],"functionName":{"name":"add","nativeSrc":"6447:3:7","nodeType":"YulIdentifier","src":"6447:3:7"},"nativeSrc":"6447:14:7","nodeType":"YulFunctionCall","src":"6447:14:7"},{"kind":"number","nativeSrc":"6463:4:7","nodeType":"YulLiteral","src":"6463:4:7","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nativeSrc":"6437:9:7","nodeType":"YulIdentifier","src":"6437:9:7"},"nativeSrc":"6437:31:7","nodeType":"YulFunctionCall","src":"6437:31:7"}],"functionName":{"name":"mstore","nativeSrc":"6414:6:7","nodeType":"YulIdentifier","src":"6414:6:7"},"nativeSrc":"6414:55:7","nodeType":"YulFunctionCall","src":"6414:55:7"},"nativeSrc":"6414:55:7","nodeType":"YulExpressionStatement","src":"6414:55:7"},{"nativeSrc":"6482:93:7","nodeType":"YulAssignment","src":"6482:93:7","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"6513:3:7","nodeType":"YulIdentifier","src":"6513:3:7"},{"kind":"number","nativeSrc":"6518:4:7","nodeType":"YulLiteral","src":"6518:4:7","type":"","value":"0x43"}],"functionName":{"name":"add","nativeSrc":"6509:3:7","nodeType":"YulIdentifier","src":"6509:3:7"},"nativeSrc":"6509:14:7","nodeType":"YulFunctionCall","src":"6509:14:7"},{"kind":"number","nativeSrc":"6525:4:7","nodeType":"YulLiteral","src":"6525:4:7","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nativeSrc":"6499:9:7","nodeType":"YulIdentifier","src":"6499:9:7"},"nativeSrc":"6499:31:7","nodeType":"YulFunctionCall","src":"6499:31:7"},{"kind":"number","nativeSrc":"6532:42:7","nodeType":"YulLiteral","src":"6532:42:7","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6495:3:7","nodeType":"YulIdentifier","src":"6495:3:7"},"nativeSrc":"6495:80:7","nodeType":"YulFunctionCall","src":"6495:80:7"},"variableNames":[{"name":"predicted","nativeSrc":"6482:9:7","nodeType":"YulIdentifier","src":"6482:9:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2901,"isOffset":false,"isSlot":false,"src":"6161:8:7","valueSize":1},{"declaration":2897,"isOffset":false,"isSlot":false,"src":"6277:14:7","valueSize":1},{"declaration":2904,"isOffset":false,"isSlot":false,"src":"6482:9:7","valueSize":1},{"declaration":2899,"isOffset":false,"isSlot":false,"src":"6396:4:7","valueSize":1}],"flags":["memory-safe"],"id":2906,"nodeType":"InlineAssembly","src":"6064:521:7"}]},"documentation":{"id":2895,"nodeType":"StructuredDocumentation","src":"5785:99:7","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"5898:27:7","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"implementation","nameLocation":"5943:14:7","nodeType":"VariableDeclaration","scope":2908,"src":"5935:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2896,"name":"address","nodeType":"ElementaryTypeName","src":"5935:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"salt","nameLocation":"5975:4:7","nodeType":"VariableDeclaration","scope":2908,"src":"5967:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5967:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"deployer","nameLocation":"5997:8:7","nodeType":"VariableDeclaration","scope":2908,"src":"5989:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2900,"name":"address","nodeType":"ElementaryTypeName","src":"5989:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5925:86:7"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"predicted","nameLocation":"6043:9:7","nodeType":"VariableDeclaration","scope":2908,"src":"6035:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"6035:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6034:19:7"},"scope":3161,"src":"5889:702:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2927,"nodeType":"Block","src":"6840:88:7","statements":[{"expression":{"arguments":[{"id":2919,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"6885:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2920,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"6901:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2923,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6915:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":2922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6907:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2921,"name":"address","nodeType":"ElementaryTypeName","src":"6907:7:7","typeDescriptions":{}}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6907:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2918,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[2908,2928],"referencedDeclaration":2908,"src":"6857:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:64:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2917,"id":2926,"nodeType":"Return","src":"6850:71:7"}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"6597:99:7","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":2928,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"6710:27:7","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"implementation","nameLocation":"6755:14:7","nodeType":"VariableDeclaration","scope":2928,"src":"6747:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"6747:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"salt","nameLocation":"6787:4:7","nodeType":"VariableDeclaration","scope":2928,"src":"6779:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6779:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6737:60:7"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"predicted","nameLocation":"6829:9:7","nodeType":"VariableDeclaration","scope":2928,"src":"6821:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2915,"name":"address","nodeType":"ElementaryTypeName","src":"6821:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6820:19:7"},"scope":3161,"src":"6701:227:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2944,"nodeType":"Block","src":"7769:71:7","statements":[{"expression":{"arguments":[{"id":2939,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2931,"src":"7809:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2940,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"7825:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7831:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2938,"name":"cloneWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[2945,2999],"referencedDeclaration":2999,"src":"7786:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,uint256) returns (address)"}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7786:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2937,"id":2943,"nodeType":"Return","src":"7779:54:7"}]},"documentation":{"id":2929,"nodeType":"StructuredDocumentation","src":"6934:719:7","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create opcode, which should never revert.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":2945,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"7667:22:7","nodeType":"FunctionDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2931,"mutability":"mutable","name":"implementation","nameLocation":"7698:14:7","nodeType":"VariableDeclaration","scope":2945,"src":"7690:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2930,"name":"address","nodeType":"ElementaryTypeName","src":"7690:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2933,"mutability":"mutable","name":"args","nameLocation":"7727:4:7","nodeType":"VariableDeclaration","scope":2945,"src":"7714:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2932,"name":"bytes","nodeType":"ElementaryTypeName","src":"7714:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7689:43:7"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2936,"mutability":"mutable","name":"instance","nameLocation":"7759:8:7","nodeType":"VariableDeclaration","scope":2945,"src":"7751:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2935,"name":"address","nodeType":"ElementaryTypeName","src":"7751:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7750:18:7"},"scope":3161,"src":"7658:182:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2998,"nodeType":"Block","src":"8763:437:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2959,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8785:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":2958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8777:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"8777:7:7","typeDescriptions":{}}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8777:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8791:7:7","memberName":"balance","nodeType":"MemberAccess","src":"8777:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"8801:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8777:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2976,"nodeType":"IfStatement","src":"8773:123:7","trueBody":{"id":2975,"nodeType":"Block","src":"8808:88:7","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":2969,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8864:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8856:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2967,"name":"address","nodeType":"ElementaryTypeName","src":"8856:7:7","typeDescriptions":{}}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8856:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8870:7:7","memberName":"balance","nodeType":"MemberAccess","src":"8856:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"8879:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2964,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"8829:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8836:19:7","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4855,"src":"8829:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8829:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2974,"nodeType":"RevertStatement","src":"8822:63:7"}]}},{"assignments":[2978],"declarations":[{"constant":false,"id":2978,"mutability":"mutable","name":"bytecode","nameLocation":"8918:8:7","nodeType":"VariableDeclaration","scope":2998,"src":"8905:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2977,"name":"bytes","nodeType":"ElementaryTypeName","src":"8905:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2983,"initialValue":{"arguments":[{"id":2980,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"8957:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2981,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"8973:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2979,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"8929:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8929:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8905:73:7"},{"AST":{"nativeSrc":"9013:87:7","nodeType":"YulBlock","src":"9013:87:7","statements":[{"nativeSrc":"9027:63:7","nodeType":"YulAssignment","src":"9027:63:7","value":{"arguments":[{"name":"value","nativeSrc":"9046:5:7","nodeType":"YulIdentifier","src":"9046:5:7"},{"arguments":[{"name":"bytecode","nativeSrc":"9057:8:7","nodeType":"YulIdentifier","src":"9057:8:7"},{"kind":"number","nativeSrc":"9067:4:7","nodeType":"YulLiteral","src":"9067:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9053:3:7","nodeType":"YulIdentifier","src":"9053:3:7"},"nativeSrc":"9053:19:7","nodeType":"YulFunctionCall","src":"9053:19:7"},{"arguments":[{"name":"bytecode","nativeSrc":"9080:8:7","nodeType":"YulIdentifier","src":"9080:8:7"}],"functionName":{"name":"mload","nativeSrc":"9074:5:7","nodeType":"YulIdentifier","src":"9074:5:7"},"nativeSrc":"9074:15:7","nodeType":"YulFunctionCall","src":"9074:15:7"}],"functionName":{"name":"create","nativeSrc":"9039:6:7","nodeType":"YulIdentifier","src":"9039:6:7"},"nativeSrc":"9039:51:7","nodeType":"YulFunctionCall","src":"9039:51:7"},"variableNames":[{"name":"instance","nativeSrc":"9027:8:7","nodeType":"YulIdentifier","src":"9027:8:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2978,"isOffset":false,"isSlot":false,"src":"9057:8:7","valueSize":1},{"declaration":2978,"isOffset":false,"isSlot":false,"src":"9080:8:7","valueSize":1},{"declaration":2955,"isOffset":false,"isSlot":false,"src":"9027:8:7","valueSize":1},{"declaration":2952,"isOffset":false,"isSlot":false,"src":"9046:5:7","valueSize":1}],"flags":["memory-safe"],"id":2984,"nodeType":"InlineAssembly","src":"8988:112:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2985,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2955,"src":"9113:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9133:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9125:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2986,"name":"address","nodeType":"ElementaryTypeName","src":"9125:7:7","typeDescriptions":{}}},"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9125:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9113:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2997,"nodeType":"IfStatement","src":"9109:85:7","trueBody":{"id":2996,"nodeType":"Block","src":"9137:57:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2991,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"9158:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:16:7","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":4861,"src":"9158:23:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9158:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2995,"nodeType":"RevertStatement","src":"9151:32:7"}]}}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"7846:756:7","text":" @dev Same as {xref-Clones-cloneWithImmutableArgs-address-bytes-}[cloneWithImmutableArgs], but with a `value`\n parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":2999,"implemented":true,"kind":"function","modifiers":[],"name":"cloneWithImmutableArgs","nameLocation":"8616:22:7","nodeType":"FunctionDefinition","parameters":{"id":2953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"implementation","nameLocation":"8656:14:7","nodeType":"VariableDeclaration","scope":2999,"src":"8648:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2947,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"args","nameLocation":"8693:4:7","nodeType":"VariableDeclaration","scope":2999,"src":"8680:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2949,"name":"bytes","nodeType":"ElementaryTypeName","src":"8680:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"value","nameLocation":"8715:5:7","nodeType":"VariableDeclaration","scope":2999,"src":"8707:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2951,"name":"uint256","nodeType":"ElementaryTypeName","src":"8707:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8638:88:7"},"returnParameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"instance","nameLocation":"8753:8:7","nodeType":"VariableDeclaration","scope":2999,"src":"8745:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"8745:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8744:18:7"},"scope":3161,"src":"8607:593:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3018,"nodeType":"Block","src":"10279:90:7","statements":[{"expression":{"arguments":[{"id":3012,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"10332:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3013,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"10348:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3014,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"10354:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"30","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10360:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3011,"name":"cloneDeterministicWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[3019,3048],"referencedDeclaration":3048,"src":"10296:35:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,uint256) returns (address)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10296:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3010,"id":3017,"nodeType":"Return","src":"10289:73:7"}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"9206:900:7","text":" @dev Deploys and returns the address of a clone that mimics the behavior of `implementation` with custom\n immutable arguments. These are provided through `args` and cannot be changed after deployment. To\n access the arguments within the implementation, use {fetchCloneArgs}.\n This function uses the create2 opcode and a `salt` to deterministically deploy the clone. Using the same\n `implementation`, `args` and `salt` multiple times will revert, since the clones cannot be deployed twice\n at the same address.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later."},"id":3019,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"10120:35:7","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"implementation","nameLocation":"10173:14:7","nodeType":"VariableDeclaration","scope":3019,"src":"10165:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"10165:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"args","nameLocation":"10210:4:7","nodeType":"VariableDeclaration","scope":3019,"src":"10197:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"10197:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"salt","nameLocation":"10232:4:7","nodeType":"VariableDeclaration","scope":3019,"src":"10224:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3005,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10224:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10155:87:7"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"instance","nameLocation":"10269:8:7","nodeType":"VariableDeclaration","scope":3019,"src":"10261:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"10261:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10260:18:7"},"scope":3161,"src":"10111:258:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"11361:144:7","statements":[{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"bytecode","nameLocation":"11384:8:7","nodeType":"VariableDeclaration","scope":3047,"src":"11371:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3033,"name":"bytes","nodeType":"ElementaryTypeName","src":"11371:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3039,"initialValue":{"arguments":[{"id":3036,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"11423:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3037,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"11439:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3035,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"11395:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11395:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11371:73:7"},{"expression":{"arguments":[{"id":3042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"11476:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3043,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"11483:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3044,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"11489:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3040,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"11461:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$4845_$","typeString":"type(library Create2)"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11469:6:7","memberName":"deploy","nodeType":"MemberAccess","referencedDeclaration":4810,"src":"11461:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (uint256,bytes32,bytes memory) returns (address)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11461:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3032,"id":3046,"nodeType":"Return","src":"11454:44:7"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"10375:790:7","text":" @dev Same as {xref-Clones-cloneDeterministicWithImmutableArgs-address-bytes-bytes32-}[cloneDeterministicWithImmutableArgs],\n but with a `value` parameter to send native currency to the new contract.\n WARNING: This function does not check if `implementation` has code. A clone that points to an address\n without code cannot be initialized. Initialization calls may appear to be successful when, in reality, they\n have no effect and leave the clone uninitialized, allowing a third party to initialize it later.\n NOTE: Using a non-zero value at creation will require the contract using this function (e.g. a factory)\n to always have enough balance for new deployments. Consider exposing this function under a payable method."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministicWithImmutableArgs","nameLocation":"11179:35:7","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3022,"mutability":"mutable","name":"implementation","nameLocation":"11232:14:7","nodeType":"VariableDeclaration","scope":3048,"src":"11224:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"11224:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"args","nameLocation":"11269:4:7","nodeType":"VariableDeclaration","scope":3048,"src":"11256:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3023,"name":"bytes","nodeType":"ElementaryTypeName","src":"11256:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3026,"mutability":"mutable","name":"salt","nameLocation":"11291:4:7","nodeType":"VariableDeclaration","scope":3048,"src":"11283:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3025,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11283:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3028,"mutability":"mutable","name":"value","nameLocation":"11313:5:7","nodeType":"VariableDeclaration","scope":3048,"src":"11305:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3027,"name":"uint256","nodeType":"ElementaryTypeName","src":"11305:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11214:110:7"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"instance","nameLocation":"11351:8:7","nodeType":"VariableDeclaration","scope":3048,"src":"11343:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3030,"name":"address","nodeType":"ElementaryTypeName","src":"11343:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11342:18:7"},"scope":3161,"src":"11170:335:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3078,"nodeType":"Block","src":"11841:166:7","statements":[{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"bytecode","nameLocation":"11864:8:7","nodeType":"VariableDeclaration","scope":3078,"src":"11851:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3062,"name":"bytes","nodeType":"ElementaryTypeName","src":"11851:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3068,"initialValue":{"arguments":[{"id":3065,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11903:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3066,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"11919:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3064,"name":"_cloneCodeWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"11875:27:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) pure returns (bytes memory)"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11875:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"11851:73:7"},{"expression":{"arguments":[{"id":3071,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"11964:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3073,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"11980:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3072,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"11970:9:7","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11970:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3075,"name":"deployer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"11991:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3069,"name":"Create2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"11941:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Create2_$4845_$","typeString":"type(library Create2)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11949:14:7","memberName":"computeAddress","nodeType":"MemberAccess","referencedDeclaration":4844,"src":"11941:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11941:59:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3061,"id":3077,"nodeType":"Return","src":"11934:66:7"}]},"documentation":{"id":3049,"nodeType":"StructuredDocumentation","src":"11511:116:7","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":3079,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"11641:44:7","nodeType":"FunctionDefinition","parameters":{"id":3058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"implementation","nameLocation":"11703:14:7","nodeType":"VariableDeclaration","scope":3079,"src":"11695:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"11695:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"args","nameLocation":"11740:4:7","nodeType":"VariableDeclaration","scope":3079,"src":"11727:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3052,"name":"bytes","nodeType":"ElementaryTypeName","src":"11727:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"salt","nameLocation":"11762:4:7","nodeType":"VariableDeclaration","scope":3079,"src":"11754:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11754:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"deployer","nameLocation":"11784:8:7","nodeType":"VariableDeclaration","scope":3079,"src":"11776:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3056,"name":"address","nodeType":"ElementaryTypeName","src":"11776:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11685:113:7"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"predicted","nameLocation":"11830:9:7","nodeType":"VariableDeclaration","scope":3079,"src":"11822:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3059,"name":"address","nodeType":"ElementaryTypeName","src":"11822:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11821:19:7"},"scope":3161,"src":"11632:375:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3101,"nodeType":"Block","src":"12317:111:7","statements":[{"expression":{"arguments":[{"id":3092,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"12379:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3093,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"12395:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3094,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"12401:4:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3097,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12415:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$3161","typeString":"library Clones"}],"id":3096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12407:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3095,"name":"address","nodeType":"ElementaryTypeName","src":"12407:7:7","typeDescriptions":{}}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12407:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3091,"name":"predictDeterministicAddressWithImmutableArgs","nodeType":"Identifier","overloadedDeclarations":[3079,3102],"referencedDeclaration":3079,"src":"12334:44:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes_memory_ptr_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes memory,bytes32,address) pure returns (address)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12334:87:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3090,"id":3100,"nodeType":"Return","src":"12327:94:7"}]},"documentation":{"id":3080,"nodeType":"StructuredDocumentation","src":"12013:116:7","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministicWithImmutableArgs}."},"id":3102,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddressWithImmutableArgs","nameLocation":"12143:44:7","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"implementation","nameLocation":"12205:14:7","nodeType":"VariableDeclaration","scope":3102,"src":"12197:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"12197:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3084,"mutability":"mutable","name":"args","nameLocation":"12242:4:7","nodeType":"VariableDeclaration","scope":3102,"src":"12229:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3083,"name":"bytes","nodeType":"ElementaryTypeName","src":"12229:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"salt","nameLocation":"12264:4:7","nodeType":"VariableDeclaration","scope":3102,"src":"12256:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12256:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"12187:87:7"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"predicted","nameLocation":"12306:9:7","nodeType":"VariableDeclaration","scope":3102,"src":"12298:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"12298:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12297:19:7"},"scope":3161,"src":"12134:294:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3124,"nodeType":"Block","src":"13121:246:7","statements":[{"assignments":[3111],"declarations":[{"constant":false,"id":3111,"mutability":"mutable","name":"result","nameLocation":"13144:6:7","nodeType":"VariableDeclaration","scope":3124,"src":"13131:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3110,"name":"bytes","nodeType":"ElementaryTypeName","src":"13131:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3120,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3114,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"13163:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13172:4:7","memberName":"code","nodeType":"MemberAccess","src":"13163:13:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13177:6:7","memberName":"length","nodeType":"MemberAccess","src":"13163:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3435","id":3117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13186:2:7","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"13163:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13153:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3112,"name":"bytes","nodeType":"ElementaryTypeName","src":"13157:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13153:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"13131:58:7"},{"AST":{"nativeSrc":"13257:81:7","nodeType":"YulBlock","src":"13257:81:7","statements":[{"expression":{"arguments":[{"name":"instance","nativeSrc":"13283:8:7","nodeType":"YulIdentifier","src":"13283:8:7"},{"arguments":[{"name":"result","nativeSrc":"13297:6:7","nodeType":"YulIdentifier","src":"13297:6:7"},{"kind":"number","nativeSrc":"13305:2:7","nodeType":"YulLiteral","src":"13305:2:7","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13293:3:7","nodeType":"YulIdentifier","src":"13293:3:7"},"nativeSrc":"13293:15:7","nodeType":"YulFunctionCall","src":"13293:15:7"},{"kind":"number","nativeSrc":"13310:2:7","nodeType":"YulLiteral","src":"13310:2:7","type":"","value":"45"},{"arguments":[{"name":"result","nativeSrc":"13320:6:7","nodeType":"YulIdentifier","src":"13320:6:7"}],"functionName":{"name":"mload","nativeSrc":"13314:5:7","nodeType":"YulIdentifier","src":"13314:5:7"},"nativeSrc":"13314:13:7","nodeType":"YulFunctionCall","src":"13314:13:7"}],"functionName":{"name":"extcodecopy","nativeSrc":"13271:11:7","nodeType":"YulIdentifier","src":"13271:11:7"},"nativeSrc":"13271:57:7","nodeType":"YulFunctionCall","src":"13271:57:7"},"nativeSrc":"13271:57:7","nodeType":"YulExpressionStatement","src":"13271:57:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":3105,"isOffset":false,"isSlot":false,"src":"13283:8:7","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"13297:6:7","valueSize":1},{"declaration":3111,"isOffset":false,"isSlot":false,"src":"13320:6:7","valueSize":1}],"flags":["memory-safe"],"id":3121,"nodeType":"InlineAssembly","src":"13232:106:7"},{"expression":{"id":3122,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"13354:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3109,"id":3123,"nodeType":"Return","src":"13347:13:7"}]},"documentation":{"id":3103,"nodeType":"StructuredDocumentation","src":"12434:603:7","text":" @dev Get the immutable args attached to a clone.\n - If `instance` is a clone that was deployed using `clone` or `cloneDeterministic`, this\n   function will return an empty array.\n - If `instance` is a clone that was deployed using `cloneWithImmutableArgs` or\n   `cloneDeterministicWithImmutableArgs`, this function will return the args array used at\n   creation.\n - If `instance` is NOT a clone deployed using this library, the behavior is undefined. This\n   function should only be used to check addresses that are known to be clones."},"id":3125,"implemented":true,"kind":"function","modifiers":[],"name":"fetchCloneArgs","nameLocation":"13051:14:7","nodeType":"FunctionDefinition","parameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"instance","nameLocation":"13074:8:7","nodeType":"VariableDeclaration","scope":3125,"src":"13066:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3104,"name":"address","nodeType":"ElementaryTypeName","src":"13066:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13065:18:7"},"returnParameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3125,"src":"13107:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3107,"name":"bytes","nodeType":"ElementaryTypeName","src":"13107:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13106:14:7"},"scope":3161,"src":"13042:325:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"14156:362:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3135,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"14170:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14175:6:7","memberName":"length","nodeType":"MemberAccess","src":"14170:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3234353331","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14184:5:7","typeDescriptions":{"typeIdentifier":"t_rational_24531_by_1","typeString":"int_const 24531"},"value":"24531"},"src":"14170:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3142,"nodeType":"IfStatement","src":"14166:55:7","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3139,"name":"CloneArgumentsTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"14198:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14198:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3141,"nodeType":"RevertStatement","src":"14191:30:7"}},{"expression":{"arguments":[{"hexValue":"61","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14284:7:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},"value":"a"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3148,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"14316:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14321:6:7","memberName":"length","nodeType":"MemberAccess","src":"14316:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3435","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14330:2:7","typeDescriptions":{"typeIdentifier":"t_rational_45_by_1","typeString":"int_const 45"},"value":"45"},"src":"14316:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14309:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3146,"name":"uint16","nodeType":"ElementaryTypeName","src":"14309:6:7","typeDescriptions":{}}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14309:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"hexValue":"3d81600a3d39f3363d3d373d3d3d363d73","id":3153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14351:39:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""}},{"id":3154,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"14408:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"5af43d82803e903d91602b57fd5bf3","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"14440:35:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""}},{"id":3156,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"14493:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ac225168df54212a25c1c01fd35bebfea408fdac2e31ddd6f80a4bbf9a5f1cb","typeString":"literal_string \"a\""},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_stringliteral_d24ab45bb33e00f98da9dec50b1e1620d91f81025faf3be3a44e9d69371096d4","typeString":"literal_string hex\"3d81600a3d39f3363d3d373d3d3d363d73\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_11a195f66c9175f46895bae2006d40848a680c7068b9fc4af248ff9a54a47e45","typeString":"literal_string hex\"5af43d82803e903d91602b57fd5bf3\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3143,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14250:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14254:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"14250:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14250:261:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3134,"id":3158,"nodeType":"Return","src":"14231:280:7"}]},"documentation":{"id":3126,"nodeType":"StructuredDocumentation","src":"13373:640:7","text":" @dev Helper that prepares the initcode of the proxy with immutable args.\n An assembly variant of this function requires copying the `args` array, which can be efficiently done using\n `mcopy`. Unfortunately, that opcode is not available before cancun. A pure solidity implementation using\n abi.encodePacked is more expensive but also more portable and easier to review.\n NOTE: https://eips.ethereum.org/EIPS/eip-170[EIP-170] limits the length of the contract code to 24576 bytes.\n With the proxy code taking 45 bytes, that limits the length of the immutable args to 24531 bytes."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"_cloneCodeWithImmutableArgs","nameLocation":"14027:27:7","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"implementation","nameLocation":"14072:14:7","nodeType":"VariableDeclaration","scope":3160,"src":"14064:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3127,"name":"address","nodeType":"ElementaryTypeName","src":"14064:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"args","nameLocation":"14109:4:7","nodeType":"VariableDeclaration","scope":3160,"src":"14096:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3129,"name":"bytes","nodeType":"ElementaryTypeName","src":"14096:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14054:65:7"},"returnParameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3160,"src":"14142:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3132,"name":"bytes","nodeType":"ElementaryTypeName","src":"14142:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14141:14:7"},"scope":3161,"src":"14018:500:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3162,"src":"817:13703:7","usedErrors":[2771],"usedEvents":[]}],"src":"100:14421:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[3284],"IERC165":[6587]},"id":3285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3163,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3285,"sourceUnit":6588,"src":"136:62:8","symbolAliases":[{"foreign":{"id":3164,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"144:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3167,"name":"IERC165","nameLocations":["359:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"359:7:8"},"id":3168,"nodeType":"InheritanceSpecifier","src":"359:7:8"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"200:136:8","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":3284,"linearizedBaseContracts":[3284,6587],"name":"IERC1155","nameLocation":"347:8:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3169,"nodeType":"StructuredDocumentation","src":"373:125:8","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":3181,"name":"TransferSingle","nameLocation":"509:14:8","nodeType":"EventDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:8","nodeType":"VariableDeclaration","scope":3181,"src":"524:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3173,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:8","nodeType":"VariableDeclaration","scope":3181,"src":"550:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3175,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:8","nodeType":"VariableDeclaration","scope":3181,"src":"572:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:8","nodeType":"VariableDeclaration","scope":3181,"src":"592:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3179,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:8","nodeType":"VariableDeclaration","scope":3181,"src":"604:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:8"},"src":"503:116:8"},{"anonymous":false,"documentation":{"id":3182,"nodeType":"StructuredDocumentation","src":"625:144:8","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":3196,"name":"TransferBatch","nameLocation":"780:13:8","nodeType":"EventDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:8","nodeType":"VariableDeclaration","scope":3196,"src":"803:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3183,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3186,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:8","nodeType":"VariableDeclaration","scope":3196,"src":"837:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3185,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3188,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:8","nodeType":"VariableDeclaration","scope":3196,"src":"867:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3191,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:8","nodeType":"VariableDeclaration","scope":3196,"src":"895:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3189,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ArrayTypeName","src":"895:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3194,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:8","nodeType":"VariableDeclaration","scope":3196,"src":"918:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3193,"nodeType":"ArrayTypeName","src":"918:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:8"},"src":"774:167:8"},{"anonymous":false,"documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"947:147:8","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3205,"name":"ApprovalForAll","nameLocation":"1105:14:8","nodeType":"EventDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:8","nodeType":"VariableDeclaration","scope":3205,"src":"1120:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3201,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:8","nodeType":"VariableDeclaration","scope":3205,"src":"1145:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3200,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3203,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:8","nodeType":"VariableDeclaration","scope":3205,"src":"1171:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3202,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:8"},"src":"1099:87:8"},{"anonymous":false,"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"1192:343:8","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":3212,"name":"URI","nameLocation":"1546:3:8","nodeType":"EventDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:8","nodeType":"VariableDeclaration","scope":3212,"src":"1550:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3207,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3210,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:8","nodeType":"VariableDeclaration","scope":3212,"src":"1564:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:8"},"src":"1540:44:8"},{"documentation":{"id":3213,"nodeType":"StructuredDocumentation","src":"1590:90:8","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":3222,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:8","nodeType":"FunctionDefinition","parameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"account","nameLocation":"1712:7:8","nodeType":"VariableDeclaration","scope":3222,"src":"1704:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3214,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"id","nameLocation":"1729:2:8","nodeType":"VariableDeclaration","scope":3222,"src":"1721:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:8"},"returnParameters":{"id":3221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3222,"src":"1756:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3219,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:8"},"scope":3284,"src":"1685:80:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3223,"nodeType":"StructuredDocumentation","src":"1771:188:8","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":3235,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:8","nodeType":"FunctionDefinition","parameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:8","nodeType":"VariableDeclaration","scope":3235,"src":"1997:27:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3224,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3225,"nodeType":"ArrayTypeName","src":"1997:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3229,"mutability":"mutable","name":"ids","nameLocation":"2053:3:8","nodeType":"VariableDeclaration","scope":3235,"src":"2034:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3228,"nodeType":"ArrayTypeName","src":"2034:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:8"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3235,"src":"2086:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3232,"nodeType":"ArrayTypeName","src":"2086:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:8"},"scope":3284,"src":"1964:140:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3236,"nodeType":"StructuredDocumentation","src":"2110:254:8","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":3243,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:8","nodeType":"FunctionDefinition","parameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"mutability":"mutable","name":"operator","nameLocation":"2404:8:8","nodeType":"VariableDeclaration","scope":3243,"src":"2396:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3237,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3240,"mutability":"mutable","name":"approved","nameLocation":"2419:8:8","nodeType":"VariableDeclaration","scope":3243,"src":"2414:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3239,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:8"},"returnParameters":{"id":3242,"nodeType":"ParameterList","parameters":[],"src":"2437:0:8"},"scope":3284,"src":"2369:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"2444:135:8","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":3253,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:8","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"account","nameLocation":"2618:7:8","nodeType":"VariableDeclaration","scope":3253,"src":"2610:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"operator","nameLocation":"2635:8:8","nodeType":"VariableDeclaration","scope":3253,"src":"2627:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3247,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:8"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3253,"src":"2668:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3250,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:8"},"scope":3284,"src":"2584:90:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3254,"nodeType":"StructuredDocumentation","src":"2680:927:8","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":3267,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:8","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3256,"mutability":"mutable","name":"from","nameLocation":"3646:4:8","nodeType":"VariableDeclaration","scope":3267,"src":"3638:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3255,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3258,"mutability":"mutable","name":"to","nameLocation":"3660:2:8","nodeType":"VariableDeclaration","scope":3267,"src":"3652:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"id","nameLocation":"3672:2:8","nodeType":"VariableDeclaration","scope":3267,"src":"3664:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"value","nameLocation":"3684:5:8","nodeType":"VariableDeclaration","scope":3267,"src":"3676:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"data","nameLocation":"3706:4:8","nodeType":"VariableDeclaration","scope":3267,"src":"3691:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3263,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:8"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[],"src":"3720:0:8"},"scope":3284,"src":"3612:109:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"3727:831:8","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":3283,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:8","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"from","nameLocation":"4611:4:8","nodeType":"VariableDeclaration","scope":3283,"src":"4603:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"to","nameLocation":"4633:2:8","nodeType":"VariableDeclaration","scope":3283,"src":"4625:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3275,"mutability":"mutable","name":"ids","nameLocation":"4664:3:8","nodeType":"VariableDeclaration","scope":3283,"src":"4645:22:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3273,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3274,"nodeType":"ArrayTypeName","src":"4645:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"values","nameLocation":"4696:6:8","nodeType":"VariableDeclaration","scope":3283,"src":"4677:25:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3277,"nodeType":"ArrayTypeName","src":"4677:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"data","nameLocation":"4727:4:8","nodeType":"VariableDeclaration","scope":3283,"src":"4712:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3279,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:8"},"returnParameters":{"id":3282,"nodeType":"ParameterList","parameters":[],"src":"4746:0:8"},"scope":3284,"src":"4563:184:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3285,"src":"337:4412:8","usedErrors":[],"usedEvents":[3181,3196,3205,3212]}],"src":"110:4640:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[3326],"IERC165":[6587]},"id":3327,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3286,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3327,"sourceUnit":6588,"src":"144:62:9","symbolAliases":[{"foreign":{"id":3287,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"152:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3290,"name":"IERC165","nameLocations":["357:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"357:7:9"},"id":3291,"nodeType":"InheritanceSpecifier","src":"357:7:9"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"208:118:9","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":3326,"linearizedBaseContracts":[3326,6587],"name":"IERC1155Receiver","nameLocation":"337:16:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"371:827:9","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":3307,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:9","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"operator","nameLocation":"1247:8:9","nodeType":"VariableDeclaration","scope":3307,"src":"1239:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3293,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"from","nameLocation":"1273:4:9","nodeType":"VariableDeclaration","scope":3307,"src":"1265:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3295,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"id","nameLocation":"1295:2:9","nodeType":"VariableDeclaration","scope":3307,"src":"1287:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"value","nameLocation":"1315:5:9","nodeType":"VariableDeclaration","scope":3307,"src":"1307:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"data","nameLocation":"1345:4:9","nodeType":"VariableDeclaration","scope":3307,"src":"1330:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3301,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:9"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"1374:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3304,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:9"},"scope":3326,"src":"1203:179:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"1388:995:9","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":3325,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:9","nodeType":"FunctionDefinition","parameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"operator","nameLocation":"2437:8:9","nodeType":"VariableDeclaration","scope":3325,"src":"2429:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3309,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3312,"mutability":"mutable","name":"from","nameLocation":"2463:4:9","nodeType":"VariableDeclaration","scope":3325,"src":"2455:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"ids","nameLocation":"2496:3:9","nodeType":"VariableDeclaration","scope":3325,"src":"2477:22:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3314,"nodeType":"ArrayTypeName","src":"2477:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"values","nameLocation":"2528:6:9","nodeType":"VariableDeclaration","scope":3325,"src":"2509:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3317,"nodeType":"ArrayTypeName","src":"2509:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3320,"mutability":"mutable","name":"data","nameLocation":"2559:4:9","nodeType":"VariableDeclaration","scope":3325,"src":"2544:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3319,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:9"},"returnParameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3325,"src":"2588:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3322,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:9"},"scope":3326,"src":"2388:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3327,"src":"327:2271:9","usedErrors":[],"usedEvents":[]}],"src":"118:2481:9"},"id":9},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[3284],"IERC1155MetadataURI":[3342]},"id":3343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3328,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":3330,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3343,"sourceUnit":3285,"src":"158:41:10","symbolAliases":[{"foreign":{"id":3329,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"166:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3332,"name":"IERC1155","nameLocations":["399:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":3284,"src":"399:8:10"},"id":3333,"nodeType":"InheritanceSpecifier","src":"399:8:10"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":3331,"nodeType":"StructuredDocumentation","src":"201:164:10","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":3342,"linearizedBaseContracts":[3342,3284,6587],"name":"IERC1155MetadataURI","nameLocation":"376:19:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3334,"nodeType":"StructuredDocumentation","src":"414:192:10","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":3341,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:10","nodeType":"FunctionDefinition","parameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"id","nameLocation":"632:2:10","nodeType":"VariableDeclaration","scope":3341,"src":"624:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:10"},"returnParameters":{"id":3340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3341,"src":"659:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3338,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:10"},"scope":3342,"src":"611:63:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3343,"src":"366:310:10","usedErrors":[],"usedEvents":[3181,3196,3205,3212]}],"src":"132:545:10"},"id":10},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[3496],"IERC1155Errors":[2762],"IERC1155Receiver":[3326]},"id":3497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3344,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":3346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3497,"sourceUnit":3327,"src":"146:57:11","symbolAliases":[{"foreign":{"id":3345,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"154:16:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3497,"sourceUnit":2763,"src":"204:70:11","symbolAliases":[{"foreign":{"id":3347,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"212:14:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"276:162:11","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":3496,"linearizedBaseContracts":[3496],"name":"ERC1155Utils","nameLocation":"447:12:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":3420,"nodeType":"Block","src":"1191:776:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3365,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"1205:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:11","memberName":"code","nodeType":"MemberAccess","src":"1205:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:11","memberName":"length","nodeType":"MemberAccess","src":"1205:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3419,"nodeType":"IfStatement","src":"1201:760:11","trueBody":{"id":3418,"nodeType":"Block","src":"1225:736:11","statements":[{"clauses":[{"block":{"id":3396,"nodeType":"Block","src":"1341:221:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"1363:8:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3384,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"1375:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3326_$","typeString":"type(contract IERC1155Receiver)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:11","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"1375:34:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"1359:189:11","trueBody":{"id":3394,"nodeType":"Block","src":"1420:128:11","statements":[{"errorCall":{"arguments":[{"id":3391,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"1526:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3388,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"1488:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2762_$","typeString":"type(contract IERC1155Errors)"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"1488:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3393,"nodeType":"RevertStatement","src":"1481:48:11"}]}}]},"errorName":"","id":3397,"nodeType":"TryCatchClause","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"response","nameLocation":"1331:8:11","nodeType":"VariableDeclaration","scope":3397,"src":"1324:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3380,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:11"},"src":"1315:247:11"},{"block":{"id":3415,"nodeType":"Block","src":"1591:360:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3401,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"1613:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:11","memberName":"length","nodeType":"MemberAccess","src":"1613:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3413,"nodeType":"Block","src":"1784:153:11","statements":[{"AST":{"nativeSrc":"1831:88:11","nodeType":"YulBlock","src":"1831:88:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1868:6:11","nodeType":"YulIdentifier","src":"1868:6:11"},{"kind":"number","nativeSrc":"1876:4:11","nodeType":"YulLiteral","src":"1876:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1864:3:11","nodeType":"YulIdentifier","src":"1864:3:11"},"nativeSrc":"1864:17:11","nodeType":"YulFunctionCall","src":"1864:17:11"},{"arguments":[{"name":"reason","nativeSrc":"1889:6:11","nodeType":"YulIdentifier","src":"1889:6:11"}],"functionName":{"name":"mload","nativeSrc":"1883:5:11","nodeType":"YulIdentifier","src":"1883:5:11"},"nativeSrc":"1883:13:11","nodeType":"YulFunctionCall","src":"1883:13:11"}],"functionName":{"name":"revert","nativeSrc":"1857:6:11","nodeType":"YulIdentifier","src":"1857:6:11"},"nativeSrc":"1857:40:11","nodeType":"YulFunctionCall","src":"1857:40:11"},"nativeSrc":"1857:40:11","nodeType":"YulExpressionStatement","src":"1857:40:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3399,"isOffset":false,"isSlot":false,"src":"1868:6:11","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"1889:6:11","valueSize":1}],"flags":["memory-safe"],"id":3412,"nodeType":"InlineAssembly","src":"1806:113:11"}]},"id":3414,"nodeType":"IfStatement","src":"1609:328:11","trueBody":{"id":3411,"nodeType":"Block","src":"1633:145:11","statements":[{"errorCall":{"arguments":[{"id":3408,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"1756:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3405,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"1718:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2762_$","typeString":"type(contract IERC1155Errors)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"1718:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"RevertStatement","src":"1711:48:11"}]}}]},"errorName":"","id":3416,"nodeType":"TryCatchClause","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"reason","nameLocation":"1583:6:11","nodeType":"VariableDeclaration","scope":3416,"src":"1570:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3398,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:11"},"src":"1563:388:11"}],"externalCall":{"arguments":[{"id":3374,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"1282:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"1292:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3376,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"1298:2:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"1302:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3378,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"1309:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3371,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"1260:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3370,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"1243:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3326_$","typeString":"type(contract IERC1155Receiver)"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$3326","typeString":"contract IERC1155Receiver"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:11","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":3307,"src":"1243:38:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3417,"nodeType":"TryStatement","src":"1239:712:11"}]}}]},"documentation":{"id":3350,"nodeType":"StructuredDocumentation","src":"466:535:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":3421,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:11","nodeType":"FunctionDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"operator","nameLocation":"1055:8:11","nodeType":"VariableDeclaration","scope":3421,"src":"1047:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3354,"mutability":"mutable","name":"from","nameLocation":"1081:4:11","nodeType":"VariableDeclaration","scope":3421,"src":"1073:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3353,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"to","nameLocation":"1103:2:11","nodeType":"VariableDeclaration","scope":3421,"src":"1095:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3355,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"id","nameLocation":"1123:2:11","nodeType":"VariableDeclaration","scope":3421,"src":"1115:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"value","nameLocation":"1143:5:11","nodeType":"VariableDeclaration","scope":3421,"src":"1135:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3362,"mutability":"mutable","name":"data","nameLocation":"1171:4:11","nodeType":"VariableDeclaration","scope":3421,"src":"1158:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3361,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:11"},"returnParameters":{"id":3364,"nodeType":"ParameterList","parameters":[],"src":"1191:0:11"},"scope":3496,"src":"1006:961:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3494,"nodeType":"Block","src":"2733:818:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3439,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"2747:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:11","memberName":"code","nodeType":"MemberAccess","src":"2747:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:11","memberName":"length","nodeType":"MemberAccess","src":"2747:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3493,"nodeType":"IfStatement","src":"2743:802:11","trueBody":{"id":3492,"nodeType":"Block","src":"2767:778:11","statements":[{"clauses":[{"block":{"id":3470,"nodeType":"Block","src":"2920:226:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"2942:8:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3458,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"2954:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3326_$","typeString":"type(contract IERC1155Receiver)"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:11","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"2954:39:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:11","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3469,"nodeType":"IfStatement","src":"2938:194:11","trueBody":{"id":3468,"nodeType":"Block","src":"3004:128:11","statements":[{"errorCall":{"arguments":[{"id":3465,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"3110:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3462,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"3072:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2762_$","typeString":"type(contract IERC1155Errors)"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"3072:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3467,"nodeType":"RevertStatement","src":"3065:48:11"}]}}]},"errorName":"","id":3471,"nodeType":"TryCatchClause","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"response","nameLocation":"2897:8:11","nodeType":"VariableDeclaration","scope":3471,"src":"2890:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3454,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:11"},"src":"2864:282:11"},{"block":{"id":3489,"nodeType":"Block","src":"3175:360:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3475,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3197:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:11","memberName":"length","nodeType":"MemberAccess","src":"3197:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3487,"nodeType":"Block","src":"3368:153:11","statements":[{"AST":{"nativeSrc":"3415:88:11","nodeType":"YulBlock","src":"3415:88:11","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"3452:6:11","nodeType":"YulIdentifier","src":"3452:6:11"},{"kind":"number","nativeSrc":"3460:4:11","nodeType":"YulLiteral","src":"3460:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:11","nodeType":"YulIdentifier","src":"3448:3:11"},"nativeSrc":"3448:17:11","nodeType":"YulFunctionCall","src":"3448:17:11"},{"arguments":[{"name":"reason","nativeSrc":"3473:6:11","nodeType":"YulIdentifier","src":"3473:6:11"}],"functionName":{"name":"mload","nativeSrc":"3467:5:11","nodeType":"YulIdentifier","src":"3467:5:11"},"nativeSrc":"3467:13:11","nodeType":"YulFunctionCall","src":"3467:13:11"}],"functionName":{"name":"revert","nativeSrc":"3441:6:11","nodeType":"YulIdentifier","src":"3441:6:11"},"nativeSrc":"3441:40:11","nodeType":"YulFunctionCall","src":"3441:40:11"},"nativeSrc":"3441:40:11","nodeType":"YulExpressionStatement","src":"3441:40:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":3473,"isOffset":false,"isSlot":false,"src":"3452:6:11","valueSize":1},{"declaration":3473,"isOffset":false,"isSlot":false,"src":"3473:6:11","valueSize":1}],"flags":["memory-safe"],"id":3486,"nodeType":"InlineAssembly","src":"3390:113:11"}]},"id":3488,"nodeType":"IfStatement","src":"3193:328:11","trueBody":{"id":3485,"nodeType":"Block","src":"3217:145:11","statements":[{"errorCall":{"arguments":[{"id":3482,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"3340:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3479,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"3302:14:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$2762_$","typeString":"type(contract IERC1155Errors)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:11","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2737,"src":"3302:37:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3484,"nodeType":"RevertStatement","src":"3295:48:11"}]}}]},"errorName":"","id":3490,"nodeType":"TryCatchClause","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"reason","nameLocation":"3167:6:11","nodeType":"VariableDeclaration","scope":3490,"src":"3154:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3472,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:11"},"src":"3147:388:11"}],"externalCall":{"arguments":[{"id":3448,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"2829:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3449,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"2839:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3450,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"2845:3:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3451,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"2850:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3452,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"2858:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3445,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"2802:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3444,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"2785:16:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$3326_$","typeString":"type(contract IERC1155Receiver)"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$3326","typeString":"contract IERC1155Receiver"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:11","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":3325,"src":"2785:43:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3491,"nodeType":"TryStatement","src":"2781:754:11"}]}}]},"documentation":{"id":3422,"nodeType":"StructuredDocumentation","src":"1973:545:11","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:11","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3424,"mutability":"mutable","name":"operator","nameLocation":"2577:8:11","nodeType":"VariableDeclaration","scope":3495,"src":"2569:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"from","nameLocation":"2603:4:11","nodeType":"VariableDeclaration","scope":3495,"src":"2595:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3425,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"to","nameLocation":"2625:2:11","nodeType":"VariableDeclaration","scope":3495,"src":"2617:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3427,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3431,"mutability":"mutable","name":"ids","nameLocation":"2654:3:11","nodeType":"VariableDeclaration","scope":3495,"src":"2637:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ArrayTypeName","src":"2637:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"values","nameLocation":"2684:6:11","nodeType":"VariableDeclaration","scope":3495,"src":"2667:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3433,"nodeType":"ArrayTypeName","src":"2667:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"data","nameLocation":"2713:4:11","nodeType":"VariableDeclaration","scope":3495,"src":"2700:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3435,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:11"},"returnParameters":{"id":3438,"nodeType":"ParameterList","parameters":[],"src":"2733:0:11"},"scope":3496,"src":"2523:1028:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3497,"src":"439:3114:11","usedErrors":[],"usedEvents":[]}],"src":"120:3434:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[6587],"IERC721":[3613]},"id":3614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3498,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3500,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3614,"sourceUnit":6588,"src":"134:62:12","symbolAliases":[{"foreign":{"id":3499,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"142:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3502,"name":"IERC165","nameLocations":["288:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":6587,"src":"288:7:12"},"id":3503,"nodeType":"InheritanceSpecifier","src":"288:7:12"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"198:68:12","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":3613,"linearizedBaseContracts":[3613,6587],"name":"IERC721","nameLocation":"277:7:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"302:88:12","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3512,"name":"Transfer","nameLocation":"401:8:12","nodeType":"EventDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:12","nodeType":"VariableDeclaration","scope":3512,"src":"410:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3505,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3508,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:12","nodeType":"VariableDeclaration","scope":3512,"src":"432:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3507,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3510,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:12","nodeType":"VariableDeclaration","scope":3512,"src":"452:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:12"},"src":"395:82:12"},{"anonymous":false,"documentation":{"id":3513,"nodeType":"StructuredDocumentation","src":"483:94:12","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3521,"name":"Approval","nameLocation":"588:8:12","nodeType":"EventDefinition","parameters":{"id":3520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:12","nodeType":"VariableDeclaration","scope":3521,"src":"597:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3514,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3517,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:12","nodeType":"VariableDeclaration","scope":3521,"src":"620:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3516,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3519,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:12","nodeType":"VariableDeclaration","scope":3521,"src":"646:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3518,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:12"},"src":"582:89:12"},{"anonymous":false,"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"677:117:12","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3530,"name":"ApprovalForAll","nameLocation":"805:14:12","nodeType":"EventDefinition","parameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:12","nodeType":"VariableDeclaration","scope":3530,"src":"820:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3526,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:12","nodeType":"VariableDeclaration","scope":3530,"src":"843:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3525,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3528,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:12","nodeType":"VariableDeclaration","scope":3530,"src":"869:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3527,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:12"},"src":"799:85:12"},{"documentation":{"id":3531,"nodeType":"StructuredDocumentation","src":"890:76:12","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3538,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:12","nodeType":"FunctionDefinition","parameters":{"id":3534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3533,"mutability":"mutable","name":"owner","nameLocation":"998:5:12","nodeType":"VariableDeclaration","scope":3538,"src":"990:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3532,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:12"},"returnParameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"balance","nameLocation":"1036:7:12","nodeType":"VariableDeclaration","scope":3538,"src":"1028:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:12"},"scope":3613,"src":"971:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3539,"nodeType":"StructuredDocumentation","src":"1051:131:12","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3546,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:12","nodeType":"FunctionDefinition","parameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:12","nodeType":"VariableDeclaration","scope":3546,"src":"1204:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:12"},"returnParameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"owner","nameLocation":"1252:5:12","nodeType":"VariableDeclaration","scope":3546,"src":"1244:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:12"},"scope":3613,"src":"1187:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"1265:565:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3558,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:12","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"from","nameLocation":"1869:4:12","nodeType":"VariableDeclaration","scope":3558,"src":"1861:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"to","nameLocation":"1883:2:12","nodeType":"VariableDeclaration","scope":3558,"src":"1875:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3553,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:12","nodeType":"VariableDeclaration","scope":3558,"src":"1887:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"data","nameLocation":"1919:4:12","nodeType":"VariableDeclaration","scope":3558,"src":"1904:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3554,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:12"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[],"src":"1933:0:12"},"scope":3613,"src":"1835:99:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3559,"nodeType":"StructuredDocumentation","src":"1940:706:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3568,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:12","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3561,"mutability":"mutable","name":"from","nameLocation":"2685:4:12","nodeType":"VariableDeclaration","scope":3568,"src":"2677:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"to","nameLocation":"2699:2:12","nodeType":"VariableDeclaration","scope":3568,"src":"2691:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:12","nodeType":"VariableDeclaration","scope":3568,"src":"2703:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:12"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[],"src":"2728:0:12"},"scope":3613,"src":"2651:78:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"2735:733:12","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3578,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:12","nodeType":"FunctionDefinition","parameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"from","nameLocation":"3503:4:12","nodeType":"VariableDeclaration","scope":3578,"src":"3495:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3570,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"to","nameLocation":"3517:2:12","nodeType":"VariableDeclaration","scope":3578,"src":"3509:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3575,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:12","nodeType":"VariableDeclaration","scope":3578,"src":"3521:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:12"},"returnParameters":{"id":3577,"nodeType":"ParameterList","parameters":[],"src":"3546:0:12"},"scope":3613,"src":"3473:74:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3579,"nodeType":"StructuredDocumentation","src":"3553:452:12","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3586,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:12","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"to","nameLocation":"4035:2:12","nodeType":"VariableDeclaration","scope":3586,"src":"4027:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3580,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:12","nodeType":"VariableDeclaration","scope":3586,"src":"4039:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:12"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[],"src":"4064:0:12"},"scope":3613,"src":"4010:55:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3587,"nodeType":"StructuredDocumentation","src":"4071:315:12","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3594,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:12","nodeType":"FunctionDefinition","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3589,"mutability":"mutable","name":"operator","nameLocation":"4426:8:12","nodeType":"VariableDeclaration","scope":3594,"src":"4418:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3588,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"approved","nameLocation":"4441:8:12","nodeType":"VariableDeclaration","scope":3594,"src":"4436:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3590,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:12"},"returnParameters":{"id":3593,"nodeType":"ParameterList","parameters":[],"src":"4459:0:12"},"scope":3613,"src":"4391:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3595,"nodeType":"StructuredDocumentation","src":"4466:139:12","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3602,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:12","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:12","nodeType":"VariableDeclaration","scope":3602,"src":"4631:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3596,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:12"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"operator","nameLocation":"4679:8:12","nodeType":"VariableDeclaration","scope":3602,"src":"4671:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3599,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:12"},"scope":3613,"src":"4610:79:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3603,"nodeType":"StructuredDocumentation","src":"4695:138:12","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3612,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:12","nodeType":"FunctionDefinition","parameters":{"id":3608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3605,"mutability":"mutable","name":"owner","nameLocation":"4872:5:12","nodeType":"VariableDeclaration","scope":3612,"src":"4864:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3604,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3607,"mutability":"mutable","name":"operator","nameLocation":"4887:8:12","nodeType":"VariableDeclaration","scope":3612,"src":"4879:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3606,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:12"},"returnParameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3612,"src":"4920:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3609,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:12"},"scope":3613,"src":"4838:88:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3614,"src":"267:4661:12","usedErrors":[],"usedEvents":[3512,3521,3530]}],"src":"108:4821:12"},"id":12},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3631]},"id":3632,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3615,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3616,"nodeType":"StructuredDocumentation","src":"142:154:13","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":3631,"linearizedBaseContracts":[3631],"name":"IERC721Receiver","nameLocation":"307:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3617,"nodeType":"StructuredDocumentation","src":"329:500:13","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3630,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:13","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"operator","nameLocation":"877:8:13","nodeType":"VariableDeclaration","scope":3630,"src":"869:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3618,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3621,"mutability":"mutable","name":"from","nameLocation":"903:4:13","nodeType":"VariableDeclaration","scope":3630,"src":"895:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3620,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3623,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:13","nodeType":"VariableDeclaration","scope":3630,"src":"917:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3622,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"data","nameLocation":"957:4:13","nodeType":"VariableDeclaration","scope":3630,"src":"942:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3624,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:13"},"returnParameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3630,"src":"986:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3627,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:13"},"scope":3631,"src":"834:160:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3632,"src":"297:699:13","usedErrors":[],"usedEvents":[]}],"src":"116:881:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[3613],"IERC721Metadata":[3659]},"id":3660,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3633,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3660,"sourceUnit":3614,"src":"153:39:14","symbolAliases":[{"foreign":{"id":3634,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"161:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3637,"name":"IERC721","nameLocations":["357:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":3613,"src":"357:7:14"},"id":3638,"nodeType":"InheritanceSpecifier","src":"357:7:14"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3636,"nodeType":"StructuredDocumentation","src":"194:133:14","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3659,"linearizedBaseContracts":[3659,3613,6587],"name":"IERC721Metadata","nameLocation":"338:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3639,"nodeType":"StructuredDocumentation","src":"371:58:14","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3644,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:14","nodeType":"FunctionDefinition","parameters":{"id":3640,"nodeType":"ParameterList","parameters":[],"src":"447:2:14"},"returnParameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3644,"src":"473:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3641,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:14"},"scope":3659,"src":"434:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3645,"nodeType":"StructuredDocumentation","src":"494:60:14","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3650,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:14","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[],"src":"574:2:14"},"returnParameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3650,"src":"600:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3647,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:14"},"scope":3659,"src":"559:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3651,"nodeType":"StructuredDocumentation","src":"621:90:14","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3658,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:14","nodeType":"FunctionDefinition","parameters":{"id":3654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3653,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:14","nodeType":"VariableDeclaration","scope":3658,"src":"734:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3652,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:14"},"returnParameters":{"id":3657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3658,"src":"774:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3655,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:14"},"scope":3659,"src":"716:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3660,"src":"328:463:14","usedErrors":[],"usedEvents":[3512,3521,3530]}],"src":"127:665:14"},"id":14},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[3736],"IERC721Errors":[2715],"IERC721Receiver":[3631]},"id":3737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3661,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":3663,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3737,"sourceUnit":3632,"src":"144:55:15","symbolAliases":[{"foreign":{"id":3662,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"152:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3665,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3737,"sourceUnit":2763,"src":"200:69:15","symbolAliases":[{"foreign":{"id":3664,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"208:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"271:159:15","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":3736,"linearizedBaseContracts":[3736],"name":"ERC721Utils","nameLocation":"439:11:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":3734,"nodeType":"Block","src":"1159:760:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1173:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:15","memberName":"code","nodeType":"MemberAccess","src":"1173:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:15","memberName":"length","nodeType":"MemberAccess","src":"1173:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3733,"nodeType":"IfStatement","src":"1169:744:15","trueBody":{"id":3732,"nodeType":"Block","src":"1193:720:15","statements":[{"clauses":[{"block":{"id":3710,"nodeType":"Block","src":"1303:214:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3697,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"1325:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3698,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"1335:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3631_$","typeString":"type(contract IERC721Receiver)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:15","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3630,"src":"1335:32:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3709,"nodeType":"IfStatement","src":"1321:182:15","trueBody":{"id":3708,"nodeType":"Block","src":"1378:125:15","statements":[{"errorCall":{"arguments":[{"id":3705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1481:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3702,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1445:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$2715_$","typeString":"type(contract IERC721Errors)"}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:15","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"1445:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3707,"nodeType":"RevertStatement","src":"1438:46:15"}]}}]},"errorName":"","id":3711,"nodeType":"TryCatchClause","parameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"retval","nameLocation":"1295:6:15","nodeType":"VariableDeclaration","scope":3711,"src":"1288:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3694,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:15"},"src":"1279:238:15"},{"block":{"id":3729,"nodeType":"Block","src":"1546:357:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3715,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"1568:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:15","memberName":"length","nodeType":"MemberAccess","src":"1568:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3727,"nodeType":"Block","src":"1736:153:15","statements":[{"AST":{"nativeSrc":"1783:88:15","nodeType":"YulBlock","src":"1783:88:15","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:15","nodeType":"YulIdentifier","src":"1820:6:15"},{"kind":"number","nativeSrc":"1828:4:15","nodeType":"YulLiteral","src":"1828:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:15","nodeType":"YulIdentifier","src":"1816:3:15"},"nativeSrc":"1816:17:15","nodeType":"YulFunctionCall","src":"1816:17:15"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:15","nodeType":"YulIdentifier","src":"1841:6:15"}],"functionName":{"name":"mload","nativeSrc":"1835:5:15","nodeType":"YulIdentifier","src":"1835:5:15"},"nativeSrc":"1835:13:15","nodeType":"YulFunctionCall","src":"1835:13:15"}],"functionName":{"name":"revert","nativeSrc":"1809:6:15","nodeType":"YulIdentifier","src":"1809:6:15"},"nativeSrc":"1809:40:15","nodeType":"YulFunctionCall","src":"1809:40:15"},"nativeSrc":"1809:40:15","nodeType":"YulExpressionStatement","src":"1809:40:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3713,"isOffset":false,"isSlot":false,"src":"1820:6:15","valueSize":1},{"declaration":3713,"isOffset":false,"isSlot":false,"src":"1841:6:15","valueSize":1}],"flags":["memory-safe"],"id":3726,"nodeType":"InlineAssembly","src":"1758:113:15"}]},"id":3728,"nodeType":"IfStatement","src":"1564:325:15","trueBody":{"id":3725,"nodeType":"Block","src":"1588:142:15","statements":[{"errorCall":{"arguments":[{"id":3722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1708:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3719,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"1672:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$2715_$","typeString":"type(contract IERC721Errors)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:15","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":2697,"src":"1672:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3724,"nodeType":"RevertStatement","src":"1665:46:15"}]}}]},"errorName":"","id":3730,"nodeType":"TryCatchClause","parameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"reason","nameLocation":"1538:6:15","nodeType":"VariableDeclaration","scope":3730,"src":"1525:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3712,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:15"},"src":"1518:385:15"}],"externalCall":{"arguments":[{"id":3689,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"1248:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"1258:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3691,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1264:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3692,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"1273:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3686,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"1227:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3685,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"1211:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3631_$","typeString":"type(contract IERC721Receiver)"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3631","typeString":"contract IERC721Receiver"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:15","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3630,"src":"1211:36:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:15","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3731,"nodeType":"TryStatement","src":"1207:696:15"}]}}]},"documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"457:531:15","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":3735,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:15","nodeType":"FunctionDefinition","parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"operator","nameLocation":"1041:8:15","nodeType":"VariableDeclaration","scope":3735,"src":"1033:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3668,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"from","nameLocation":"1067:4:15","nodeType":"VariableDeclaration","scope":3735,"src":"1059:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3670,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3673,"mutability":"mutable","name":"to","nameLocation":"1089:2:15","nodeType":"VariableDeclaration","scope":3735,"src":"1081:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3672,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:15","nodeType":"VariableDeclaration","scope":3735,"src":"1101:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"data","nameLocation":"1139:4:15","nodeType":"VariableDeclaration","scope":3735,"src":"1126:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3676,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:15"},"returnParameters":{"id":3679,"nodeType":"ParameterList","parameters":[],"src":"1159:0:15"},"scope":3736,"src":"993:926:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3737,"src":"431:1490:15","usedErrors":[],"usedEvents":[]}],"src":"118:1804:15"},"id":15},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4714],"Comparators":[4746],"Math":[8208],"SlotDerivation":[5049],"StorageSlot":[5173]},"id":4715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3738,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4715,"sourceUnit":4747,"src":"209:46:16","symbolAliases":[{"foreign":{"id":3739,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"217:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4715,"sourceUnit":5050,"src":"256:52:16","symbolAliases":[{"foreign":{"id":3741,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"264:14:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3744,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4715,"sourceUnit":5174,"src":"309:46:16","symbolAliases":[{"foreign":{"id":3743,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"317:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3746,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4715,"sourceUnit":8209,"src":"356:37:16","symbolAliases":[{"foreign":{"id":3745,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"364:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3747,"nodeType":"StructuredDocumentation","src":"395:63:16","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4714,"linearizedBaseContracts":[4714],"name":"Arrays","nameLocation":"467:6:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3750,"libraryName":{"id":3748,"name":"SlotDerivation","nameLocations":["486:14:16"],"nodeType":"IdentifierPath","referencedDeclaration":5049,"src":"486:14:16"},"nodeType":"UsingForDirective","src":"480:33:16","typeName":{"id":3749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3753,"libraryName":{"id":3751,"name":"StorageSlot","nameLocations":["524:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":5173,"src":"524:11:16"},"nodeType":"UsingForDirective","src":"518:30:16","typeName":{"id":3752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3785,"nodeType":"Block","src":"1628:83:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3775,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"1656:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3774,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"1649:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3778,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"1669:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3777,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"1664:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3780,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"1677:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3773,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"1638:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"ExpressionStatement","src":"1638:44:16"},{"expression":{"id":3783,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"1699:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3772,"id":3784,"nodeType":"Return","src":"1692:12:16"}]},"documentation":{"id":3754,"nodeType":"StructuredDocumentation","src":"554:915:16","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3786,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:16","nodeType":"FunctionDefinition","parameters":{"id":3768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3757,"mutability":"mutable","name":"array","nameLocation":"1514:5:16","nodeType":"VariableDeclaration","scope":3786,"src":"1497:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3756,"nodeType":"ArrayTypeName","src":"1497:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"comp","nameLocation":"1576:4:16","nodeType":"VariableDeclaration","scope":3786,"src":"1529:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3766,"nodeType":"FunctionTypeName","parameterTypes":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3766,"src":"1538:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3766,"src":"1547:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:16"},"returnParameterTypes":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3766,"src":"1570:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3763,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:16"},"src":"1529:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:16"},"returnParameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3786,"src":"1610:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3770,"nodeType":"ArrayTypeName","src":"1610:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:16"},"scope":4714,"src":"1474:237:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3804,"nodeType":"Block","src":"1894:66:16","statements":[{"expression":{"arguments":[{"id":3797,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"1909:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3798,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"1916:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4746_$","typeString":"type(library Comparators)"}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"1916:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3796,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3786,3805,3837,3858,3890,3911],"referencedDeclaration":3786,"src":"1904:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3801,"nodeType":"ExpressionStatement","src":"1904:27:16"},{"expression":{"id":3802,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"1948:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3795,"id":3803,"nodeType":"Return","src":"1941:12:16"}]},"documentation":{"id":3787,"nodeType":"StructuredDocumentation","src":"1717:93:16","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3805,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:16","nodeType":"FunctionDefinition","parameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"array","nameLocation":"1846:5:16","nodeType":"VariableDeclaration","scope":3805,"src":"1829:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ArrayTypeName","src":"1829:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:16"},"returnParameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3805,"src":"1876:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ArrayTypeName","src":"1876:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:16"},"scope":4714,"src":"1815:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3836,"nodeType":"Block","src":"3040:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3827,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"3075:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3826,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4062,4074],"referencedDeclaration":4062,"src":"3055:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3830,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"3102:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3829,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[4100,4126],"referencedDeclaration":4100,"src":"3083:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3825,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3786,3805,3837,3858,3890,3911],"referencedDeclaration":3786,"src":"3050:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3833,"nodeType":"ExpressionStatement","src":"3050:58:16"},{"expression":{"id":3834,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"3125:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3824,"id":3835,"nodeType":"Return","src":"3118:12:16"}]},"documentation":{"id":3806,"nodeType":"StructuredDocumentation","src":"1966:915:16","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3837,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:16","nodeType":"FunctionDefinition","parameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"array","nameLocation":"2926:5:16","nodeType":"VariableDeclaration","scope":3837,"src":"2909:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3808,"nodeType":"ArrayTypeName","src":"2909:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"comp","nameLocation":"2988:4:16","nodeType":"VariableDeclaration","scope":3837,"src":"2941:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3818,"nodeType":"FunctionTypeName","parameterTypes":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"2950:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3810,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"2959:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3812,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:16"},"returnParameterTypes":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"2982:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3815,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:16"},"src":"2941:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:16"},"returnParameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3837,"src":"3022:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3821,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3822,"nodeType":"ArrayTypeName","src":"3022:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:16"},"scope":4714,"src":"2886:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3857,"nodeType":"Block","src":"3320:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3849,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"3355:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3848,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4062,4074],"referencedDeclaration":4062,"src":"3335:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3851,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"3363:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4746_$","typeString":"type(library Comparators)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"3363:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3847,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3786,3805,3837,3858,3890,3911],"referencedDeclaration":3786,"src":"3330:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3854,"nodeType":"ExpressionStatement","src":"3330:48:16"},{"expression":{"id":3855,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"3395:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3846,"id":3856,"nodeType":"Return","src":"3388:12:16"}]},"documentation":{"id":3838,"nodeType":"StructuredDocumentation","src":"3143:93:16","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3858,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:16","nodeType":"FunctionDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"array","nameLocation":"3272:5:16","nodeType":"VariableDeclaration","scope":3858,"src":"3255:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3840,"nodeType":"ArrayTypeName","src":"3255:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:16"},"returnParameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3858,"src":"3302:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3843,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3844,"nodeType":"ArrayTypeName","src":"3302:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:16"},"scope":4714,"src":"3241:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3889,"nodeType":"Block","src":"4487:97:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3880,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"4522:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3879,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4062,4074],"referencedDeclaration":4074,"src":"4502:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3883,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"4549:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3882,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[4100,4126],"referencedDeclaration":4126,"src":"4530:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3878,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3786,3805,3837,3858,3890,3911],"referencedDeclaration":3786,"src":"4497:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3886,"nodeType":"ExpressionStatement","src":"4497:58:16"},{"expression":{"id":3887,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3862,"src":"4572:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3877,"id":3888,"nodeType":"Return","src":"4565:12:16"}]},"documentation":{"id":3859,"nodeType":"StructuredDocumentation","src":"3413:915:16","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:16","nodeType":"FunctionDefinition","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3862,"mutability":"mutable","name":"array","nameLocation":"4373:5:16","nodeType":"VariableDeclaration","scope":3890,"src":"4356:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3861,"nodeType":"ArrayTypeName","src":"4356:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3872,"mutability":"mutable","name":"comp","nameLocation":"4435:4:16","nodeType":"VariableDeclaration","scope":3890,"src":"4388:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3871,"nodeType":"FunctionTypeName","parameterTypes":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"4397:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"4406:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:16"},"returnParameterTypes":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3871,"src":"4429:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3868,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:16"},"src":"4388:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:16"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3890,"src":"4469:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3874,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3875,"nodeType":"ArrayTypeName","src":"4469:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:16"},"scope":4714,"src":"4333:251:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3910,"nodeType":"Block","src":"4767:87:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3902,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"4802:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3901,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[4062,4074],"referencedDeclaration":4074,"src":"4782:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3904,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4746,"src":"4810:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4746_$","typeString":"type(library Comparators)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:16","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4731,"src":"4810:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3900,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3786,3805,3837,3858,3890,3911],"referencedDeclaration":3786,"src":"4777:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3907,"nodeType":"ExpressionStatement","src":"4777:48:16"},{"expression":{"id":3908,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"4842:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3899,"id":3909,"nodeType":"Return","src":"4835:12:16"}]},"documentation":{"id":3891,"nodeType":"StructuredDocumentation","src":"4590:93:16","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3911,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:16","nodeType":"FunctionDefinition","parameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"array","nameLocation":"4719:5:16","nodeType":"VariableDeclaration","scope":3911,"src":"4702:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3893,"nodeType":"ArrayTypeName","src":"4702:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:16"},"returnParameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3911,"src":"4749:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3897,"nodeType":"ArrayTypeName","src":"4749:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:16"},"scope":4714,"src":"4688:166:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3998,"nodeType":"Block","src":"5470:889:16","statements":[{"id":3997,"nodeType":"UncheckedBlock","src":"5480:873:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3929,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5508:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3930,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"5514:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3935,"nodeType":"IfStatement","src":"5504:31:16","trueBody":{"functionReturnParameters":3928,"id":3934,"nodeType":"Return","src":"5528:7:16"}},{"assignments":[3937],"declarations":[{"constant":false,"id":3937,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:16","nodeType":"VariableDeclaration","scope":3997,"src":"5591:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3936,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3941,"initialValue":{"arguments":[{"id":3939,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"5614:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3938,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"5607:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:16"},{"assignments":[3943],"declarations":[{"constant":false,"id":3943,"mutability":"mutable","name":"pos","nameLocation":"5715:3:16","nodeType":"VariableDeclaration","scope":3997,"src":"5707:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3945,"initialValue":{"id":3944,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"5721:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:16"},{"body":{"id":3976,"nodeType":"Block","src":"5795:331:16","statements":[{"condition":{"arguments":[{"arguments":[{"id":3961,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"5829:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3960,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"5822:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3963,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3937,"src":"5834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3959,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"5817:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3975,"nodeType":"IfStatement","src":"5813:299:16","trueBody":{"id":3974,"nodeType":"Block","src":"5842:270:16","statements":[{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3965,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6046:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ExpressionStatement","src":"6046:11:16"},{"expression":{"arguments":[{"id":3970,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6085:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3971,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"6090:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3969,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"6079:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3973,"nodeType":"ExpressionStatement","src":"6079:14:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3952,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"5773:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3953,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"5778:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3977,"initializationExpression":{"assignments":[3947],"declarations":[{"constant":false,"id":3947,"mutability":"mutable","name":"it","nameLocation":"5754:2:16","nodeType":"VariableDeclaration","scope":3977,"src":"5746:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3951,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"5759:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:16"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3955,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"5783:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3958,"nodeType":"ExpressionStatement","src":"5783:10:16"},"nodeType":"ForStatement","src":"5741:385:16"},{"expression":{"arguments":[{"id":3979,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"6146:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3980,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6153:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3978,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"6140:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3982,"nodeType":"ExpressionStatement","src":"6140:17:16"},{"expression":{"arguments":[{"id":3984,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"6207:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3985,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6214:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3986,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"6219:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3983,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6196:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3988,"nodeType":"ExpressionStatement","src":"6196:28:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"6284:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3993,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"6296:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3994,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"6301:4:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3989,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6273:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3996,"nodeType":"ExpressionStatement","src":"6273:33:16"}]}]},"documentation":{"id":3912,"nodeType":"StructuredDocumentation","src":"4860:491:16","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3999,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:16","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"begin","nameLocation":"5384:5:16","nodeType":"VariableDeclaration","scope":3999,"src":"5376:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3916,"mutability":"mutable","name":"end","nameLocation":"5399:3:16","nodeType":"VariableDeclaration","scope":3999,"src":"5391:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"comp","nameLocation":"5451:4:16","nodeType":"VariableDeclaration","scope":3999,"src":"5404:51:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3925,"nodeType":"FunctionTypeName","parameterTypes":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3925,"src":"5413:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3925,"src":"5422:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:16"},"returnParameterTypes":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3925,"src":"5445:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3922,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:16"},"src":"5404:51:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:16"},"returnParameters":{"id":3928,"nodeType":"ParameterList","parameters":[],"src":"5470:0:16"},"scope":4714,"src":"5356:1003:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4009,"nodeType":"Block","src":"6532:88:16","statements":[{"AST":{"nativeSrc":"6567:47:16","nodeType":"YulBlock","src":"6567:47:16","statements":[{"nativeSrc":"6581:23:16","nodeType":"YulAssignment","src":"6581:23:16","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:16","nodeType":"YulIdentifier","src":"6592:5:16"},{"kind":"number","nativeSrc":"6599:4:16","nodeType":"YulLiteral","src":"6599:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:16","nodeType":"YulIdentifier","src":"6588:3:16"},"nativeSrc":"6588:16:16","nodeType":"YulFunctionCall","src":"6588:16:16"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:16","nodeType":"YulIdentifier","src":"6581:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4003,"isOffset":false,"isSlot":false,"src":"6592:5:16","valueSize":1},{"declaration":4006,"isOffset":false,"isSlot":false,"src":"6581:3:16","valueSize":1}],"flags":["memory-safe"],"id":4008,"nodeType":"InlineAssembly","src":"6542:72:16"}]},"documentation":{"id":4000,"nodeType":"StructuredDocumentation","src":"6365:87:16","text":" @dev Pointer to the memory location of the first element of `array`."},"id":4010,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:16","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"array","nameLocation":"6490:5:16","nodeType":"VariableDeclaration","scope":4010,"src":"6473:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ArrayTypeName","src":"6473:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:16"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:16","nodeType":"VariableDeclaration","scope":4010,"src":"6519:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:16"},"scope":4714,"src":"6457:163:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4029,"nodeType":"Block","src":"6892:93:16","statements":[{"id":4028,"nodeType":"UncheckedBlock","src":"6902:77:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4020,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"6940:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":4019,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"6933:6:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4022,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"6949:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:16","memberName":"length","nodeType":"MemberAccess","src":"6949:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4018,"id":4027,"nodeType":"Return","src":"6926:42:16"}]}]},"documentation":{"id":4011,"nodeType":"StructuredDocumentation","src":"6626:188:16","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":4030,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:16","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"array","nameLocation":"6850:5:16","nodeType":"VariableDeclaration","scope":4030,"src":"6833:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4013,"nodeType":"ArrayTypeName","src":"6833:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:16"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:16","nodeType":"VariableDeclaration","scope":4030,"src":"6879:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:16"},"scope":4714,"src":"6819:166:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4039,"nodeType":"Block","src":"7136:68:16","statements":[{"AST":{"nativeSrc":"7155:43:16","nodeType":"YulBlock","src":"7155:43:16","statements":[{"nativeSrc":"7169:19:16","nodeType":"YulAssignment","src":"7169:19:16","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:16","nodeType":"YulIdentifier","src":"7184:3:16"}],"functionName":{"name":"mload","nativeSrc":"7178:5:16","nodeType":"YulIdentifier","src":"7178:5:16"},"nativeSrc":"7178:10:16","nodeType":"YulFunctionCall","src":"7178:10:16"},"variableNames":[{"name":"value","nativeSrc":"7169:5:16","nodeType":"YulIdentifier","src":"7169:5:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4033,"isOffset":false,"isSlot":false,"src":"7184:3:16","valueSize":1},{"declaration":4036,"isOffset":false,"isSlot":false,"src":"7169:5:16","valueSize":1}],"id":4038,"nodeType":"InlineAssembly","src":"7146:52:16"}]},"documentation":{"id":4031,"nodeType":"StructuredDocumentation","src":"6991:74:16","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:16","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:16","nodeType":"VariableDeclaration","scope":4040,"src":"7086:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:16"},"returnParameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"value","nameLocation":"7129:5:16","nodeType":"VariableDeclaration","scope":4040,"src":"7121:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4035,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:16"},"scope":4714,"src":"7070:134:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4049,"nodeType":"Block","src":"7348:178:16","statements":[{"AST":{"nativeSrc":"7367:153:16","nodeType":"YulBlock","src":"7367:153:16","statements":[{"nativeSrc":"7381:25:16","nodeType":"YulVariableDeclaration","src":"7381:25:16","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:16","nodeType":"YulIdentifier","src":"7401:4:16"}],"functionName":{"name":"mload","nativeSrc":"7395:5:16","nodeType":"YulIdentifier","src":"7395:5:16"},"nativeSrc":"7395:11:16","nodeType":"YulFunctionCall","src":"7395:11:16"},"variables":[{"name":"value1","nativeSrc":"7385:6:16","nodeType":"YulTypedName","src":"7385:6:16","type":""}]},{"nativeSrc":"7419:25:16","nodeType":"YulVariableDeclaration","src":"7419:25:16","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:16","nodeType":"YulIdentifier","src":"7439:4:16"}],"functionName":{"name":"mload","nativeSrc":"7433:5:16","nodeType":"YulIdentifier","src":"7433:5:16"},"nativeSrc":"7433:11:16","nodeType":"YulFunctionCall","src":"7433:11:16"},"variables":[{"name":"value2","nativeSrc":"7423:6:16","nodeType":"YulTypedName","src":"7423:6:16","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:16","nodeType":"YulIdentifier","src":"7464:4:16"},{"name":"value2","nativeSrc":"7470:6:16","nodeType":"YulIdentifier","src":"7470:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:16","nodeType":"YulIdentifier","src":"7457:6:16"},"nativeSrc":"7457:20:16","nodeType":"YulFunctionCall","src":"7457:20:16"},"nativeSrc":"7457:20:16","nodeType":"YulExpressionStatement","src":"7457:20:16"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:16","nodeType":"YulIdentifier","src":"7497:4:16"},{"name":"value1","nativeSrc":"7503:6:16","nodeType":"YulIdentifier","src":"7503:6:16"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:16","nodeType":"YulIdentifier","src":"7490:6:16"},"nativeSrc":"7490:20:16","nodeType":"YulFunctionCall","src":"7490:20:16"},"nativeSrc":"7490:20:16","nodeType":"YulExpressionStatement","src":"7490:20:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4043,"isOffset":false,"isSlot":false,"src":"7401:4:16","valueSize":1},{"declaration":4043,"isOffset":false,"isSlot":false,"src":"7464:4:16","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"7439:4:16","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"7497:4:16","valueSize":1}],"id":4048,"nodeType":"InlineAssembly","src":"7358:162:16"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"7210:77:16","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":4050,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:16","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:16","nodeType":"VariableDeclaration","scope":4050,"src":"7307:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:16","nodeType":"VariableDeclaration","scope":4050,"src":"7321:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:16"},"returnParameters":{"id":4047,"nodeType":"ParameterList","parameters":[],"src":"7348:0:16"},"scope":4714,"src":"7292:234:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4061,"nodeType":"Block","src":"7713:64:16","statements":[{"AST":{"nativeSrc":"7732:39:16","nodeType":"YulBlock","src":"7732:39:16","statements":[{"nativeSrc":"7746:15:16","nodeType":"YulAssignment","src":"7746:15:16","value":{"name":"input","nativeSrc":"7756:5:16","nodeType":"YulIdentifier","src":"7756:5:16"},"variableNames":[{"name":"output","nativeSrc":"7746:6:16","nodeType":"YulIdentifier","src":"7746:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4054,"isOffset":false,"isSlot":false,"src":"7756:5:16","valueSize":1},{"declaration":4058,"isOffset":false,"isSlot":false,"src":"7746:6:16","valueSize":1}],"id":4060,"nodeType":"InlineAssembly","src":"7723:48:16"}]},"documentation":{"id":4051,"nodeType":"StructuredDocumentation","src":"7532:76:16","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:16","nodeType":"FunctionDefinition","parameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"input","nameLocation":"7659:5:16","nodeType":"VariableDeclaration","scope":4062,"src":"7642:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4052,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4053,"nodeType":"ArrayTypeName","src":"7642:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:16"},"returnParameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"output","nameLocation":"7705:6:16","nodeType":"VariableDeclaration","scope":4062,"src":"7688:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4057,"nodeType":"ArrayTypeName","src":"7688:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:16"},"scope":4714,"src":"7613:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4073,"nodeType":"Block","src":"7964:64:16","statements":[{"AST":{"nativeSrc":"7983:39:16","nodeType":"YulBlock","src":"7983:39:16","statements":[{"nativeSrc":"7997:15:16","nodeType":"YulAssignment","src":"7997:15:16","value":{"name":"input","nativeSrc":"8007:5:16","nodeType":"YulIdentifier","src":"8007:5:16"},"variableNames":[{"name":"output","nativeSrc":"7997:6:16","nodeType":"YulIdentifier","src":"7997:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4066,"isOffset":false,"isSlot":false,"src":"8007:5:16","valueSize":1},{"declaration":4070,"isOffset":false,"isSlot":false,"src":"7997:6:16","valueSize":1}],"id":4072,"nodeType":"InlineAssembly","src":"7974:48:16"}]},"documentation":{"id":4063,"nodeType":"StructuredDocumentation","src":"7783:76:16","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":4074,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:16","nodeType":"FunctionDefinition","parameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"input","nameLocation":"7910:5:16","nodeType":"VariableDeclaration","scope":4074,"src":"7893:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4065,"nodeType":"ArrayTypeName","src":"7893:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:16"},"returnParameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"output","nameLocation":"7956:6:16","nodeType":"VariableDeclaration","scope":4074,"src":"7939:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4068,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4069,"nodeType":"ArrayTypeName","src":"7939:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:16"},"scope":4714,"src":"7864:164:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4099,"nodeType":"Block","src":"8290:64:16","statements":[{"AST":{"nativeSrc":"8309:39:16","nodeType":"YulBlock","src":"8309:39:16","statements":[{"nativeSrc":"8323:15:16","nodeType":"YulAssignment","src":"8323:15:16","value":{"name":"input","nativeSrc":"8333:5:16","nodeType":"YulIdentifier","src":"8333:5:16"},"variableNames":[{"name":"output","nativeSrc":"8323:6:16","nodeType":"YulIdentifier","src":"8323:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4085,"isOffset":false,"isSlot":false,"src":"8333:5:16","valueSize":1},{"declaration":4096,"isOffset":false,"isSlot":false,"src":"8323:6:16","valueSize":1}],"id":4098,"nodeType":"InlineAssembly","src":"8300:48:16"}]},"documentation":{"id":4075,"nodeType":"StructuredDocumentation","src":"8034:78:16","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:16","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"input","nameLocation":"8201:5:16","nodeType":"VariableDeclaration","scope":4100,"src":"8154:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":4084,"nodeType":"FunctionTypeName","parameterTypes":{"id":4080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4084,"src":"8163:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4076,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4084,"src":"8172:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4078,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:16"},"returnParameterTypes":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4084,"src":"8195:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4081,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:16"},"src":"8154:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:16"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"output","nameLocation":"8282:6:16","nodeType":"VariableDeclaration","scope":4100,"src":"8235:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":4095,"nodeType":"FunctionTypeName","parameterTypes":{"id":4091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4088,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4095,"src":"8244:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4087,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4095,"src":"8253:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:16"},"returnParameterTypes":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4095,"src":"8276:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4092,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:16"},"src":"8235:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:16"},"scope":4714,"src":"8117:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4125,"nodeType":"Block","src":"8616:64:16","statements":[{"AST":{"nativeSrc":"8635:39:16","nodeType":"YulBlock","src":"8635:39:16","statements":[{"nativeSrc":"8649:15:16","nodeType":"YulAssignment","src":"8649:15:16","value":{"name":"input","nativeSrc":"8659:5:16","nodeType":"YulIdentifier","src":"8659:5:16"},"variableNames":[{"name":"output","nativeSrc":"8649:6:16","nodeType":"YulIdentifier","src":"8649:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4111,"isOffset":false,"isSlot":false,"src":"8659:5:16","valueSize":1},{"declaration":4122,"isOffset":false,"isSlot":false,"src":"8649:6:16","valueSize":1}],"id":4124,"nodeType":"InlineAssembly","src":"8626:48:16"}]},"documentation":{"id":4101,"nodeType":"StructuredDocumentation","src":"8360:78:16","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":4126,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:16","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"input","nameLocation":"8527:5:16","nodeType":"VariableDeclaration","scope":4126,"src":"8480:52:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":4110,"nodeType":"FunctionTypeName","parameterTypes":{"id":4106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"8489:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"8498:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:16"},"returnParameterTypes":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"8521:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4107,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:16"},"src":"8480:52:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:16"},"returnParameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"output","nameLocation":"8608:6:16","nodeType":"VariableDeclaration","scope":4126,"src":"8561:53:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":4121,"nodeType":"FunctionTypeName","parameterTypes":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4121,"src":"8570:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4121,"src":"8579:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:16"},"returnParameterTypes":{"id":4120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4121,"src":"8602:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4118,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:16"},"src":"8561:53:16","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:16"},"scope":4714,"src":"8443:237:16","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4208,"nodeType":"Block","src":"9405:834:16","statements":[{"assignments":[4138],"declarations":[{"constant":false,"id":4138,"mutability":"mutable","name":"low","nameLocation":"9423:3:16","nodeType":"VariableDeclaration","scope":4208,"src":"9415:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4140,"initialValue":{"hexValue":"30","id":4139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:16"},{"assignments":[4142],"declarations":[{"constant":false,"id":4142,"mutability":"mutable","name":"high","nameLocation":"9448:4:16","nodeType":"VariableDeclaration","scope":4208,"src":"9440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4145,"initialValue":{"expression":{"id":4143,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"9455:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:16","memberName":"length","nodeType":"MemberAccess","src":"9455:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9482:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4152,"nodeType":"IfStatement","src":"9478:48:16","trueBody":{"id":4151,"nodeType":"Block","src":"9493:33:16","statements":[{"expression":{"hexValue":"30","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4136,"id":4150,"nodeType":"Return","src":"9507:8:16"}]}},{"body":{"id":4184,"nodeType":"Block","src":"9555:423:16","statements":[{"assignments":[4157],"declarations":[{"constant":false,"id":4157,"mutability":"mutable","name":"mid","nameLocation":"9577:3:16","nodeType":"VariableDeclaration","scope":4184,"src":"9569:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4163,"initialValue":{"arguments":[{"id":4160,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"9596:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4161,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9601:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4158,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"9583:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"9583:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4165,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"9844:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":4166,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"9851:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4164,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4489,4515,4541,4567,4593],"referencedDeclaration":4541,"src":"9831:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5064_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"9831:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4169,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"9864:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4182,"nodeType":"Block","src":"9922:46:16","statements":[{"expression":{"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"9940:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"9946:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4181,"nodeType":"ExpressionStatement","src":"9940:13:16"}]},"id":4183,"nodeType":"IfStatement","src":"9827:141:16","trueBody":{"id":4175,"nodeType":"Block","src":"9873:43:16","statements":[{"expression":{"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4171,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9891:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4172,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"9898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4174,"nodeType":"ExpressionStatement","src":"9891:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"9543:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4154,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"9549:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4185,"nodeType":"WhileStatement","src":"9536:442:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"10095:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4190,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"10119:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4191,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"10126:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4189,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4489,4515,4541,4567,4593],"referencedDeclaration":4541,"src":"10106:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5064_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"10106:34:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4196,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4132,"src":"10144:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4206,"nodeType":"Block","src":"10198:35:16","statements":[{"expression":{"id":4204,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"10219:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4136,"id":4205,"nodeType":"Return","src":"10212:10:16"}]},"id":4207,"nodeType":"IfStatement","src":"10091:142:16","trueBody":{"id":4203,"nodeType":"Block","src":"10153:39:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4199,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4138,"src":"10174:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4136,"id":4202,"nodeType":"Return","src":"10167:14:16"}]}}]},"documentation":{"id":4127,"nodeType":"StructuredDocumentation","src":"8686:616:16","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":4209,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:16","nodeType":"FunctionDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"array","nameLocation":"9349:5:16","nodeType":"VariableDeclaration","scope":4209,"src":"9331:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4128,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4129,"nodeType":"ArrayTypeName","src":"9331:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4132,"mutability":"mutable","name":"element","nameLocation":"9364:7:16","nodeType":"VariableDeclaration","scope":4209,"src":"9356:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4131,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:16"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4209,"src":"9396:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:16"},"scope":4714,"src":"9307:932:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4272,"nodeType":"Block","src":"10756:709:16","statements":[{"assignments":[4221],"declarations":[{"constant":false,"id":4221,"mutability":"mutable","name":"low","nameLocation":"10774:3:16","nodeType":"VariableDeclaration","scope":4272,"src":"10766:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4223,"initialValue":{"hexValue":"30","id":4222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:16"},{"assignments":[4225],"declarations":[{"constant":false,"id":4225,"mutability":"mutable","name":"high","nameLocation":"10799:4:16","nodeType":"VariableDeclaration","scope":4272,"src":"10791:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4224,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4228,"initialValue":{"expression":{"id":4226,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"10806:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:16","memberName":"length","nodeType":"MemberAccess","src":"10806:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4229,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"10833:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"nodeType":"IfStatement","src":"10829:48:16","trueBody":{"id":4234,"nodeType":"Block","src":"10844:33:16","statements":[{"expression":{"hexValue":"30","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4219,"id":4233,"nodeType":"Return","src":"10858:8:16"}]}},{"body":{"id":4268,"nodeType":"Block","src":"10906:532:16","statements":[{"assignments":[4240],"declarations":[{"constant":false,"id":4240,"mutability":"mutable","name":"mid","nameLocation":"10928:3:16","nodeType":"VariableDeclaration","scope":4268,"src":"10920:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4246,"initialValue":{"arguments":[{"id":4243,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"10947:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4244,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"10952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4241,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"10934:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"10934:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4248,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"11195:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":4249,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"11202:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4247,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4489,4515,4541,4567,4593],"referencedDeclaration":4541,"src":"11182:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5064_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4251,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"11182:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4252,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"11215:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4266,"nodeType":"Block","src":"11385:43:16","statements":[{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"11403:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4263,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"11410:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4265,"nodeType":"ExpressionStatement","src":"11403:10:16"}]},"id":4267,"nodeType":"IfStatement","src":"11178:250:16","trueBody":{"id":4261,"nodeType":"Block","src":"11224:155:16","statements":[{"id":4260,"nodeType":"UncheckedBlock","src":"11301:64:16","statements":[{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4254,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"11333:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4255,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"11339:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"11333:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"10894:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4237,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"10900:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4269,"nodeType":"WhileStatement","src":"10887:551:16"},{"expression":{"id":4270,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"11455:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4219,"id":4271,"nodeType":"Return","src":"11448:10:16"}]},"documentation":{"id":4210,"nodeType":"StructuredDocumentation","src":"10245:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":4273,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:16","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4213,"mutability":"mutable","name":"array","nameLocation":"10700:5:16","nodeType":"VariableDeclaration","scope":4273,"src":"10682:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4212,"nodeType":"ArrayTypeName","src":"10682:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"element","nameLocation":"10715:7:16","nodeType":"VariableDeclaration","scope":4273,"src":"10707:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:16"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4273,"src":"10747:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:16"},"scope":4714,"src":"10662:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4336,"nodeType":"Block","src":"11982:709:16","statements":[{"assignments":[4285],"declarations":[{"constant":false,"id":4285,"mutability":"mutable","name":"low","nameLocation":"12000:3:16","nodeType":"VariableDeclaration","scope":4336,"src":"11992:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4287,"initialValue":{"hexValue":"30","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:16"},{"assignments":[4289],"declarations":[{"constant":false,"id":4289,"mutability":"mutable","name":"high","nameLocation":"12025:4:16","nodeType":"VariableDeclaration","scope":4336,"src":"12017:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4292,"initialValue":{"expression":{"id":4290,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"12032:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:16","memberName":"length","nodeType":"MemberAccess","src":"12032:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4293,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"12059:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4299,"nodeType":"IfStatement","src":"12055:48:16","trueBody":{"id":4298,"nodeType":"Block","src":"12070:33:16","statements":[{"expression":{"hexValue":"30","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4283,"id":4297,"nodeType":"Return","src":"12084:8:16"}]}},{"body":{"id":4332,"nodeType":"Block","src":"12132:532:16","statements":[{"assignments":[4304],"declarations":[{"constant":false,"id":4304,"mutability":"mutable","name":"mid","nameLocation":"12154:3:16","nodeType":"VariableDeclaration","scope":4332,"src":"12146:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4303,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4310,"initialValue":{"arguments":[{"id":4307,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"12173:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4308,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"12178:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4305,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"12160:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"12160:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4312,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"12421:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":4313,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12428:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4311,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4489,4515,4541,4567,4593],"referencedDeclaration":4541,"src":"12408:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$5064_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":5063,"src":"12408:30:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4316,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"12441:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4330,"nodeType":"Block","src":"12499:155:16","statements":[{"id":4329,"nodeType":"UncheckedBlock","src":"12576:64:16","statements":[{"expression":{"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4323,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"12608:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4324,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12614:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4328,"nodeType":"ExpressionStatement","src":"12608:13:16"}]}]},"id":4331,"nodeType":"IfStatement","src":"12404:250:16","trueBody":{"id":4322,"nodeType":"Block","src":"12450:43:16","statements":[{"expression":{"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4318,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"12468:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4319,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4304,"src":"12475:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4321,"nodeType":"ExpressionStatement","src":"12468:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"12120:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4301,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4289,"src":"12126:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4333,"nodeType":"WhileStatement","src":"12113:551:16"},{"expression":{"id":4334,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"12681:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4283,"id":4335,"nodeType":"Return","src":"12674:10:16"}]},"documentation":{"id":4274,"nodeType":"StructuredDocumentation","src":"11471:412:16","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":4337,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:16","nodeType":"FunctionDefinition","parameters":{"id":4280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"array","nameLocation":"11926:5:16","nodeType":"VariableDeclaration","scope":4337,"src":"11908:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4275,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4276,"nodeType":"ArrayTypeName","src":"11908:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4279,"mutability":"mutable","name":"element","nameLocation":"11941:7:16","nodeType":"VariableDeclaration","scope":4337,"src":"11933:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4278,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:16"},"returnParameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4337,"src":"11973:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:16"},"scope":4714,"src":"11888:803:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4399,"nodeType":"Block","src":"12875:709:16","statements":[{"assignments":[4349],"declarations":[{"constant":false,"id":4349,"mutability":"mutable","name":"low","nameLocation":"12893:3:16","nodeType":"VariableDeclaration","scope":4399,"src":"12885:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4351,"initialValue":{"hexValue":"30","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:16"},{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"high","nameLocation":"12918:4:16","nodeType":"VariableDeclaration","scope":4399,"src":"12910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4352,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4356,"initialValue":{"expression":{"id":4354,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"12925:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:16","memberName":"length","nodeType":"MemberAccess","src":"12925:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4357,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"12952:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4363,"nodeType":"IfStatement","src":"12948:48:16","trueBody":{"id":4362,"nodeType":"Block","src":"12963:33:16","statements":[{"expression":{"hexValue":"30","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4347,"id":4361,"nodeType":"Return","src":"12977:8:16"}]}},{"body":{"id":4395,"nodeType":"Block","src":"13025:532:16","statements":[{"assignments":[4368],"declarations":[{"constant":false,"id":4368,"mutability":"mutable","name":"mid","nameLocation":"13047:3:16","nodeType":"VariableDeclaration","scope":4395,"src":"13039:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4374,"initialValue":{"arguments":[{"id":4371,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"13066:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4372,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"13071:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4369,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"13053:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"13053:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4376,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"13320:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4377,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"13327:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4375,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4606,4619,4632,4645,4658],"referencedDeclaration":4632,"src":"13301:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4379,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"13334:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4393,"nodeType":"Block","src":"13504:43:16","statements":[{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4389,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"13522:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4390,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"13529:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4392,"nodeType":"ExpressionStatement","src":"13522:10:16"}]},"id":4394,"nodeType":"IfStatement","src":"13297:250:16","trueBody":{"id":4388,"nodeType":"Block","src":"13343:155:16","statements":[{"id":4387,"nodeType":"UncheckedBlock","src":"13420:64:16","statements":[{"expression":{"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4381,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"13452:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4382,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"13458:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4386,"nodeType":"ExpressionStatement","src":"13452:13:16"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"13013:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4365,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"13019:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4396,"nodeType":"WhileStatement","src":"13006:551:16"},{"expression":{"id":4397,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"13574:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4347,"id":4398,"nodeType":"Return","src":"13567:10:16"}]},"documentation":{"id":4338,"nodeType":"StructuredDocumentation","src":"12697:74:16","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":4400,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:16","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4341,"mutability":"mutable","name":"array","nameLocation":"12819:5:16","nodeType":"VariableDeclaration","scope":4400,"src":"12802:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4339,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ArrayTypeName","src":"12802:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"element","nameLocation":"12834:7:16","nodeType":"VariableDeclaration","scope":4400,"src":"12826:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:16"},"returnParameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4400,"src":"12866:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4345,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:16"},"scope":4714,"src":"12776:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4462,"nodeType":"Block","src":"13768:709:16","statements":[{"assignments":[4412],"declarations":[{"constant":false,"id":4412,"mutability":"mutable","name":"low","nameLocation":"13786:3:16","nodeType":"VariableDeclaration","scope":4462,"src":"13778:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4414,"initialValue":{"hexValue":"30","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:16"},{"assignments":[4416],"declarations":[{"constant":false,"id":4416,"mutability":"mutable","name":"high","nameLocation":"13811:4:16","nodeType":"VariableDeclaration","scope":4462,"src":"13803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4419,"initialValue":{"expression":{"id":4417,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"13818:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:16","memberName":"length","nodeType":"MemberAccess","src":"13818:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4420,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"13845:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4426,"nodeType":"IfStatement","src":"13841:48:16","trueBody":{"id":4425,"nodeType":"Block","src":"13856:33:16","statements":[{"expression":{"hexValue":"30","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4410,"id":4424,"nodeType":"Return","src":"13870:8:16"}]}},{"body":{"id":4458,"nodeType":"Block","src":"13918:532:16","statements":[{"assignments":[4431],"declarations":[{"constant":false,"id":4431,"mutability":"mutable","name":"mid","nameLocation":"13940:3:16","nodeType":"VariableDeclaration","scope":4458,"src":"13932:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4437,"initialValue":{"arguments":[{"id":4434,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"13959:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4435,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"13964:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4432,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"13946:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:16","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6937,"src":"13946:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4439,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"14213:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4440,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"14220:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4438,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4606,4619,4632,4645,4658],"referencedDeclaration":4632,"src":"14194:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4442,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"14227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4456,"nodeType":"Block","src":"14285:155:16","statements":[{"id":4455,"nodeType":"UncheckedBlock","src":"14362:64:16","statements":[{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4449,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"14394:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"14400:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"nodeType":"ExpressionStatement","src":"14394:13:16"}]}]},"id":4457,"nodeType":"IfStatement","src":"14190:250:16","trueBody":{"id":4448,"nodeType":"Block","src":"14236:43:16","statements":[{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"14254:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4445,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"14261:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"14254:10:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"13906:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4428,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"13912:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4459,"nodeType":"WhileStatement","src":"13899:551:16"},{"expression":{"id":4460,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"14467:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4410,"id":4461,"nodeType":"Return","src":"14460:10:16"}]},"documentation":{"id":4401,"nodeType":"StructuredDocumentation","src":"13590:74:16","text":" @dev Same as {upperBound}, but with an array in memory."},"id":4463,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:16","nodeType":"FunctionDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"array","nameLocation":"13712:5:16","nodeType":"VariableDeclaration","scope":4463,"src":"13695:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"nodeType":"ArrayTypeName","src":"13695:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4406,"mutability":"mutable","name":"element","nameLocation":"13727:7:16","nodeType":"VariableDeclaration","scope":4463,"src":"13719:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:16"},"returnParameters":{"id":4410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4463,"src":"13759:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4408,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:16"},"scope":4714,"src":"13669:808:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4488,"nodeType":"Block","src":"14793:167:16","statements":[{"assignments":[4476],"declarations":[{"constant":false,"id":4476,"mutability":"mutable","name":"slot","nameLocation":"14811:4:16","nodeType":"VariableDeclaration","scope":4488,"src":"14803:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4477,"nodeType":"VariableDeclarationStatement","src":"14803:12:16"},{"AST":{"nativeSrc":"14850:40:16","nodeType":"YulBlock","src":"14850:40:16","statements":[{"nativeSrc":"14864:16:16","nodeType":"YulAssignment","src":"14864:16:16","value":{"name":"arr.slot","nativeSrc":"14872:8:16","nodeType":"YulIdentifier","src":"14872:8:16"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:16","nodeType":"YulIdentifier","src":"14864:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4467,"isOffset":false,"isSlot":true,"src":"14872:8:16","suffix":"slot","valueSize":1},{"declaration":4476,"isOffset":false,"isSlot":false,"src":"14864:4:16","valueSize":1}],"flags":["memory-safe"],"id":4478,"nodeType":"InlineAssembly","src":"14825:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4483,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"14932:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4479,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4476,"src":"14906:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"14906:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"14906:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:16","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":5084,"src":"14906:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$5055_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5055_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":4474,"id":4487,"nodeType":"Return","src":"14899:54:16"}]},"documentation":{"id":4464,"nodeType":"StructuredDocumentation","src":"14483:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4489,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:16","nodeType":"FunctionDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4467,"mutability":"mutable","name":"arr","nameLocation":"14719:3:16","nodeType":"VariableDeclaration","scope":4489,"src":"14701:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4465,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4466,"nodeType":"ArrayTypeName","src":"14701:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4469,"mutability":"mutable","name":"pos","nameLocation":"14732:3:16","nodeType":"VariableDeclaration","scope":4489,"src":"14724:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:16"},"returnParameters":{"id":4474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4489,"src":"14760:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5055_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4472,"nodeType":"UserDefinedTypeName","pathNode":{"id":4471,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:16","14772:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":5055,"src":"14760:23:16"},"referencedDeclaration":5055,"src":"14760:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5055_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:16"},"scope":4714,"src":"14679:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4514,"nodeType":"Block","src":"15276:167:16","statements":[{"assignments":[4502],"declarations":[{"constant":false,"id":4502,"mutability":"mutable","name":"slot","nameLocation":"15294:4:16","nodeType":"VariableDeclaration","scope":4514,"src":"15286:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4503,"nodeType":"VariableDeclarationStatement","src":"15286:12:16"},{"AST":{"nativeSrc":"15333:40:16","nodeType":"YulBlock","src":"15333:40:16","statements":[{"nativeSrc":"15347:16:16","nodeType":"YulAssignment","src":"15347:16:16","value":{"name":"arr.slot","nativeSrc":"15355:8:16","nodeType":"YulIdentifier","src":"15355:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:16","nodeType":"YulIdentifier","src":"15347:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4493,"isOffset":false,"isSlot":true,"src":"15355:8:16","suffix":"slot","valueSize":1},{"declaration":4502,"isOffset":false,"isSlot":false,"src":"15347:4:16","valueSize":1}],"flags":["memory-safe"],"id":4504,"nodeType":"InlineAssembly","src":"15308:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4509,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"15415:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4505,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"15389:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"15389:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"15389:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:16","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":5106,"src":"15389:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$5061_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5061_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":4500,"id":4513,"nodeType":"Return","src":"15382:54:16"}]},"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"14966:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4515,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:16","nodeType":"FunctionDefinition","parameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"arr","nameLocation":"15202:3:16","nodeType":"VariableDeclaration","scope":4515,"src":"15184:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4492,"nodeType":"ArrayTypeName","src":"15184:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4495,"mutability":"mutable","name":"pos","nameLocation":"15215:3:16","nodeType":"VariableDeclaration","scope":4515,"src":"15207:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:16"},"returnParameters":{"id":4500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4515,"src":"15243:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5061_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4498,"nodeType":"UserDefinedTypeName","pathNode":{"id":4497,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:16","15255:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"15243:23:16"},"referencedDeclaration":5061,"src":"15243:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5061_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:16"},"scope":4714,"src":"15162:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4540,"nodeType":"Block","src":"15759:167:16","statements":[{"assignments":[4528],"declarations":[{"constant":false,"id":4528,"mutability":"mutable","name":"slot","nameLocation":"15777:4:16","nodeType":"VariableDeclaration","scope":4540,"src":"15769:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4529,"nodeType":"VariableDeclarationStatement","src":"15769:12:16"},{"AST":{"nativeSrc":"15816:40:16","nodeType":"YulBlock","src":"15816:40:16","statements":[{"nativeSrc":"15830:16:16","nodeType":"YulAssignment","src":"15830:16:16","value":{"name":"arr.slot","nativeSrc":"15838:8:16","nodeType":"YulIdentifier","src":"15838:8:16"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:16","nodeType":"YulIdentifier","src":"15830:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4519,"isOffset":false,"isSlot":true,"src":"15838:8:16","suffix":"slot","valueSize":1},{"declaration":4528,"isOffset":false,"isSlot":false,"src":"15830:4:16","valueSize":1}],"flags":["memory-safe"],"id":4530,"nodeType":"InlineAssembly","src":"15791:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4535,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"15898:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4531,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"15872:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"15872:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"15872:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:16","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":5117,"src":"15872:45:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$5064_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":4526,"id":4539,"nodeType":"Return","src":"15865:54:16"}]},"documentation":{"id":4516,"nodeType":"StructuredDocumentation","src":"15449:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4541,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:16","nodeType":"FunctionDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"arr","nameLocation":"15685:3:16","nodeType":"VariableDeclaration","scope":4541,"src":"15667:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4517,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4518,"nodeType":"ArrayTypeName","src":"15667:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4521,"mutability":"mutable","name":"pos","nameLocation":"15698:3:16","nodeType":"VariableDeclaration","scope":4541,"src":"15690:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:16"},"returnParameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4541,"src":"15726:31:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4524,"nodeType":"UserDefinedTypeName","pathNode":{"id":4523,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:16","15738:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":5064,"src":"15726:23:16"},"referencedDeclaration":5064,"src":"15726:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:16"},"scope":4714,"src":"15645:281:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4566,"nodeType":"Block","src":"16238:165:16","statements":[{"assignments":[4554],"declarations":[{"constant":false,"id":4554,"mutability":"mutable","name":"slot","nameLocation":"16256:4:16","nodeType":"VariableDeclaration","scope":4566,"src":"16248:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4555,"nodeType":"VariableDeclarationStatement","src":"16248:12:16"},{"AST":{"nativeSrc":"16295:40:16","nodeType":"YulBlock","src":"16295:40:16","statements":[{"nativeSrc":"16309:16:16","nodeType":"YulAssignment","src":"16309:16:16","value":{"name":"arr.slot","nativeSrc":"16317:8:16","nodeType":"YulIdentifier","src":"16317:8:16"},"variableNames":[{"name":"slot","nativeSrc":"16309:4:16","nodeType":"YulIdentifier","src":"16309:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4545,"isOffset":false,"isSlot":true,"src":"16317:8:16","suffix":"slot","valueSize":1},{"declaration":4554,"isOffset":false,"isSlot":false,"src":"16309:4:16","valueSize":1}],"flags":["memory-safe"],"id":4556,"nodeType":"InlineAssembly","src":"16270:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4561,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4547,"src":"16377:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4557,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"16351:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"16351:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"16351:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:16","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":5161,"src":"16351:43:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$5073_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5073_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":4552,"id":4565,"nodeType":"Return","src":"16344:52:16"}]},"documentation":{"id":4542,"nodeType":"StructuredDocumentation","src":"15932:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4567,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:16","nodeType":"FunctionDefinition","parameters":{"id":4548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"arr","nameLocation":"16166:3:16","nodeType":"VariableDeclaration","scope":4567,"src":"16150:19:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4543,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4544,"nodeType":"ArrayTypeName","src":"16150:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4547,"mutability":"mutable","name":"pos","nameLocation":"16179:3:16","nodeType":"VariableDeclaration","scope":4567,"src":"16171:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4546,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:16"},"returnParameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4567,"src":"16207:29:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5073_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4550,"nodeType":"UserDefinedTypeName","pathNode":{"id":4549,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:16","16219:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"16207:21:16"},"referencedDeclaration":5073,"src":"16207:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5073_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:16"},"scope":4714,"src":"16128:275:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4592,"nodeType":"Block","src":"16717:166:16","statements":[{"assignments":[4580],"declarations":[{"constant":false,"id":4580,"mutability":"mutable","name":"slot","nameLocation":"16735:4:16","nodeType":"VariableDeclaration","scope":4592,"src":"16727:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4581,"nodeType":"VariableDeclarationStatement","src":"16727:12:16"},{"AST":{"nativeSrc":"16774:40:16","nodeType":"YulBlock","src":"16774:40:16","statements":[{"nativeSrc":"16788:16:16","nodeType":"YulAssignment","src":"16788:16:16","value":{"name":"arr.slot","nativeSrc":"16796:8:16","nodeType":"YulIdentifier","src":"16796:8:16"},"variableNames":[{"name":"slot","nativeSrc":"16788:4:16","nodeType":"YulIdentifier","src":"16788:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4571,"isOffset":false,"isSlot":true,"src":"16796:8:16","suffix":"slot","valueSize":1},{"declaration":4580,"isOffset":false,"isSlot":false,"src":"16788:4:16","valueSize":1}],"flags":["memory-safe"],"id":4582,"nodeType":"InlineAssembly","src":"16749:65:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4587,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4573,"src":"16856:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4583,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4580,"src":"16830:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:16","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4964,"src":"16830:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:16","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4954,"src":"16830:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":5139,"src":"16830:44:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$5070_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5070_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":4578,"id":4591,"nodeType":"Return","src":"16823:53:16"}]},"documentation":{"id":4568,"nodeType":"StructuredDocumentation","src":"16409:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4593,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:16","nodeType":"FunctionDefinition","parameters":{"id":4574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"arr","nameLocation":"16644:3:16","nodeType":"VariableDeclaration","scope":4593,"src":"16627:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4569,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4570,"nodeType":"ArrayTypeName","src":"16627:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4573,"mutability":"mutable","name":"pos","nameLocation":"16657:3:16","nodeType":"VariableDeclaration","scope":4593,"src":"16649:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4572,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:16"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4593,"src":"16685:30:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5070_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4576,"nodeType":"UserDefinedTypeName","pathNode":{"id":4575,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:16","16697:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"16685:22:16"},"referencedDeclaration":5070,"src":"16685:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5070_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:16"},"scope":4714,"src":"16605:278:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4605,"nodeType":"Block","src":"17184:98:16","statements":[{"AST":{"nativeSrc":"17203:73:16","nodeType":"YulBlock","src":"17203:73:16","statements":[{"nativeSrc":"17217:49:16","nodeType":"YulAssignment","src":"17217:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17238:3:16","nodeType":"YulIdentifier","src":"17238:3:16"},{"kind":"number","nativeSrc":"17243:4:16","nodeType":"YulLiteral","src":"17243:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17234:3:16","nodeType":"YulIdentifier","src":"17234:3:16"},"nativeSrc":"17234:14:16","nodeType":"YulFunctionCall","src":"17234:14:16"},{"arguments":[{"name":"pos","nativeSrc":"17254:3:16","nodeType":"YulIdentifier","src":"17254:3:16"},{"kind":"number","nativeSrc":"17259:4:16","nodeType":"YulLiteral","src":"17259:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17250:3:16","nodeType":"YulIdentifier","src":"17250:3:16"},"nativeSrc":"17250:14:16","nodeType":"YulFunctionCall","src":"17250:14:16"}],"functionName":{"name":"add","nativeSrc":"17230:3:16","nodeType":"YulIdentifier","src":"17230:3:16"},"nativeSrc":"17230:35:16","nodeType":"YulFunctionCall","src":"17230:35:16"}],"functionName":{"name":"mload","nativeSrc":"17224:5:16","nodeType":"YulIdentifier","src":"17224:5:16"},"nativeSrc":"17224:42:16","nodeType":"YulFunctionCall","src":"17224:42:16"},"variableNames":[{"name":"res","nativeSrc":"17217:3:16","nodeType":"YulIdentifier","src":"17217:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4597,"isOffset":false,"isSlot":false,"src":"17238:3:16","valueSize":1},{"declaration":4599,"isOffset":false,"isSlot":false,"src":"17254:3:16","valueSize":1},{"declaration":4602,"isOffset":false,"isSlot":false,"src":"17217:3:16","valueSize":1}],"id":4604,"nodeType":"InlineAssembly","src":"17194:82:16"}]},"documentation":{"id":4594,"nodeType":"StructuredDocumentation","src":"16889:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4606,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:16","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"arr","nameLocation":"17130:3:16","nodeType":"VariableDeclaration","scope":4606,"src":"17113:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4595,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4596,"nodeType":"ArrayTypeName","src":"17113:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4599,"mutability":"mutable","name":"pos","nameLocation":"17143:3:16","nodeType":"VariableDeclaration","scope":4606,"src":"17135:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:16"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"res","nameLocation":"17179:3:16","nodeType":"VariableDeclaration","scope":4606,"src":"17171:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4601,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:16"},"scope":4714,"src":"17085:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4618,"nodeType":"Block","src":"17583:98:16","statements":[{"AST":{"nativeSrc":"17602:73:16","nodeType":"YulBlock","src":"17602:73:16","statements":[{"nativeSrc":"17616:49:16","nodeType":"YulAssignment","src":"17616:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17637:3:16","nodeType":"YulIdentifier","src":"17637:3:16"},{"kind":"number","nativeSrc":"17642:4:16","nodeType":"YulLiteral","src":"17642:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17633:3:16","nodeType":"YulIdentifier","src":"17633:3:16"},"nativeSrc":"17633:14:16","nodeType":"YulFunctionCall","src":"17633:14:16"},{"arguments":[{"name":"pos","nativeSrc":"17653:3:16","nodeType":"YulIdentifier","src":"17653:3:16"},{"kind":"number","nativeSrc":"17658:4:16","nodeType":"YulLiteral","src":"17658:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17649:3:16","nodeType":"YulIdentifier","src":"17649:3:16"},"nativeSrc":"17649:14:16","nodeType":"YulFunctionCall","src":"17649:14:16"}],"functionName":{"name":"add","nativeSrc":"17629:3:16","nodeType":"YulIdentifier","src":"17629:3:16"},"nativeSrc":"17629:35:16","nodeType":"YulFunctionCall","src":"17629:35:16"}],"functionName":{"name":"mload","nativeSrc":"17623:5:16","nodeType":"YulIdentifier","src":"17623:5:16"},"nativeSrc":"17623:42:16","nodeType":"YulFunctionCall","src":"17623:42:16"},"variableNames":[{"name":"res","nativeSrc":"17616:3:16","nodeType":"YulIdentifier","src":"17616:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4610,"isOffset":false,"isSlot":false,"src":"17637:3:16","valueSize":1},{"declaration":4612,"isOffset":false,"isSlot":false,"src":"17653:3:16","valueSize":1},{"declaration":4615,"isOffset":false,"isSlot":false,"src":"17616:3:16","valueSize":1}],"id":4617,"nodeType":"InlineAssembly","src":"17593:82:16"}]},"documentation":{"id":4607,"nodeType":"StructuredDocumentation","src":"17288:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4619,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:16","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"arr","nameLocation":"17529:3:16","nodeType":"VariableDeclaration","scope":4619,"src":"17512:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4609,"nodeType":"ArrayTypeName","src":"17512:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"pos","nameLocation":"17542:3:16","nodeType":"VariableDeclaration","scope":4619,"src":"17534:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:16"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"res","nameLocation":"17578:3:16","nodeType":"VariableDeclaration","scope":4619,"src":"17570:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:16"},"scope":4714,"src":"17484:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4631,"nodeType":"Block","src":"17982:98:16","statements":[{"AST":{"nativeSrc":"18001:73:16","nodeType":"YulBlock","src":"18001:73:16","statements":[{"nativeSrc":"18015:49:16","nodeType":"YulAssignment","src":"18015:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18036:3:16","nodeType":"YulIdentifier","src":"18036:3:16"},{"kind":"number","nativeSrc":"18041:4:16","nodeType":"YulLiteral","src":"18041:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18032:3:16","nodeType":"YulIdentifier","src":"18032:3:16"},"nativeSrc":"18032:14:16","nodeType":"YulFunctionCall","src":"18032:14:16"},{"arguments":[{"name":"pos","nativeSrc":"18052:3:16","nodeType":"YulIdentifier","src":"18052:3:16"},{"kind":"number","nativeSrc":"18057:4:16","nodeType":"YulLiteral","src":"18057:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18048:3:16","nodeType":"YulIdentifier","src":"18048:3:16"},"nativeSrc":"18048:14:16","nodeType":"YulFunctionCall","src":"18048:14:16"}],"functionName":{"name":"add","nativeSrc":"18028:3:16","nodeType":"YulIdentifier","src":"18028:3:16"},"nativeSrc":"18028:35:16","nodeType":"YulFunctionCall","src":"18028:35:16"}],"functionName":{"name":"mload","nativeSrc":"18022:5:16","nodeType":"YulIdentifier","src":"18022:5:16"},"nativeSrc":"18022:42:16","nodeType":"YulFunctionCall","src":"18022:42:16"},"variableNames":[{"name":"res","nativeSrc":"18015:3:16","nodeType":"YulIdentifier","src":"18015:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4623,"isOffset":false,"isSlot":false,"src":"18036:3:16","valueSize":1},{"declaration":4625,"isOffset":false,"isSlot":false,"src":"18052:3:16","valueSize":1},{"declaration":4628,"isOffset":false,"isSlot":false,"src":"18015:3:16","valueSize":1}],"id":4630,"nodeType":"InlineAssembly","src":"17992:82:16"}]},"documentation":{"id":4620,"nodeType":"StructuredDocumentation","src":"17687:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4632,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:16","nodeType":"FunctionDefinition","parameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4623,"mutability":"mutable","name":"arr","nameLocation":"17928:3:16","nodeType":"VariableDeclaration","scope":4632,"src":"17911:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4621,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4622,"nodeType":"ArrayTypeName","src":"17911:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4625,"mutability":"mutable","name":"pos","nameLocation":"17941:3:16","nodeType":"VariableDeclaration","scope":4632,"src":"17933:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4624,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:16"},"returnParameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"res","nameLocation":"17977:3:16","nodeType":"VariableDeclaration","scope":4632,"src":"17969:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:16"},"scope":4714,"src":"17883:197:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"18384:98:16","statements":[{"AST":{"nativeSrc":"18403:73:16","nodeType":"YulBlock","src":"18403:73:16","statements":[{"nativeSrc":"18417:49:16","nodeType":"YulAssignment","src":"18417:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18438:3:16","nodeType":"YulIdentifier","src":"18438:3:16"},{"kind":"number","nativeSrc":"18443:4:16","nodeType":"YulLiteral","src":"18443:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18434:3:16","nodeType":"YulIdentifier","src":"18434:3:16"},"nativeSrc":"18434:14:16","nodeType":"YulFunctionCall","src":"18434:14:16"},{"arguments":[{"name":"pos","nativeSrc":"18454:3:16","nodeType":"YulIdentifier","src":"18454:3:16"},{"kind":"number","nativeSrc":"18459:4:16","nodeType":"YulLiteral","src":"18459:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18450:3:16","nodeType":"YulIdentifier","src":"18450:3:16"},"nativeSrc":"18450:14:16","nodeType":"YulFunctionCall","src":"18450:14:16"}],"functionName":{"name":"add","nativeSrc":"18430:3:16","nodeType":"YulIdentifier","src":"18430:3:16"},"nativeSrc":"18430:35:16","nodeType":"YulFunctionCall","src":"18430:35:16"}],"functionName":{"name":"mload","nativeSrc":"18424:5:16","nodeType":"YulIdentifier","src":"18424:5:16"},"nativeSrc":"18424:42:16","nodeType":"YulFunctionCall","src":"18424:42:16"},"variableNames":[{"name":"res","nativeSrc":"18417:3:16","nodeType":"YulIdentifier","src":"18417:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4636,"isOffset":false,"isSlot":false,"src":"18438:3:16","valueSize":1},{"declaration":4638,"isOffset":false,"isSlot":false,"src":"18454:3:16","valueSize":1},{"declaration":4641,"isOffset":false,"isSlot":false,"src":"18417:3:16","valueSize":1}],"id":4643,"nodeType":"InlineAssembly","src":"18394:82:16"}]},"documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"18086:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:16","nodeType":"FunctionDefinition","parameters":{"id":4639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"arr","nameLocation":"18325:3:16","nodeType":"VariableDeclaration","scope":4645,"src":"18310:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4634,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4635,"nodeType":"ArrayTypeName","src":"18310:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4638,"mutability":"mutable","name":"pos","nameLocation":"18338:3:16","nodeType":"VariableDeclaration","scope":4645,"src":"18330:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4637,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:16"},"returnParameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"res","nameLocation":"18379:3:16","nodeType":"VariableDeclaration","scope":4645,"src":"18366:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4640,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:16"},"scope":4714,"src":"18282:200:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4657,"nodeType":"Block","src":"18788:98:16","statements":[{"AST":{"nativeSrc":"18807:73:16","nodeType":"YulBlock","src":"18807:73:16","statements":[{"nativeSrc":"18821:49:16","nodeType":"YulAssignment","src":"18821:49:16","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18842:3:16","nodeType":"YulIdentifier","src":"18842:3:16"},{"kind":"number","nativeSrc":"18847:4:16","nodeType":"YulLiteral","src":"18847:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18838:3:16","nodeType":"YulIdentifier","src":"18838:3:16"},"nativeSrc":"18838:14:16","nodeType":"YulFunctionCall","src":"18838:14:16"},{"arguments":[{"name":"pos","nativeSrc":"18858:3:16","nodeType":"YulIdentifier","src":"18858:3:16"},{"kind":"number","nativeSrc":"18863:4:16","nodeType":"YulLiteral","src":"18863:4:16","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18854:3:16","nodeType":"YulIdentifier","src":"18854:3:16"},"nativeSrc":"18854:14:16","nodeType":"YulFunctionCall","src":"18854:14:16"}],"functionName":{"name":"add","nativeSrc":"18834:3:16","nodeType":"YulIdentifier","src":"18834:3:16"},"nativeSrc":"18834:35:16","nodeType":"YulFunctionCall","src":"18834:35:16"}],"functionName":{"name":"mload","nativeSrc":"18828:5:16","nodeType":"YulIdentifier","src":"18828:5:16"},"nativeSrc":"18828:42:16","nodeType":"YulFunctionCall","src":"18828:42:16"},"variableNames":[{"name":"res","nativeSrc":"18821:3:16","nodeType":"YulIdentifier","src":"18821:3:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4649,"isOffset":false,"isSlot":false,"src":"18842:3:16","valueSize":1},{"declaration":4651,"isOffset":false,"isSlot":false,"src":"18858:3:16","valueSize":1},{"declaration":4654,"isOffset":false,"isSlot":false,"src":"18821:3:16","valueSize":1}],"id":4656,"nodeType":"InlineAssembly","src":"18798:82:16"}]},"documentation":{"id":4646,"nodeType":"StructuredDocumentation","src":"18488:191:16","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4658,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:16","nodeType":"FunctionDefinition","parameters":{"id":4652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"arr","nameLocation":"18728:3:16","nodeType":"VariableDeclaration","scope":4658,"src":"18712:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4647,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4648,"nodeType":"ArrayTypeName","src":"18712:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4651,"mutability":"mutable","name":"pos","nameLocation":"18741:3:16","nodeType":"VariableDeclaration","scope":4658,"src":"18733:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4650,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:16"},"returnParameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4654,"mutability":"mutable","name":"res","nameLocation":"18783:3:16","nodeType":"VariableDeclaration","scope":4658,"src":"18769:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4653,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:16"},"scope":4714,"src":"18684:202:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4668,"nodeType":"Block","src":"19202:88:16","statements":[{"AST":{"nativeSrc":"19237:47:16","nodeType":"YulBlock","src":"19237:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19258:10:16","nodeType":"YulIdentifier","src":"19258:10:16"},{"name":"len","nativeSrc":"19270:3:16","nodeType":"YulIdentifier","src":"19270:3:16"}],"functionName":{"name":"sstore","nativeSrc":"19251:6:16","nodeType":"YulIdentifier","src":"19251:6:16"},"nativeSrc":"19251:23:16","nodeType":"YulFunctionCall","src":"19251:23:16"},"nativeSrc":"19251:23:16","nodeType":"YulExpressionStatement","src":"19251:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4662,"isOffset":false,"isSlot":true,"src":"19258:10:16","suffix":"slot","valueSize":1},{"declaration":4664,"isOffset":false,"isSlot":false,"src":"19270:3:16","valueSize":1}],"flags":["memory-safe"],"id":4667,"nodeType":"InlineAssembly","src":"19212:72:16"}]},"documentation":{"id":4659,"nodeType":"StructuredDocumentation","src":"18892:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4669,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:16","nodeType":"FunctionDefinition","parameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4662,"mutability":"mutable","name":"array","nameLocation":"19173:5:16","nodeType":"VariableDeclaration","scope":4669,"src":"19155:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4660,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4661,"nodeType":"ArrayTypeName","src":"19155:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4664,"mutability":"mutable","name":"len","nameLocation":"19188:3:16","nodeType":"VariableDeclaration","scope":4669,"src":"19180:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:16"},"returnParameters":{"id":4666,"nodeType":"ParameterList","parameters":[],"src":"19202:0:16"},"scope":4714,"src":"19130:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4679,"nodeType":"Block","src":"19606:88:16","statements":[{"AST":{"nativeSrc":"19641:47:16","nodeType":"YulBlock","src":"19641:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19662:10:16","nodeType":"YulIdentifier","src":"19662:10:16"},{"name":"len","nativeSrc":"19674:3:16","nodeType":"YulIdentifier","src":"19674:3:16"}],"functionName":{"name":"sstore","nativeSrc":"19655:6:16","nodeType":"YulIdentifier","src":"19655:6:16"},"nativeSrc":"19655:23:16","nodeType":"YulFunctionCall","src":"19655:23:16"},"nativeSrc":"19655:23:16","nodeType":"YulExpressionStatement","src":"19655:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4673,"isOffset":false,"isSlot":true,"src":"19662:10:16","suffix":"slot","valueSize":1},{"declaration":4675,"isOffset":false,"isSlot":false,"src":"19674:3:16","valueSize":1}],"flags":["memory-safe"],"id":4678,"nodeType":"InlineAssembly","src":"19616:72:16"}]},"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"19296:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4680,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:16","nodeType":"FunctionDefinition","parameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4673,"mutability":"mutable","name":"array","nameLocation":"19577:5:16","nodeType":"VariableDeclaration","scope":4680,"src":"19559:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4671,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4672,"nodeType":"ArrayTypeName","src":"19559:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4675,"mutability":"mutable","name":"len","nameLocation":"19592:3:16","nodeType":"VariableDeclaration","scope":4680,"src":"19584:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4674,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:16"},"returnParameters":{"id":4677,"nodeType":"ParameterList","parameters":[],"src":"19606:0:16"},"scope":4714,"src":"19534:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4690,"nodeType":"Block","src":"20010:88:16","statements":[{"AST":{"nativeSrc":"20045:47:16","nodeType":"YulBlock","src":"20045:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20066:10:16","nodeType":"YulIdentifier","src":"20066:10:16"},{"name":"len","nativeSrc":"20078:3:16","nodeType":"YulIdentifier","src":"20078:3:16"}],"functionName":{"name":"sstore","nativeSrc":"20059:6:16","nodeType":"YulIdentifier","src":"20059:6:16"},"nativeSrc":"20059:23:16","nodeType":"YulFunctionCall","src":"20059:23:16"},"nativeSrc":"20059:23:16","nodeType":"YulExpressionStatement","src":"20059:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4684,"isOffset":false,"isSlot":true,"src":"20066:10:16","suffix":"slot","valueSize":1},{"declaration":4686,"isOffset":false,"isSlot":false,"src":"20078:3:16","valueSize":1}],"flags":["memory-safe"],"id":4689,"nodeType":"InlineAssembly","src":"20020:72:16"}]},"documentation":{"id":4681,"nodeType":"StructuredDocumentation","src":"19700:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4691,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:16","nodeType":"FunctionDefinition","parameters":{"id":4687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4684,"mutability":"mutable","name":"array","nameLocation":"19981:5:16","nodeType":"VariableDeclaration","scope":4691,"src":"19963:23:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4682,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4683,"nodeType":"ArrayTypeName","src":"19963:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4686,"mutability":"mutable","name":"len","nameLocation":"19996:3:16","nodeType":"VariableDeclaration","scope":4691,"src":"19988:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4685,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:16"},"returnParameters":{"id":4688,"nodeType":"ParameterList","parameters":[],"src":"20010:0:16"},"scope":4714,"src":"19938:160:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4701,"nodeType":"Block","src":"20412:88:16","statements":[{"AST":{"nativeSrc":"20447:47:16","nodeType":"YulBlock","src":"20447:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20468:10:16","nodeType":"YulIdentifier","src":"20468:10:16"},{"name":"len","nativeSrc":"20480:3:16","nodeType":"YulIdentifier","src":"20480:3:16"}],"functionName":{"name":"sstore","nativeSrc":"20461:6:16","nodeType":"YulIdentifier","src":"20461:6:16"},"nativeSrc":"20461:23:16","nodeType":"YulFunctionCall","src":"20461:23:16"},"nativeSrc":"20461:23:16","nodeType":"YulExpressionStatement","src":"20461:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4695,"isOffset":false,"isSlot":true,"src":"20468:10:16","suffix":"slot","valueSize":1},{"declaration":4697,"isOffset":false,"isSlot":false,"src":"20480:3:16","valueSize":1}],"flags":["memory-safe"],"id":4700,"nodeType":"InlineAssembly","src":"20422:72:16"}]},"documentation":{"id":4692,"nodeType":"StructuredDocumentation","src":"20104:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4702,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:16","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"array","nameLocation":"20383:5:16","nodeType":"VariableDeclaration","scope":4702,"src":"20367:21:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4693,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4694,"nodeType":"ArrayTypeName","src":"20367:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4697,"mutability":"mutable","name":"len","nameLocation":"20398:3:16","nodeType":"VariableDeclaration","scope":4702,"src":"20390:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:16"},"returnParameters":{"id":4699,"nodeType":"ParameterList","parameters":[],"src":"20412:0:16"},"scope":4714,"src":"20342:158:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4712,"nodeType":"Block","src":"20815:88:16","statements":[{"AST":{"nativeSrc":"20850:47:16","nodeType":"YulBlock","src":"20850:47:16","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20871:10:16","nodeType":"YulIdentifier","src":"20871:10:16"},{"name":"len","nativeSrc":"20883:3:16","nodeType":"YulIdentifier","src":"20883:3:16"}],"functionName":{"name":"sstore","nativeSrc":"20864:6:16","nodeType":"YulIdentifier","src":"20864:6:16"},"nativeSrc":"20864:23:16","nodeType":"YulFunctionCall","src":"20864:23:16"},"nativeSrc":"20864:23:16","nodeType":"YulExpressionStatement","src":"20864:23:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":4706,"isOffset":false,"isSlot":true,"src":"20871:10:16","suffix":"slot","valueSize":1},{"declaration":4708,"isOffset":false,"isSlot":false,"src":"20883:3:16","valueSize":1}],"flags":["memory-safe"],"id":4711,"nodeType":"InlineAssembly","src":"20825:72:16"}]},"documentation":{"id":4703,"nodeType":"StructuredDocumentation","src":"20506:233:16","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4713,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:16","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4706,"mutability":"mutable","name":"array","nameLocation":"20786:5:16","nodeType":"VariableDeclaration","scope":4713,"src":"20769:22:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4704,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4705,"nodeType":"ArrayTypeName","src":"20769:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4708,"mutability":"mutable","name":"len","nameLocation":"20801:3:16","nodeType":"VariableDeclaration","scope":4713,"src":"20793:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:16"},"returnParameters":{"id":4710,"nodeType":"ParameterList","parameters":[],"src":"20815:0:16"},"scope":4714,"src":"20744:159:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4715,"src":"459:20446:16","usedErrors":[],"usedEvents":[]}],"src":"183:20723:16"},"id":16},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4746]},"id":4747,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4716,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4717,"nodeType":"StructuredDocumentation","src":"131:92:17","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4746,"linearizedBaseContracts":[4746],"name":"Comparators","nameLocation":"232:11:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":4730,"nodeType":"Block","src":"313:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"330:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4727,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4721,"src":"334:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4725,"id":4729,"nodeType":"Return","src":"323:12:17"}]},"id":4731,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:17","nodeType":"FunctionDefinition","parameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4719,"mutability":"mutable","name":"a","nameLocation":"270:1:17","nodeType":"VariableDeclaration","scope":4731,"src":"262:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4718,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4721,"mutability":"mutable","name":"b","nameLocation":"281:1:17","nodeType":"VariableDeclaration","scope":4731,"src":"273:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4720,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:17"},"returnParameters":{"id":4725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4731,"src":"307:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4723,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:17"},"scope":4746,"src":"250:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4744,"nodeType":"Block","src":"411:29:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4733,"src":"428:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"432:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4739,"id":4743,"nodeType":"Return","src":"421:12:17"}]},"id":4745,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:17","nodeType":"FunctionDefinition","parameters":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4733,"mutability":"mutable","name":"a","nameLocation":"368:1:17","nodeType":"VariableDeclaration","scope":4745,"src":"360:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4732,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4735,"mutability":"mutable","name":"b","nameLocation":"379:1:17","nodeType":"VariableDeclaration","scope":4745,"src":"371:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4734,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:17"},"returnParameters":{"id":4739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4745,"src":"405:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4737,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:17"},"scope":4746,"src":"348:92:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4747,"src":"224:218:17","usedErrors":[],"usedEvents":[]}],"src":"105:338:17"},"id":17},"@openzeppelin/contracts/utils/Create2.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Create2.sol","exportedSymbols":{"Create2":[4845],"Errors":[4867]},"id":4846,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4748,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":4750,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4846,"sourceUnit":4868,"src":"127:36:18","symbolAliases":[{"foreign":{"id":4749,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"135:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Create2","contractDependencies":[],"contractKind":"library","documentation":{"id":4751,"nodeType":"StructuredDocumentation","src":"165:367:18","text":" @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n `CREATE2` can be used to compute in advance the address where a smart\n contract will be deployed, which allows for interesting new mechanisms known\n as 'counterfactual interactions'.\n See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n information."},"fullyImplemented":true,"id":4845,"linearizedBaseContracts":[4845],"name":"Create2","nameLocation":"541:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4752,"nodeType":"StructuredDocumentation","src":"555:50:18","text":" @dev There's no code to deploy."},"errorSelector":"4ca249dc","id":4754,"name":"Create2EmptyBytecode","nameLocation":"616:20:18","nodeType":"ErrorDefinition","parameters":{"id":4753,"nodeType":"ParameterList","parameters":[],"src":"636:2:18"},"src":"610:29:18"},{"body":{"id":4809,"nodeType":"Block","src":"1311:746:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4768,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1333:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$4845","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$4845","typeString":"library Create2"}],"id":4767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1325:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4766,"name":"address","nodeType":"ElementaryTypeName","src":"1325:7:18","typeDescriptions":{}}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1325:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1339:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1325:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4771,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"1349:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1325:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4785,"nodeType":"IfStatement","src":"1321:125:18","trueBody":{"id":4784,"nodeType":"Block","src":"1357:89:18","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":4778,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1413:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$4845","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$4845","typeString":"library Create2"}],"id":4777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1405:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4776,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:18","typeDescriptions":{}}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1405:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1419:7:18","memberName":"balance","nodeType":"MemberAccess","src":"1405:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"1428:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4773,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"1378:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1385:19:18","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":4855,"src":"1378:26:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1378:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4783,"nodeType":"RevertStatement","src":"1371:64:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4786,"name":"bytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4761,"src":"1459:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1468:6:18","memberName":"length","nodeType":"MemberAccess","src":"1459:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1478:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1459:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4794,"nodeType":"IfStatement","src":"1455:80:18","trueBody":{"id":4793,"nodeType":"Block","src":"1481:54:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4790,"name":"Create2EmptyBytecode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4754,"src":"1502:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1502:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4792,"nodeType":"RevertStatement","src":"1495:29:18"}]}},{"AST":{"nativeSrc":"1569:392:18","nodeType":"YulBlock","src":"1569:392:18","statements":[{"nativeSrc":"1583:67:18","nodeType":"YulAssignment","src":"1583:67:18","value":{"arguments":[{"name":"amount","nativeSrc":"1599:6:18","nodeType":"YulIdentifier","src":"1599:6:18"},{"arguments":[{"name":"bytecode","nativeSrc":"1611:8:18","nodeType":"YulIdentifier","src":"1611:8:18"},{"kind":"number","nativeSrc":"1621:4:18","nodeType":"YulLiteral","src":"1621:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1607:3:18","nodeType":"YulIdentifier","src":"1607:3:18"},"nativeSrc":"1607:19:18","nodeType":"YulFunctionCall","src":"1607:19:18"},{"arguments":[{"name":"bytecode","nativeSrc":"1634:8:18","nodeType":"YulIdentifier","src":"1634:8:18"}],"functionName":{"name":"mload","nativeSrc":"1628:5:18","nodeType":"YulIdentifier","src":"1628:5:18"},"nativeSrc":"1628:15:18","nodeType":"YulFunctionCall","src":"1628:15:18"},{"name":"salt","nativeSrc":"1645:4:18","nodeType":"YulIdentifier","src":"1645:4:18"}],"functionName":{"name":"create2","nativeSrc":"1591:7:18","nodeType":"YulIdentifier","src":"1591:7:18"},"nativeSrc":"1591:59:18","nodeType":"YulFunctionCall","src":"1591:59:18"},"variableNames":[{"name":"addr","nativeSrc":"1583:4:18","nodeType":"YulIdentifier","src":"1583:4:18"}]},{"body":{"nativeSrc":"1800:151:18","nodeType":"YulBlock","src":"1800:151:18","statements":[{"nativeSrc":"1818:20:18","nodeType":"YulVariableDeclaration","src":"1818:20:18","value":{"arguments":[{"kind":"number","nativeSrc":"1833:4:18","nodeType":"YulLiteral","src":"1833:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1827:5:18","nodeType":"YulIdentifier","src":"1827:5:18"},"nativeSrc":"1827:11:18","nodeType":"YulFunctionCall","src":"1827:11:18"},"variables":[{"name":"p","nativeSrc":"1822:1:18","nodeType":"YulTypedName","src":"1822:1:18","type":""}]},{"expression":{"arguments":[{"name":"p","nativeSrc":"1870:1:18","nodeType":"YulIdentifier","src":"1870:1:18"},{"kind":"number","nativeSrc":"1873:1:18","nodeType":"YulLiteral","src":"1873:1:18","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1876:14:18","nodeType":"YulIdentifier","src":"1876:14:18"},"nativeSrc":"1876:16:18","nodeType":"YulFunctionCall","src":"1876:16:18"}],"functionName":{"name":"returndatacopy","nativeSrc":"1855:14:18","nodeType":"YulIdentifier","src":"1855:14:18"},"nativeSrc":"1855:38:18","nodeType":"YulFunctionCall","src":"1855:38:18"},"nativeSrc":"1855:38:18","nodeType":"YulExpressionStatement","src":"1855:38:18"},{"expression":{"arguments":[{"name":"p","nativeSrc":"1917:1:18","nodeType":"YulIdentifier","src":"1917:1:18"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1920:14:18","nodeType":"YulIdentifier","src":"1920:14:18"},"nativeSrc":"1920:16:18","nodeType":"YulFunctionCall","src":"1920:16:18"}],"functionName":{"name":"revert","nativeSrc":"1910:6:18","nodeType":"YulIdentifier","src":"1910:6:18"},"nativeSrc":"1910:27:18","nodeType":"YulFunctionCall","src":"1910:27:18"},"nativeSrc":"1910:27:18","nodeType":"YulExpressionStatement","src":"1910:27:18"}]},"condition":{"arguments":[{"arguments":[{"name":"addr","nativeSrc":"1762:4:18","nodeType":"YulIdentifier","src":"1762:4:18"}],"functionName":{"name":"iszero","nativeSrc":"1755:6:18","nodeType":"YulIdentifier","src":"1755:6:18"},"nativeSrc":"1755:12:18","nodeType":"YulFunctionCall","src":"1755:12:18"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1780:14:18","nodeType":"YulIdentifier","src":"1780:14:18"},"nativeSrc":"1780:16:18","nodeType":"YulFunctionCall","src":"1780:16:18"}],"functionName":{"name":"iszero","nativeSrc":"1773:6:18","nodeType":"YulIdentifier","src":"1773:6:18"},"nativeSrc":"1773:24:18","nodeType":"YulFunctionCall","src":"1773:24:18"}],"functionName":{"name":"not","nativeSrc":"1769:3:18","nodeType":"YulIdentifier","src":"1769:3:18"},"nativeSrc":"1769:29:18","nodeType":"YulFunctionCall","src":"1769:29:18"}],"functionName":{"name":"and","nativeSrc":"1751:3:18","nodeType":"YulIdentifier","src":"1751:3:18"},"nativeSrc":"1751:48:18","nodeType":"YulFunctionCall","src":"1751:48:18"},"nativeSrc":"1748:203:18","nodeType":"YulIf","src":"1748:203:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":4764,"isOffset":false,"isSlot":false,"src":"1583:4:18","valueSize":1},{"declaration":4764,"isOffset":false,"isSlot":false,"src":"1762:4:18","valueSize":1},{"declaration":4757,"isOffset":false,"isSlot":false,"src":"1599:6:18","valueSize":1},{"declaration":4761,"isOffset":false,"isSlot":false,"src":"1611:8:18","valueSize":1},{"declaration":4761,"isOffset":false,"isSlot":false,"src":"1634:8:18","valueSize":1},{"declaration":4759,"isOffset":false,"isSlot":false,"src":"1645:4:18","valueSize":1}],"flags":["memory-safe"],"id":4795,"nodeType":"InlineAssembly","src":"1544:417:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4796,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"1974:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1982:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4797,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:18","typeDescriptions":{}}},"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1982:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1974:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4808,"nodeType":"IfStatement","src":"1970:81:18","trueBody":{"id":4807,"nodeType":"Block","src":"1994:57:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4802,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"2015:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$4867_$","typeString":"type(library Errors)"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2022:16:18","memberName":"FailedDeployment","nodeType":"MemberAccess","referencedDeclaration":4861,"src":"2015:23:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2015:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4806,"nodeType":"RevertStatement","src":"2008:32:18"}]}}]},"documentation":{"id":4755,"nodeType":"StructuredDocumentation","src":"645:560:18","text":" @dev Deploys a contract using `CREATE2`. The address where the contract\n will be deployed can be known in advance via {computeAddress}.\n The bytecode for a contract can be obtained from Solidity with\n `type(contractName).creationCode`.\n Requirements:\n - `bytecode` must not be empty.\n - `salt` must have not been used for `bytecode` already.\n - the factory must have a balance of at least `amount`.\n - if `amount` is non-zero, `bytecode` must have a `payable` constructor."},"id":4810,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nameLocation":"1219:6:18","nodeType":"FunctionDefinition","parameters":{"id":4762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4757,"mutability":"mutable","name":"amount","nameLocation":"1234:6:18","nodeType":"VariableDeclaration","scope":4810,"src":"1226:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4759,"mutability":"mutable","name":"salt","nameLocation":"1250:4:18","nodeType":"VariableDeclaration","scope":4810,"src":"1242:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1242:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4761,"mutability":"mutable","name":"bytecode","nameLocation":"1269:8:18","nodeType":"VariableDeclaration","scope":4810,"src":"1256:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4760,"name":"bytes","nodeType":"ElementaryTypeName","src":"1256:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1225:53:18"},"returnParameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"addr","nameLocation":"1305:4:18","nodeType":"VariableDeclaration","scope":4810,"src":"1297:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4763,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1296:14:18"},"scope":4845,"src":"1210:847:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4829,"nodeType":"Block","src":"2353:73:18","statements":[{"expression":{"arguments":[{"id":4821,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"2385:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4822,"name":"bytecodeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"2391:12:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4825,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2413:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_Create2_$4845","typeString":"library Create2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Create2_$4845","typeString":"library Create2"}],"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2405:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4823,"name":"address","nodeType":"ElementaryTypeName","src":"2405:7:18","typeDescriptions":{}}},"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2405:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4820,"name":"computeAddress","nodeType":"Identifier","overloadedDeclarations":[4830,4844],"referencedDeclaration":4844,"src":"2370:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (bytes32,bytes32,address) pure returns (address)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4819,"id":4828,"nodeType":"Return","src":"2363:56:18"}]},"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"2063:193:18","text":" @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n `bytecodeHash` or `salt` will result in a new destination address."},"id":4830,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2270:14:18","nodeType":"FunctionDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"salt","nameLocation":"2293:4:18","nodeType":"VariableDeclaration","scope":4830,"src":"2285:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2285:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4815,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2307:12:18","nodeType":"VariableDeclaration","scope":4830,"src":"2299:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2299:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2284:36:18"},"returnParameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4830,"src":"2344:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4817,"name":"address","nodeType":"ElementaryTypeName","src":"2344:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2343:9:18"},"scope":4845,"src":"2261:165:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4843,"nodeType":"Block","src":"2784:1679:18","statements":[{"AST":{"nativeSrc":"2819:1638:18","nodeType":"YulBlock","src":"2819:1638:18","statements":[{"nativeSrc":"2833:22:18","nodeType":"YulVariableDeclaration","src":"2833:22:18","value":{"arguments":[{"kind":"number","nativeSrc":"2850:4:18","nodeType":"YulLiteral","src":"2850:4:18","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"2844:5:18","nodeType":"YulIdentifier","src":"2844:5:18"},"nativeSrc":"2844:11:18","nodeType":"YulFunctionCall","src":"2844:11:18"},"variables":[{"name":"ptr","nativeSrc":"2837:3:18","nodeType":"YulTypedName","src":"2837:3:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4057:3:18","nodeType":"YulIdentifier","src":"4057:3:18"},{"kind":"number","nativeSrc":"4062:4:18","nodeType":"YulLiteral","src":"4062:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"4053:3:18","nodeType":"YulIdentifier","src":"4053:3:18"},"nativeSrc":"4053:14:18","nodeType":"YulFunctionCall","src":"4053:14:18"},{"name":"bytecodeHash","nativeSrc":"4069:12:18","nodeType":"YulIdentifier","src":"4069:12:18"}],"functionName":{"name":"mstore","nativeSrc":"4046:6:18","nodeType":"YulIdentifier","src":"4046:6:18"},"nativeSrc":"4046:36:18","nodeType":"YulFunctionCall","src":"4046:36:18"},"nativeSrc":"4046:36:18","nodeType":"YulExpressionStatement","src":"4046:36:18"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4106:3:18","nodeType":"YulIdentifier","src":"4106:3:18"},{"kind":"number","nativeSrc":"4111:4:18","nodeType":"YulLiteral","src":"4111:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4102:3:18","nodeType":"YulIdentifier","src":"4102:3:18"},"nativeSrc":"4102:14:18","nodeType":"YulFunctionCall","src":"4102:14:18"},{"name":"salt","nativeSrc":"4118:4:18","nodeType":"YulIdentifier","src":"4118:4:18"}],"functionName":{"name":"mstore","nativeSrc":"4095:6:18","nodeType":"YulIdentifier","src":"4095:6:18"},"nativeSrc":"4095:28:18","nodeType":"YulFunctionCall","src":"4095:28:18"},"nativeSrc":"4095:28:18","nodeType":"YulExpressionStatement","src":"4095:28:18"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4143:3:18","nodeType":"YulIdentifier","src":"4143:3:18"},{"name":"deployer","nativeSrc":"4148:8:18","nodeType":"YulIdentifier","src":"4148:8:18"}],"functionName":{"name":"mstore","nativeSrc":"4136:6:18","nodeType":"YulIdentifier","src":"4136:6:18"},"nativeSrc":"4136:21:18","nodeType":"YulFunctionCall","src":"4136:21:18"},"nativeSrc":"4136:21:18","nodeType":"YulExpressionStatement","src":"4136:21:18"},{"nativeSrc":"4219:27:18","nodeType":"YulVariableDeclaration","src":"4219:27:18","value":{"arguments":[{"name":"ptr","nativeSrc":"4236:3:18","nodeType":"YulIdentifier","src":"4236:3:18"},{"kind":"number","nativeSrc":"4241:4:18","nodeType":"YulLiteral","src":"4241:4:18","type":"","value":"0x0b"}],"functionName":{"name":"add","nativeSrc":"4232:3:18","nodeType":"YulIdentifier","src":"4232:3:18"},"nativeSrc":"4232:14:18","nodeType":"YulFunctionCall","src":"4232:14:18"},"variables":[{"name":"start","nativeSrc":"4223:5:18","nodeType":"YulTypedName","src":"4223:5:18","type":""}]},{"expression":{"arguments":[{"name":"start","nativeSrc":"4345:5:18","nodeType":"YulIdentifier","src":"4345:5:18"},{"kind":"number","nativeSrc":"4352:4:18","nodeType":"YulLiteral","src":"4352:4:18","type":"","value":"0xff"}],"functionName":{"name":"mstore8","nativeSrc":"4337:7:18","nodeType":"YulIdentifier","src":"4337:7:18"},"nativeSrc":"4337:20:18","nodeType":"YulFunctionCall","src":"4337:20:18"},"nativeSrc":"4337:20:18","nodeType":"YulExpressionStatement","src":"4337:20:18"},{"nativeSrc":"4370:77:18","nodeType":"YulAssignment","src":"4370:77:18","value":{"arguments":[{"arguments":[{"name":"start","nativeSrc":"4392:5:18","nodeType":"YulIdentifier","src":"4392:5:18"},{"kind":"number","nativeSrc":"4399:2:18","nodeType":"YulLiteral","src":"4399:2:18","type":"","value":"85"}],"functionName":{"name":"keccak256","nativeSrc":"4382:9:18","nodeType":"YulIdentifier","src":"4382:9:18"},"nativeSrc":"4382:20:18","nodeType":"YulFunctionCall","src":"4382:20:18"},{"kind":"number","nativeSrc":"4404:42:18","nodeType":"YulLiteral","src":"4404:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4378:3:18","nodeType":"YulIdentifier","src":"4378:3:18"},"nativeSrc":"4378:69:18","nodeType":"YulFunctionCall","src":"4378:69:18"},"variableNames":[{"name":"addr","nativeSrc":"4370:4:18","nodeType":"YulIdentifier","src":"4370:4:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4840,"isOffset":false,"isSlot":false,"src":"4370:4:18","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"4069:12:18","valueSize":1},{"declaration":4837,"isOffset":false,"isSlot":false,"src":"4148:8:18","valueSize":1},{"declaration":4833,"isOffset":false,"isSlot":false,"src":"4118:4:18","valueSize":1}],"flags":["memory-safe"],"id":4842,"nodeType":"InlineAssembly","src":"2794:1663:18"}]},"documentation":{"id":4831,"nodeType":"StructuredDocumentation","src":"2432:232:18","text":" @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}."},"id":4844,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nameLocation":"2678:14:18","nodeType":"FunctionDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4833,"mutability":"mutable","name":"salt","nameLocation":"2701:4:18","nodeType":"VariableDeclaration","scope":4844,"src":"2693:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2693:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4835,"mutability":"mutable","name":"bytecodeHash","nameLocation":"2715:12:18","nodeType":"VariableDeclaration","scope":4844,"src":"2707:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2707:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4837,"mutability":"mutable","name":"deployer","nameLocation":"2737:8:18","nodeType":"VariableDeclaration","scope":4844,"src":"2729:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4836,"name":"address","nodeType":"ElementaryTypeName","src":"2729:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2692:54:18"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"addr","nameLocation":"2778:4:18","nodeType":"VariableDeclaration","scope":4844,"src":"2770:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4839,"name":"address","nodeType":"ElementaryTypeName","src":"2770:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2769:14:18"},"scope":4845,"src":"2669:1794:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4846,"src":"533:3932:18","usedErrors":[4754],"usedEvents":[]}],"src":"101:4365:18"},"id":18},"@openzeppelin/contracts/utils/Errors.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[4867]},"id":4868,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4847,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":4848,"nodeType":"StructuredDocumentation","src":"126:284:19","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":4867,"linearizedBaseContracts":[4867],"name":"Errors","nameLocation":"419:6:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4849,"nodeType":"StructuredDocumentation","src":"432:94:19","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":4855,"name":"InsufficientBalance","nameLocation":"537:19:19","nodeType":"ErrorDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"balance","nameLocation":"565:7:19","nodeType":"VariableDeclaration","scope":4855,"src":"557:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4850,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4853,"mutability":"mutable","name":"needed","nameLocation":"582:6:19","nodeType":"VariableDeclaration","scope":4855,"src":"574:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:19"},"src":"531:59:19"},{"documentation":{"id":4856,"nodeType":"StructuredDocumentation","src":"596:89:19","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":4858,"name":"FailedCall","nameLocation":"696:10:19","nodeType":"ErrorDefinition","parameters":{"id":4857,"nodeType":"ParameterList","parameters":[],"src":"706:2:19"},"src":"690:19:19"},{"documentation":{"id":4859,"nodeType":"StructuredDocumentation","src":"715:46:19","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":4861,"name":"FailedDeployment","nameLocation":"772:16:19","nodeType":"ErrorDefinition","parameters":{"id":4860,"nodeType":"ParameterList","parameters":[],"src":"788:2:19"},"src":"766:25:19"},{"documentation":{"id":4862,"nodeType":"StructuredDocumentation","src":"797:58:19","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":4866,"name":"MissingPrecompile","nameLocation":"866:17:19","nodeType":"ErrorDefinition","parameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4866,"src":"884:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4863,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:19"},"src":"860:33:19"}],"scope":4868,"src":"411:484:19","usedErrors":[4855,4858,4861,4866],"usedEvents":[]}],"src":"100:796:19"},"id":19},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4919]},"id":4920,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4869,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"125:489:20","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4919,"linearizedBaseContracts":[4919],"name":"Panic","nameLocation":"665:5:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4871,"nodeType":"StructuredDocumentation","src":"677:36:20","text":"@dev generic / unspecified error"},"id":4874,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:20","nodeType":"VariableDeclaration","scope":4919,"src":"718:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4875,"nodeType":"StructuredDocumentation","src":"764:37:20","text":"@dev used by the assert() builtin"},"id":4878,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:20","nodeType":"VariableDeclaration","scope":4919,"src":"806:39:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4876,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4879,"nodeType":"StructuredDocumentation","src":"851:41:20","text":"@dev arithmetic underflow or overflow"},"id":4882,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:20","nodeType":"VariableDeclaration","scope":4919,"src":"897:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4880,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:20","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4883,"nodeType":"StructuredDocumentation","src":"950:35:20","text":"@dev division or modulo by zero"},"id":4886,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:20","nodeType":"VariableDeclaration","scope":4919,"src":"990:49:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4887,"nodeType":"StructuredDocumentation","src":"1045:30:20","text":"@dev enum conversion error"},"id":4890,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:20","nodeType":"VariableDeclaration","scope":4919,"src":"1080:54:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:20","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4891,"nodeType":"StructuredDocumentation","src":"1140:36:20","text":"@dev invalid encoding in storage"},"id":4894,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:20","nodeType":"VariableDeclaration","scope":4919,"src":"1181:55:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:20","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4895,"nodeType":"StructuredDocumentation","src":"1242:24:20","text":"@dev empty array pop"},"id":4898,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:20","nodeType":"VariableDeclaration","scope":4919,"src":"1271:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:20","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"1325:35:20","text":"@dev array out of bounds access"},"id":4902,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:20","nodeType":"VariableDeclaration","scope":4919,"src":"1365:52:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:20","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4903,"nodeType":"StructuredDocumentation","src":"1423:65:20","text":"@dev resource error (too large allocation or too large array)"},"id":4906,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:20","nodeType":"VariableDeclaration","scope":4919,"src":"1493:47:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4907,"nodeType":"StructuredDocumentation","src":"1546:42:20","text":"@dev calling invalid internal function"},"id":4910,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:20","nodeType":"VariableDeclaration","scope":4919,"src":"1593:58:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4908,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:20","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4917,"nodeType":"Block","src":"1819:151:20","statements":[{"AST":{"nativeSrc":"1854:110:20","nodeType":"YulBlock","src":"1854:110:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:20","nodeType":"YulLiteral","src":"1875:4:20","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:20","nodeType":"YulLiteral","src":"1881:10:20","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:20","nodeType":"YulIdentifier","src":"1868:6:20"},"nativeSrc":"1868:24:20","nodeType":"YulFunctionCall","src":"1868:24:20"},"nativeSrc":"1868:24:20","nodeType":"YulExpressionStatement","src":"1868:24:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:20","nodeType":"YulLiteral","src":"1912:4:20","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:20","nodeType":"YulIdentifier","src":"1918:4:20"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:20","nodeType":"YulIdentifier","src":"1905:6:20"},"nativeSrc":"1905:18:20","nodeType":"YulFunctionCall","src":"1905:18:20"},"nativeSrc":"1905:18:20","nodeType":"YulExpressionStatement","src":"1905:18:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:20","nodeType":"YulLiteral","src":"1943:4:20","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:20","nodeType":"YulLiteral","src":"1949:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:20","nodeType":"YulIdentifier","src":"1936:6:20"},"nativeSrc":"1936:18:20","nodeType":"YulFunctionCall","src":"1936:18:20"},"nativeSrc":"1936:18:20","nodeType":"YulExpressionStatement","src":"1936:18:20"}]},"evmVersion":"paris","externalReferences":[{"declaration":4913,"isOffset":false,"isSlot":false,"src":"1918:4:20","valueSize":1}],"flags":["memory-safe"],"id":4916,"nodeType":"InlineAssembly","src":"1829:135:20"}]},"documentation":{"id":4911,"nodeType":"StructuredDocumentation","src":"1658:113:20","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4918,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:20","nodeType":"FunctionDefinition","parameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4913,"mutability":"mutable","name":"code","nameLocation":"1799:4:20","nodeType":"VariableDeclaration","scope":4918,"src":"1791:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:20"},"returnParameters":{"id":4915,"nodeType":"ParameterList","parameters":[],"src":"1819:0:20"},"scope":4919,"src":"1776:194:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4920,"src":"657:1315:20","usedErrors":[],"usedEvents":[]}],"src":"99:1874:20"},"id":20},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[5049]},"id":5050,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4921,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4922,"nodeType":"StructuredDocumentation","src":"225:1373:21","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":5049,"linearizedBaseContracts":[5049],"name":"SlotDerivation","nameLocation":"1607:14:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4931,"nodeType":"Block","src":"1790:194:21","statements":[{"AST":{"nativeSrc":"1825:153:21","nodeType":"YulBlock","src":"1825:153:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:21","nodeType":"YulLiteral","src":"1846:4:21","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:21","nodeType":"YulIdentifier","src":"1870:9:21"},{"kind":"number","nativeSrc":"1881:4:21","nodeType":"YulLiteral","src":"1881:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:21","nodeType":"YulIdentifier","src":"1866:3:21"},"nativeSrc":"1866:20:21","nodeType":"YulFunctionCall","src":"1866:20:21"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:21","nodeType":"YulIdentifier","src":"1894:9:21"}],"functionName":{"name":"mload","nativeSrc":"1888:5:21","nodeType":"YulIdentifier","src":"1888:5:21"},"nativeSrc":"1888:16:21","nodeType":"YulFunctionCall","src":"1888:16:21"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:21","nodeType":"YulIdentifier","src":"1856:9:21"},"nativeSrc":"1856:49:21","nodeType":"YulFunctionCall","src":"1856:49:21"},{"kind":"number","nativeSrc":"1907:1:21","nodeType":"YulLiteral","src":"1907:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:21","nodeType":"YulIdentifier","src":"1852:3:21"},"nativeSrc":"1852:57:21","nodeType":"YulFunctionCall","src":"1852:57:21"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:21","nodeType":"YulIdentifier","src":"1839:6:21"},"nativeSrc":"1839:71:21","nodeType":"YulFunctionCall","src":"1839:71:21"},"nativeSrc":"1839:71:21","nodeType":"YulExpressionStatement","src":"1839:71:21"},{"nativeSrc":"1923:45:21","nodeType":"YulAssignment","src":"1923:45:21","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:21","nodeType":"YulLiteral","src":"1945:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:21","nodeType":"YulLiteral","src":"1951:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:21","nodeType":"YulIdentifier","src":"1935:9:21"},"nativeSrc":"1935:21:21","nodeType":"YulFunctionCall","src":"1935:21:21"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:21","nodeType":"YulLiteral","src":"1962:4:21","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:21","nodeType":"YulIdentifier","src":"1958:3:21"},"nativeSrc":"1958:9:21","nodeType":"YulFunctionCall","src":"1958:9:21"}],"functionName":{"name":"and","nativeSrc":"1931:3:21","nodeType":"YulIdentifier","src":"1931:3:21"},"nativeSrc":"1931:37:21","nodeType":"YulFunctionCall","src":"1931:37:21"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:21","nodeType":"YulIdentifier","src":"1923:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4925,"isOffset":false,"isSlot":false,"src":"1870:9:21","valueSize":1},{"declaration":4925,"isOffset":false,"isSlot":false,"src":"1894:9:21","valueSize":1},{"declaration":4928,"isOffset":false,"isSlot":false,"src":"1923:4:21","valueSize":1}],"flags":["memory-safe"],"id":4930,"nodeType":"InlineAssembly","src":"1800:178:21"}]},"documentation":{"id":4923,"nodeType":"StructuredDocumentation","src":"1628:74:21","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4932,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:21","nodeType":"FunctionDefinition","parameters":{"id":4926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:21","nodeType":"VariableDeclaration","scope":4932,"src":"1728:23:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4924,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:21"},"returnParameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"slot","nameLocation":"1784:4:21","nodeType":"VariableDeclaration","scope":4932,"src":"1776:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4927,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:21"},"scope":5049,"src":"1707:277:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4953,"nodeType":"Block","src":"2176:86:21","statements":[{"id":4952,"nodeType":"UncheckedBlock","src":"2186:70:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4946,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"2233:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4944,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:21","typeDescriptions":{}}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4948,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"2241:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:21","typeDescriptions":{}}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4941,"id":4951,"nodeType":"Return","src":"2210:35:21"}]}]},"documentation":{"id":4933,"nodeType":"StructuredDocumentation","src":"1990:99:21","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4954,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:21","nodeType":"FunctionDefinition","parameters":{"id":4938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"slot","nameLocation":"2118:4:21","nodeType":"VariableDeclaration","scope":4954,"src":"2110:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4937,"mutability":"mutable","name":"pos","nameLocation":"2132:3:21","nodeType":"VariableDeclaration","scope":4954,"src":"2124:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:21"},"returnParameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"result","nameLocation":"2168:6:21","nodeType":"VariableDeclaration","scope":4954,"src":"2160:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:21"},"scope":5049,"src":"2094:168:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4963,"nodeType":"Block","src":"2465:127:21","statements":[{"AST":{"nativeSrc":"2500:86:21","nodeType":"YulBlock","src":"2500:86:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:21","nodeType":"YulLiteral","src":"2521:4:21","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:21","nodeType":"YulIdentifier","src":"2527:4:21"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:21","nodeType":"YulIdentifier","src":"2514:6:21"},"nativeSrc":"2514:18:21","nodeType":"YulFunctionCall","src":"2514:18:21"},"nativeSrc":"2514:18:21","nodeType":"YulExpressionStatement","src":"2514:18:21"},{"nativeSrc":"2545:31:21","nodeType":"YulAssignment","src":"2545:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:21","nodeType":"YulLiteral","src":"2565:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:21","nodeType":"YulLiteral","src":"2571:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:21","nodeType":"YulIdentifier","src":"2555:9:21"},"nativeSrc":"2555:21:21","nodeType":"YulFunctionCall","src":"2555:21:21"},"variableNames":[{"name":"result","nativeSrc":"2545:6:21","nodeType":"YulIdentifier","src":"2545:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4960,"isOffset":false,"isSlot":false,"src":"2545:6:21","valueSize":1},{"declaration":4957,"isOffset":false,"isSlot":false,"src":"2527:4:21","valueSize":1}],"flags":["memory-safe"],"id":4962,"nodeType":"InlineAssembly","src":"2475:111:21"}]},"documentation":{"id":4955,"nodeType":"StructuredDocumentation","src":"2268:118:21","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4964,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:21","nodeType":"FunctionDefinition","parameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"slot","nameLocation":"2420:4:21","nodeType":"VariableDeclaration","scope":4964,"src":"2412:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4956,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:21"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"result","nameLocation":"2457:6:21","nodeType":"VariableDeclaration","scope":4964,"src":"2449:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:21"},"scope":5049,"src":"2391:201:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4975,"nodeType":"Block","src":"2770:179:21","statements":[{"AST":{"nativeSrc":"2805:138:21","nodeType":"YulBlock","src":"2805:138:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:21","nodeType":"YulLiteral","src":"2826:4:21","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:21","nodeType":"YulIdentifier","src":"2836:3:21"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:21","nodeType":"YulLiteral","src":"2845:2:21","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:21","nodeType":"YulLiteral","src":"2853:1:21","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:21","nodeType":"YulIdentifier","src":"2849:3:21"},"nativeSrc":"2849:6:21","nodeType":"YulFunctionCall","src":"2849:6:21"}],"functionName":{"name":"shr","nativeSrc":"2841:3:21","nodeType":"YulIdentifier","src":"2841:3:21"},"nativeSrc":"2841:15:21","nodeType":"YulFunctionCall","src":"2841:15:21"}],"functionName":{"name":"and","nativeSrc":"2832:3:21","nodeType":"YulIdentifier","src":"2832:3:21"},"nativeSrc":"2832:25:21","nodeType":"YulFunctionCall","src":"2832:25:21"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:21","nodeType":"YulIdentifier","src":"2819:6:21"},"nativeSrc":"2819:39:21","nodeType":"YulFunctionCall","src":"2819:39:21"},"nativeSrc":"2819:39:21","nodeType":"YulExpressionStatement","src":"2819:39:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:21","nodeType":"YulLiteral","src":"2878:4:21","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:21","nodeType":"YulIdentifier","src":"2884:4:21"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:21","nodeType":"YulIdentifier","src":"2871:6:21"},"nativeSrc":"2871:18:21","nodeType":"YulFunctionCall","src":"2871:18:21"},"nativeSrc":"2871:18:21","nodeType":"YulExpressionStatement","src":"2871:18:21"},{"nativeSrc":"2902:31:21","nodeType":"YulAssignment","src":"2902:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:21","nodeType":"YulLiteral","src":"2922:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:21","nodeType":"YulLiteral","src":"2928:4:21","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:21","nodeType":"YulIdentifier","src":"2912:9:21"},"nativeSrc":"2912:21:21","nodeType":"YulFunctionCall","src":"2912:21:21"},"variableNames":[{"name":"result","nativeSrc":"2902:6:21","nodeType":"YulIdentifier","src":"2902:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4969,"isOffset":false,"isSlot":false,"src":"2836:3:21","valueSize":1},{"declaration":4972,"isOffset":false,"isSlot":false,"src":"2902:6:21","valueSize":1},{"declaration":4967,"isOffset":false,"isSlot":false,"src":"2884:4:21","valueSize":1}],"flags":["memory-safe"],"id":4974,"nodeType":"InlineAssembly","src":"2780:163:21"}]},"documentation":{"id":4965,"nodeType":"StructuredDocumentation","src":"2598:78:21","text":" @dev Derive the location of a mapping element from the key."},"id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:21","nodeType":"FunctionDefinition","parameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4967,"mutability":"mutable","name":"slot","nameLocation":"2712:4:21","nodeType":"VariableDeclaration","scope":4976,"src":"2704:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4966,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4969,"mutability":"mutable","name":"key","nameLocation":"2726:3:21","nodeType":"VariableDeclaration","scope":4976,"src":"2718:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4968,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:21"},"returnParameters":{"id":4973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4972,"mutability":"mutable","name":"result","nameLocation":"2762:6:21","nodeType":"VariableDeclaration","scope":4976,"src":"2754:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4971,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:21"},"scope":5049,"src":"2681:268:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4987,"nodeType":"Block","src":"3124:173:21","statements":[{"AST":{"nativeSrc":"3159:132:21","nodeType":"YulBlock","src":"3159:132:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:21","nodeType":"YulLiteral","src":"3180:4:21","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:21","nodeType":"YulIdentifier","src":"3200:3:21"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:21","nodeType":"YulIdentifier","src":"3193:6:21"},"nativeSrc":"3193:11:21","nodeType":"YulFunctionCall","src":"3193:11:21"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:21","nodeType":"YulIdentifier","src":"3186:6:21"},"nativeSrc":"3186:19:21","nodeType":"YulFunctionCall","src":"3186:19:21"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:21","nodeType":"YulIdentifier","src":"3173:6:21"},"nativeSrc":"3173:33:21","nodeType":"YulFunctionCall","src":"3173:33:21"},"nativeSrc":"3173:33:21","nodeType":"YulExpressionStatement","src":"3173:33:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:21","nodeType":"YulLiteral","src":"3226:4:21","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:21","nodeType":"YulIdentifier","src":"3232:4:21"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:21","nodeType":"YulIdentifier","src":"3219:6:21"},"nativeSrc":"3219:18:21","nodeType":"YulFunctionCall","src":"3219:18:21"},"nativeSrc":"3219:18:21","nodeType":"YulExpressionStatement","src":"3219:18:21"},{"nativeSrc":"3250:31:21","nodeType":"YulAssignment","src":"3250:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:21","nodeType":"YulLiteral","src":"3270:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:21","nodeType":"YulLiteral","src":"3276:4:21","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:21","nodeType":"YulIdentifier","src":"3260:9:21"},"nativeSrc":"3260:21:21","nodeType":"YulFunctionCall","src":"3260:21:21"},"variableNames":[{"name":"result","nativeSrc":"3250:6:21","nodeType":"YulIdentifier","src":"3250:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4981,"isOffset":false,"isSlot":false,"src":"3200:3:21","valueSize":1},{"declaration":4984,"isOffset":false,"isSlot":false,"src":"3250:6:21","valueSize":1},{"declaration":4979,"isOffset":false,"isSlot":false,"src":"3232:4:21","valueSize":1}],"flags":["memory-safe"],"id":4986,"nodeType":"InlineAssembly","src":"3134:157:21"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"2955:78:21","text":" @dev Derive the location of a mapping element from the key."},"id":4988,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:21","nodeType":"FunctionDefinition","parameters":{"id":4982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"slot","nameLocation":"3069:4:21","nodeType":"VariableDeclaration","scope":4988,"src":"3061:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4981,"mutability":"mutable","name":"key","nameLocation":"3080:3:21","nodeType":"VariableDeclaration","scope":4988,"src":"3075:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4980,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:21"},"returnParameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"result","nameLocation":"3116:6:21","nodeType":"VariableDeclaration","scope":4988,"src":"3108:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4983,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:21"},"scope":5049,"src":"3038:259:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4999,"nodeType":"Block","src":"3475:157:21","statements":[{"AST":{"nativeSrc":"3510:116:21","nodeType":"YulBlock","src":"3510:116:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:21","nodeType":"YulLiteral","src":"3531:4:21","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:21","nodeType":"YulIdentifier","src":"3537:3:21"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:21","nodeType":"YulIdentifier","src":"3524:6:21"},"nativeSrc":"3524:17:21","nodeType":"YulFunctionCall","src":"3524:17:21"},"nativeSrc":"3524:17:21","nodeType":"YulExpressionStatement","src":"3524:17:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:21","nodeType":"YulLiteral","src":"3561:4:21","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:21","nodeType":"YulIdentifier","src":"3567:4:21"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:21","nodeType":"YulIdentifier","src":"3554:6:21"},"nativeSrc":"3554:18:21","nodeType":"YulFunctionCall","src":"3554:18:21"},"nativeSrc":"3554:18:21","nodeType":"YulExpressionStatement","src":"3554:18:21"},{"nativeSrc":"3585:31:21","nodeType":"YulAssignment","src":"3585:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:21","nodeType":"YulLiteral","src":"3605:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:21","nodeType":"YulLiteral","src":"3611:4:21","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:21","nodeType":"YulIdentifier","src":"3595:9:21"},"nativeSrc":"3595:21:21","nodeType":"YulFunctionCall","src":"3595:21:21"},"variableNames":[{"name":"result","nativeSrc":"3585:6:21","nodeType":"YulIdentifier","src":"3585:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4993,"isOffset":false,"isSlot":false,"src":"3537:3:21","valueSize":1},{"declaration":4996,"isOffset":false,"isSlot":false,"src":"3585:6:21","valueSize":1},{"declaration":4991,"isOffset":false,"isSlot":false,"src":"3567:4:21","valueSize":1}],"flags":["memory-safe"],"id":4998,"nodeType":"InlineAssembly","src":"3485:141:21"}]},"documentation":{"id":4989,"nodeType":"StructuredDocumentation","src":"3303:78:21","text":" @dev Derive the location of a mapping element from the key."},"id":5000,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:21","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"slot","nameLocation":"3417:4:21","nodeType":"VariableDeclaration","scope":5000,"src":"3409:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"key","nameLocation":"3431:3:21","nodeType":"VariableDeclaration","scope":5000,"src":"3423:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:21"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"result","nameLocation":"3467:6:21","nodeType":"VariableDeclaration","scope":5000,"src":"3459:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:21"},"scope":5049,"src":"3386:246:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5011,"nodeType":"Block","src":"3810:157:21","statements":[{"AST":{"nativeSrc":"3845:116:21","nodeType":"YulBlock","src":"3845:116:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:21","nodeType":"YulLiteral","src":"3866:4:21","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:21","nodeType":"YulIdentifier","src":"3872:3:21"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:21","nodeType":"YulIdentifier","src":"3859:6:21"},"nativeSrc":"3859:17:21","nodeType":"YulFunctionCall","src":"3859:17:21"},"nativeSrc":"3859:17:21","nodeType":"YulExpressionStatement","src":"3859:17:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:21","nodeType":"YulLiteral","src":"3896:4:21","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:21","nodeType":"YulIdentifier","src":"3902:4:21"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:21","nodeType":"YulIdentifier","src":"3889:6:21"},"nativeSrc":"3889:18:21","nodeType":"YulFunctionCall","src":"3889:18:21"},"nativeSrc":"3889:18:21","nodeType":"YulExpressionStatement","src":"3889:18:21"},{"nativeSrc":"3920:31:21","nodeType":"YulAssignment","src":"3920:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:21","nodeType":"YulLiteral","src":"3940:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:21","nodeType":"YulLiteral","src":"3946:4:21","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:21","nodeType":"YulIdentifier","src":"3930:9:21"},"nativeSrc":"3930:21:21","nodeType":"YulFunctionCall","src":"3930:21:21"},"variableNames":[{"name":"result","nativeSrc":"3920:6:21","nodeType":"YulIdentifier","src":"3920:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5005,"isOffset":false,"isSlot":false,"src":"3872:3:21","valueSize":1},{"declaration":5008,"isOffset":false,"isSlot":false,"src":"3920:6:21","valueSize":1},{"declaration":5003,"isOffset":false,"isSlot":false,"src":"3902:4:21","valueSize":1}],"flags":["memory-safe"],"id":5010,"nodeType":"InlineAssembly","src":"3820:141:21"}]},"documentation":{"id":5001,"nodeType":"StructuredDocumentation","src":"3638:78:21","text":" @dev Derive the location of a mapping element from the key."},"id":5012,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:21","nodeType":"FunctionDefinition","parameters":{"id":5006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5003,"mutability":"mutable","name":"slot","nameLocation":"3752:4:21","nodeType":"VariableDeclaration","scope":5012,"src":"3744:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5002,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5005,"mutability":"mutable","name":"key","nameLocation":"3766:3:21","nodeType":"VariableDeclaration","scope":5012,"src":"3758:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5004,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:21"},"returnParameters":{"id":5009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5008,"mutability":"mutable","name":"result","nameLocation":"3802:6:21","nodeType":"VariableDeclaration","scope":5012,"src":"3794:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:21"},"scope":5049,"src":"3721:246:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5023,"nodeType":"Block","src":"4144:157:21","statements":[{"AST":{"nativeSrc":"4179:116:21","nodeType":"YulBlock","src":"4179:116:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:21","nodeType":"YulLiteral","src":"4200:4:21","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:21","nodeType":"YulIdentifier","src":"4206:3:21"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:21","nodeType":"YulIdentifier","src":"4193:6:21"},"nativeSrc":"4193:17:21","nodeType":"YulFunctionCall","src":"4193:17:21"},"nativeSrc":"4193:17:21","nodeType":"YulExpressionStatement","src":"4193:17:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:21","nodeType":"YulLiteral","src":"4230:4:21","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:21","nodeType":"YulIdentifier","src":"4236:4:21"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:21","nodeType":"YulIdentifier","src":"4223:6:21"},"nativeSrc":"4223:18:21","nodeType":"YulFunctionCall","src":"4223:18:21"},"nativeSrc":"4223:18:21","nodeType":"YulExpressionStatement","src":"4223:18:21"},{"nativeSrc":"4254:31:21","nodeType":"YulAssignment","src":"4254:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:21","nodeType":"YulLiteral","src":"4274:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:21","nodeType":"YulLiteral","src":"4280:4:21","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:21","nodeType":"YulIdentifier","src":"4264:9:21"},"nativeSrc":"4264:21:21","nodeType":"YulFunctionCall","src":"4264:21:21"},"variableNames":[{"name":"result","nativeSrc":"4254:6:21","nodeType":"YulIdentifier","src":"4254:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5017,"isOffset":false,"isSlot":false,"src":"4206:3:21","valueSize":1},{"declaration":5020,"isOffset":false,"isSlot":false,"src":"4254:6:21","valueSize":1},{"declaration":5015,"isOffset":false,"isSlot":false,"src":"4236:4:21","valueSize":1}],"flags":["memory-safe"],"id":5022,"nodeType":"InlineAssembly","src":"4154:141:21"}]},"documentation":{"id":5013,"nodeType":"StructuredDocumentation","src":"3973:78:21","text":" @dev Derive the location of a mapping element from the key."},"id":5024,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:21","nodeType":"FunctionDefinition","parameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5015,"mutability":"mutable","name":"slot","nameLocation":"4087:4:21","nodeType":"VariableDeclaration","scope":5024,"src":"4079:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5014,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5017,"mutability":"mutable","name":"key","nameLocation":"4100:3:21","nodeType":"VariableDeclaration","scope":5024,"src":"4093:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5016,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:21"},"returnParameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"result","nameLocation":"4136:6:21","nodeType":"VariableDeclaration","scope":5024,"src":"4128:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:21"},"scope":5049,"src":"4056:245:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5035,"nodeType":"Block","src":"4485:326:21","statements":[{"AST":{"nativeSrc":"4520:285:21","nodeType":"YulBlock","src":"4520:285:21","statements":[{"nativeSrc":"4534:24:21","nodeType":"YulVariableDeclaration","src":"4534:24:21","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:21","nodeType":"YulIdentifier","src":"4554:3:21"}],"functionName":{"name":"mload","nativeSrc":"4548:5:21","nodeType":"YulIdentifier","src":"4548:5:21"},"nativeSrc":"4548:10:21","nodeType":"YulFunctionCall","src":"4548:10:21"},"variables":[{"name":"length","nativeSrc":"4538:6:21","nodeType":"YulTypedName","src":"4538:6:21","type":""}]},{"nativeSrc":"4571:27:21","nodeType":"YulVariableDeclaration","src":"4571:27:21","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:21","nodeType":"YulIdentifier","src":"4588:3:21"},{"kind":"number","nativeSrc":"4593:4:21","nodeType":"YulLiteral","src":"4593:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:21","nodeType":"YulIdentifier","src":"4584:3:21"},"nativeSrc":"4584:14:21","nodeType":"YulFunctionCall","src":"4584:14:21"},"variables":[{"name":"begin","nativeSrc":"4575:5:21","nodeType":"YulTypedName","src":"4575:5:21","type":""}]},{"nativeSrc":"4611:29:21","nodeType":"YulVariableDeclaration","src":"4611:29:21","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:21","nodeType":"YulIdentifier","src":"4626:5:21"},{"name":"length","nativeSrc":"4633:6:21","nodeType":"YulIdentifier","src":"4633:6:21"}],"functionName":{"name":"add","nativeSrc":"4622:3:21","nodeType":"YulIdentifier","src":"4622:3:21"},"nativeSrc":"4622:18:21","nodeType":"YulFunctionCall","src":"4622:18:21"},"variables":[{"name":"end","nativeSrc":"4615:3:21","nodeType":"YulTypedName","src":"4615:3:21","type":""}]},{"nativeSrc":"4653:23:21","nodeType":"YulVariableDeclaration","src":"4653:23:21","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:21","nodeType":"YulIdentifier","src":"4672:3:21"}],"functionName":{"name":"mload","nativeSrc":"4666:5:21","nodeType":"YulIdentifier","src":"4666:5:21"},"nativeSrc":"4666:10:21","nodeType":"YulFunctionCall","src":"4666:10:21"},"variables":[{"name":"cache","nativeSrc":"4657:5:21","nodeType":"YulTypedName","src":"4657:5:21","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:21","nodeType":"YulIdentifier","src":"4696:3:21"},{"name":"slot","nativeSrc":"4701:4:21","nodeType":"YulIdentifier","src":"4701:4:21"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:21","nodeType":"YulIdentifier","src":"4689:6:21"},"nativeSrc":"4689:17:21","nodeType":"YulFunctionCall","src":"4689:17:21"},"nativeSrc":"4689:17:21","nodeType":"YulExpressionStatement","src":"4689:17:21"},{"nativeSrc":"4719:45:21","nodeType":"YulAssignment","src":"4719:45:21","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:21","nodeType":"YulIdentifier","src":"4739:5:21"},{"arguments":[{"name":"length","nativeSrc":"4750:6:21","nodeType":"YulIdentifier","src":"4750:6:21"},{"kind":"number","nativeSrc":"4758:4:21","nodeType":"YulLiteral","src":"4758:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:21","nodeType":"YulIdentifier","src":"4746:3:21"},"nativeSrc":"4746:17:21","nodeType":"YulFunctionCall","src":"4746:17:21"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:21","nodeType":"YulIdentifier","src":"4729:9:21"},"nativeSrc":"4729:35:21","nodeType":"YulFunctionCall","src":"4729:35:21"},"variableNames":[{"name":"result","nativeSrc":"4719:6:21","nodeType":"YulIdentifier","src":"4719:6:21"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:21","nodeType":"YulIdentifier","src":"4784:3:21"},{"name":"cache","nativeSrc":"4789:5:21","nodeType":"YulIdentifier","src":"4789:5:21"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:21","nodeType":"YulIdentifier","src":"4777:6:21"},"nativeSrc":"4777:18:21","nodeType":"YulFunctionCall","src":"4777:18:21"},"nativeSrc":"4777:18:21","nodeType":"YulExpressionStatement","src":"4777:18:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":5029,"isOffset":false,"isSlot":false,"src":"4554:3:21","valueSize":1},{"declaration":5029,"isOffset":false,"isSlot":false,"src":"4588:3:21","valueSize":1},{"declaration":5032,"isOffset":false,"isSlot":false,"src":"4719:6:21","valueSize":1},{"declaration":5027,"isOffset":false,"isSlot":false,"src":"4701:4:21","valueSize":1}],"flags":["memory-safe"],"id":5034,"nodeType":"InlineAssembly","src":"4495:310:21"}]},"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"4307:78:21","text":" @dev Derive the location of a mapping element from the key."},"id":5036,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:21","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"slot","nameLocation":"4421:4:21","nodeType":"VariableDeclaration","scope":5036,"src":"4413:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"key","nameLocation":"4441:3:21","nodeType":"VariableDeclaration","scope":5036,"src":"4427:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5028,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:21"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"result","nameLocation":"4477:6:21","nodeType":"VariableDeclaration","scope":5036,"src":"4469:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:21"},"scope":5049,"src":"4390:421:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5047,"nodeType":"Block","src":"4994:326:21","statements":[{"AST":{"nativeSrc":"5029:285:21","nodeType":"YulBlock","src":"5029:285:21","statements":[{"nativeSrc":"5043:24:21","nodeType":"YulVariableDeclaration","src":"5043:24:21","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:21","nodeType":"YulIdentifier","src":"5063:3:21"}],"functionName":{"name":"mload","nativeSrc":"5057:5:21","nodeType":"YulIdentifier","src":"5057:5:21"},"nativeSrc":"5057:10:21","nodeType":"YulFunctionCall","src":"5057:10:21"},"variables":[{"name":"length","nativeSrc":"5047:6:21","nodeType":"YulTypedName","src":"5047:6:21","type":""}]},{"nativeSrc":"5080:27:21","nodeType":"YulVariableDeclaration","src":"5080:27:21","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:21","nodeType":"YulIdentifier","src":"5097:3:21"},{"kind":"number","nativeSrc":"5102:4:21","nodeType":"YulLiteral","src":"5102:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:21","nodeType":"YulIdentifier","src":"5093:3:21"},"nativeSrc":"5093:14:21","nodeType":"YulFunctionCall","src":"5093:14:21"},"variables":[{"name":"begin","nativeSrc":"5084:5:21","nodeType":"YulTypedName","src":"5084:5:21","type":""}]},{"nativeSrc":"5120:29:21","nodeType":"YulVariableDeclaration","src":"5120:29:21","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:21","nodeType":"YulIdentifier","src":"5135:5:21"},{"name":"length","nativeSrc":"5142:6:21","nodeType":"YulIdentifier","src":"5142:6:21"}],"functionName":{"name":"add","nativeSrc":"5131:3:21","nodeType":"YulIdentifier","src":"5131:3:21"},"nativeSrc":"5131:18:21","nodeType":"YulFunctionCall","src":"5131:18:21"},"variables":[{"name":"end","nativeSrc":"5124:3:21","nodeType":"YulTypedName","src":"5124:3:21","type":""}]},{"nativeSrc":"5162:23:21","nodeType":"YulVariableDeclaration","src":"5162:23:21","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:21","nodeType":"YulIdentifier","src":"5181:3:21"}],"functionName":{"name":"mload","nativeSrc":"5175:5:21","nodeType":"YulIdentifier","src":"5175:5:21"},"nativeSrc":"5175:10:21","nodeType":"YulFunctionCall","src":"5175:10:21"},"variables":[{"name":"cache","nativeSrc":"5166:5:21","nodeType":"YulTypedName","src":"5166:5:21","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:21","nodeType":"YulIdentifier","src":"5205:3:21"},{"name":"slot","nativeSrc":"5210:4:21","nodeType":"YulIdentifier","src":"5210:4:21"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:21","nodeType":"YulIdentifier","src":"5198:6:21"},"nativeSrc":"5198:17:21","nodeType":"YulFunctionCall","src":"5198:17:21"},"nativeSrc":"5198:17:21","nodeType":"YulExpressionStatement","src":"5198:17:21"},{"nativeSrc":"5228:45:21","nodeType":"YulAssignment","src":"5228:45:21","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:21","nodeType":"YulIdentifier","src":"5248:5:21"},{"arguments":[{"name":"length","nativeSrc":"5259:6:21","nodeType":"YulIdentifier","src":"5259:6:21"},{"kind":"number","nativeSrc":"5267:4:21","nodeType":"YulLiteral","src":"5267:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:21","nodeType":"YulIdentifier","src":"5255:3:21"},"nativeSrc":"5255:17:21","nodeType":"YulFunctionCall","src":"5255:17:21"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:21","nodeType":"YulIdentifier","src":"5238:9:21"},"nativeSrc":"5238:35:21","nodeType":"YulFunctionCall","src":"5238:35:21"},"variableNames":[{"name":"result","nativeSrc":"5228:6:21","nodeType":"YulIdentifier","src":"5228:6:21"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:21","nodeType":"YulIdentifier","src":"5293:3:21"},{"name":"cache","nativeSrc":"5298:5:21","nodeType":"YulIdentifier","src":"5298:5:21"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:21","nodeType":"YulIdentifier","src":"5286:6:21"},"nativeSrc":"5286:18:21","nodeType":"YulFunctionCall","src":"5286:18:21"},"nativeSrc":"5286:18:21","nodeType":"YulExpressionStatement","src":"5286:18:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":5041,"isOffset":false,"isSlot":false,"src":"5063:3:21","valueSize":1},{"declaration":5041,"isOffset":false,"isSlot":false,"src":"5097:3:21","valueSize":1},{"declaration":5044,"isOffset":false,"isSlot":false,"src":"5228:6:21","valueSize":1},{"declaration":5039,"isOffset":false,"isSlot":false,"src":"5210:4:21","valueSize":1}],"flags":["memory-safe"],"id":5046,"nodeType":"InlineAssembly","src":"5004:310:21"}]},"documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"4817:78:21","text":" @dev Derive the location of a mapping element from the key."},"id":5048,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:21","nodeType":"FunctionDefinition","parameters":{"id":5042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"slot","nameLocation":"4931:4:21","nodeType":"VariableDeclaration","scope":5048,"src":"4923:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5038,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5041,"mutability":"mutable","name":"key","nameLocation":"4950:3:21","nodeType":"VariableDeclaration","scope":5048,"src":"4937:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5040,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:21"},"returnParameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"result","nameLocation":"4986:6:21","nodeType":"VariableDeclaration","scope":5048,"src":"4978:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5043,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:21"},"scope":5049,"src":"4900:420:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5050,"src":"1599:3723:21","usedErrors":[],"usedEvents":[]}],"src":"199:5124:21"},"id":21},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[5173]},"id":5174,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5051,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":5052,"nodeType":"StructuredDocumentation","src":"219:1187:22","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":5173,"linearizedBaseContracts":[5173],"name":"StorageSlot","nameLocation":"1415:11:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":5055,"members":[{"constant":false,"id":5054,"mutability":"mutable","name":"value","nameLocation":"1470:5:22","nodeType":"VariableDeclaration","scope":5055,"src":"1462:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5053,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:22","nodeType":"StructDefinition","scope":5173,"src":"1433:49:22","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":5058,"members":[{"constant":false,"id":5057,"mutability":"mutable","name":"value","nameLocation":"1522:5:22","nodeType":"VariableDeclaration","scope":5058,"src":"1517:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5056,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:22","nodeType":"StructDefinition","scope":5173,"src":"1488:46:22","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":5061,"members":[{"constant":false,"id":5060,"mutability":"mutable","name":"value","nameLocation":"1577:5:22","nodeType":"VariableDeclaration","scope":5061,"src":"1569:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:22","nodeType":"StructDefinition","scope":5173,"src":"1540:49:22","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":5064,"members":[{"constant":false,"id":5063,"mutability":"mutable","name":"value","nameLocation":"1632:5:22","nodeType":"VariableDeclaration","scope":5064,"src":"1624:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:22","nodeType":"StructDefinition","scope":5173,"src":"1595:49:22","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":5067,"members":[{"constant":false,"id":5066,"mutability":"mutable","name":"value","nameLocation":"1685:5:22","nodeType":"VariableDeclaration","scope":5067,"src":"1678:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5065,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:22","nodeType":"StructDefinition","scope":5173,"src":"1650:47:22","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":5070,"members":[{"constant":false,"id":5069,"mutability":"mutable","name":"value","nameLocation":"1738:5:22","nodeType":"VariableDeclaration","scope":5070,"src":"1731:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5068,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:22","nodeType":"StructDefinition","scope":5173,"src":"1703:47:22","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":5073,"members":[{"constant":false,"id":5072,"mutability":"mutable","name":"value","nameLocation":"1789:5:22","nodeType":"VariableDeclaration","scope":5073,"src":"1783:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5071,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:22","nodeType":"StructDefinition","scope":5173,"src":"1756:45:22","visibility":"public"},{"body":{"id":5083,"nodeType":"Block","src":"1983:79:22","statements":[{"AST":{"nativeSrc":"2018:38:22","nodeType":"YulBlock","src":"2018:38:22","statements":[{"nativeSrc":"2032:14:22","nodeType":"YulAssignment","src":"2032:14:22","value":{"name":"slot","nativeSrc":"2042:4:22","nodeType":"YulIdentifier","src":"2042:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:22","nodeType":"YulIdentifier","src":"2032:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5080,"isOffset":false,"isSlot":true,"src":"2032:6:22","suffix":"slot","valueSize":1},{"declaration":5076,"isOffset":false,"isSlot":false,"src":"2042:4:22","valueSize":1}],"flags":["memory-safe"],"id":5082,"nodeType":"InlineAssembly","src":"1993:63:22"}]},"documentation":{"id":5074,"nodeType":"StructuredDocumentation","src":"1807:87:22","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":5084,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:22","nodeType":"FunctionDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5076,"mutability":"mutable","name":"slot","nameLocation":"1931:4:22","nodeType":"VariableDeclaration","scope":5084,"src":"1923:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:22"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"r","nameLocation":"1980:1:22","nodeType":"VariableDeclaration","scope":5084,"src":"1960:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5055_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":5079,"nodeType":"UserDefinedTypeName","pathNode":{"id":5078,"name":"AddressSlot","nameLocations":["1960:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":5055,"src":"1960:11:22"},"referencedDeclaration":5055,"src":"1960:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$5055_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:22"},"scope":5173,"src":"1899:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5094,"nodeType":"Block","src":"2243:79:22","statements":[{"AST":{"nativeSrc":"2278:38:22","nodeType":"YulBlock","src":"2278:38:22","statements":[{"nativeSrc":"2292:14:22","nodeType":"YulAssignment","src":"2292:14:22","value":{"name":"slot","nativeSrc":"2302:4:22","nodeType":"YulIdentifier","src":"2302:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:22","nodeType":"YulIdentifier","src":"2292:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5091,"isOffset":false,"isSlot":true,"src":"2292:6:22","suffix":"slot","valueSize":1},{"declaration":5087,"isOffset":false,"isSlot":false,"src":"2302:4:22","valueSize":1}],"flags":["memory-safe"],"id":5093,"nodeType":"InlineAssembly","src":"2253:63:22"}]},"documentation":{"id":5085,"nodeType":"StructuredDocumentation","src":"2068:86:22","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":5095,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:22","nodeType":"FunctionDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5087,"mutability":"mutable","name":"slot","nameLocation":"2191:4:22","nodeType":"VariableDeclaration","scope":5095,"src":"2183:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:22"},"returnParameters":{"id":5092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5091,"mutability":"mutable","name":"r","nameLocation":"2240:1:22","nodeType":"VariableDeclaration","scope":5095,"src":"2220:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$5058_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":5090,"nodeType":"UserDefinedTypeName","pathNode":{"id":5089,"name":"BooleanSlot","nameLocations":["2220:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":5058,"src":"2220:11:22"},"referencedDeclaration":5058,"src":"2220:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$5058_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:22"},"scope":5173,"src":"2159:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5105,"nodeType":"Block","src":"2503:79:22","statements":[{"AST":{"nativeSrc":"2538:38:22","nodeType":"YulBlock","src":"2538:38:22","statements":[{"nativeSrc":"2552:14:22","nodeType":"YulAssignment","src":"2552:14:22","value":{"name":"slot","nativeSrc":"2562:4:22","nodeType":"YulIdentifier","src":"2562:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:22","nodeType":"YulIdentifier","src":"2552:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5102,"isOffset":false,"isSlot":true,"src":"2552:6:22","suffix":"slot","valueSize":1},{"declaration":5098,"isOffset":false,"isSlot":false,"src":"2562:4:22","valueSize":1}],"flags":["memory-safe"],"id":5104,"nodeType":"InlineAssembly","src":"2513:63:22"}]},"documentation":{"id":5096,"nodeType":"StructuredDocumentation","src":"2328:86:22","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":5106,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:22","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"slot","nameLocation":"2451:4:22","nodeType":"VariableDeclaration","scope":5106,"src":"2443:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:22"},"returnParameters":{"id":5103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5102,"mutability":"mutable","name":"r","nameLocation":"2500:1:22","nodeType":"VariableDeclaration","scope":5106,"src":"2480:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5061_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":5101,"nodeType":"UserDefinedTypeName","pathNode":{"id":5100,"name":"Bytes32Slot","nameLocations":["2480:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":5061,"src":"2480:11:22"},"referencedDeclaration":5061,"src":"2480:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$5061_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:22"},"scope":5173,"src":"2419:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5116,"nodeType":"Block","src":"2763:79:22","statements":[{"AST":{"nativeSrc":"2798:38:22","nodeType":"YulBlock","src":"2798:38:22","statements":[{"nativeSrc":"2812:14:22","nodeType":"YulAssignment","src":"2812:14:22","value":{"name":"slot","nativeSrc":"2822:4:22","nodeType":"YulIdentifier","src":"2822:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:22","nodeType":"YulIdentifier","src":"2812:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5113,"isOffset":false,"isSlot":true,"src":"2812:6:22","suffix":"slot","valueSize":1},{"declaration":5109,"isOffset":false,"isSlot":false,"src":"2822:4:22","valueSize":1}],"flags":["memory-safe"],"id":5115,"nodeType":"InlineAssembly","src":"2773:63:22"}]},"documentation":{"id":5107,"nodeType":"StructuredDocumentation","src":"2588:86:22","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":5117,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:22","nodeType":"FunctionDefinition","parameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"slot","nameLocation":"2711:4:22","nodeType":"VariableDeclaration","scope":5117,"src":"2703:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:22"},"returnParameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"r","nameLocation":"2760:1:22","nodeType":"VariableDeclaration","scope":5117,"src":"2740:21:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":5112,"nodeType":"UserDefinedTypeName","pathNode":{"id":5111,"name":"Uint256Slot","nameLocations":["2740:11:22"],"nodeType":"IdentifierPath","referencedDeclaration":5064,"src":"2740:11:22"},"referencedDeclaration":5064,"src":"2740:11:22","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$5064_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:22"},"scope":5173,"src":"2679:163:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5127,"nodeType":"Block","src":"3020:79:22","statements":[{"AST":{"nativeSrc":"3055:38:22","nodeType":"YulBlock","src":"3055:38:22","statements":[{"nativeSrc":"3069:14:22","nodeType":"YulAssignment","src":"3069:14:22","value":{"name":"slot","nativeSrc":"3079:4:22","nodeType":"YulIdentifier","src":"3079:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:22","nodeType":"YulIdentifier","src":"3069:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5124,"isOffset":false,"isSlot":true,"src":"3069:6:22","suffix":"slot","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"3079:4:22","valueSize":1}],"flags":["memory-safe"],"id":5126,"nodeType":"InlineAssembly","src":"3030:63:22"}]},"documentation":{"id":5118,"nodeType":"StructuredDocumentation","src":"2848:85:22","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":5128,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:22","nodeType":"FunctionDefinition","parameters":{"id":5121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5120,"mutability":"mutable","name":"slot","nameLocation":"2969:4:22","nodeType":"VariableDeclaration","scope":5128,"src":"2961:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5119,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:22"},"returnParameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"r","nameLocation":"3017:1:22","nodeType":"VariableDeclaration","scope":5128,"src":"2998:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$5067_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":5123,"nodeType":"UserDefinedTypeName","pathNode":{"id":5122,"name":"Int256Slot","nameLocations":["2998:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":5067,"src":"2998:10:22"},"referencedDeclaration":5067,"src":"2998:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$5067_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:22"},"scope":5173,"src":"2938:161:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5138,"nodeType":"Block","src":"3277:79:22","statements":[{"AST":{"nativeSrc":"3312:38:22","nodeType":"YulBlock","src":"3312:38:22","statements":[{"nativeSrc":"3326:14:22","nodeType":"YulAssignment","src":"3326:14:22","value":{"name":"slot","nativeSrc":"3336:4:22","nodeType":"YulIdentifier","src":"3336:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:22","nodeType":"YulIdentifier","src":"3326:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5135,"isOffset":false,"isSlot":true,"src":"3326:6:22","suffix":"slot","valueSize":1},{"declaration":5131,"isOffset":false,"isSlot":false,"src":"3336:4:22","valueSize":1}],"flags":["memory-safe"],"id":5137,"nodeType":"InlineAssembly","src":"3287:63:22"}]},"documentation":{"id":5129,"nodeType":"StructuredDocumentation","src":"3105:85:22","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":5139,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:22","nodeType":"FunctionDefinition","parameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"slot","nameLocation":"3226:4:22","nodeType":"VariableDeclaration","scope":5139,"src":"3218:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:22"},"returnParameters":{"id":5136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5135,"mutability":"mutable","name":"r","nameLocation":"3274:1:22","nodeType":"VariableDeclaration","scope":5139,"src":"3255:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5070_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":5134,"nodeType":"UserDefinedTypeName","pathNode":{"id":5133,"name":"StringSlot","nameLocations":["3255:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"3255:10:22"},"referencedDeclaration":5070,"src":"3255:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5070_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:22"},"scope":5173,"src":"3195:161:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5149,"nodeType":"Block","src":"3558:85:22","statements":[{"AST":{"nativeSrc":"3593:44:22","nodeType":"YulBlock","src":"3593:44:22","statements":[{"nativeSrc":"3607:20:22","nodeType":"YulAssignment","src":"3607:20:22","value":{"name":"store.slot","nativeSrc":"3617:10:22","nodeType":"YulIdentifier","src":"3617:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:22","nodeType":"YulIdentifier","src":"3607:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5146,"isOffset":false,"isSlot":true,"src":"3607:6:22","suffix":"slot","valueSize":1},{"declaration":5142,"isOffset":false,"isSlot":true,"src":"3617:10:22","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":5148,"nodeType":"InlineAssembly","src":"3568:69:22"}]},"documentation":{"id":5140,"nodeType":"StructuredDocumentation","src":"3362:101:22","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":5150,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:22","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5142,"mutability":"mutable","name":"store","nameLocation":"3506:5:22","nodeType":"VariableDeclaration","scope":5150,"src":"3491:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5141,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:22"},"returnParameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5146,"mutability":"mutable","name":"r","nameLocation":"3555:1:22","nodeType":"VariableDeclaration","scope":5150,"src":"3536:20:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5070_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":5145,"nodeType":"UserDefinedTypeName","pathNode":{"id":5144,"name":"StringSlot","nameLocations":["3536:10:22"],"nodeType":"IdentifierPath","referencedDeclaration":5070,"src":"3536:10:22"},"referencedDeclaration":5070,"src":"3536:10:22","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$5070_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:22"},"scope":5173,"src":"3468:175:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5160,"nodeType":"Block","src":"3818:79:22","statements":[{"AST":{"nativeSrc":"3853:38:22","nodeType":"YulBlock","src":"3853:38:22","statements":[{"nativeSrc":"3867:14:22","nodeType":"YulAssignment","src":"3867:14:22","value":{"name":"slot","nativeSrc":"3877:4:22","nodeType":"YulIdentifier","src":"3877:4:22"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:22","nodeType":"YulIdentifier","src":"3867:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5157,"isOffset":false,"isSlot":true,"src":"3867:6:22","suffix":"slot","valueSize":1},{"declaration":5153,"isOffset":false,"isSlot":false,"src":"3877:4:22","valueSize":1}],"flags":["memory-safe"],"id":5159,"nodeType":"InlineAssembly","src":"3828:63:22"}]},"documentation":{"id":5151,"nodeType":"StructuredDocumentation","src":"3649:84:22","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":5161,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:22","nodeType":"FunctionDefinition","parameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"slot","nameLocation":"3768:4:22","nodeType":"VariableDeclaration","scope":5161,"src":"3760:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:22"},"returnParameters":{"id":5158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5157,"mutability":"mutable","name":"r","nameLocation":"3815:1:22","nodeType":"VariableDeclaration","scope":5161,"src":"3797:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5073_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5156,"nodeType":"UserDefinedTypeName","pathNode":{"id":5155,"name":"BytesSlot","nameLocations":["3797:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"3797:9:22"},"referencedDeclaration":5073,"src":"3797:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5073_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:22"},"scope":5173,"src":"3738:159:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5171,"nodeType":"Block","src":"4094:85:22","statements":[{"AST":{"nativeSrc":"4129:44:22","nodeType":"YulBlock","src":"4129:44:22","statements":[{"nativeSrc":"4143:20:22","nodeType":"YulAssignment","src":"4143:20:22","value":{"name":"store.slot","nativeSrc":"4153:10:22","nodeType":"YulIdentifier","src":"4153:10:22"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:22","nodeType":"YulIdentifier","src":"4143:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5168,"isOffset":false,"isSlot":true,"src":"4143:6:22","suffix":"slot","valueSize":1},{"declaration":5164,"isOffset":false,"isSlot":true,"src":"4153:10:22","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":5170,"nodeType":"InlineAssembly","src":"4104:69:22"}]},"documentation":{"id":5162,"nodeType":"StructuredDocumentation","src":"3903:99:22","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":5172,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:22","nodeType":"FunctionDefinition","parameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"store","nameLocation":"4043:5:22","nodeType":"VariableDeclaration","scope":5172,"src":"4029:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5163,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:22"},"returnParameters":{"id":5169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5168,"mutability":"mutable","name":"r","nameLocation":"4091:1:22","nodeType":"VariableDeclaration","scope":5172,"src":"4073:19:22","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5073_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5167,"nodeType":"UserDefinedTypeName","pathNode":{"id":5166,"name":"BytesSlot","nameLocations":["4073:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":5073,"src":"4073:9:22"},"referencedDeclaration":5073,"src":"4073:9:22","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$5073_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:22"},"scope":5173,"src":"4007:172:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5174,"src":"1407:2774:22","usedErrors":[],"usedEvents":[]}],"src":"193:3989:22"},"id":22},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[8208],"SafeCast":[9973],"SignedMath":[10117],"Strings":[6575]},"id":6576,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5175,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":5177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6576,"sourceUnit":8209,"src":"127:37:23","symbolAliases":[{"foreign":{"id":5176,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"135:4:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":5179,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6576,"sourceUnit":9974,"src":"165:45:23","symbolAliases":[{"foreign":{"id":5178,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":5181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6576,"sourceUnit":10118,"src":"211:49:23","symbolAliases":[{"foreign":{"id":5180,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10117,"src":"219:10:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"262:34:23","text":" @dev String operations."},"fullyImplemented":true,"id":6575,"linearizedBaseContracts":[6575],"name":"Strings","nameLocation":"305:7:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5184,"libraryName":{"id":5183,"name":"SafeCast","nameLocations":["325:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":9973,"src":"325:8:23"},"nodeType":"UsingForDirective","src":"319:21:23"},{"constant":true,"id":5187,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:23","nodeType":"VariableDeclaration","scope":6575,"src":"346:56:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5185,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":5190,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:23","nodeType":"VariableDeclaration","scope":6575,"src":"408:42:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5188,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:23","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":5226,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:23","nodeType":"VariableDeclaration","scope":6575,"src":"456:302:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":5225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":5210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":5205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:23","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:23","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":5199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:23","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:23","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:23","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":5204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:23","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:23","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":5208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:23","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":5209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:23","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:23","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":5212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:23","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:23","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":5214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:23","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:23","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:23","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:23","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":5219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:23","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:23","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":5223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:23","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":5224,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:23","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:23","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"778:81:23","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":5233,"name":"StringsInsufficientHexLength","nameLocation":"870:28:23","nodeType":"ErrorDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"value","nameLocation":"907:5:23","nodeType":"VariableDeclaration","scope":5233,"src":"899:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5228,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5231,"mutability":"mutable","name":"length","nameLocation":"922:6:23","nodeType":"VariableDeclaration","scope":5233,"src":"914:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:23"},"src":"864:66:23"},{"documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"936:108:23","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":5236,"name":"StringsInvalidChar","nameLocation":"1055:18:23","nodeType":"ErrorDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[],"src":"1073:2:23"},"src":"1049:27:23"},{"documentation":{"id":5237,"nodeType":"StructuredDocumentation","src":"1082:84:23","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":5239,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:23","nodeType":"ErrorDefinition","parameters":{"id":5238,"nodeType":"ParameterList","parameters":[],"src":"1204:2:23"},"src":"1171:36:23"},{"body":{"id":5286,"nodeType":"Block","src":"1379:563:23","statements":[{"id":5285,"nodeType":"UncheckedBlock","src":"1389:547:23","statements":[{"assignments":[5248],"declarations":[{"constant":false,"id":5248,"mutability":"mutable","name":"length","nameLocation":"1421:6:23","nodeType":"VariableDeclaration","scope":5285,"src":"1413:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5255,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"1441:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5249,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"1430:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:23","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":8040,"src":"1430:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:23"},{"assignments":[5257],"declarations":[{"constant":false,"id":5257,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:23","nodeType":"VariableDeclaration","scope":5285,"src":"1465:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5256,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5262,"initialValue":{"arguments":[{"id":5260,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"1499:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":5258,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:23"},{"assignments":[5264],"declarations":[{"constant":false,"id":5264,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:23","nodeType":"VariableDeclaration","scope":5285,"src":"1520:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5265,"nodeType":"VariableDeclarationStatement","src":"1520:11:23"},{"AST":{"nativeSrc":"1570:69:23","nodeType":"YulBlock","src":"1570:69:23","statements":[{"nativeSrc":"1588:37:23","nodeType":"YulAssignment","src":"1588:37:23","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:23","nodeType":"YulIdentifier","src":"1603:6:23"},{"kind":"number","nativeSrc":"1611:4:23","nodeType":"YulLiteral","src":"1611:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:23","nodeType":"YulIdentifier","src":"1599:3:23"},"nativeSrc":"1599:17:23","nodeType":"YulFunctionCall","src":"1599:17:23"},{"name":"length","nativeSrc":"1618:6:23","nodeType":"YulIdentifier","src":"1618:6:23"}],"functionName":{"name":"add","nativeSrc":"1595:3:23","nodeType":"YulIdentifier","src":"1595:3:23"},"nativeSrc":"1595:30:23","nodeType":"YulFunctionCall","src":"1595:30:23"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:23","nodeType":"YulIdentifier","src":"1588:3:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5257,"isOffset":false,"isSlot":false,"src":"1603:6:23","valueSize":1},{"declaration":5248,"isOffset":false,"isSlot":false,"src":"1618:6:23","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"1588:3:23","valueSize":1}],"flags":["memory-safe"],"id":5266,"nodeType":"InlineAssembly","src":"1545:94:23"},{"body":{"id":5281,"nodeType":"Block","src":"1665:234:23","statements":[{"expression":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:23","subExpression":{"id":5268,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"1683:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5270,"nodeType":"ExpressionStatement","src":"1683:5:23"},{"AST":{"nativeSrc":"1731:86:23","nodeType":"YulBlock","src":"1731:86:23","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:23","nodeType":"YulIdentifier","src":"1761:3:23"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:23","nodeType":"YulIdentifier","src":"1775:5:23"},{"kind":"number","nativeSrc":"1782:2:23","nodeType":"YulLiteral","src":"1782:2:23","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:23","nodeType":"YulIdentifier","src":"1771:3:23"},"nativeSrc":"1771:14:23","nodeType":"YulFunctionCall","src":"1771:14:23"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:23","nodeType":"YulIdentifier","src":"1787:10:23"}],"functionName":{"name":"byte","nativeSrc":"1766:4:23","nodeType":"YulIdentifier","src":"1766:4:23"},"nativeSrc":"1766:32:23","nodeType":"YulFunctionCall","src":"1766:32:23"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:23","nodeType":"YulIdentifier","src":"1753:7:23"},"nativeSrc":"1753:46:23","nodeType":"YulFunctionCall","src":"1753:46:23"},"nativeSrc":"1753:46:23","nodeType":"YulExpressionStatement","src":"1753:46:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":5187,"isOffset":false,"isSlot":false,"src":"1787:10:23","valueSize":1},{"declaration":5264,"isOffset":false,"isSlot":false,"src":"1761:3:23","valueSize":1},{"declaration":5242,"isOffset":false,"isSlot":false,"src":"1775:5:23","valueSize":1}],"flags":["memory-safe"],"id":5271,"nodeType":"InlineAssembly","src":"1706:111:23"},{"expression":{"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5275,"nodeType":"ExpressionStatement","src":"1834:11:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"1867:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5280,"nodeType":"IfStatement","src":"1863:21:23","trueBody":{"id":5279,"nodeType":"Break","src":"1879:5:23"}}]},"condition":{"hexValue":"74727565","id":5267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":5282,"nodeType":"WhileStatement","src":"1652:247:23"},{"expression":{"id":5283,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5257,"src":"1919:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5246,"id":5284,"nodeType":"Return","src":"1912:13:23"}]}]},"documentation":{"id":5240,"nodeType":"StructuredDocumentation","src":"1213:90:23","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":5287,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:23","nodeType":"FunctionDefinition","parameters":{"id":5243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5242,"mutability":"mutable","name":"value","nameLocation":"1334:5:23","nodeType":"VariableDeclaration","scope":5287,"src":"1326:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:23"},"returnParameters":{"id":5246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5287,"src":"1364:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5244,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:23"},"scope":6575,"src":"1308:634:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5312,"nodeType":"Block","src":"2118:92:23","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"2149:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:23","trueExpression":{"hexValue":"2d","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"2195:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":5305,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10117,"src":"2180:10:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$10117_$","typeString":"type(library SignedMath)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:23","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":10116,"src":"2180:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5304,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"2171:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5295,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:23","typeDescriptions":{}}},"id":5297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:23","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:23","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5294,"id":5311,"nodeType":"Return","src":"2128:75:23"}]},"documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"1948:89:23","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":5313,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:23","nodeType":"FunctionDefinition","parameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"value","nameLocation":"2073:5:23","nodeType":"VariableDeclaration","scope":5313,"src":"2066:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5289,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:23"},"returnParameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5313,"src":"2103:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5292,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:23"},"scope":6575,"src":"2042:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5332,"nodeType":"Block","src":"2389:100:23","statements":[{"id":5331,"nodeType":"UncheckedBlock","src":"2399:84:23","statements":[{"expression":{"arguments":[{"id":5322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"2442:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5316,"src":"2461:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5323,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"2449:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:23","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":8151,"src":"2449:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5333,5416,5436],"referencedDeclaration":5416,"src":"2430:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5320,"id":5330,"nodeType":"Return","src":"2423:49:23"}]}]},"documentation":{"id":5314,"nodeType":"StructuredDocumentation","src":"2216:94:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":5333,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:23","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5316,"mutability":"mutable","name":"value","nameLocation":"2344:5:23","nodeType":"VariableDeclaration","scope":5333,"src":"2336:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5315,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:23"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5333,"src":"2374:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5318,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:23"},"scope":6575,"src":"2315:174:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5415,"nodeType":"Block","src":"2702:435:23","statements":[{"assignments":[5344],"declarations":[{"constant":false,"id":5344,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:23","nodeType":"VariableDeclaration","scope":5415,"src":"2712:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5346,"initialValue":{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"2733:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:23"},{"assignments":[5348],"declarations":[{"constant":false,"id":5348,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:23","nodeType":"VariableDeclaration","scope":5415,"src":"2748:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5347,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5357,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5352,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"2784:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":5354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5349,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:23"},{"expression":{"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5358,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"2805:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5360,"indexExpression":{"hexValue":"30","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5363,"nodeType":"ExpressionStatement","src":"2805:15:23"},{"expression":{"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5364,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"2830:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5366,"indexExpression":{"hexValue":"31","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":5367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5369,"nodeType":"ExpressionStatement","src":"2830:15:23"},{"body":{"id":5398,"nodeType":"Block","src":"2900:95:23","statements":[{"expression":{"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5384,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"2914:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5386,"indexExpression":{"id":5385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"2921:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5387,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5187,"src":"2926:10:23","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":5391,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5388,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"2937:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5393,"nodeType":"ExpressionStatement","src":"2914:40:23"},{"expression":{"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5394,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"2968:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5397,"nodeType":"ExpressionStatement","src":"2968:16:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"2888:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5399,"initializationExpression":{"assignments":[5371],"declarations":[{"constant":false,"id":5371,"mutability":"mutable","name":"i","nameLocation":"2868:1:23","nodeType":"VariableDeclaration","scope":5399,"src":"2860:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5377,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5373,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"2876:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:23"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:23","subExpression":{"id":5381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"2897:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5383,"nodeType":"ExpressionStatement","src":"2895:3:23"},"nodeType":"ForStatement","src":"2855:140:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5400,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5344,"src":"3008:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5409,"nodeType":"IfStatement","src":"3004:96:23","trueBody":{"id":5408,"nodeType":"Block","src":"3025:75:23","statements":[{"errorCall":{"arguments":[{"id":5404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"3075:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5405,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"3082:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5403,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"3046:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5407,"nodeType":"RevertStatement","src":"3039:50:23"}]}},{"expression":{"arguments":[{"id":5412,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"3123:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5410,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:23","typeDescriptions":{}}},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5342,"id":5414,"nodeType":"Return","src":"3109:21:23"}]},"documentation":{"id":5334,"nodeType":"StructuredDocumentation","src":"2495:112:23","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":5416,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:23","nodeType":"FunctionDefinition","parameters":{"id":5339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5336,"mutability":"mutable","name":"value","nameLocation":"2641:5:23","nodeType":"VariableDeclaration","scope":5416,"src":"2633:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5335,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5338,"mutability":"mutable","name":"length","nameLocation":"2656:6:23","nodeType":"VariableDeclaration","scope":5416,"src":"2648:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:23"},"returnParameters":{"id":5342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5416,"src":"2687:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5340,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:23"},"scope":6575,"src":"2612:525:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5435,"nodeType":"Block","src":"3369:75:23","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5429,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5419,"src":"3414:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5427,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:23","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:23","typeDescriptions":{}}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5432,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"3422:14:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5424,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5333,5416,5436],"referencedDeclaration":5416,"src":"3386:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5423,"id":5434,"nodeType":"Return","src":"3379:58:23"}]},"documentation":{"id":5417,"nodeType":"StructuredDocumentation","src":"3143:148:23","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":5436,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:23","nodeType":"FunctionDefinition","parameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"addr","nameLocation":"3325:4:23","nodeType":"VariableDeclaration","scope":5436,"src":"3317:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5418,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:23"},"returnParameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5436,"src":"3354:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5421,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:23"},"scope":6575,"src":"3296:148:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5500,"nodeType":"Block","src":"3701:642:23","statements":[{"assignments":[5445],"declarations":[{"constant":false,"id":5445,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:23","nodeType":"VariableDeclaration","scope":5500,"src":"3711:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5444,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5452,"initialValue":{"arguments":[{"arguments":[{"id":5449,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5439,"src":"3751:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5448,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5333,5416,5436],"referencedDeclaration":5436,"src":"3739:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":5450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5446,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:23","typeDescriptions":{}}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:23"},{"assignments":[5454],"declarations":[{"constant":false,"id":5454,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:23","nodeType":"VariableDeclaration","scope":5500,"src":"3842:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5455,"nodeType":"VariableDeclarationStatement","src":"3842:17:23"},{"AST":{"nativeSrc":"3894:78:23","nodeType":"YulBlock","src":"3894:78:23","statements":[{"nativeSrc":"3908:54:23","nodeType":"YulAssignment","src":"3908:54:23","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:23","nodeType":"YulLiteral","src":"3925:2:23","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:23","nodeType":"YulIdentifier","src":"3943:6:23"},{"kind":"number","nativeSrc":"3951:4:23","nodeType":"YulLiteral","src":"3951:4:23","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:23","nodeType":"YulIdentifier","src":"3939:3:23"},"nativeSrc":"3939:17:23","nodeType":"YulFunctionCall","src":"3939:17:23"},{"kind":"number","nativeSrc":"3958:2:23","nodeType":"YulLiteral","src":"3958:2:23","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:23","nodeType":"YulIdentifier","src":"3929:9:23"},"nativeSrc":"3929:32:23","nodeType":"YulFunctionCall","src":"3929:32:23"}],"functionName":{"name":"shr","nativeSrc":"3921:3:23","nodeType":"YulIdentifier","src":"3921:3:23"},"nativeSrc":"3921:41:23","nodeType":"YulFunctionCall","src":"3921:41:23"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:23","nodeType":"YulIdentifier","src":"3908:9:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5445,"isOffset":false,"isSlot":false,"src":"3943:6:23","valueSize":1},{"declaration":5454,"isOffset":false,"isSlot":false,"src":"3908:9:23","valueSize":1}],"flags":["memory-safe"],"id":5456,"nodeType":"InlineAssembly","src":"3869:103:23"},{"body":{"id":5493,"nodeType":"Block","src":"4015:291:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5467,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"4121:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:23","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":5474,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"4150:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5476,"indexExpression":{"id":5475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"4157:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5472,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:23","typeDescriptions":{}}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5488,"nodeType":"IfStatement","src":"4117:150:23","trueBody":{"id":5487,"nodeType":"Block","src":"4167:100:23","statements":[{"expression":{"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5481,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"4235:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5483,"indexExpression":{"id":5482,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"4242:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5486,"nodeType":"ExpressionStatement","src":"4235:17:23"}]}},{"expression":{"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5489,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5454,"src":"4280:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5492,"nodeType":"ExpressionStatement","src":"4280:15:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"4003:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5494,"initializationExpression":{"assignments":[5458],"declarations":[{"constant":false,"id":5458,"mutability":"mutable","name":"i","nameLocation":"3995:1:23","nodeType":"VariableDeclaration","scope":5494,"src":"3987:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5460,"initialValue":{"hexValue":"3431","id":5459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:23","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:23"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:23","subExpression":{"id":5464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"4012:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5466,"nodeType":"ExpressionStatement","src":"4010:3:23"},"nodeType":"ForStatement","src":"3982:324:23"},{"expression":{"arguments":[{"id":5497,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"4329:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5495,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:23","typeDescriptions":{}}},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5443,"id":5499,"nodeType":"Return","src":"4315:21:23"}]},"documentation":{"id":5437,"nodeType":"StructuredDocumentation","src":"3450:165:23","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":5501,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:23","nodeType":"FunctionDefinition","parameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"addr","nameLocation":"3657:4:23","nodeType":"VariableDeclaration","scope":5501,"src":"3649:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5438,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:23"},"returnParameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5501,"src":"3686:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5441,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:23"},"scope":6575,"src":"3620:723:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5537,"nodeType":"Block","src":"4498:104:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"4521:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5511,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:23","typeDescriptions":{}}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:23","memberName":"length","nodeType":"MemberAccess","src":"4515:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5518,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"4540:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5516,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:23","typeDescriptions":{}}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:23","memberName":"length","nodeType":"MemberAccess","src":"4534:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"4569:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5523,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:23","typeDescriptions":{}}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5522,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":5531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5506,"src":"4592:1:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5529,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:23","typeDescriptions":{}}},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5528,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:23","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5510,"id":5536,"nodeType":"Return","src":"4508:87:23"}]},"documentation":{"id":5502,"nodeType":"StructuredDocumentation","src":"4349:66:23","text":" @dev Returns true if the two strings are equal."},"id":5538,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:23","nodeType":"FunctionDefinition","parameters":{"id":5507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"a","nameLocation":"4449:1:23","nodeType":"VariableDeclaration","scope":5538,"src":"4435:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5503,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5506,"mutability":"mutable","name":"b","nameLocation":"4466:1:23","nodeType":"VariableDeclaration","scope":5538,"src":"4452:15:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5505,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:23"},"returnParameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5538,"src":"4492:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5508,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:23"},"scope":6575,"src":"4420:182:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5556,"nodeType":"Block","src":"4899:64:23","statements":[{"expression":{"arguments":[{"id":5547,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"4926:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5551,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"4942:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5549,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:23","typeDescriptions":{}}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:23","memberName":"length","nodeType":"MemberAccess","src":"4936:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[5557,5588],"referencedDeclaration":5588,"src":"4916:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5545,"id":5555,"nodeType":"Return","src":"4909:47:23"}]},"documentation":{"id":5539,"nodeType":"StructuredDocumentation","src":"4608:214:23","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5557,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:23","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5541,"mutability":"mutable","name":"input","nameLocation":"4860:5:23","nodeType":"VariableDeclaration","scope":5557,"src":"4846:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5540,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:23"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5557,"src":"4890:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:23"},"scope":6575,"src":"4827:136:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5587,"nodeType":"Block","src":"5368:153:23","statements":[{"assignments":[5570,5572],"declarations":[{"constant":false,"id":5570,"mutability":"mutable","name":"success","nameLocation":"5384:7:23","nodeType":"VariableDeclaration","scope":5587,"src":"5379:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5569,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5572,"mutability":"mutable","name":"value","nameLocation":"5401:5:23","nodeType":"VariableDeclaration","scope":5587,"src":"5393:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5578,"initialValue":{"arguments":[{"id":5574,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5560,"src":"5423:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5575,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"5430:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5576,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5564,"src":"5437:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5573,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5609,5646],"referencedDeclaration":5646,"src":"5410:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:23"},{"condition":{"id":5580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:23","subExpression":{"id":5579,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"5456:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5584,"nodeType":"IfStatement","src":"5451:41:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5581,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"5472:18:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5583,"nodeType":"RevertStatement","src":"5465:27:23"}},{"expression":{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"5509:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5568,"id":5586,"nodeType":"Return","src":"5502:12:23"}]},"documentation":{"id":5558,"nodeType":"StructuredDocumentation","src":"4969:294:23","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5588,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:23","nodeType":"FunctionDefinition","parameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"input","nameLocation":"5301:5:23","nodeType":"VariableDeclaration","scope":5588,"src":"5287:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5559,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5562,"mutability":"mutable","name":"begin","nameLocation":"5316:5:23","nodeType":"VariableDeclaration","scope":5588,"src":"5308:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5564,"mutability":"mutable","name":"end","nameLocation":"5331:3:23","nodeType":"VariableDeclaration","scope":5588,"src":"5323:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5563,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:23"},"returnParameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5588,"src":"5359:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:23"},"scope":6575,"src":"5268:253:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5608,"nodeType":"Block","src":"5842:83:23","statements":[{"expression":{"arguments":[{"id":5599,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"5888:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5603,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"5904:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5601,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:23","typeDescriptions":{}}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:23","memberName":"length","nodeType":"MemberAccess","src":"5898:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5598,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"5859:28:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5597,"id":5607,"nodeType":"Return","src":"5852:66:23"}]},"documentation":{"id":5589,"nodeType":"StructuredDocumentation","src":"5527:215:23","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5609,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:23","nodeType":"FunctionDefinition","parameters":{"id":5592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5591,"mutability":"mutable","name":"input","nameLocation":"5783:5:23","nodeType":"VariableDeclaration","scope":5609,"src":"5769:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5590,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:23"},"returnParameters":{"id":5597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"success","nameLocation":"5818:7:23","nodeType":"VariableDeclaration","scope":5609,"src":"5813:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5593,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5596,"mutability":"mutable","name":"value","nameLocation":"5835:5:23","nodeType":"VariableDeclaration","scope":5609,"src":"5827:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:23"},"scope":6575,"src":"5747:178:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5645,"nodeType":"Block","src":"6327:144:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5623,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"6341:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5626,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"6353:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5624,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:23","typeDescriptions":{}}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:23","memberName":"length","nodeType":"MemberAccess","src":"6347:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5630,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"6370:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5631,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"6378:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5638,"nodeType":"IfStatement","src":"6337:63:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5622,"id":5637,"nodeType":"Return","src":"6383:17:23"}},{"expression":{"arguments":[{"id":5640,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"6446:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5641,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"6453:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5642,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5616,"src":"6460:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5639,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5716,"src":"6417:28:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5622,"id":5644,"nodeType":"Return","src":"6410:54:23"}]},"documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"5931:238:23","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5646,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:23","nodeType":"FunctionDefinition","parameters":{"id":5617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"input","nameLocation":"6219:5:23","nodeType":"VariableDeclaration","scope":5646,"src":"6205:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5611,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5614,"mutability":"mutable","name":"begin","nameLocation":"6242:5:23","nodeType":"VariableDeclaration","scope":5646,"src":"6234:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5613,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5616,"mutability":"mutable","name":"end","nameLocation":"6265:3:23","nodeType":"VariableDeclaration","scope":5646,"src":"6257:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5615,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:23"},"returnParameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5619,"mutability":"mutable","name":"success","nameLocation":"6303:7:23","nodeType":"VariableDeclaration","scope":5646,"src":"6298:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5618,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5621,"mutability":"mutable","name":"value","nameLocation":"6320:5:23","nodeType":"VariableDeclaration","scope":5646,"src":"6312:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:23"},"scope":6575,"src":"6174:297:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5715,"nodeType":"Block","src":"6874:347:23","statements":[{"assignments":[5661],"declarations":[{"constant":false,"id":5661,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:23","nodeType":"VariableDeclaration","scope":5715,"src":"6884:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5660,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5666,"initialValue":{"arguments":[{"id":5664,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5649,"src":"6912:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5662,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:23","typeDescriptions":{}}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:23"},{"assignments":[5668],"declarations":[{"constant":false,"id":5668,"mutability":"mutable","name":"result","nameLocation":"6937:6:23","nodeType":"VariableDeclaration","scope":5715,"src":"6929:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5670,"initialValue":{"hexValue":"30","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:23"},{"body":{"id":5709,"nodeType":"Block","src":"6995:189:23","statements":[{"assignments":[5682],"declarations":[{"constant":false,"id":5682,"mutability":"mutable","name":"chr","nameLocation":"7015:3:23","nodeType":"VariableDeclaration","scope":5709,"src":"7009:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5681,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5692,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5687,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5661,"src":"7064:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"7072:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5686,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"7041:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5684,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:23","typeDescriptions":{}}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5683,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"7021:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5693,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"7094:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:23","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5700,"nodeType":"IfStatement","src":"7090:30:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5659,"id":5699,"nodeType":"Return","src":"7103:17:23"}},{"expression":{"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"7134:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5704,"nodeType":"ExpressionStatement","src":"7134:12:23"},{"expression":{"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"7160:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5706,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"7170:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5708,"nodeType":"ExpressionStatement","src":"7160:13:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5675,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"6981:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5676,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"6985:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5710,"initializationExpression":{"assignments":[5672],"declarations":[{"constant":false,"id":5672,"mutability":"mutable","name":"i","nameLocation":"6970:1:23","nodeType":"VariableDeclaration","scope":5710,"src":"6962:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5671,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5674,"initialValue":{"id":5673,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"6974:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:23","subExpression":{"id":5678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5672,"src":"6992:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5680,"nodeType":"ExpressionStatement","src":"6990:3:23"},"nodeType":"ForStatement","src":"6957:227:23"},{"expression":{"components":[{"hexValue":"74727565","id":5711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5712,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"7207:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5659,"id":5714,"nodeType":"Return","src":"7193:21:23"}]},"documentation":{"id":5647,"nodeType":"StructuredDocumentation","src":"6477:224:23","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5716,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:23","nodeType":"FunctionDefinition","parameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5649,"mutability":"mutable","name":"input","nameLocation":"6767:5:23","nodeType":"VariableDeclaration","scope":5716,"src":"6753:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5648,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5651,"mutability":"mutable","name":"begin","nameLocation":"6790:5:23","nodeType":"VariableDeclaration","scope":5716,"src":"6782:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5653,"mutability":"mutable","name":"end","nameLocation":"6813:3:23","nodeType":"VariableDeclaration","scope":5716,"src":"6805:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:23"},"returnParameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"success","nameLocation":"6850:7:23","nodeType":"VariableDeclaration","scope":5716,"src":"6845:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5655,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5658,"mutability":"mutable","name":"value","nameLocation":"6867:5:23","nodeType":"VariableDeclaration","scope":5716,"src":"6859:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5657,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:23"},"scope":6575,"src":"6706:515:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5734,"nodeType":"Block","src":"7518:63:23","statements":[{"expression":{"arguments":[{"id":5725,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"7544:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5729,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"7560:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5727,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:23","typeDescriptions":{}}},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:23","memberName":"length","nodeType":"MemberAccess","src":"7554:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5724,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5735,5766],"referencedDeclaration":5766,"src":"7535:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5723,"id":5733,"nodeType":"Return","src":"7528:46:23"}]},"documentation":{"id":5717,"nodeType":"StructuredDocumentation","src":"7227:216:23","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:23","nodeType":"FunctionDefinition","parameters":{"id":5720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5719,"mutability":"mutable","name":"input","nameLocation":"7480:5:23","nodeType":"VariableDeclaration","scope":5735,"src":"7466:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5718,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:23"},"returnParameters":{"id":5723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5735,"src":"7510:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5721,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:23"},"scope":6575,"src":"7448:133:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5765,"nodeType":"Block","src":"7986:151:23","statements":[{"assignments":[5748,5750],"declarations":[{"constant":false,"id":5748,"mutability":"mutable","name":"success","nameLocation":"8002:7:23","nodeType":"VariableDeclaration","scope":5765,"src":"7997:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5747,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5750,"mutability":"mutable","name":"value","nameLocation":"8018:5:23","nodeType":"VariableDeclaration","scope":5765,"src":"8011:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5749,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5756,"initialValue":{"arguments":[{"id":5752,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"8039:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5753,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"8046:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5754,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5742,"src":"8053:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5751,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5787,5829],"referencedDeclaration":5829,"src":"8027:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:23"},{"condition":{"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:23","subExpression":{"id":5757,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5748,"src":"8072:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5762,"nodeType":"IfStatement","src":"8067:41:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5759,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"8088:18:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5761,"nodeType":"RevertStatement","src":"8081:27:23"}},{"expression":{"id":5763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5750,"src":"8125:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5746,"id":5764,"nodeType":"Return","src":"8118:12:23"}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"7587:296:23","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5766,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:23","nodeType":"FunctionDefinition","parameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"input","nameLocation":"7920:5:23","nodeType":"VariableDeclaration","scope":5766,"src":"7906:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5737,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5740,"mutability":"mutable","name":"begin","nameLocation":"7935:5:23","nodeType":"VariableDeclaration","scope":5766,"src":"7927:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5739,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5742,"mutability":"mutable","name":"end","nameLocation":"7950:3:23","nodeType":"VariableDeclaration","scope":5766,"src":"7942:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5741,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:23"},"returnParameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5766,"src":"7978:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5744,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:23"},"scope":6575,"src":"7888:249:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5786,"nodeType":"Block","src":"8528:82:23","statements":[{"expression":{"arguments":[{"id":5777,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"8573:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5781,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5769,"src":"8589:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5779,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:23","typeDescriptions":{}}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:23","memberName":"length","nodeType":"MemberAccess","src":"8583:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5776,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"8545:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5775,"id":5785,"nodeType":"Return","src":"8538:65:23"}]},"documentation":{"id":5767,"nodeType":"StructuredDocumentation","src":"8143:287:23","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:23","nodeType":"FunctionDefinition","parameters":{"id":5770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5769,"mutability":"mutable","name":"input","nameLocation":"8470:5:23","nodeType":"VariableDeclaration","scope":5787,"src":"8456:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5768,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:23"},"returnParameters":{"id":5775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5772,"mutability":"mutable","name":"success","nameLocation":"8505:7:23","nodeType":"VariableDeclaration","scope":5787,"src":"8500:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5771,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5774,"mutability":"mutable","name":"value","nameLocation":"8521:5:23","nodeType":"VariableDeclaration","scope":5787,"src":"8514:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5773,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:23"},"scope":6575,"src":"8435:175:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5792,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:23","nodeType":"VariableDeclaration","scope":6575,"src":"8616:50:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5788,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:23","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5828,"nodeType":"Block","src":"9132:143:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5806,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"9146:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5809,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"9158:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5807,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:23","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:23","memberName":"length","nodeType":"MemberAccess","src":"9152:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5813,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"9175:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5814,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"9183:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5821,"nodeType":"IfStatement","src":"9142:63:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5805,"id":5820,"nodeType":"Return","src":"9188:17:23"}},{"expression":{"arguments":[{"id":5823,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"9250:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5824,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5797,"src":"9257:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5825,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5799,"src":"9264:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5822,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"9222:27:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5805,"id":5827,"nodeType":"Return","src":"9215:53:23"}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"8673:303:23","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5829,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:23","nodeType":"FunctionDefinition","parameters":{"id":5800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"input","nameLocation":"9025:5:23","nodeType":"VariableDeclaration","scope":5829,"src":"9011:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5794,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5797,"mutability":"mutable","name":"begin","nameLocation":"9048:5:23","nodeType":"VariableDeclaration","scope":5829,"src":"9040:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5796,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5799,"mutability":"mutable","name":"end","nameLocation":"9071:3:23","nodeType":"VariableDeclaration","scope":5829,"src":"9063:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5798,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:23"},"returnParameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5802,"mutability":"mutable","name":"success","nameLocation":"9109:7:23","nodeType":"VariableDeclaration","scope":5829,"src":"9104:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5801,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5804,"mutability":"mutable","name":"value","nameLocation":"9125:5:23","nodeType":"VariableDeclaration","scope":5829,"src":"9118:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5803,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:23"},"scope":6575,"src":"8981:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5949,"nodeType":"Block","src":"9675:812:23","statements":[{"assignments":[5844],"declarations":[{"constant":false,"id":5844,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:23","nodeType":"VariableDeclaration","scope":5949,"src":"9685:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5843,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5849,"initialValue":{"arguments":[{"id":5847,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"9713:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5845,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:23","typeDescriptions":{}}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:23"},{"assignments":[5851],"declarations":[{"constant":false,"id":5851,"mutability":"mutable","name":"sign","nameLocation":"9783:4:23","nodeType":"VariableDeclaration","scope":5949,"src":"9776:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5850,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5867,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5852,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"9790:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5853,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"9799:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5862,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"9847:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5863,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"9855:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5861,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"9824:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5859,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:23","typeDescriptions":{}}},"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:23","trueExpression":{"arguments":[{"hexValue":"30","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5855,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:23","typeDescriptions":{}}},"id":5858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:23"},{"assignments":[5869],"declarations":[{"constant":false,"id":5869,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:23","nodeType":"VariableDeclaration","scope":5949,"src":"9943:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5868,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5876,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5870,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"9963:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5871,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:23","typeDescriptions":{}}},"id":5874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:23"},{"assignments":[5878],"declarations":[{"constant":false,"id":5878,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:23","nodeType":"VariableDeclaration","scope":5949,"src":"9992:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5877,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5885,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"10012:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5880,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:23","typeDescriptions":{}}},"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:23"},{"assignments":[5887],"declarations":[{"constant":false,"id":5887,"mutability":"mutable","name":"offset","nameLocation":"10049:6:23","nodeType":"VariableDeclaration","scope":5949,"src":"10041:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5886,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5894,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5888,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"10059:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5889,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10075:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"10058:37:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:23"},{"assignments":[5896,5898],"declarations":[{"constant":false,"id":5896,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:23","nodeType":"VariableDeclaration","scope":5949,"src":"10109:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5895,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5898,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:23","nodeType":"VariableDeclaration","scope":5949,"src":"10126:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5897,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5906,"initialValue":{"arguments":[{"id":5900,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"10159:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"10166:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5902,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5887,"src":"10174:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5904,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5836,"src":"10182:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5899,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5609,5646],"referencedDeclaration":5646,"src":"10146:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5907,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"10201:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5908,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"10215:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5909,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"10226:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5896,"src":"10343:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5928,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10357:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5930,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"10373:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5931,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"10385:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5842,"id":5946,"nodeType":"Return","src":"10463:17:23"},"id":5947,"nodeType":"IfStatement","src":"10339:141:23","trueBody":{"id":5942,"nodeType":"Block","src":"10401:56:23","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5936,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:23","memberName":"min","nodeType":"MemberAccess","src":"10429:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5940,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5842,"id":5941,"nodeType":"Return","src":"10415:31:23"}]}},"id":5948,"nodeType":"IfStatement","src":"10197:283:23","trueBody":{"id":5926,"nodeType":"Block","src":"10242:91:23","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5913,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10270:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5921,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"10312:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5919,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:23","typeDescriptions":{}}},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:23","trueExpression":{"id":5918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:23","subExpression":{"arguments":[{"id":5916,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5898,"src":"10293:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5914,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:23","typeDescriptions":{}}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5842,"id":5925,"nodeType":"Return","src":"10256:66:23"}]}}]},"documentation":{"id":5830,"nodeType":"StructuredDocumentation","src":"9281:223:23","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:23","nodeType":"FunctionDefinition","parameters":{"id":5837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"input","nameLocation":"9569:5:23","nodeType":"VariableDeclaration","scope":5950,"src":"9555:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5831,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5834,"mutability":"mutable","name":"begin","nameLocation":"9592:5:23","nodeType":"VariableDeclaration","scope":5950,"src":"9584:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5833,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5836,"mutability":"mutable","name":"end","nameLocation":"9615:3:23","nodeType":"VariableDeclaration","scope":5950,"src":"9607:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5835,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:23"},"returnParameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"success","nameLocation":"9652:7:23","nodeType":"VariableDeclaration","scope":5950,"src":"9647:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5838,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5841,"mutability":"mutable","name":"value","nameLocation":"9668:5:23","nodeType":"VariableDeclaration","scope":5950,"src":"9661:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5840,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:23"},"scope":6575,"src":"9509:978:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5968,"nodeType":"Block","src":"10832:67:23","statements":[{"expression":{"arguments":[{"id":5959,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"10862:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5963,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"10878:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5961,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:23","typeDescriptions":{}}},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:23","memberName":"length","nodeType":"MemberAccess","src":"10872:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5958,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5969,6000],"referencedDeclaration":6000,"src":"10849:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5957,"id":5967,"nodeType":"Return","src":"10842:50:23"}]},"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"10493:259:23","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5969,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:23","nodeType":"FunctionDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"input","nameLocation":"10793:5:23","nodeType":"VariableDeclaration","scope":5969,"src":"10779:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5952,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:23"},"returnParameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5969,"src":"10823:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5955,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:23"},"scope":6575,"src":"10757:142:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5999,"nodeType":"Block","src":"11320:156:23","statements":[{"assignments":[5982,5984],"declarations":[{"constant":false,"id":5982,"mutability":"mutable","name":"success","nameLocation":"11336:7:23","nodeType":"VariableDeclaration","scope":5999,"src":"11331:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5981,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5984,"mutability":"mutable","name":"value","nameLocation":"11353:5:23","nodeType":"VariableDeclaration","scope":5999,"src":"11345:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5983,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5990,"initialValue":{"arguments":[{"id":5986,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"11378:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5987,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5974,"src":"11385:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5988,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5976,"src":"11392:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5985,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[6021,6058],"referencedDeclaration":6058,"src":"11362:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:23"},{"condition":{"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:23","subExpression":{"id":5991,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"11411:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"11406:41:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5993,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"11427:18:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5995,"nodeType":"RevertStatement","src":"11420:27:23"}},{"expression":{"id":5997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"11464:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5980,"id":5998,"nodeType":"Return","src":"11457:12:23"}]},"documentation":{"id":5970,"nodeType":"StructuredDocumentation","src":"10905:307:23","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":6000,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:23","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"input","nameLocation":"11253:5:23","nodeType":"VariableDeclaration","scope":6000,"src":"11239:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5971,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5974,"mutability":"mutable","name":"begin","nameLocation":"11268:5:23","nodeType":"VariableDeclaration","scope":6000,"src":"11260:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5976,"mutability":"mutable","name":"end","nameLocation":"11283:3:23","nodeType":"VariableDeclaration","scope":6000,"src":"11275:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5975,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:23"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6000,"src":"11311:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5978,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:23"},"scope":6575,"src":"11217:259:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6020,"nodeType":"Block","src":"11803:86:23","statements":[{"expression":{"arguments":[{"id":6011,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"11852:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6015,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"11868:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6013,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:23","typeDescriptions":{}}},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:23","memberName":"length","nodeType":"MemberAccess","src":"11862:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6010,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"11820:31:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6009,"id":6019,"nodeType":"Return","src":"11813:69:23"}]},"documentation":{"id":6001,"nodeType":"StructuredDocumentation","src":"11482:218:23","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":6021,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:23","nodeType":"FunctionDefinition","parameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"input","nameLocation":"11744:5:23","nodeType":"VariableDeclaration","scope":6021,"src":"11730:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6002,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:23"},"returnParameters":{"id":6009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"success","nameLocation":"11779:7:23","nodeType":"VariableDeclaration","scope":6021,"src":"11774:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6005,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6008,"mutability":"mutable","name":"value","nameLocation":"11796:5:23","nodeType":"VariableDeclaration","scope":6021,"src":"11788:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6007,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:23"},"scope":6575,"src":"11705:184:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6057,"nodeType":"Block","src":"12297:147:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6035,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"12311:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6038,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"12323:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6036,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:23","typeDescriptions":{}}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:23","memberName":"length","nodeType":"MemberAccess","src":"12317:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6042,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"12340:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6043,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"12348:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6050,"nodeType":"IfStatement","src":"12307:63:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6048,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6034,"id":6049,"nodeType":"Return","src":"12353:17:23"}},{"expression":{"arguments":[{"id":6052,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"12419:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6053,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6026,"src":"12426:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6054,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6028,"src":"12433:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6051,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"12387:31:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6034,"id":6056,"nodeType":"Return","src":"12380:57:23"}]},"documentation":{"id":6022,"nodeType":"StructuredDocumentation","src":"11895:241:23","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":6058,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:23","nodeType":"FunctionDefinition","parameters":{"id":6029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"input","nameLocation":"12189:5:23","nodeType":"VariableDeclaration","scope":6058,"src":"12175:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6023,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6026,"mutability":"mutable","name":"begin","nameLocation":"12212:5:23","nodeType":"VariableDeclaration","scope":6058,"src":"12204:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6025,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6028,"mutability":"mutable","name":"end","nameLocation":"12235:3:23","nodeType":"VariableDeclaration","scope":6058,"src":"12227:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6027,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:23"},"returnParameters":{"id":6034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6031,"mutability":"mutable","name":"success","nameLocation":"12273:7:23","nodeType":"VariableDeclaration","scope":6058,"src":"12268:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6030,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6033,"mutability":"mutable","name":"value","nameLocation":"12290:5:23","nodeType":"VariableDeclaration","scope":6058,"src":"12282:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6032,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:23"},"scope":6575,"src":"12141:303:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6160,"nodeType":"Block","src":"12853:881:23","statements":[{"assignments":[6073],"declarations":[{"constant":false,"id":6073,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:23","nodeType":"VariableDeclaration","scope":6160,"src":"12863:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6072,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6078,"initialValue":{"arguments":[{"id":6076,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"12891:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6074,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:23","typeDescriptions":{}}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:23"},{"assignments":[6080],"declarations":[{"constant":false,"id":6080,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:23","nodeType":"VariableDeclaration","scope":6160,"src":"12945:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6079,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6100,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6081,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"12963:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6082,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"12969:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6090,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"13013:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6091,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"13021:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6089,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"12990:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6087,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:23","typeDescriptions":{}}},"id":6093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":6096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":6095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6094,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:23","typeDescriptions":{}}},"id":6097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:23"},{"assignments":[6102],"declarations":[{"constant":false,"id":6102,"mutability":"mutable","name":"offset","nameLocation":"13133:6:23","nodeType":"VariableDeclaration","scope":6160,"src":"13125:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6101,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6108,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6103,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6080,"src":"13142:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"13142:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:23"},{"assignments":[6110],"declarations":[{"constant":false,"id":6110,"mutability":"mutable","name":"result","nameLocation":"13183:6:23","nodeType":"VariableDeclaration","scope":6160,"src":"13175:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6109,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6112,"initialValue":{"hexValue":"30","id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:23"},{"body":{"id":6154,"nodeType":"Block","src":"13250:447:23","statements":[{"assignments":[6126],"declarations":[{"constant":false,"id":6126,"mutability":"mutable","name":"chr","nameLocation":"13270:3:23","nodeType":"VariableDeclaration","scope":6154,"src":"13264:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6125,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6136,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":6131,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"13319:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"13327:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6130,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"13296:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6128,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:23","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6127,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6396,"src":"13276:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6137,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"13349:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":6138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"13345:31:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6071,"id":6143,"nodeType":"Return","src":"13359:17:23"}},{"expression":{"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"13390:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":6146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6148,"nodeType":"ExpressionStatement","src":"13390:12:23"},{"id":6153,"nodeType":"UncheckedBlock","src":"13416:271:23","statements":[{"expression":{"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"13659:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6150,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"13669:3:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6152,"nodeType":"ExpressionStatement","src":"13659:13:23"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6119,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"13236:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6120,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"13240:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6155,"initializationExpression":{"assignments":[6114],"declarations":[{"constant":false,"id":6114,"mutability":"mutable","name":"i","nameLocation":"13216:1:23","nodeType":"VariableDeclaration","scope":6155,"src":"13208:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6113,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6118,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6115,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"13220:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6116,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"13228:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:23","subExpression":{"id":6122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6114,"src":"13247:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6124,"nodeType":"ExpressionStatement","src":"13245:3:23"},"nodeType":"ForStatement","src":"13203:494:23"},{"expression":{"components":[{"hexValue":"74727565","id":6156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6110,"src":"13720:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":6071,"id":6159,"nodeType":"Return","src":"13706:21:23"}]},"documentation":{"id":6059,"nodeType":"StructuredDocumentation","src":"12450:227:23","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":6161,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:23","nodeType":"FunctionDefinition","parameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6061,"mutability":"mutable","name":"input","nameLocation":"12746:5:23","nodeType":"VariableDeclaration","scope":6161,"src":"12732:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6060,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6063,"mutability":"mutable","name":"begin","nameLocation":"12769:5:23","nodeType":"VariableDeclaration","scope":6161,"src":"12761:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6062,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6065,"mutability":"mutable","name":"end","nameLocation":"12792:3:23","nodeType":"VariableDeclaration","scope":6161,"src":"12784:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:23"},"returnParameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"success","nameLocation":"12829:7:23","nodeType":"VariableDeclaration","scope":6161,"src":"12824:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6067,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6070,"mutability":"mutable","name":"value","nameLocation":"12846:5:23","nodeType":"VariableDeclaration","scope":6161,"src":"12838:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:23"},"scope":6575,"src":"12682:1052:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6179,"nodeType":"Block","src":"14032:67:23","statements":[{"expression":{"arguments":[{"id":6170,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"14062:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6174,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"14078:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6172,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:23","typeDescriptions":{}}},"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:23","memberName":"length","nodeType":"MemberAccess","src":"14072:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6169,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[6180,6211],"referencedDeclaration":6211,"src":"14049:12:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6168,"id":6178,"nodeType":"Return","src":"14042:50:23"}]},"documentation":{"id":6162,"nodeType":"StructuredDocumentation","src":"13740:212:23","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":6180,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:23","nodeType":"FunctionDefinition","parameters":{"id":6165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"input","nameLocation":"13993:5:23","nodeType":"VariableDeclaration","scope":6180,"src":"13979:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6163,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:23"},"returnParameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6180,"src":"14023:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6166,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:23"},"scope":6575,"src":"13957:142:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6210,"nodeType":"Block","src":"14472:165:23","statements":[{"assignments":[6193,6195],"declarations":[{"constant":false,"id":6193,"mutability":"mutable","name":"success","nameLocation":"14488:7:23","nodeType":"VariableDeclaration","scope":6210,"src":"14483:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6192,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6195,"mutability":"mutable","name":"value","nameLocation":"14505:5:23","nodeType":"VariableDeclaration","scope":6210,"src":"14497:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6194,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6201,"initialValue":{"arguments":[{"id":6197,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"14530:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6198,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6185,"src":"14537:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6199,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6187,"src":"14544:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6196,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[6232,6336],"referencedDeclaration":6336,"src":"14514:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:23"},{"condition":{"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:23","subExpression":{"id":6202,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"14563:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6207,"nodeType":"IfStatement","src":"14558:50:23","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6204,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5239,"src":"14579:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6206,"nodeType":"RevertStatement","src":"14572:36:23"}},{"expression":{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"14625:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6191,"id":6209,"nodeType":"Return","src":"14618:12:23"}]},"documentation":{"id":6181,"nodeType":"StructuredDocumentation","src":"14105:259:23","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":6211,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:23","nodeType":"FunctionDefinition","parameters":{"id":6188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"input","nameLocation":"14405:5:23","nodeType":"VariableDeclaration","scope":6211,"src":"14391:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6182,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6185,"mutability":"mutable","name":"begin","nameLocation":"14420:5:23","nodeType":"VariableDeclaration","scope":6211,"src":"14412:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6184,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6187,"mutability":"mutable","name":"end","nameLocation":"14435:3:23","nodeType":"VariableDeclaration","scope":6211,"src":"14427:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6186,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:23"},"returnParameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6211,"src":"14463:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6189,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:23"},"scope":6575,"src":"14369:268:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6231,"nodeType":"Block","src":"14944:70:23","statements":[{"expression":{"arguments":[{"id":6222,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"14977:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6226,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6214,"src":"14993:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6224,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:23","typeDescriptions":{}}},"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:23","memberName":"length","nodeType":"MemberAccess","src":"14987:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6221,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[6232,6336],"referencedDeclaration":6336,"src":"14961:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6220,"id":6230,"nodeType":"Return","src":"14954:53:23"}]},"documentation":{"id":6212,"nodeType":"StructuredDocumentation","src":"14643:198:23","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":6232,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:23","nodeType":"FunctionDefinition","parameters":{"id":6215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6214,"mutability":"mutable","name":"input","nameLocation":"14885:5:23","nodeType":"VariableDeclaration","scope":6232,"src":"14871:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6213,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:23"},"returnParameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"success","nameLocation":"14920:7:23","nodeType":"VariableDeclaration","scope":6232,"src":"14915:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6216,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6219,"mutability":"mutable","name":"value","nameLocation":"14937:5:23","nodeType":"VariableDeclaration","scope":6232,"src":"14929:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6218,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:23"},"scope":6575,"src":"14846:168:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6335,"nodeType":"Block","src":"15407:733:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6246,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"15421:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6249,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"15433:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6247,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:23","typeDescriptions":{}}},"id":6250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:23","memberName":"length","nodeType":"MemberAccess","src":"15427:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6253,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"15450:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6254,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"15458:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6264,"nodeType":"IfStatement","src":"15417:72:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6258,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:23","typeDescriptions":{}}},"id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6262,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6245,"id":6263,"nodeType":"Return","src":"15463:26:23"}},{"assignments":[6266],"declarations":[{"constant":false,"id":6266,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:23","nodeType":"VariableDeclaration","scope":6335,"src":"15500:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6265,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6289,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"15518:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"15524:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":6278,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"15574:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6276,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:23","typeDescriptions":{}}},"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6280,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"15582:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6275,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"15545:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6273,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:23","typeDescriptions":{}}},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":6284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6283,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:23","typeDescriptions":{}}},"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:23"},{"assignments":[6291],"declarations":[{"constant":false,"id":6291,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:23","nodeType":"VariableDeclaration","scope":6335,"src":"15686:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6290,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6299,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6293,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"15716:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"15716:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6300,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"15803:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6301,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"15809:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6303,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"15818:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6333,"nodeType":"Block","src":"16083:51:23","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":6326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6327,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:23","typeDescriptions":{}}},"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6331,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6245,"id":6332,"nodeType":"Return","src":"16097:26:23"}]},"id":6334,"nodeType":"IfStatement","src":"15799:335:23","trueBody":{"id":6325,"nodeType":"Block","src":"15834:243:23","statements":[{"assignments":[6306,6308],"declarations":[{"constant":false,"id":6306,"mutability":"mutable","name":"s","nameLocation":"15955:1:23","nodeType":"VariableDeclaration","scope":6325,"src":"15950:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6305,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6308,"mutability":"mutable","name":"v","nameLocation":"15966:1:23","nodeType":"VariableDeclaration","scope":6325,"src":"15958:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6307,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6314,"initialValue":{"arguments":[{"id":6310,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6235,"src":"16003:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6311,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6237,"src":"16010:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6312,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6239,"src":"16017:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6309,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6161,"src":"15971:31:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:23"},{"expression":{"components":[{"id":6315,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6306,"src":"16043:1:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":6320,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"16062:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6318,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:23","typeDescriptions":{}}},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6316,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:23","typeDescriptions":{}}},"id":6322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6245,"id":6324,"nodeType":"Return","src":"16035:31:23"}]}}]},"documentation":{"id":6233,"nodeType":"StructuredDocumentation","src":"15020:226:23","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":6336,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:23","nodeType":"FunctionDefinition","parameters":{"id":6240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6235,"mutability":"mutable","name":"input","nameLocation":"15299:5:23","nodeType":"VariableDeclaration","scope":6336,"src":"15285:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6234,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6237,"mutability":"mutable","name":"begin","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":6336,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6236,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6239,"mutability":"mutable","name":"end","nameLocation":"15345:3:23","nodeType":"VariableDeclaration","scope":6336,"src":"15337:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6238,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:23"},"returnParameters":{"id":6245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"success","nameLocation":"15383:7:23","nodeType":"VariableDeclaration","scope":6336,"src":"15378:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6241,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6244,"mutability":"mutable","name":"value","nameLocation":"15400:5:23","nodeType":"VariableDeclaration","scope":6336,"src":"15392:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6243,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:23"},"scope":6575,"src":"15251:889:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6395,"nodeType":"Block","src":"16209:461:23","statements":[{"assignments":[6344],"declarations":[{"constant":false,"id":6344,"mutability":"mutable","name":"value","nameLocation":"16225:5:23","nodeType":"VariableDeclaration","scope":6395,"src":"16219:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6343,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6349,"initialValue":{"arguments":[{"id":6347,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6338,"src":"16239:3:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6345,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:23","typeDescriptions":{}}},"id":6348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:23"},{"id":6392,"nodeType":"UncheckedBlock","src":"16403:238:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16431:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:23","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16445:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:23","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16491:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16505:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":6365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:23","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16552:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16566:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":6376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:23","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6384,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:23","memberName":"max","nodeType":"MemberAccess","src":"16615:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6342,"id":6388,"nodeType":"Return","src":"16608:22:23"},"id":6389,"nodeType":"IfStatement","src":"16548:82:23","trueBody":{"expression":{"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16578:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":6380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:23","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6382,"nodeType":"ExpressionStatement","src":"16578:11:23"}},"id":6390,"nodeType":"IfStatement","src":"16487:143:23","trueBody":{"expression":{"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16518:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":6369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:23","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6371,"nodeType":"ExpressionStatement","src":"16518:11:23"}},"id":6391,"nodeType":"IfStatement","src":"16427:203:23","trueBody":{"expression":{"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16457:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6360,"nodeType":"ExpressionStatement","src":"16457:11:23"}}]},{"expression":{"id":6393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"16658:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6342,"id":6394,"nodeType":"Return","src":"16651:12:23"}]},"id":6396,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:23","nodeType":"FunctionDefinition","parameters":{"id":6339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6338,"mutability":"mutable","name":"chr","nameLocation":"16175:3:23","nodeType":"VariableDeclaration","scope":6396,"src":"16168:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6337,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:23"},"returnParameters":{"id":6342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6396,"src":"16202:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6340,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:23"},"scope":6575,"src":"16146:524:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6561,"nodeType":"Block","src":"17336:1331:23","statements":[{"assignments":[6405],"declarations":[{"constant":false,"id":6405,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:23","nodeType":"VariableDeclaration","scope":6561,"src":"17346:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6404,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6410,"initialValue":{"arguments":[{"id":6408,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"17374:5:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6406,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:23","typeDescriptions":{}}},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:23"},{"assignments":[6412],"declarations":[{"constant":false,"id":6412,"mutability":"mutable","name":"output","nameLocation":"17403:6:23","nodeType":"VariableDeclaration","scope":6561,"src":"17390:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6411,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6420,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6416,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"17426:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:23","memberName":"length","nodeType":"MemberAccess","src":"17426:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6413,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:23"},{"assignments":[6422],"declarations":[{"constant":false,"id":6422,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:23","nodeType":"VariableDeclaration","scope":6561,"src":"17473:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6421,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6424,"initialValue":{"hexValue":"30","id":6423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:23"},{"body":{"id":6553,"nodeType":"Block","src":"17548:854:23","statements":[{"assignments":[6436],"declarations":[{"constant":false,"id":6436,"mutability":"mutable","name":"char","nameLocation":"17569:4:23","nodeType":"VariableDeclaration","scope":6553,"src":"17562:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6435,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":6444,"initialValue":{"arguments":[{"arguments":[{"id":6440,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"17606:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"17614:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6439,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"17583:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6437,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:23","typeDescriptions":{}}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:23"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6445,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5226,"src":"17637:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":6449,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"17672:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6447,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:23","typeDescriptions":{}}},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6551,"nodeType":"Block","src":"18330:62:23","statements":[{"expression":{"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6544,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"18348:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6547,"indexExpression":{"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:23","subExpression":{"id":6545,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"18355:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6548,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"18373:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6550,"nodeType":"ExpressionStatement","src":"18348:29:23"}]},"id":6552,"nodeType":"IfStatement","src":"17631:761:23","trueBody":{"id":6543,"nodeType":"Block","src":"17687:637:23","statements":[{"expression":{"id":6463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6458,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6461,"indexExpression":{"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:23","subExpression":{"id":6459,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"17712:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":6462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6464,"nodeType":"ExpressionStatement","src":"17705:29:23"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6465,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"17756:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"17825:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":6476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:23","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6485,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"17894:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":6486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6495,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"17963:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":6496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:23","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"18032:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":6506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:23","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"18101:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":6516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:23","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6436,"src":"18171:4:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":6526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:23","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6536,"nodeType":"IfStatement","src":"18167:143:23","trueBody":{"id":6535,"nodeType":"Block","src":"18185:125:23","statements":[{"expression":{"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6528,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"18263:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6531,"indexExpression":{"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:23","subExpression":{"id":6529,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"18270:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6534,"nodeType":"ExpressionStatement","src":"18263:28:23"}]}},"id":6537,"nodeType":"IfStatement","src":"18097:213:23","trueBody":{"expression":{"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6518,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"18115:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6521,"indexExpression":{"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:23","subExpression":{"id":6519,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"18122:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":6522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6524,"nodeType":"ExpressionStatement","src":"18115:29:23"}},"id":6538,"nodeType":"IfStatement","src":"18028:282:23","trueBody":{"expression":{"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6508,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"18046:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6511,"indexExpression":{"id":6510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:23","subExpression":{"id":6509,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"18053:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":6512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6514,"nodeType":"ExpressionStatement","src":"18046:28:23"}},"id":6539,"nodeType":"IfStatement","src":"17959:351:23","trueBody":{"expression":{"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6498,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"17977:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6501,"indexExpression":{"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:23","subExpression":{"id":6499,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"17984:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":6502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6504,"nodeType":"ExpressionStatement","src":"17977:28:23"}},"id":6540,"nodeType":"IfStatement","src":"17890:420:23","trueBody":{"expression":{"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6488,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"17908:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6491,"indexExpression":{"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:23","subExpression":{"id":6489,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"17915:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6494,"nodeType":"ExpressionStatement","src":"17908:28:23"}},"id":6541,"nodeType":"IfStatement","src":"17821:489:23","trueBody":{"expression":{"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6478,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"17839:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6481,"indexExpression":{"id":6480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:23","subExpression":{"id":6479,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"17846:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":6482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6484,"nodeType":"ExpressionStatement","src":"17839:28:23"}},"id":6542,"nodeType":"IfStatement","src":"17752:558:23","trueBody":{"expression":{"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6468,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"17770:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6471,"indexExpression":{"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:23","subExpression":{"id":6469,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"17777:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6474,"nodeType":"ExpressionStatement","src":"17770:28:23"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6428,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"17524:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6429,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"17528:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:23","memberName":"length","nodeType":"MemberAccess","src":"17528:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6554,"initializationExpression":{"assignments":[6426],"declarations":[{"constant":false,"id":6426,"mutability":"mutable","name":"i","nameLocation":"17521:1:23","nodeType":"VariableDeclaration","scope":6554,"src":"17513:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6425,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6427,"nodeType":"VariableDeclarationStatement","src":"17513:9:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:23","subExpression":{"id":6432,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"17545:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6434,"nodeType":"ExpressionStatement","src":"17543:3:23"},"nodeType":"ForStatement","src":"17508:894:23"},{"AST":{"nativeSrc":"18500:129:23","nodeType":"YulBlock","src":"18500:129:23","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:23","nodeType":"YulIdentifier","src":"18521:6:23"},{"name":"outputLength","nativeSrc":"18529:12:23","nodeType":"YulIdentifier","src":"18529:12:23"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:23","nodeType":"YulIdentifier","src":"18514:6:23"},"nativeSrc":"18514:28:23","nodeType":"YulFunctionCall","src":"18514:28:23"},"nativeSrc":"18514:28:23","nodeType":"YulExpressionStatement","src":"18514:28:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:23","nodeType":"YulLiteral","src":"18562:4:23","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:23","nodeType":"YulIdentifier","src":"18572:6:23"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:23","nodeType":"YulLiteral","src":"18584:1:23","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:23","nodeType":"YulLiteral","src":"18591:1:23","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:23","nodeType":"YulIdentifier","src":"18598:12:23"},{"kind":"number","nativeSrc":"18612:2:23","nodeType":"YulLiteral","src":"18612:2:23","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:23","nodeType":"YulIdentifier","src":"18594:3:23"},"nativeSrc":"18594:21:23","nodeType":"YulFunctionCall","src":"18594:21:23"}],"functionName":{"name":"shr","nativeSrc":"18587:3:23","nodeType":"YulIdentifier","src":"18587:3:23"},"nativeSrc":"18587:29:23","nodeType":"YulFunctionCall","src":"18587:29:23"}],"functionName":{"name":"shl","nativeSrc":"18580:3:23","nodeType":"YulIdentifier","src":"18580:3:23"},"nativeSrc":"18580:37:23","nodeType":"YulFunctionCall","src":"18580:37:23"}],"functionName":{"name":"add","nativeSrc":"18568:3:23","nodeType":"YulIdentifier","src":"18568:3:23"},"nativeSrc":"18568:50:23","nodeType":"YulFunctionCall","src":"18568:50:23"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:23","nodeType":"YulIdentifier","src":"18555:6:23"},"nativeSrc":"18555:64:23","nodeType":"YulFunctionCall","src":"18555:64:23"},"nativeSrc":"18555:64:23","nodeType":"YulExpressionStatement","src":"18555:64:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":6412,"isOffset":false,"isSlot":false,"src":"18521:6:23","valueSize":1},{"declaration":6412,"isOffset":false,"isSlot":false,"src":"18572:6:23","valueSize":1},{"declaration":6422,"isOffset":false,"isSlot":false,"src":"18529:12:23","valueSize":1},{"declaration":6422,"isOffset":false,"isSlot":false,"src":"18598:12:23","valueSize":1}],"flags":["memory-safe"],"id":6555,"nodeType":"InlineAssembly","src":"18475:154:23"},{"expression":{"arguments":[{"id":6558,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"18653:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6556,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:23","typeDescriptions":{}}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6403,"id":6560,"nodeType":"Return","src":"18639:21:23"}]},"documentation":{"id":6397,"nodeType":"StructuredDocumentation","src":"16676:576:23","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":6562,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:23","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"input","nameLocation":"17291:5:23","nodeType":"VariableDeclaration","scope":6562,"src":"17277:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6398,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:23"},"returnParameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6562,"src":"17321:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6401,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:23"},"scope":6575,"src":"17257:1410:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6573,"nodeType":"Block","src":"19052:225:23","statements":[{"AST":{"nativeSrc":"19201:70:23","nodeType":"YulBlock","src":"19201:70:23","statements":[{"nativeSrc":"19215:46:23","nodeType":"YulAssignment","src":"19215:46:23","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:23","nodeType":"YulIdentifier","src":"19238:6:23"},{"kind":"number","nativeSrc":"19246:4:23","nodeType":"YulLiteral","src":"19246:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:23","nodeType":"YulIdentifier","src":"19234:3:23"},"nativeSrc":"19234:17:23","nodeType":"YulFunctionCall","src":"19234:17:23"},{"name":"offset","nativeSrc":"19253:6:23","nodeType":"YulIdentifier","src":"19253:6:23"}],"functionName":{"name":"add","nativeSrc":"19230:3:23","nodeType":"YulIdentifier","src":"19230:3:23"},"nativeSrc":"19230:30:23","nodeType":"YulFunctionCall","src":"19230:30:23"}],"functionName":{"name":"mload","nativeSrc":"19224:5:23","nodeType":"YulIdentifier","src":"19224:5:23"},"nativeSrc":"19224:37:23","nodeType":"YulFunctionCall","src":"19224:37:23"},"variableNames":[{"name":"value","nativeSrc":"19215:5:23","nodeType":"YulIdentifier","src":"19215:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6565,"isOffset":false,"isSlot":false,"src":"19238:6:23","valueSize":1},{"declaration":6567,"isOffset":false,"isSlot":false,"src":"19253:6:23","valueSize":1},{"declaration":6570,"isOffset":false,"isSlot":false,"src":"19215:5:23","valueSize":1}],"flags":["memory-safe"],"id":6572,"nodeType":"InlineAssembly","src":"19176:95:23"}]},"documentation":{"id":6563,"nodeType":"StructuredDocumentation","src":"18673:268:23","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":6574,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:23","nodeType":"FunctionDefinition","parameters":{"id":6568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6565,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:23","nodeType":"VariableDeclaration","scope":6574,"src":"18978:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6564,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6567,"mutability":"mutable","name":"offset","nameLocation":"19007:6:23","nodeType":"VariableDeclaration","scope":6574,"src":"18999:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6566,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:23"},"returnParameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"value","nameLocation":"19045:5:23","nodeType":"VariableDeclaration","scope":6574,"src":"19037:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6569,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:23"},"scope":6575,"src":"18946:331:23","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6576,"src":"297:18982:23","usedErrors":[5233,5236,5239],"usedEvents":[]}],"src":"101:19179:23"},"id":23},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6587]},"id":6588,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6577,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6578,"nodeType":"StructuredDocumentation","src":"142:280:24","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6587,"linearizedBaseContracts":[6587],"name":"IERC165","nameLocation":"433:7:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6579,"nodeType":"StructuredDocumentation","src":"447:340:24","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6586,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:24","nodeType":"FunctionDefinition","parameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:24","nodeType":"VariableDeclaration","scope":6586,"src":"819:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6580,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:24","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:24"},"returnParameters":{"id":6585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6586,"src":"862:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6583,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:24"},"scope":6587,"src":"792:76:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6588,"src":"423:447:24","usedErrors":[],"usedEvents":[]}],"src":"115:756:24"},"id":24},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[8208],"Panic":[4919],"SafeCast":[9973]},"id":8209,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6589,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":6591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8209,"sourceUnit":4920,"src":"129:35:25","symbolAliases":[{"foreign":{"id":6590,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"137:5:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8209,"sourceUnit":9974,"src":"165:40:25","symbolAliases":[{"foreign":{"id":6592,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"173:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6594,"nodeType":"StructuredDocumentation","src":"207:73:25","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8208,"linearizedBaseContracts":[8208],"name":"Math","nameLocation":"289:4:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6599,"members":[{"id":6595,"name":"Floor","nameLocation":"324:5:25","nodeType":"EnumValue","src":"324:5:25"},{"id":6596,"name":"Ceil","nameLocation":"367:4:25","nodeType":"EnumValue","src":"367:4:25"},{"id":6597,"name":"Trunc","nameLocation":"409:5:25","nodeType":"EnumValue","src":"409:5:25"},{"id":6598,"name":"Expand","nameLocation":"439:6:25","nodeType":"EnumValue","src":"439:6:25"}],"name":"Rounding","nameLocation":"305:8:25","nodeType":"EnumDefinition","src":"300:169:25"},{"body":{"id":6612,"nodeType":"Block","src":"731:112:25","statements":[{"AST":{"nativeSrc":"766:71:25","nodeType":"YulBlock","src":"766:71:25","statements":[{"nativeSrc":"780:16:25","nodeType":"YulAssignment","src":"780:16:25","value":{"arguments":[{"name":"a","nativeSrc":"791:1:25","nodeType":"YulIdentifier","src":"791:1:25"},{"name":"b","nativeSrc":"794:1:25","nodeType":"YulIdentifier","src":"794:1:25"}],"functionName":{"name":"add","nativeSrc":"787:3:25","nodeType":"YulIdentifier","src":"787:3:25"},"nativeSrc":"787:9:25","nodeType":"YulFunctionCall","src":"787:9:25"},"variableNames":[{"name":"low","nativeSrc":"780:3:25","nodeType":"YulIdentifier","src":"780:3:25"}]},{"nativeSrc":"809:18:25","nodeType":"YulAssignment","src":"809:18:25","value":{"arguments":[{"name":"low","nativeSrc":"820:3:25","nodeType":"YulIdentifier","src":"820:3:25"},{"name":"a","nativeSrc":"825:1:25","nodeType":"YulIdentifier","src":"825:1:25"}],"functionName":{"name":"lt","nativeSrc":"817:2:25","nodeType":"YulIdentifier","src":"817:2:25"},"nativeSrc":"817:10:25","nodeType":"YulFunctionCall","src":"817:10:25"},"variableNames":[{"name":"high","nativeSrc":"809:4:25","nodeType":"YulIdentifier","src":"809:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6602,"isOffset":false,"isSlot":false,"src":"791:1:25","valueSize":1},{"declaration":6602,"isOffset":false,"isSlot":false,"src":"825:1:25","valueSize":1},{"declaration":6604,"isOffset":false,"isSlot":false,"src":"794:1:25","valueSize":1},{"declaration":6607,"isOffset":false,"isSlot":false,"src":"809:4:25","valueSize":1},{"declaration":6609,"isOffset":false,"isSlot":false,"src":"780:3:25","valueSize":1},{"declaration":6609,"isOffset":false,"isSlot":false,"src":"820:3:25","valueSize":1}],"flags":["memory-safe"],"id":6611,"nodeType":"InlineAssembly","src":"741:96:25"}]},"documentation":{"id":6600,"nodeType":"StructuredDocumentation","src":"475:163:25","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":6613,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:25","nodeType":"FunctionDefinition","parameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6602,"mutability":"mutable","name":"a","nameLocation":"667:1:25","nodeType":"VariableDeclaration","scope":6613,"src":"659:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6601,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6604,"mutability":"mutable","name":"b","nameLocation":"678:1:25","nodeType":"VariableDeclaration","scope":6613,"src":"670:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6603,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:25"},"returnParameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6607,"mutability":"mutable","name":"high","nameLocation":"712:4:25","nodeType":"VariableDeclaration","scope":6613,"src":"704:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6606,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6609,"mutability":"mutable","name":"low","nameLocation":"726:3:25","nodeType":"VariableDeclaration","scope":6613,"src":"718:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:25"},"scope":8208,"src":"643:200:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6626,"nodeType":"Block","src":"1115:462:25","statements":[{"AST":{"nativeSrc":"1437:134:25","nodeType":"YulBlock","src":"1437:134:25","statements":[{"nativeSrc":"1451:30:25","nodeType":"YulVariableDeclaration","src":"1451:30:25","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:25","nodeType":"YulIdentifier","src":"1468:1:25"},{"name":"b","nativeSrc":"1471:1:25","nodeType":"YulIdentifier","src":"1471:1:25"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:25","nodeType":"YulLiteral","src":"1478:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:25","nodeType":"YulIdentifier","src":"1474:3:25"},"nativeSrc":"1474:6:25","nodeType":"YulFunctionCall","src":"1474:6:25"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:25","nodeType":"YulIdentifier","src":"1461:6:25"},"nativeSrc":"1461:20:25","nodeType":"YulFunctionCall","src":"1461:20:25"},"variables":[{"name":"mm","nativeSrc":"1455:2:25","nodeType":"YulTypedName","src":"1455:2:25","type":""}]},{"nativeSrc":"1494:16:25","nodeType":"YulAssignment","src":"1494:16:25","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:25","nodeType":"YulIdentifier","src":"1505:1:25"},{"name":"b","nativeSrc":"1508:1:25","nodeType":"YulIdentifier","src":"1508:1:25"}],"functionName":{"name":"mul","nativeSrc":"1501:3:25","nodeType":"YulIdentifier","src":"1501:3:25"},"nativeSrc":"1501:9:25","nodeType":"YulFunctionCall","src":"1501:9:25"},"variableNames":[{"name":"low","nativeSrc":"1494:3:25","nodeType":"YulIdentifier","src":"1494:3:25"}]},{"nativeSrc":"1523:38:25","nodeType":"YulAssignment","src":"1523:38:25","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:25","nodeType":"YulIdentifier","src":"1539:2:25"},{"name":"low","nativeSrc":"1543:3:25","nodeType":"YulIdentifier","src":"1543:3:25"}],"functionName":{"name":"sub","nativeSrc":"1535:3:25","nodeType":"YulIdentifier","src":"1535:3:25"},"nativeSrc":"1535:12:25","nodeType":"YulFunctionCall","src":"1535:12:25"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:25","nodeType":"YulIdentifier","src":"1552:2:25"},{"name":"low","nativeSrc":"1556:3:25","nodeType":"YulIdentifier","src":"1556:3:25"}],"functionName":{"name":"lt","nativeSrc":"1549:2:25","nodeType":"YulIdentifier","src":"1549:2:25"},"nativeSrc":"1549:11:25","nodeType":"YulFunctionCall","src":"1549:11:25"}],"functionName":{"name":"sub","nativeSrc":"1531:3:25","nodeType":"YulIdentifier","src":"1531:3:25"},"nativeSrc":"1531:30:25","nodeType":"YulFunctionCall","src":"1531:30:25"},"variableNames":[{"name":"high","nativeSrc":"1523:4:25","nodeType":"YulIdentifier","src":"1523:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6616,"isOffset":false,"isSlot":false,"src":"1468:1:25","valueSize":1},{"declaration":6616,"isOffset":false,"isSlot":false,"src":"1505:1:25","valueSize":1},{"declaration":6618,"isOffset":false,"isSlot":false,"src":"1471:1:25","valueSize":1},{"declaration":6618,"isOffset":false,"isSlot":false,"src":"1508:1:25","valueSize":1},{"declaration":6621,"isOffset":false,"isSlot":false,"src":"1523:4:25","valueSize":1},{"declaration":6623,"isOffset":false,"isSlot":false,"src":"1494:3:25","valueSize":1},{"declaration":6623,"isOffset":false,"isSlot":false,"src":"1543:3:25","valueSize":1},{"declaration":6623,"isOffset":false,"isSlot":false,"src":"1556:3:25","valueSize":1}],"flags":["memory-safe"],"id":6625,"nodeType":"InlineAssembly","src":"1412:159:25"}]},"documentation":{"id":6614,"nodeType":"StructuredDocumentation","src":"849:173:25","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":6627,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:25","nodeType":"FunctionDefinition","parameters":{"id":6619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6616,"mutability":"mutable","name":"a","nameLocation":"1051:1:25","nodeType":"VariableDeclaration","scope":6627,"src":"1043:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6618,"mutability":"mutable","name":"b","nameLocation":"1062:1:25","nodeType":"VariableDeclaration","scope":6627,"src":"1054:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6617,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:25"},"returnParameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"high","nameLocation":"1096:4:25","nodeType":"VariableDeclaration","scope":6627,"src":"1088:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6623,"mutability":"mutable","name":"low","nameLocation":"1110:3:25","nodeType":"VariableDeclaration","scope":6627,"src":"1102:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:25"},"scope":8208,"src":"1027:550:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6661,"nodeType":"Block","src":"1784:149:25","statements":[{"id":6660,"nodeType":"UncheckedBlock","src":"1794:133:25","statements":[{"assignments":[6640],"declarations":[{"constant":false,"id":6640,"mutability":"mutable","name":"c","nameLocation":"1826:1:25","nodeType":"VariableDeclaration","scope":6660,"src":"1818:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6644,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6641,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"1830:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6642,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"1834:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:25"},{"expression":{"id":6649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6645,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"1849:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6646,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"1859:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6647,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6630,"src":"1864:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6650,"nodeType":"ExpressionStatement","src":"1849:16:25"},{"expression":{"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6651,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6637,"src":"1879:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"1888:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6655,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"1908:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6653,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"1892:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"1892:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6659,"nodeType":"ExpressionStatement","src":"1879:37:25"}]}]},"documentation":{"id":6628,"nodeType":"StructuredDocumentation","src":"1583:105:25","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":6662,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:25","nodeType":"FunctionDefinition","parameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6630,"mutability":"mutable","name":"a","nameLocation":"1717:1:25","nodeType":"VariableDeclaration","scope":6662,"src":"1709:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6632,"mutability":"mutable","name":"b","nameLocation":"1728:1:25","nodeType":"VariableDeclaration","scope":6662,"src":"1720:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:25"},"returnParameters":{"id":6638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"success","nameLocation":"1759:7:25","nodeType":"VariableDeclaration","scope":6662,"src":"1754:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6634,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6637,"mutability":"mutable","name":"result","nameLocation":"1776:6:25","nodeType":"VariableDeclaration","scope":6662,"src":"1768:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:25"},"scope":8208,"src":"1693:240:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6696,"nodeType":"Block","src":"2143:149:25","statements":[{"id":6695,"nodeType":"UncheckedBlock","src":"2153:133:25","statements":[{"assignments":[6675],"declarations":[{"constant":false,"id":6675,"mutability":"mutable","name":"c","nameLocation":"2185:1:25","nodeType":"VariableDeclaration","scope":6695,"src":"2177:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6674,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6679,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6676,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"2189:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6677,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"2193:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:25"},{"expression":{"id":6684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6680,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"2208:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6681,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"2218:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6665,"src":"2223:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6685,"nodeType":"ExpressionStatement","src":"2208:16:25"},{"expression":{"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6686,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"2238:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6687,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"2247:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6690,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6670,"src":"2267:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"2251:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"2251:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6694,"nodeType":"ExpressionStatement","src":"2238:37:25"}]}]},"documentation":{"id":6663,"nodeType":"StructuredDocumentation","src":"1939:108:25","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6697,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:25","nodeType":"FunctionDefinition","parameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6665,"mutability":"mutable","name":"a","nameLocation":"2076:1:25","nodeType":"VariableDeclaration","scope":6697,"src":"2068:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6664,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6667,"mutability":"mutable","name":"b","nameLocation":"2087:1:25","nodeType":"VariableDeclaration","scope":6697,"src":"2079:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:25"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6670,"mutability":"mutable","name":"success","nameLocation":"2118:7:25","nodeType":"VariableDeclaration","scope":6697,"src":"2113:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6669,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6672,"mutability":"mutable","name":"result","nameLocation":"2135:6:25","nodeType":"VariableDeclaration","scope":6697,"src":"2127:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6671,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:25"},"scope":8208,"src":"2052:240:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6726,"nodeType":"Block","src":"2505:391:25","statements":[{"id":6725,"nodeType":"UncheckedBlock","src":"2515:375:25","statements":[{"assignments":[6710],"declarations":[{"constant":false,"id":6710,"mutability":"mutable","name":"c","nameLocation":"2547:1:25","nodeType":"VariableDeclaration","scope":6725,"src":"2539:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6714,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"2551:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"2555:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:25"},{"AST":{"nativeSrc":"2595:188:25","nodeType":"YulBlock","src":"2595:188:25","statements":[{"nativeSrc":"2727:42:25","nodeType":"YulAssignment","src":"2727:42:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:25","nodeType":"YulIdentifier","src":"2748:1:25"},{"name":"a","nativeSrc":"2751:1:25","nodeType":"YulIdentifier","src":"2751:1:25"}],"functionName":{"name":"div","nativeSrc":"2744:3:25","nodeType":"YulIdentifier","src":"2744:3:25"},"nativeSrc":"2744:9:25","nodeType":"YulFunctionCall","src":"2744:9:25"},{"name":"b","nativeSrc":"2755:1:25","nodeType":"YulIdentifier","src":"2755:1:25"}],"functionName":{"name":"eq","nativeSrc":"2741:2:25","nodeType":"YulIdentifier","src":"2741:2:25"},"nativeSrc":"2741:16:25","nodeType":"YulFunctionCall","src":"2741:16:25"},{"arguments":[{"name":"a","nativeSrc":"2766:1:25","nodeType":"YulIdentifier","src":"2766:1:25"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:25","nodeType":"YulIdentifier","src":"2759:6:25"},"nativeSrc":"2759:9:25","nodeType":"YulFunctionCall","src":"2759:9:25"}],"functionName":{"name":"or","nativeSrc":"2738:2:25","nodeType":"YulIdentifier","src":"2738:2:25"},"nativeSrc":"2738:31:25","nodeType":"YulFunctionCall","src":"2738:31:25"},"variableNames":[{"name":"success","nativeSrc":"2727:7:25","nodeType":"YulIdentifier","src":"2727:7:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6700,"isOffset":false,"isSlot":false,"src":"2751:1:25","valueSize":1},{"declaration":6700,"isOffset":false,"isSlot":false,"src":"2766:1:25","valueSize":1},{"declaration":6702,"isOffset":false,"isSlot":false,"src":"2755:1:25","valueSize":1},{"declaration":6710,"isOffset":false,"isSlot":false,"src":"2748:1:25","valueSize":1},{"declaration":6705,"isOffset":false,"isSlot":false,"src":"2727:7:25","valueSize":1}],"flags":["memory-safe"],"id":6715,"nodeType":"InlineAssembly","src":"2570:213:25"},{"expression":{"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6716,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6707,"src":"2842:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6717,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"2851:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6720,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6705,"src":"2871:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6718,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"2855:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"2855:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6724,"nodeType":"ExpressionStatement","src":"2842:37:25"}]}]},"documentation":{"id":6698,"nodeType":"StructuredDocumentation","src":"2298:111:25","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6727,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:25","nodeType":"FunctionDefinition","parameters":{"id":6703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"a","nameLocation":"2438:1:25","nodeType":"VariableDeclaration","scope":6727,"src":"2430:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6699,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6702,"mutability":"mutable","name":"b","nameLocation":"2449:1:25","nodeType":"VariableDeclaration","scope":6727,"src":"2441:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:25"},"returnParameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6705,"mutability":"mutable","name":"success","nameLocation":"2480:7:25","nodeType":"VariableDeclaration","scope":6727,"src":"2475:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6704,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6707,"mutability":"mutable","name":"result","nameLocation":"2497:6:25","nodeType":"VariableDeclaration","scope":6727,"src":"2489:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6706,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:25"},"scope":8208,"src":"2414:482:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6747,"nodeType":"Block","src":"3111:231:25","statements":[{"id":6746,"nodeType":"UncheckedBlock","src":"3121:215:25","statements":[{"expression":{"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6739,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"3145:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"3155:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6744,"nodeType":"ExpressionStatement","src":"3145:15:25"},{"AST":{"nativeSrc":"3199:127:25","nodeType":"YulBlock","src":"3199:127:25","statements":[{"nativeSrc":"3293:19:25","nodeType":"YulAssignment","src":"3293:19:25","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:25","nodeType":"YulIdentifier","src":"3307:1:25"},{"name":"b","nativeSrc":"3310:1:25","nodeType":"YulIdentifier","src":"3310:1:25"}],"functionName":{"name":"div","nativeSrc":"3303:3:25","nodeType":"YulIdentifier","src":"3303:3:25"},"nativeSrc":"3303:9:25","nodeType":"YulFunctionCall","src":"3303:9:25"},"variableNames":[{"name":"result","nativeSrc":"3293:6:25","nodeType":"YulIdentifier","src":"3293:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6730,"isOffset":false,"isSlot":false,"src":"3307:1:25","valueSize":1},{"declaration":6732,"isOffset":false,"isSlot":false,"src":"3310:1:25","valueSize":1},{"declaration":6737,"isOffset":false,"isSlot":false,"src":"3293:6:25","valueSize":1}],"flags":["memory-safe"],"id":6745,"nodeType":"InlineAssembly","src":"3174:152:25"}]}]},"documentation":{"id":6728,"nodeType":"StructuredDocumentation","src":"2902:113:25","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6748,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:25","nodeType":"FunctionDefinition","parameters":{"id":6733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6730,"mutability":"mutable","name":"a","nameLocation":"3044:1:25","nodeType":"VariableDeclaration","scope":6748,"src":"3036:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6732,"mutability":"mutable","name":"b","nameLocation":"3055:1:25","nodeType":"VariableDeclaration","scope":6748,"src":"3047:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6731,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:25"},"returnParameters":{"id":6738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6735,"mutability":"mutable","name":"success","nameLocation":"3086:7:25","nodeType":"VariableDeclaration","scope":6748,"src":"3081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6734,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6737,"mutability":"mutable","name":"result","nameLocation":"3103:6:25","nodeType":"VariableDeclaration","scope":6748,"src":"3095:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:25"},"scope":8208,"src":"3020:322:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6768,"nodeType":"Block","src":"3567:231:25","statements":[{"id":6767,"nodeType":"UncheckedBlock","src":"3577:215:25","statements":[{"expression":{"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6760,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"3601:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6761,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6753,"src":"3611:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6765,"nodeType":"ExpressionStatement","src":"3601:15:25"},{"AST":{"nativeSrc":"3655:127:25","nodeType":"YulBlock","src":"3655:127:25","statements":[{"nativeSrc":"3749:19:25","nodeType":"YulAssignment","src":"3749:19:25","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:25","nodeType":"YulIdentifier","src":"3763:1:25"},{"name":"b","nativeSrc":"3766:1:25","nodeType":"YulIdentifier","src":"3766:1:25"}],"functionName":{"name":"mod","nativeSrc":"3759:3:25","nodeType":"YulIdentifier","src":"3759:3:25"},"nativeSrc":"3759:9:25","nodeType":"YulFunctionCall","src":"3759:9:25"},"variableNames":[{"name":"result","nativeSrc":"3749:6:25","nodeType":"YulIdentifier","src":"3749:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6751,"isOffset":false,"isSlot":false,"src":"3763:1:25","valueSize":1},{"declaration":6753,"isOffset":false,"isSlot":false,"src":"3766:1:25","valueSize":1},{"declaration":6758,"isOffset":false,"isSlot":false,"src":"3749:6:25","valueSize":1}],"flags":["memory-safe"],"id":6766,"nodeType":"InlineAssembly","src":"3630:152:25"}]}]},"documentation":{"id":6749,"nodeType":"StructuredDocumentation","src":"3348:123:25","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6769,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:25","nodeType":"FunctionDefinition","parameters":{"id":6754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6751,"mutability":"mutable","name":"a","nameLocation":"3500:1:25","nodeType":"VariableDeclaration","scope":6769,"src":"3492:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6753,"mutability":"mutable","name":"b","nameLocation":"3511:1:25","nodeType":"VariableDeclaration","scope":6769,"src":"3503:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6752,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:25"},"returnParameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6756,"mutability":"mutable","name":"success","nameLocation":"3542:7:25","nodeType":"VariableDeclaration","scope":6769,"src":"3537:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6755,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6758,"mutability":"mutable","name":"result","nameLocation":"3559:6:25","nodeType":"VariableDeclaration","scope":6769,"src":"3551:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6757,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:25"},"scope":8208,"src":"3476:322:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6798,"nodeType":"Block","src":"3989:122:25","statements":[{"assignments":[6780,6782],"declarations":[{"constant":false,"id":6780,"mutability":"mutable","name":"success","nameLocation":"4005:7:25","nodeType":"VariableDeclaration","scope":6798,"src":"4000:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6779,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6782,"mutability":"mutable","name":"result","nameLocation":"4022:6:25","nodeType":"VariableDeclaration","scope":6798,"src":"4014:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6787,"initialValue":{"arguments":[{"id":6784,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"4039:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6785,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"4042:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6783,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"4032:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:25"},{"expression":{"arguments":[{"id":6789,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"4069:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"4078:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6792,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:25","memberName":"max","nodeType":"MemberAccess","src":"4086:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6788,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"4061:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6778,"id":6797,"nodeType":"Return","src":"4054:50:25"}]},"documentation":{"id":6770,"nodeType":"StructuredDocumentation","src":"3804:103:25","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6799,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:25","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"a","nameLocation":"3943:1:25","nodeType":"VariableDeclaration","scope":6799,"src":"3935:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"b","nameLocation":"3954:1:25","nodeType":"VariableDeclaration","scope":6799,"src":"3946:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:25"},"returnParameters":{"id":6778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6799,"src":"3980:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6776,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:25"},"scope":8208,"src":"3912:199:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6818,"nodeType":"Block","src":"4294:73:25","statements":[{"assignments":[null,6810],"declarations":[null,{"constant":false,"id":6810,"mutability":"mutable","name":"result","nameLocation":"4315:6:25","nodeType":"VariableDeclaration","scope":6818,"src":"4307:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6809,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6815,"initialValue":{"arguments":[{"id":6812,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"4332:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6813,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"4335:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6811,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"4325:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:25"},{"expression":{"id":6816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6810,"src":"4354:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6808,"id":6817,"nodeType":"Return","src":"4347:13:25"}]},"documentation":{"id":6800,"nodeType":"StructuredDocumentation","src":"4117:95:25","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6819,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:25","nodeType":"FunctionDefinition","parameters":{"id":6805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"a","nameLocation":"4248:1:25","nodeType":"VariableDeclaration","scope":6819,"src":"4240:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6804,"mutability":"mutable","name":"b","nameLocation":"4259:1:25","nodeType":"VariableDeclaration","scope":6819,"src":"4251:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6803,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:25"},"returnParameters":{"id":6808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6819,"src":"4285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6806,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:25"},"scope":8208,"src":"4217:150:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6848,"nodeType":"Block","src":"4564:122:25","statements":[{"assignments":[6830,6832],"declarations":[{"constant":false,"id":6830,"mutability":"mutable","name":"success","nameLocation":"4580:7:25","nodeType":"VariableDeclaration","scope":6848,"src":"4575:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6829,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6832,"mutability":"mutable","name":"result","nameLocation":"4597:6:25","nodeType":"VariableDeclaration","scope":6848,"src":"4589:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6831,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6837,"initialValue":{"arguments":[{"id":6834,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"4614:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6835,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6824,"src":"4617:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6833,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6727,"src":"4607:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:25"},{"expression":{"arguments":[{"id":6839,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"4644:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6840,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"4653:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6842,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6841,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:25","memberName":"max","nodeType":"MemberAccess","src":"4661:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6838,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"4636:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6828,"id":6847,"nodeType":"Return","src":"4629:50:25"}]},"documentation":{"id":6820,"nodeType":"StructuredDocumentation","src":"4373:109:25","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6849,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:25","nodeType":"FunctionDefinition","parameters":{"id":6825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6822,"mutability":"mutable","name":"a","nameLocation":"4518:1:25","nodeType":"VariableDeclaration","scope":6849,"src":"4510:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6824,"mutability":"mutable","name":"b","nameLocation":"4529:1:25","nodeType":"VariableDeclaration","scope":6849,"src":"4521:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6823,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:25"},"returnParameters":{"id":6828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6849,"src":"4555:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6826,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:25"},"scope":8208,"src":"4487:199:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6875,"nodeType":"Block","src":"5158:207:25","statements":[{"id":6874,"nodeType":"UncheckedBlock","src":"5168:191:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6861,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"5306:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"5312:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6863,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6856,"src":"5316:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6868,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"5337:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6866,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"5321:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":6867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"5321:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6860,"id":6873,"nodeType":"Return","src":"5299:49:25"}]}]},"documentation":{"id":6850,"nodeType":"StructuredDocumentation","src":"4692:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:25","nodeType":"FunctionDefinition","parameters":{"id":6857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6852,"mutability":"mutable","name":"condition","nameLocation":"5093:9:25","nodeType":"VariableDeclaration","scope":6876,"src":"5088:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6851,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6854,"mutability":"mutable","name":"a","nameLocation":"5112:1:25","nodeType":"VariableDeclaration","scope":6876,"src":"5104:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6853,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6856,"mutability":"mutable","name":"b","nameLocation":"5123:1:25","nodeType":"VariableDeclaration","scope":6876,"src":"5115:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:25"},"returnParameters":{"id":6860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6876,"src":"5149:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6858,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:25"},"scope":8208,"src":"5071:294:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6894,"nodeType":"Block","src":"5502:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"5527:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6888,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"5531:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6890,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"5534:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6891,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"5537:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6886,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"5519:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6885,"id":6893,"nodeType":"Return","src":"5512:27:25"}]},"documentation":{"id":6877,"nodeType":"StructuredDocumentation","src":"5371:59:25","text":" @dev Returns the largest of two numbers."},"id":6895,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:25","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"a","nameLocation":"5456:1:25","nodeType":"VariableDeclaration","scope":6895,"src":"5448:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6878,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6881,"mutability":"mutable","name":"b","nameLocation":"5467:1:25","nodeType":"VariableDeclaration","scope":6895,"src":"5459:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6880,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:25"},"returnParameters":{"id":6885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6895,"src":"5493:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:25"},"scope":8208,"src":"5435:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6913,"nodeType":"Block","src":"5684:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"5709:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"5713:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"5716:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"5719:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6905,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"5701:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6904,"id":6912,"nodeType":"Return","src":"5694:27:25"}]},"documentation":{"id":6896,"nodeType":"StructuredDocumentation","src":"5552:60:25","text":" @dev Returns the smallest of two numbers."},"id":6914,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:25","nodeType":"FunctionDefinition","parameters":{"id":6901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"a","nameLocation":"5638:1:25","nodeType":"VariableDeclaration","scope":6914,"src":"5630:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6897,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6900,"mutability":"mutable","name":"b","nameLocation":"5649:1:25","nodeType":"VariableDeclaration","scope":6914,"src":"5641:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6899,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:25"},"returnParameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6914,"src":"5675:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6902,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:25"},"scope":8208,"src":"5617:111:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6936,"nodeType":"Block","src":"5912:82:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"5967:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"5971:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6917,"src":"5977:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6929,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"5981:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6923,"id":6935,"nodeType":"Return","src":"5959:28:25"}]},"documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"5734:102:25","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6937,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:25","nodeType":"FunctionDefinition","parameters":{"id":6920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6917,"mutability":"mutable","name":"a","nameLocation":"5866:1:25","nodeType":"VariableDeclaration","scope":6937,"src":"5858:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6919,"mutability":"mutable","name":"b","nameLocation":"5877:1:25","nodeType":"VariableDeclaration","scope":6937,"src":"5869:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6918,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:25"},"returnParameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6937,"src":"5903:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6921,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:25"},"scope":8208,"src":"5841:153:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6977,"nodeType":"Block","src":"6286:633:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"6300:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6958,"nodeType":"IfStatement","src":"6296:150:25","trueBody":{"id":6957,"nodeType":"Block","src":"6308:138:25","statements":[{"expression":{"arguments":[{"expression":{"id":6953,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"6412:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4886,"src":"6412:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6950,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"6400:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":6952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4918,"src":"6400:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6956,"nodeType":"ExpressionStatement","src":"6400:35:25"}]}},{"id":6976,"nodeType":"UncheckedBlock","src":"6829:84:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"6876:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6959,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"6860:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"6860:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6940,"src":"6887:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"6896:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6973,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6946,"id":6975,"nodeType":"Return","src":"6853:49:25"}]}]},"documentation":{"id":6938,"nodeType":"StructuredDocumentation","src":"6000:210:25","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6978,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:25","nodeType":"FunctionDefinition","parameters":{"id":6943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6940,"mutability":"mutable","name":"a","nameLocation":"6240:1:25","nodeType":"VariableDeclaration","scope":6978,"src":"6232:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6939,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6942,"mutability":"mutable","name":"b","nameLocation":"6251:1:25","nodeType":"VariableDeclaration","scope":6978,"src":"6243:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:25"},"returnParameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6978,"src":"6277:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6944,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:25"},"scope":8208,"src":"6215:704:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7113,"nodeType":"Block","src":"7340:3585:25","statements":[{"id":7112,"nodeType":"UncheckedBlock","src":"7350:3569:25","statements":[{"assignments":[6991,6993],"declarations":[{"constant":false,"id":6991,"mutability":"mutable","name":"high","nameLocation":"7383:4:25","nodeType":"VariableDeclaration","scope":7112,"src":"7375:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6993,"mutability":"mutable","name":"low","nameLocation":"7397:3:25","nodeType":"VariableDeclaration","scope":7112,"src":"7389:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6992,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6998,"initialValue":{"arguments":[{"id":6995,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"7411:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6996,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"7414:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6994,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"7404:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6999,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"7498:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7007,"nodeType":"IfStatement","src":"7494:365:25","trueBody":{"id":7006,"nodeType":"Block","src":"7509:350:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7002,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"7827:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7003,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"7833:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6989,"id":7005,"nodeType":"Return","src":"7820:24:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7008,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"7969:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7009,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"7984:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7026,"nodeType":"IfStatement","src":"7965:142:25","trueBody":{"id":7025,"nodeType":"Block","src":"7990:117:25","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7015,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"8028:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":7018,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"8046:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4886,"src":"8046:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7020,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"8070:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:25","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4882,"src":"8070:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7014,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"8020:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7011,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"8008:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4918,"src":"8008:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7024,"nodeType":"ExpressionStatement","src":"8008:84:25"}]}},{"assignments":[7028],"declarations":[{"constant":false,"id":7028,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:25","nodeType":"VariableDeclaration","scope":7112,"src":"8359:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7027,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7029,"nodeType":"VariableDeclarationStatement","src":"8359:17:25"},{"AST":{"nativeSrc":"8415:283:25","nodeType":"YulBlock","src":"8415:283:25","statements":[{"nativeSrc":"8484:38:25","nodeType":"YulAssignment","src":"8484:38:25","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:25","nodeType":"YulIdentifier","src":"8504:1:25"},{"name":"y","nativeSrc":"8507:1:25","nodeType":"YulIdentifier","src":"8507:1:25"},{"name":"denominator","nativeSrc":"8510:11:25","nodeType":"YulIdentifier","src":"8510:11:25"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:25","nodeType":"YulIdentifier","src":"8497:6:25"},"nativeSrc":"8497:25:25","nodeType":"YulFunctionCall","src":"8497:25:25"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:25","nodeType":"YulIdentifier","src":"8484:9:25"}]},{"nativeSrc":"8604:37:25","nodeType":"YulAssignment","src":"8604:37:25","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:25","nodeType":"YulIdentifier","src":"8616:4:25"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:25","nodeType":"YulIdentifier","src":"8625:9:25"},{"name":"low","nativeSrc":"8636:3:25","nodeType":"YulIdentifier","src":"8636:3:25"}],"functionName":{"name":"gt","nativeSrc":"8622:2:25","nodeType":"YulIdentifier","src":"8622:2:25"},"nativeSrc":"8622:18:25","nodeType":"YulFunctionCall","src":"8622:18:25"}],"functionName":{"name":"sub","nativeSrc":"8612:3:25","nodeType":"YulIdentifier","src":"8612:3:25"},"nativeSrc":"8612:29:25","nodeType":"YulFunctionCall","src":"8612:29:25"},"variableNames":[{"name":"high","nativeSrc":"8604:4:25","nodeType":"YulIdentifier","src":"8604:4:25"}]},{"nativeSrc":"8658:26:25","nodeType":"YulAssignment","src":"8658:26:25","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:25","nodeType":"YulIdentifier","src":"8669:3:25"},{"name":"remainder","nativeSrc":"8674:9:25","nodeType":"YulIdentifier","src":"8674:9:25"}],"functionName":{"name":"sub","nativeSrc":"8665:3:25","nodeType":"YulIdentifier","src":"8665:3:25"},"nativeSrc":"8665:19:25","nodeType":"YulFunctionCall","src":"8665:19:25"},"variableNames":[{"name":"low","nativeSrc":"8658:3:25","nodeType":"YulIdentifier","src":"8658:3:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6985,"isOffset":false,"isSlot":false,"src":"8510:11:25","valueSize":1},{"declaration":6991,"isOffset":false,"isSlot":false,"src":"8604:4:25","valueSize":1},{"declaration":6991,"isOffset":false,"isSlot":false,"src":"8616:4:25","valueSize":1},{"declaration":6993,"isOffset":false,"isSlot":false,"src":"8636:3:25","valueSize":1},{"declaration":6993,"isOffset":false,"isSlot":false,"src":"8658:3:25","valueSize":1},{"declaration":6993,"isOffset":false,"isSlot":false,"src":"8669:3:25","valueSize":1},{"declaration":7028,"isOffset":false,"isSlot":false,"src":"8484:9:25","valueSize":1},{"declaration":7028,"isOffset":false,"isSlot":false,"src":"8625:9:25","valueSize":1},{"declaration":7028,"isOffset":false,"isSlot":false,"src":"8674:9:25","valueSize":1},{"declaration":6981,"isOffset":false,"isSlot":false,"src":"8504:1:25","valueSize":1},{"declaration":6983,"isOffset":false,"isSlot":false,"src":"8507:1:25","valueSize":1}],"flags":["memory-safe"],"id":7030,"nodeType":"InlineAssembly","src":"8390:308:25"},{"assignments":[7032],"declarations":[{"constant":false,"id":7032,"mutability":"mutable","name":"twos","nameLocation":"8910:4:25","nodeType":"VariableDeclaration","scope":7112,"src":"8902:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7031,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7039,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7033,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"8917:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":7034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7035,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"8936:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:25"},{"AST":{"nativeSrc":"8987:359:25","nodeType":"YulBlock","src":"8987:359:25","statements":[{"nativeSrc":"9052:37:25","nodeType":"YulAssignment","src":"9052:37:25","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:25","nodeType":"YulIdentifier","src":"9071:11:25"},{"name":"twos","nativeSrc":"9084:4:25","nodeType":"YulIdentifier","src":"9084:4:25"}],"functionName":{"name":"div","nativeSrc":"9067:3:25","nodeType":"YulIdentifier","src":"9067:3:25"},"nativeSrc":"9067:22:25","nodeType":"YulFunctionCall","src":"9067:22:25"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:25","nodeType":"YulIdentifier","src":"9052:11:25"}]},{"nativeSrc":"9153:21:25","nodeType":"YulAssignment","src":"9153:21:25","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:25","nodeType":"YulIdentifier","src":"9164:3:25"},{"name":"twos","nativeSrc":"9169:4:25","nodeType":"YulIdentifier","src":"9169:4:25"}],"functionName":{"name":"div","nativeSrc":"9160:3:25","nodeType":"YulIdentifier","src":"9160:3:25"},"nativeSrc":"9160:14:25","nodeType":"YulFunctionCall","src":"9160:14:25"},"variableNames":[{"name":"low","nativeSrc":"9153:3:25","nodeType":"YulIdentifier","src":"9153:3:25"}]},{"nativeSrc":"9293:39:25","nodeType":"YulAssignment","src":"9293:39:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:25","nodeType":"YulLiteral","src":"9313:1:25","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:25","nodeType":"YulIdentifier","src":"9316:4:25"}],"functionName":{"name":"sub","nativeSrc":"9309:3:25","nodeType":"YulIdentifier","src":"9309:3:25"},"nativeSrc":"9309:12:25","nodeType":"YulFunctionCall","src":"9309:12:25"},{"name":"twos","nativeSrc":"9323:4:25","nodeType":"YulIdentifier","src":"9323:4:25"}],"functionName":{"name":"div","nativeSrc":"9305:3:25","nodeType":"YulIdentifier","src":"9305:3:25"},"nativeSrc":"9305:23:25","nodeType":"YulFunctionCall","src":"9305:23:25"},{"kind":"number","nativeSrc":"9330:1:25","nodeType":"YulLiteral","src":"9330:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:25","nodeType":"YulIdentifier","src":"9301:3:25"},"nativeSrc":"9301:31:25","nodeType":"YulFunctionCall","src":"9301:31:25"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:25","nodeType":"YulIdentifier","src":"9293:4:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6985,"isOffset":false,"isSlot":false,"src":"9052:11:25","valueSize":1},{"declaration":6985,"isOffset":false,"isSlot":false,"src":"9071:11:25","valueSize":1},{"declaration":6993,"isOffset":false,"isSlot":false,"src":"9153:3:25","valueSize":1},{"declaration":6993,"isOffset":false,"isSlot":false,"src":"9164:3:25","valueSize":1},{"declaration":7032,"isOffset":false,"isSlot":false,"src":"9084:4:25","valueSize":1},{"declaration":7032,"isOffset":false,"isSlot":false,"src":"9169:4:25","valueSize":1},{"declaration":7032,"isOffset":false,"isSlot":false,"src":"9293:4:25","valueSize":1},{"declaration":7032,"isOffset":false,"isSlot":false,"src":"9316:4:25","valueSize":1},{"declaration":7032,"isOffset":false,"isSlot":false,"src":"9323:4:25","valueSize":1}],"flags":["memory-safe"],"id":7040,"nodeType":"InlineAssembly","src":"8962:384:25"},{"expression":{"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7041,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"9409:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"9416:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7043,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"9423:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7046,"nodeType":"ExpressionStatement","src":"9409:18:25"},{"assignments":[7048],"declarations":[{"constant":false,"id":7048,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:25","nodeType":"VariableDeclaration","scope":7112,"src":"9762:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7047,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7055,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7050,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"9785:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:25"},{"expression":{"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7056,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10018:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7058,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10033:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7059,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10047:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7063,"nodeType":"ExpressionStatement","src":"10018:36:25"},{"expression":{"id":7070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7064,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10088:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7066,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10103:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7067,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10117:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7071,"nodeType":"ExpressionStatement","src":"10088:36:25"},{"expression":{"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7072,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10160:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7074,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10175:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7075,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10189:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7079,"nodeType":"ExpressionStatement","src":"10160:36:25"},{"expression":{"id":7086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7080,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10231:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7082,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10246:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7083,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10260:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7087,"nodeType":"ExpressionStatement","src":"10231:36:25"},{"expression":{"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7088,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10304:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7090,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10319:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7091,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10333:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7095,"nodeType":"ExpressionStatement","src":"10304:36:25"},{"expression":{"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7096,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10378:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7098,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"10393:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7099,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10407:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7103,"nodeType":"ExpressionStatement","src":"10378:36:25"},{"expression":{"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7104,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"10859:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7105,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"10868:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7106,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10874:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7109,"nodeType":"ExpressionStatement","src":"10859:22:25"},{"expression":{"id":7110,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"10902:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6989,"id":7111,"nodeType":"Return","src":"10895:13:25"}]}]},"documentation":{"id":6979,"nodeType":"StructuredDocumentation","src":"6925:312:25","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":7114,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:25","nodeType":"FunctionDefinition","parameters":{"id":6986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"x","nameLocation":"7266:1:25","nodeType":"VariableDeclaration","scope":7114,"src":"7258:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6980,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6983,"mutability":"mutable","name":"y","nameLocation":"7277:1:25","nodeType":"VariableDeclaration","scope":7114,"src":"7269:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6982,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6985,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:25","nodeType":"VariableDeclaration","scope":7114,"src":"7280:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6984,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:25"},"returnParameters":{"id":6989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6988,"mutability":"mutable","name":"result","nameLocation":"7332:6:25","nodeType":"VariableDeclaration","scope":7114,"src":"7324:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:25"},"scope":8208,"src":"7242:3683:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7150,"nodeType":"Block","src":"11164:128:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7130,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"11188:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7131,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"11191:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7132,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"11194:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7129,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[7114,7151],"referencedDeclaration":7114,"src":"11181:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7137,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"11242:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}],"id":7136,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"11225:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7117,"src":"11262:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7141,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"11265:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"11268:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7139,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7134,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"11209:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"11209:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7128,"id":7149,"nodeType":"Return","src":"11174:111:25"}]},"documentation":{"id":7115,"nodeType":"StructuredDocumentation","src":"10931:118:25","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":7151,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:25","nodeType":"FunctionDefinition","parameters":{"id":7125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7117,"mutability":"mutable","name":"x","nameLocation":"11078:1:25","nodeType":"VariableDeclaration","scope":7151,"src":"11070:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7116,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7119,"mutability":"mutable","name":"y","nameLocation":"11089:1:25","nodeType":"VariableDeclaration","scope":7151,"src":"11081:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7118,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7121,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:25","nodeType":"VariableDeclaration","scope":7151,"src":"11092:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7124,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:25","nodeType":"VariableDeclaration","scope":7151,"src":"11113:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"},"typeName":{"id":7123,"nodeType":"UserDefinedTypeName","pathNode":{"id":7122,"name":"Rounding","nameLocations":["11113:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6599,"src":"11113:8:25"},"referencedDeclaration":6599,"src":"11113:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:25"},"returnParameters":{"id":7128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7151,"src":"11155:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7126,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:25"},"scope":8208,"src":"11054:238:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7200,"nodeType":"Block","src":"11500:245:25","statements":[{"id":7199,"nodeType":"UncheckedBlock","src":"11510:229:25","statements":[{"assignments":[7164,7166],"declarations":[{"constant":false,"id":7164,"mutability":"mutable","name":"high","nameLocation":"11543:4:25","nodeType":"VariableDeclaration","scope":7199,"src":"11535:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7163,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7166,"mutability":"mutable","name":"low","nameLocation":"11557:3:25","nodeType":"VariableDeclaration","scope":7199,"src":"11549:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7165,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7171,"initialValue":{"arguments":[{"id":7168,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"11571:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7169,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"11574:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7167,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"11564:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7172,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"11594:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7174,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"11607:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7185,"nodeType":"IfStatement","src":"11590:86:25","trueBody":{"id":7184,"nodeType":"Block","src":"11610:66:25","statements":[{"expression":{"arguments":[{"expression":{"id":7180,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"11640:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:25","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4882,"src":"11640:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7177,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"11628:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4918,"src":"11628:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7183,"nodeType":"ExpressionStatement","src":"11628:33:25"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7164,"src":"11697:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":7187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7188,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"11712:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":7190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7193,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"11719:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7194,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"11726:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7162,"id":7198,"nodeType":"Return","src":"11689:39:25"}]}]},"documentation":{"id":7152,"nodeType":"StructuredDocumentation","src":"11298:111:25","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":7201,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:25","nodeType":"FunctionDefinition","parameters":{"id":7159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7154,"mutability":"mutable","name":"x","nameLocation":"11438:1:25","nodeType":"VariableDeclaration","scope":7201,"src":"11430:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7156,"mutability":"mutable","name":"y","nameLocation":"11449:1:25","nodeType":"VariableDeclaration","scope":7201,"src":"11441:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7155,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7158,"mutability":"mutable","name":"n","nameLocation":"11458:1:25","nodeType":"VariableDeclaration","scope":7201,"src":"11452:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7157,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:25"},"returnParameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7161,"mutability":"mutable","name":"result","nameLocation":"11492:6:25","nodeType":"VariableDeclaration","scope":7201,"src":"11484:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7160,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:25"},"scope":8208,"src":"11414:331:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7239,"nodeType":"Block","src":"11963:113:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7217,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"11987:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7218,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"11990:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7219,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"11993:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7216,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[7201,7240],"referencedDeclaration":7201,"src":"11980:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":7220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7224,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"12031:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}],"id":7223,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"12014:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7227,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7204,"src":"12051:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7228,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7206,"src":"12054:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7230,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"12062:1:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7226,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:25","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7221,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"11998:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"11998:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7215,"id":7238,"nodeType":"Return","src":"11973:96:25"}]},"documentation":{"id":7202,"nodeType":"StructuredDocumentation","src":"11751:109:25","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":7240,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:25","nodeType":"FunctionDefinition","parameters":{"id":7212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7204,"mutability":"mutable","name":"x","nameLocation":"11889:1:25","nodeType":"VariableDeclaration","scope":7240,"src":"11881:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7203,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7206,"mutability":"mutable","name":"y","nameLocation":"11900:1:25","nodeType":"VariableDeclaration","scope":7240,"src":"11892:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7205,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7208,"mutability":"mutable","name":"n","nameLocation":"11909:1:25","nodeType":"VariableDeclaration","scope":7240,"src":"11903:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7207,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7211,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:25","nodeType":"VariableDeclaration","scope":7240,"src":"11912:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"},"typeName":{"id":7210,"nodeType":"UserDefinedTypeName","pathNode":{"id":7209,"name":"Rounding","nameLocations":["11912:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6599,"src":"11912:8:25"},"referencedDeclaration":6599,"src":"11912:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:25"},"returnParameters":{"id":7215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7240,"src":"11954:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7213,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:25"},"scope":8208,"src":"11865:211:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7336,"nodeType":"Block","src":"12710:1849:25","statements":[{"id":7335,"nodeType":"UncheckedBlock","src":"12720:1833:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7250,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"12748:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7255,"nodeType":"IfStatement","src":"12744:20:25","trueBody":{"expression":{"hexValue":"30","id":7253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7249,"id":7254,"nodeType":"Return","src":"12756:8:25"}},{"assignments":[7257],"declarations":[{"constant":false,"id":7257,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:25","nodeType":"VariableDeclaration","scope":7335,"src":"13235:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7256,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7261,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7258,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"13255:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":7259,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"13259:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:25"},{"assignments":[7263],"declarations":[{"constant":false,"id":7263,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:25","nodeType":"VariableDeclaration","scope":7335,"src":"13274:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7262,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7265,"initialValue":{"id":7264,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"13288:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:25"},{"assignments":[7267],"declarations":[{"constant":false,"id":7267,"mutability":"mutable","name":"x","nameLocation":"13432:1:25","nodeType":"VariableDeclaration","scope":7335,"src":"13425:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7266,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7269,"initialValue":{"hexValue":"30","id":7268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:25"},{"assignments":[7271],"declarations":[{"constant":false,"id":7271,"mutability":"mutable","name":"y","nameLocation":"13458:1:25","nodeType":"VariableDeclaration","scope":7335,"src":"13451:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7270,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7273,"initialValue":{"hexValue":"31","id":7272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:25"},{"body":{"id":7310,"nodeType":"Block","src":"13501:882:25","statements":[{"assignments":[7278],"declarations":[{"constant":false,"id":7278,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:25","nodeType":"VariableDeclaration","scope":7310,"src":"13519:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7277,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7282,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"13538:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7280,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"13544:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:25"},{"expression":{"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7283,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"13573:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7284,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"13578:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7285,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":7286,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"13678:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7287,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"13923:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7288,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"13929:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7289,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"13941:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7294,"nodeType":"ExpressionStatement","src":"13572:395:25"},{"expression":{"id":7308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7295,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"13987:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7296,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"13990:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7297,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":7298,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"14072:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7299,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"14326:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7300,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"14330:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7303,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7278,"src":"14341:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7301,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:25","typeDescriptions":{}}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7307,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:25","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7309,"nodeType":"ExpressionStatement","src":"13986:382:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7274,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"13485:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7311,"nodeType":"WhileStatement","src":"13478:905:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7312,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"14401:3:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":7313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7317,"nodeType":"IfStatement","src":"14397:22:25","trueBody":{"expression":{"hexValue":"30","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7249,"id":7316,"nodeType":"Return","src":"14411:8:25"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7319,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"14470:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7322,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"14477:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:25","subExpression":{"id":7325,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"14490:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7323,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:25","typeDescriptions":{}}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7331,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"14502:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:25","typeDescriptions":{}}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7318,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"14462:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7249,"id":7334,"nodeType":"Return","src":"14455:50:25"}]}]},"documentation":{"id":7241,"nodeType":"StructuredDocumentation","src":"12082:553:25","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":7337,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:25","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7243,"mutability":"mutable","name":"a","nameLocation":"12664:1:25","nodeType":"VariableDeclaration","scope":7337,"src":"12656:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7242,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7245,"mutability":"mutable","name":"n","nameLocation":"12675:1:25","nodeType":"VariableDeclaration","scope":7337,"src":"12667:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7244,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:25"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7337,"src":"12701:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:25"},"scope":8208,"src":"12640:1919:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7357,"nodeType":"Block","src":"15159:82:25","statements":[{"id":7356,"nodeType":"UncheckedBlock","src":"15169:66:25","statements":[{"expression":{"arguments":[{"id":7349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"15212:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7350,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"15215:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7353,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"15222:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7347,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8208,"src":"15200:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8208_$","typeString":"type(library Math)"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:25","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":7394,"src":"15200:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7346,"id":7355,"nodeType":"Return","src":"15193:31:25"}]}]},"documentation":{"id":7338,"nodeType":"StructuredDocumentation","src":"14565:514:25","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":7358,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:25","nodeType":"FunctionDefinition","parameters":{"id":7343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"a","nameLocation":"15113:1:25","nodeType":"VariableDeclaration","scope":7358,"src":"15105:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7342,"mutability":"mutable","name":"p","nameLocation":"15124:1:25","nodeType":"VariableDeclaration","scope":7358,"src":"15116:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7341,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:25"},"returnParameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7358,"src":"15150:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7344,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:25"},"scope":8208,"src":"15084:157:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7393,"nodeType":"Block","src":"16011:174:25","statements":[{"assignments":[7371,7373],"declarations":[{"constant":false,"id":7371,"mutability":"mutable","name":"success","nameLocation":"16027:7:25","nodeType":"VariableDeclaration","scope":7393,"src":"16022:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7370,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7373,"mutability":"mutable","name":"result","nameLocation":"16044:6:25","nodeType":"VariableDeclaration","scope":7393,"src":"16036:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7379,"initialValue":{"arguments":[{"id":7375,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"16064:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7376,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"16067:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7377,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"16070:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7374,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7418,7500],"referencedDeclaration":7418,"src":"16054:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:25"},{"condition":{"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:25","subExpression":{"id":7380,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7371,"src":"16087:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7390,"nodeType":"IfStatement","src":"16082:74:25","trueBody":{"id":7389,"nodeType":"Block","src":"16096:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":7385,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"16122:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4886,"src":"16122:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7382,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"16110:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4918,"src":"16110:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7388,"nodeType":"ExpressionStatement","src":"16110:35:25"}]}},{"expression":{"id":7391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7373,"src":"16172:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7369,"id":7392,"nodeType":"Return","src":"16165:13:25"}]},"documentation":{"id":7359,"nodeType":"StructuredDocumentation","src":"15247:678:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":7394,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:25","nodeType":"FunctionDefinition","parameters":{"id":7366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"b","nameLocation":"15954:1:25","nodeType":"VariableDeclaration","scope":7394,"src":"15946:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7360,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7363,"mutability":"mutable","name":"e","nameLocation":"15965:1:25","nodeType":"VariableDeclaration","scope":7394,"src":"15957:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7362,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7365,"mutability":"mutable","name":"m","nameLocation":"15976:1:25","nodeType":"VariableDeclaration","scope":7394,"src":"15968:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7364,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:25"},"returnParameters":{"id":7369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7394,"src":"16002:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7367,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:25"},"scope":8208,"src":"15930:255:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7417,"nodeType":"Block","src":"17039:1493:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7408,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7401,"src":"17053:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7415,"nodeType":"IfStatement","src":"17049:29:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":7407,"id":7414,"nodeType":"Return","src":"17061:17:25"}},{"AST":{"nativeSrc":"17113:1413:25","nodeType":"YulBlock","src":"17113:1413:25","statements":[{"nativeSrc":"17127:22:25","nodeType":"YulVariableDeclaration","src":"17127:22:25","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:25","nodeType":"YulLiteral","src":"17144:4:25","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:25","nodeType":"YulIdentifier","src":"17138:5:25"},"nativeSrc":"17138:11:25","nodeType":"YulFunctionCall","src":"17138:11:25"},"variables":[{"name":"ptr","nativeSrc":"17131:3:25","nodeType":"YulTypedName","src":"17131:3:25","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:25","nodeType":"YulIdentifier","src":"18057:3:25"},{"kind":"number","nativeSrc":"18062:4:25","nodeType":"YulLiteral","src":"18062:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:25","nodeType":"YulIdentifier","src":"18050:6:25"},"nativeSrc":"18050:17:25","nodeType":"YulFunctionCall","src":"18050:17:25"},"nativeSrc":"18050:17:25","nodeType":"YulExpressionStatement","src":"18050:17:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:25","nodeType":"YulIdentifier","src":"18091:3:25"},{"kind":"number","nativeSrc":"18096:4:25","nodeType":"YulLiteral","src":"18096:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:25","nodeType":"YulIdentifier","src":"18087:3:25"},"nativeSrc":"18087:14:25","nodeType":"YulFunctionCall","src":"18087:14:25"},{"kind":"number","nativeSrc":"18103:4:25","nodeType":"YulLiteral","src":"18103:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:25","nodeType":"YulIdentifier","src":"18080:6:25"},"nativeSrc":"18080:28:25","nodeType":"YulFunctionCall","src":"18080:28:25"},"nativeSrc":"18080:28:25","nodeType":"YulExpressionStatement","src":"18080:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:25","nodeType":"YulIdentifier","src":"18132:3:25"},{"kind":"number","nativeSrc":"18137:4:25","nodeType":"YulLiteral","src":"18137:4:25","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:25","nodeType":"YulIdentifier","src":"18128:3:25"},"nativeSrc":"18128:14:25","nodeType":"YulFunctionCall","src":"18128:14:25"},{"kind":"number","nativeSrc":"18144:4:25","nodeType":"YulLiteral","src":"18144:4:25","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:25","nodeType":"YulIdentifier","src":"18121:6:25"},"nativeSrc":"18121:28:25","nodeType":"YulFunctionCall","src":"18121:28:25"},"nativeSrc":"18121:28:25","nodeType":"YulExpressionStatement","src":"18121:28:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:25","nodeType":"YulIdentifier","src":"18173:3:25"},{"kind":"number","nativeSrc":"18178:4:25","nodeType":"YulLiteral","src":"18178:4:25","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:25","nodeType":"YulIdentifier","src":"18169:3:25"},"nativeSrc":"18169:14:25","nodeType":"YulFunctionCall","src":"18169:14:25"},{"name":"b","nativeSrc":"18185:1:25","nodeType":"YulIdentifier","src":"18185:1:25"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:25","nodeType":"YulIdentifier","src":"18162:6:25"},"nativeSrc":"18162:25:25","nodeType":"YulFunctionCall","src":"18162:25:25"},"nativeSrc":"18162:25:25","nodeType":"YulExpressionStatement","src":"18162:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:25","nodeType":"YulIdentifier","src":"18211:3:25"},{"kind":"number","nativeSrc":"18216:4:25","nodeType":"YulLiteral","src":"18216:4:25","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:25","nodeType":"YulIdentifier","src":"18207:3:25"},"nativeSrc":"18207:14:25","nodeType":"YulFunctionCall","src":"18207:14:25"},{"name":"e","nativeSrc":"18223:1:25","nodeType":"YulIdentifier","src":"18223:1:25"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:25","nodeType":"YulIdentifier","src":"18200:6:25"},"nativeSrc":"18200:25:25","nodeType":"YulFunctionCall","src":"18200:25:25"},"nativeSrc":"18200:25:25","nodeType":"YulExpressionStatement","src":"18200:25:25"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:25","nodeType":"YulIdentifier","src":"18249:3:25"},{"kind":"number","nativeSrc":"18254:4:25","nodeType":"YulLiteral","src":"18254:4:25","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:25","nodeType":"YulIdentifier","src":"18245:3:25"},"nativeSrc":"18245:14:25","nodeType":"YulFunctionCall","src":"18245:14:25"},{"name":"m","nativeSrc":"18261:1:25","nodeType":"YulIdentifier","src":"18261:1:25"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:25","nodeType":"YulIdentifier","src":"18238:6:25"},"nativeSrc":"18238:25:25","nodeType":"YulFunctionCall","src":"18238:25:25"},"nativeSrc":"18238:25:25","nodeType":"YulExpressionStatement","src":"18238:25:25"},{"nativeSrc":"18425:57:25","nodeType":"YulAssignment","src":"18425:57:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:25","nodeType":"YulIdentifier","src":"18447:3:25"},"nativeSrc":"18447:5:25","nodeType":"YulFunctionCall","src":"18447:5:25"},{"kind":"number","nativeSrc":"18454:4:25","nodeType":"YulLiteral","src":"18454:4:25","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:25","nodeType":"YulIdentifier","src":"18460:3:25"},{"kind":"number","nativeSrc":"18465:4:25","nodeType":"YulLiteral","src":"18465:4:25","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:25","nodeType":"YulLiteral","src":"18471:4:25","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:25","nodeType":"YulLiteral","src":"18477:4:25","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:25","nodeType":"YulIdentifier","src":"18436:10:25"},"nativeSrc":"18436:46:25","nodeType":"YulFunctionCall","src":"18436:46:25"},"variableNames":[{"name":"success","nativeSrc":"18425:7:25","nodeType":"YulIdentifier","src":"18425:7:25"}]},{"nativeSrc":"18495:21:25","nodeType":"YulAssignment","src":"18495:21:25","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:25","nodeType":"YulLiteral","src":"18511:4:25","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:25","nodeType":"YulIdentifier","src":"18505:5:25"},"nativeSrc":"18505:11:25","nodeType":"YulFunctionCall","src":"18505:11:25"},"variableNames":[{"name":"result","nativeSrc":"18495:6:25","nodeType":"YulIdentifier","src":"18495:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7397,"isOffset":false,"isSlot":false,"src":"18185:1:25","valueSize":1},{"declaration":7399,"isOffset":false,"isSlot":false,"src":"18223:1:25","valueSize":1},{"declaration":7401,"isOffset":false,"isSlot":false,"src":"18261:1:25","valueSize":1},{"declaration":7406,"isOffset":false,"isSlot":false,"src":"18495:6:25","valueSize":1},{"declaration":7404,"isOffset":false,"isSlot":false,"src":"18425:7:25","valueSize":1}],"flags":["memory-safe"],"id":7416,"nodeType":"InlineAssembly","src":"17088:1438:25"}]},"documentation":{"id":7395,"nodeType":"StructuredDocumentation","src":"16191:738:25","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":7418,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:25","nodeType":"FunctionDefinition","parameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7397,"mutability":"mutable","name":"b","nameLocation":"16961:1:25","nodeType":"VariableDeclaration","scope":7418,"src":"16953:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7396,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7399,"mutability":"mutable","name":"e","nameLocation":"16972:1:25","nodeType":"VariableDeclaration","scope":7418,"src":"16964:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7398,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7401,"mutability":"mutable","name":"m","nameLocation":"16983:1:25","nodeType":"VariableDeclaration","scope":7418,"src":"16975:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7400,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:25"},"returnParameters":{"id":7407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"success","nameLocation":"17014:7:25","nodeType":"VariableDeclaration","scope":7418,"src":"17009:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7403,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7406,"mutability":"mutable","name":"result","nameLocation":"17031:6:25","nodeType":"VariableDeclaration","scope":7418,"src":"17023:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7405,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:25"},"scope":8208,"src":"16934:1598:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7453,"nodeType":"Block","src":"18729:179:25","statements":[{"assignments":[7431,7433],"declarations":[{"constant":false,"id":7431,"mutability":"mutable","name":"success","nameLocation":"18745:7:25","nodeType":"VariableDeclaration","scope":7453,"src":"18740:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7430,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7433,"mutability":"mutable","name":"result","nameLocation":"18767:6:25","nodeType":"VariableDeclaration","scope":7453,"src":"18754:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7432,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7439,"initialValue":{"arguments":[{"id":7435,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"18787:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7436,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7423,"src":"18790:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7437,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"18793:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7434,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7418,7500],"referencedDeclaration":7500,"src":"18777:9:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:25"},{"condition":{"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:25","subExpression":{"id":7440,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7431,"src":"18810:7:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7450,"nodeType":"IfStatement","src":"18805:74:25","trueBody":{"id":7449,"nodeType":"Block","src":"18819:60:25","statements":[{"expression":{"arguments":[{"expression":{"id":7445,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"18845:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:25","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4886,"src":"18845:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7442,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4919,"src":"18833:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4919_$","typeString":"type(library Panic)"}},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:25","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4918,"src":"18833:11:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7448,"nodeType":"ExpressionStatement","src":"18833:35:25"}]}},{"expression":{"id":7451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"18895:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":7429,"id":7452,"nodeType":"Return","src":"18888:13:25"}]},"documentation":{"id":7419,"nodeType":"StructuredDocumentation","src":"18538:85:25","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":7454,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:25","nodeType":"FunctionDefinition","parameters":{"id":7426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7421,"mutability":"mutable","name":"b","nameLocation":"18657:1:25","nodeType":"VariableDeclaration","scope":7454,"src":"18644:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7420,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7423,"mutability":"mutable","name":"e","nameLocation":"18673:1:25","nodeType":"VariableDeclaration","scope":7454,"src":"18660:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7422,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7425,"mutability":"mutable","name":"m","nameLocation":"18689:1:25","nodeType":"VariableDeclaration","scope":7454,"src":"18676:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7424,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:25"},"returnParameters":{"id":7429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7454,"src":"18715:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7427,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:25"},"scope":8208,"src":"18628:280:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7499,"nodeType":"Block","src":"19162:771:25","statements":[{"condition":{"arguments":[{"id":7469,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7461,"src":"19187:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7468,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"19176:10:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7478,"nodeType":"IfStatement","src":"19172:47:25","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:25","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7472,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:25","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":7467,"id":7477,"nodeType":"Return","src":"19191:28:25"}},{"assignments":[7480],"declarations":[{"constant":false,"id":7480,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:25","nodeType":"VariableDeclaration","scope":7499,"src":"19230:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7479,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7483,"initialValue":{"expression":{"id":7481,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7461,"src":"19245:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:25","memberName":"length","nodeType":"MemberAccess","src":"19245:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:25"},{"expression":{"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"19335:6:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7487,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"19361:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:25","memberName":"length","nodeType":"MemberAccess","src":"19361:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7489,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"19371:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:25","memberName":"length","nodeType":"MemberAccess","src":"19371:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7491,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"19381:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7492,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7457,"src":"19387:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7493,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7459,"src":"19390:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7494,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7461,"src":"19393:1:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7485,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:25","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:25","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7497,"nodeType":"ExpressionStatement","src":"19335:60:25"},{"AST":{"nativeSrc":"19431:496:25","nodeType":"YulBlock","src":"19431:496:25","statements":[{"nativeSrc":"19445:32:25","nodeType":"YulVariableDeclaration","src":"19445:32:25","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:25","nodeType":"YulIdentifier","src":"19464:6:25"},{"kind":"number","nativeSrc":"19472:4:25","nodeType":"YulLiteral","src":"19472:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:25","nodeType":"YulIdentifier","src":"19460:3:25"},"nativeSrc":"19460:17:25","nodeType":"YulFunctionCall","src":"19460:17:25"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:25","nodeType":"YulTypedName","src":"19449:7:25","type":""}]},{"nativeSrc":"19567:73:25","nodeType":"YulAssignment","src":"19567:73:25","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:25","nodeType":"YulIdentifier","src":"19589:3:25"},"nativeSrc":"19589:5:25","nodeType":"YulFunctionCall","src":"19589:5:25"},{"kind":"number","nativeSrc":"19596:4:25","nodeType":"YulLiteral","src":"19596:4:25","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:25","nodeType":"YulIdentifier","src":"19602:7:25"},{"arguments":[{"name":"result","nativeSrc":"19617:6:25","nodeType":"YulIdentifier","src":"19617:6:25"}],"functionName":{"name":"mload","nativeSrc":"19611:5:25","nodeType":"YulIdentifier","src":"19611:5:25"},"nativeSrc":"19611:13:25","nodeType":"YulFunctionCall","src":"19611:13:25"},{"name":"dataPtr","nativeSrc":"19626:7:25","nodeType":"YulIdentifier","src":"19626:7:25"},{"name":"mLen","nativeSrc":"19635:4:25","nodeType":"YulIdentifier","src":"19635:4:25"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:25","nodeType":"YulIdentifier","src":"19578:10:25"},"nativeSrc":"19578:62:25","nodeType":"YulFunctionCall","src":"19578:62:25"},"variableNames":[{"name":"success","nativeSrc":"19567:7:25","nodeType":"YulIdentifier","src":"19567:7:25"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:25","nodeType":"YulIdentifier","src":"19796:6:25"},{"name":"mLen","nativeSrc":"19804:4:25","nodeType":"YulIdentifier","src":"19804:4:25"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:25","nodeType":"YulIdentifier","src":"19789:6:25"},"nativeSrc":"19789:20:25","nodeType":"YulFunctionCall","src":"19789:20:25"},"nativeSrc":"19789:20:25","nodeType":"YulExpressionStatement","src":"19789:20:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:25","nodeType":"YulLiteral","src":"19892:4:25","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:25","nodeType":"YulIdentifier","src":"19902:7:25"},{"name":"mLen","nativeSrc":"19911:4:25","nodeType":"YulIdentifier","src":"19911:4:25"}],"functionName":{"name":"add","nativeSrc":"19898:3:25","nodeType":"YulIdentifier","src":"19898:3:25"},"nativeSrc":"19898:18:25","nodeType":"YulFunctionCall","src":"19898:18:25"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:25","nodeType":"YulIdentifier","src":"19885:6:25"},"nativeSrc":"19885:32:25","nodeType":"YulFunctionCall","src":"19885:32:25"},"nativeSrc":"19885:32:25","nodeType":"YulExpressionStatement","src":"19885:32:25"}]},"evmVersion":"paris","externalReferences":[{"declaration":7480,"isOffset":false,"isSlot":false,"src":"19635:4:25","valueSize":1},{"declaration":7480,"isOffset":false,"isSlot":false,"src":"19804:4:25","valueSize":1},{"declaration":7480,"isOffset":false,"isSlot":false,"src":"19911:4:25","valueSize":1},{"declaration":7466,"isOffset":false,"isSlot":false,"src":"19464:6:25","valueSize":1},{"declaration":7466,"isOffset":false,"isSlot":false,"src":"19617:6:25","valueSize":1},{"declaration":7466,"isOffset":false,"isSlot":false,"src":"19796:6:25","valueSize":1},{"declaration":7464,"isOffset":false,"isSlot":false,"src":"19567:7:25","valueSize":1}],"flags":["memory-safe"],"id":7498,"nodeType":"InlineAssembly","src":"19406:521:25"}]},"documentation":{"id":7455,"nodeType":"StructuredDocumentation","src":"18914:88:25","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":7500,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:25","nodeType":"FunctionDefinition","parameters":{"id":7462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7457,"mutability":"mutable","name":"b","nameLocation":"19048:1:25","nodeType":"VariableDeclaration","scope":7500,"src":"19035:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7456,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7459,"mutability":"mutable","name":"e","nameLocation":"19072:1:25","nodeType":"VariableDeclaration","scope":7500,"src":"19059:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7458,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7461,"mutability":"mutable","name":"m","nameLocation":"19096:1:25","nodeType":"VariableDeclaration","scope":7500,"src":"19083:14:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7460,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:25"},"returnParameters":{"id":7467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"success","nameLocation":"19132:7:25","nodeType":"VariableDeclaration","scope":7500,"src":"19127:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7463,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7466,"mutability":"mutable","name":"result","nameLocation":"19154:6:25","nodeType":"VariableDeclaration","scope":7500,"src":"19141:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7465,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:25"},"scope":8208,"src":"19007:926:25","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7532,"nodeType":"Block","src":"20088:176:25","statements":[{"body":{"id":7528,"nodeType":"Block","src":"20145:92:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7519,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"20163:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7521,"indexExpression":{"id":7520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"20173:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:25","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7527,"nodeType":"IfStatement","src":"20159:68:25","trueBody":{"id":7526,"nodeType":"Block","src":"20182:45:25","statements":[{"expression":{"hexValue":"66616c7365","id":7524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7507,"id":7525,"nodeType":"Return","src":"20200:12:25"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"20118:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7513,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7503,"src":"20122:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:25","memberName":"length","nodeType":"MemberAccess","src":"20122:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7529,"initializationExpression":{"assignments":[7509],"declarations":[{"constant":false,"id":7509,"mutability":"mutable","name":"i","nameLocation":"20111:1:25","nodeType":"VariableDeclaration","scope":7529,"src":"20103:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7508,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7511,"initialValue":{"hexValue":"30","id":7510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:25","subExpression":{"id":7516,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7509,"src":"20142:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7518,"nodeType":"ExpressionStatement","src":"20140:3:25"},"nodeType":"ForStatement","src":"20098:139:25"},{"expression":{"hexValue":"74727565","id":7530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7507,"id":7531,"nodeType":"Return","src":"20246:11:25"}]},"documentation":{"id":7501,"nodeType":"StructuredDocumentation","src":"19939:72:25","text":" @dev Returns whether the provided byte array is zero."},"id":7533,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:25","nodeType":"FunctionDefinition","parameters":{"id":7504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7503,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:25","nodeType":"VariableDeclaration","scope":7533,"src":"20036:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7502,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:25"},"returnParameters":{"id":7507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7533,"src":"20082:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7505,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:25"},"scope":8208,"src":"20016:248:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7751,"nodeType":"Block","src":"20624:5124:25","statements":[{"id":7750,"nodeType":"UncheckedBlock","src":"20634:5108:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"20728:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":7542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7547,"nodeType":"IfStatement","src":"20724:53:25","trueBody":{"id":7546,"nodeType":"Block","src":"20736:41:25","statements":[{"expression":{"id":7544,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"20761:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7540,"id":7545,"nodeType":"Return","src":"20754:8:25"}]}},{"assignments":[7549],"declarations":[{"constant":false,"id":7549,"mutability":"mutable","name":"aa","nameLocation":"21712:2:25","nodeType":"VariableDeclaration","scope":7750,"src":"21704:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7548,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7551,"initialValue":{"id":7550,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"21717:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:25"},{"assignments":[7553],"declarations":[{"constant":false,"id":7553,"mutability":"mutable","name":"xn","nameLocation":"21740:2:25","nodeType":"VariableDeclaration","scope":7750,"src":"21732:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7552,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7555,"initialValue":{"hexValue":"31","id":7554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7556,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"21765:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7571,"nodeType":"IfStatement","src":"21761:92:25","trueBody":{"id":7570,"nodeType":"Block","src":"21783:70:25","statements":[{"expression":{"id":7564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7562,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"21801:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7565,"nodeType":"ExpressionStatement","src":"21801:10:25"},{"expression":{"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7566,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"21829:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":7567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7569,"nodeType":"ExpressionStatement","src":"21829:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7572,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"21870:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7587,"nodeType":"IfStatement","src":"21866:90:25","trueBody":{"id":7586,"nodeType":"Block","src":"21887:69:25","statements":[{"expression":{"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7578,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"21905:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7581,"nodeType":"ExpressionStatement","src":"21905:9:25"},{"expression":{"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7582,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"21932:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":7583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7585,"nodeType":"ExpressionStatement","src":"21932:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7588,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"21973:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7603,"nodeType":"IfStatement","src":"21969:90:25","trueBody":{"id":7602,"nodeType":"Block","src":"21990:69:25","statements":[{"expression":{"id":7596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7594,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22008:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7597,"nodeType":"ExpressionStatement","src":"22008:9:25"},{"expression":{"id":7600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7598,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"22035:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":7599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7601,"nodeType":"ExpressionStatement","src":"22035:9:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7604,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22076:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:25","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7619,"nodeType":"IfStatement","src":"22072:89:25","trueBody":{"id":7618,"nodeType":"Block","src":"22093:68:25","statements":[{"expression":{"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7610,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22111:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7613,"nodeType":"ExpressionStatement","src":"22111:9:25"},{"expression":{"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7614,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"22138:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":7615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7617,"nodeType":"ExpressionStatement","src":"22138:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7620,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22178:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7624,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:25","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7635,"nodeType":"IfStatement","src":"22174:87:25","trueBody":{"id":7634,"nodeType":"Block","src":"22194:67:25","statements":[{"expression":{"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7626,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22212:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7629,"nodeType":"ExpressionStatement","src":"22212:8:25"},{"expression":{"id":7632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7630,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"22238:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":7631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7633,"nodeType":"ExpressionStatement","src":"22238:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7636,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22278:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":7639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":7640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7651,"nodeType":"IfStatement","src":"22274:87:25","trueBody":{"id":7650,"nodeType":"Block","src":"22294:67:25","statements":[{"expression":{"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7642,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22312:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7645,"nodeType":"ExpressionStatement","src":"22312:8:25"},{"expression":{"id":7648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7646,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"22338:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":7647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7649,"nodeType":"ExpressionStatement","src":"22338:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7652,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7549,"src":"22378:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7656,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7663,"nodeType":"IfStatement","src":"22374:61:25","trueBody":{"id":7662,"nodeType":"Block","src":"22394:41:25","statements":[{"expression":{"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7658,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"22412:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7661,"nodeType":"ExpressionStatement","src":"22412:8:25"}]}},{"expression":{"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7664,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"22855:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7666,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"22865:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7672,"nodeType":"ExpressionStatement","src":"22855:18:25"},{"expression":{"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7673,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24760:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7674,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24766:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7675,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"24771:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7676,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24775:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7683,"nodeType":"ExpressionStatement","src":"24760:23:25"},{"expression":{"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7684,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24869:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7685,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24875:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7686,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"24880:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7687,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24884:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7690,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7694,"nodeType":"ExpressionStatement","src":"24869:23:25"},{"expression":{"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7695,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24980:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7696,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24986:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7697,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"24991:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7698,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"24995:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7705,"nodeType":"ExpressionStatement","src":"24980:23:25"},{"expression":{"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7706,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25089:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7707,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25095:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7708,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"25100:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7709,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25104:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7716,"nodeType":"ExpressionStatement","src":"25089:23:25"},{"expression":{"id":7726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7717,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25199:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7718,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25205:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"25210:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7720,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25214:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7727,"nodeType":"ExpressionStatement","src":"25199:23:25"},{"expression":{"id":7737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7728,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25309:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7729,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25315:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"25320:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7731,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25324:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7738,"nodeType":"ExpressionStatement","src":"25309:23:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7739,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25698:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7742,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25719:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7743,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7536,"src":"25724:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7744,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7553,"src":"25728:2:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7740,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"25703:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"25703:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7540,"id":7749,"nodeType":"Return","src":"25691:40:25"}]}]},"documentation":{"id":7534,"nodeType":"StructuredDocumentation","src":"20270:292:25","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7752,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:25","nodeType":"FunctionDefinition","parameters":{"id":7537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7536,"mutability":"mutable","name":"a","nameLocation":"20589:1:25","nodeType":"VariableDeclaration","scope":7752,"src":"20581:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7535,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:25"},"returnParameters":{"id":7540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7752,"src":"20615:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7538,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:25"},"scope":8208,"src":"20567:5181:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7785,"nodeType":"Block","src":"25921:171:25","statements":[{"id":7784,"nodeType":"UncheckedBlock","src":"25931:155:25","statements":[{"assignments":[7764],"declarations":[{"constant":false,"id":7764,"mutability":"mutable","name":"result","nameLocation":"25963:6:25","nodeType":"VariableDeclaration","scope":7784,"src":"25955:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7763,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7768,"initialValue":{"arguments":[{"id":7766,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"25977:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7765,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7752,7786],"referencedDeclaration":7752,"src":"25972:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"26000:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7773,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7758,"src":"26042:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}],"id":7772,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"26025:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"26055:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7764,"src":"26064:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7755,"src":"26073:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7770,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"26009:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"26009:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7762,"id":7783,"nodeType":"Return","src":"25993:82:25"}]}]},"documentation":{"id":7753,"nodeType":"StructuredDocumentation","src":"25754:86:25","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7786,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:25","nodeType":"FunctionDefinition","parameters":{"id":7759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7755,"mutability":"mutable","name":"a","nameLocation":"25867:1:25","nodeType":"VariableDeclaration","scope":7786,"src":"25859:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7754,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7758,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:25","nodeType":"VariableDeclaration","scope":7786,"src":"25870:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"},"typeName":{"id":7757,"nodeType":"UserDefinedTypeName","pathNode":{"id":7756,"name":"Rounding","nameLocations":["25870:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6599,"src":"25870:8:25"},"referencedDeclaration":6599,"src":"25870:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:25"},"returnParameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7786,"src":"25912:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:25"},"scope":8208,"src":"25845:247:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7876,"nodeType":"Block","src":"26281:2334:25","statements":[{"expression":{"id":7803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7794,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26363:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7797,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"26383:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7795,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"26367:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"26367:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:25","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7804,"nodeType":"ExpressionStatement","src":"26363:64:25"},{"expression":{"id":7817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7805,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26503:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7808,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"26525:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7809,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26530:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7806,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"26508:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"26508:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:25","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7818,"nodeType":"ExpressionStatement","src":"26503:56:25"},{"expression":{"id":7831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7819,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26634:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"26656:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7823,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26661:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"26639:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"26639:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7832,"nodeType":"ExpressionStatement","src":"26634:48:25"},{"expression":{"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7833,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26757:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"26779:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7837,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26784:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7834,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"26762:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"26762:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7846,"nodeType":"ExpressionStatement","src":"26757:44:25"},{"expression":{"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7847,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26874:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7850,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"26896:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7851,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26901:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7848,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"26879:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"26879:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7860,"nodeType":"ExpressionStatement","src":"26874:42:25"},{"expression":{"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7861,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"26988:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7864,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7789,"src":"27010:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7865,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7792,"src":"27015:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:25","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7862,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"26993:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"26993:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7874,"nodeType":"ExpressionStatement","src":"26988:41:25"},{"AST":{"nativeSrc":"28490:119:25","nodeType":"YulBlock","src":"28490:119:25","statements":[{"nativeSrc":"28504:95:25","nodeType":"YulAssignment","src":"28504:95:25","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:25","nodeType":"YulIdentifier","src":"28512:1:25"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:25","nodeType":"YulIdentifier","src":"28524:1:25"},{"name":"x","nativeSrc":"28527:1:25","nodeType":"YulIdentifier","src":"28527:1:25"}],"functionName":{"name":"shr","nativeSrc":"28520:3:25","nodeType":"YulIdentifier","src":"28520:3:25"},"nativeSrc":"28520:9:25","nodeType":"YulFunctionCall","src":"28520:9:25"},{"kind":"number","nativeSrc":"28531:66:25","nodeType":"YulLiteral","src":"28531:66:25","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:25","nodeType":"YulIdentifier","src":"28515:4:25"},"nativeSrc":"28515:83:25","nodeType":"YulFunctionCall","src":"28515:83:25"}],"functionName":{"name":"or","nativeSrc":"28509:2:25","nodeType":"YulIdentifier","src":"28509:2:25"},"nativeSrc":"28509:90:25","nodeType":"YulFunctionCall","src":"28509:90:25"},"variableNames":[{"name":"r","nativeSrc":"28504:1:25","nodeType":"YulIdentifier","src":"28504:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7792,"isOffset":false,"isSlot":false,"src":"28504:1:25","valueSize":1},{"declaration":7792,"isOffset":false,"isSlot":false,"src":"28512:1:25","valueSize":1},{"declaration":7792,"isOffset":false,"isSlot":false,"src":"28524:1:25","valueSize":1},{"declaration":7789,"isOffset":false,"isSlot":false,"src":"28527:1:25","valueSize":1}],"flags":["memory-safe"],"id":7875,"nodeType":"InlineAssembly","src":"28465:144:25"}]},"documentation":{"id":7787,"nodeType":"StructuredDocumentation","src":"26098:119:25","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7877,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:25","nodeType":"FunctionDefinition","parameters":{"id":7790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7789,"mutability":"mutable","name":"x","nameLocation":"26244:1:25","nodeType":"VariableDeclaration","scope":7877,"src":"26236:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7788,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:25"},"returnParameters":{"id":7793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7792,"mutability":"mutable","name":"r","nameLocation":"26278:1:25","nodeType":"VariableDeclaration","scope":7877,"src":"26270:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7791,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:25"},"scope":8208,"src":"26222:2393:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7910,"nodeType":"Block","src":"28848:175:25","statements":[{"id":7909,"nodeType":"UncheckedBlock","src":"28858:159:25","statements":[{"assignments":[7889],"declarations":[{"constant":false,"id":7889,"mutability":"mutable","name":"result","nameLocation":"28890:6:25","nodeType":"VariableDeclaration","scope":7909,"src":"28882:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7888,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7893,"initialValue":{"arguments":[{"id":7891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"28904:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7890,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7877,7911],"referencedDeclaration":7877,"src":"28899:4:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"28931:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7898,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"28973:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}],"id":7897,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"28956:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"28991:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"29000:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7895,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"28940:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":7896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"28940:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7887,"id":7908,"nodeType":"Return","src":"28924:82:25"}]}]},"documentation":{"id":7878,"nodeType":"StructuredDocumentation","src":"28621:142:25","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7911,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:25","nodeType":"FunctionDefinition","parameters":{"id":7884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7880,"mutability":"mutable","name":"value","nameLocation":"28790:5:25","nodeType":"VariableDeclaration","scope":7911,"src":"28782:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7879,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7883,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:25","nodeType":"VariableDeclaration","scope":7911,"src":"28797:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"},"typeName":{"id":7882,"nodeType":"UserDefinedTypeName","pathNode":{"id":7881,"name":"Rounding","nameLocations":["28797:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6599,"src":"28797:8:25"},"referencedDeclaration":6599,"src":"28797:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:25"},"returnParameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7911,"src":"28839:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7885,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:25"},"scope":8208,"src":"28768:255:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8039,"nodeType":"Block","src":"29216:854:25","statements":[{"assignments":[7920],"declarations":[{"constant":false,"id":7920,"mutability":"mutable","name":"result","nameLocation":"29234:6:25","nodeType":"VariableDeclaration","scope":8039,"src":"29226:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7919,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7922,"initialValue":{"hexValue":"30","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:25"},{"id":8036,"nodeType":"UncheckedBlock","src":"29254:787:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29282:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7939,"nodeType":"IfStatement","src":"29278:103:25","trueBody":{"id":7938,"nodeType":"Block","src":"29301:80:25","statements":[{"expression":{"id":7932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29319:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7933,"nodeType":"ExpressionStatement","src":"29319:17:25"},{"expression":{"id":7936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"29354:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7937,"nodeType":"ExpressionStatement","src":"29354:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29398:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7956,"nodeType":"IfStatement","src":"29394:103:25","trueBody":{"id":7955,"nodeType":"Block","src":"29417:80:25","statements":[{"expression":{"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29435:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7950,"nodeType":"ExpressionStatement","src":"29435:17:25"},{"expression":{"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"29470:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7954,"nodeType":"ExpressionStatement","src":"29470:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29514:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7973,"nodeType":"IfStatement","src":"29510:103:25","trueBody":{"id":7972,"nodeType":"Block","src":"29533:80:25","statements":[{"expression":{"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29551:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:25","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7967,"nodeType":"ExpressionStatement","src":"29551:17:25"},{"expression":{"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7968,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"29586:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7971,"nodeType":"ExpressionStatement","src":"29586:12:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29630:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7990,"nodeType":"IfStatement","src":"29626:100:25","trueBody":{"id":7989,"nodeType":"Block","src":"29648:78:25","statements":[{"expression":{"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29666:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7984,"nodeType":"ExpressionStatement","src":"29666:16:25"},{"expression":{"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"29700:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7988,"nodeType":"ExpressionStatement","src":"29700:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8007,"nodeType":"IfStatement","src":"29739:100:25","trueBody":{"id":8006,"nodeType":"Block","src":"29761:78:25","statements":[{"expression":{"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29779:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8001,"nodeType":"ExpressionStatement","src":"29779:16:25"},{"expression":{"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"29813:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":8003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8005,"nodeType":"ExpressionStatement","src":"29813:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29856:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":8011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":8010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8024,"nodeType":"IfStatement","src":"29852:100:25","trueBody":{"id":8023,"nodeType":"Block","src":"29874:78:25","statements":[{"expression":{"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29892:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":8016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":8015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8018,"nodeType":"ExpressionStatement","src":"29892:16:25"},{"expression":{"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"29926:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":8020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8022,"nodeType":"ExpressionStatement","src":"29926:11:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7914,"src":"29969:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":8028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":8027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8035,"nodeType":"IfStatement","src":"29965:66:25","trueBody":{"id":8034,"nodeType":"Block","src":"29987:44:25","statements":[{"expression":{"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8030,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"30005:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":8031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8033,"nodeType":"ExpressionStatement","src":"30005:11:25"}]}}]},{"expression":{"id":8037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7920,"src":"30057:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7918,"id":8038,"nodeType":"Return","src":"30050:13:25"}]},"documentation":{"id":7912,"nodeType":"StructuredDocumentation","src":"29029:120:25","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":8040,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:25","nodeType":"FunctionDefinition","parameters":{"id":7915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7914,"mutability":"mutable","name":"value","nameLocation":"29177:5:25","nodeType":"VariableDeclaration","scope":8040,"src":"29169:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7913,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:25"},"returnParameters":{"id":7918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8040,"src":"29207:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7916,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:25"},"scope":8208,"src":"29154:916:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8073,"nodeType":"Block","src":"30305:177:25","statements":[{"id":8072,"nodeType":"UncheckedBlock","src":"30315:161:25","statements":[{"assignments":[8052],"declarations":[{"constant":false,"id":8052,"mutability":"mutable","name":"result","nameLocation":"30347:6:25","nodeType":"VariableDeclaration","scope":8072,"src":"30339:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8051,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8056,"initialValue":{"arguments":[{"id":8054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8053,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[8040,8074],"referencedDeclaration":8040,"src":"30356:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8057,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"30389:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8061,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8046,"src":"30431:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}],"id":8060,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"30414:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":8064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8052,"src":"30450:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"30459:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8058,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"30398:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"30398:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8050,"id":8071,"nodeType":"Return","src":"30382:83:25"}]}]},"documentation":{"id":8041,"nodeType":"StructuredDocumentation","src":"30076:143:25","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8074,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:25","nodeType":"FunctionDefinition","parameters":{"id":8047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8043,"mutability":"mutable","name":"value","nameLocation":"30247:5:25","nodeType":"VariableDeclaration","scope":8074,"src":"30239:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8042,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8046,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:25","nodeType":"VariableDeclaration","scope":8074,"src":"30254:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"},"typeName":{"id":8045,"nodeType":"UserDefinedTypeName","pathNode":{"id":8044,"name":"Rounding","nameLocations":["30254:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6599,"src":"30254:8:25"},"referencedDeclaration":6599,"src":"30254:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:25"},"returnParameters":{"id":8050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8074,"src":"30296:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8048,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:25"},"scope":8208,"src":"30224:258:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8150,"nodeType":"Block","src":"30800:675:25","statements":[{"expression":{"id":8091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8082,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"30882:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8085,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"30902:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":8086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:25","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8083,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"30886:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"30886:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":8089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8092,"nodeType":"ExpressionStatement","src":"30882:64:25"},{"expression":{"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8093,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31022:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8096,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"31044:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8097,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31049:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":8100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:25","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8094,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"31027:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":8095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"31027:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":8103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:25","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8106,"nodeType":"ExpressionStatement","src":"31022:56:25"},{"expression":{"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8107,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31153:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8110,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"31175:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8111,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31180:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":8114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:25","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8108,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"31158:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":8109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"31158:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":8117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:25","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8120,"nodeType":"ExpressionStatement","src":"31153:48:25"},{"expression":{"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8121,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31276:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8124,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"31298:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8125,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31303:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8127,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":8128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:25","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8122,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"31281:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":8123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"31281:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":8131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:25","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8134,"nodeType":"ExpressionStatement","src":"31276:44:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8135,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31426:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":8136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8141,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8077,"src":"31453:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8142,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"31458:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":8145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8139,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"31436:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"31436:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8081,"id":8149,"nodeType":"Return","src":"31418:50:25"}]},"documentation":{"id":8075,"nodeType":"StructuredDocumentation","src":"30488:246:25","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":8151,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:25","nodeType":"FunctionDefinition","parameters":{"id":8078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8077,"mutability":"mutable","name":"x","nameLocation":"30763:1:25","nodeType":"VariableDeclaration","scope":8151,"src":"30755:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8076,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:25"},"returnParameters":{"id":8081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8080,"mutability":"mutable","name":"r","nameLocation":"30797:1:25","nodeType":"VariableDeclaration","scope":8151,"src":"30789:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8079,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:25"},"scope":8208,"src":"30739:736:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8187,"nodeType":"Block","src":"31712:184:25","statements":[{"id":8186,"nodeType":"UncheckedBlock","src":"31722:168:25","statements":[{"assignments":[8163],"declarations":[{"constant":false,"id":8163,"mutability":"mutable","name":"result","nameLocation":"31754:6:25","nodeType":"VariableDeclaration","scope":8186,"src":"31746:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8162,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8167,"initialValue":{"arguments":[{"id":8165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"31770:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8164,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[8151,8188],"referencedDeclaration":8151,"src":"31763:6:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:25"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8168,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"31797:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8172,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8157,"src":"31839:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}],"id":8171,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8207,"src":"31822:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6599_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8175,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8163,"src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":8176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:25","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"31873:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8169,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"31806:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":8170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"31806:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8161,"id":8185,"nodeType":"Return","src":"31790:89:25"}]}]},"documentation":{"id":8152,"nodeType":"StructuredDocumentation","src":"31481:144:25","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8188,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:25","nodeType":"FunctionDefinition","parameters":{"id":8158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8154,"mutability":"mutable","name":"value","nameLocation":"31654:5:25","nodeType":"VariableDeclaration","scope":8188,"src":"31646:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8153,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8157,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:25","nodeType":"VariableDeclaration","scope":8188,"src":"31661:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"},"typeName":{"id":8156,"nodeType":"UserDefinedTypeName","pathNode":{"id":8155,"name":"Rounding","nameLocations":["31661:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6599,"src":"31661:8:25"},"referencedDeclaration":6599,"src":"31661:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:25"},"returnParameters":{"id":8161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8188,"src":"31703:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8159,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:25"},"scope":8208,"src":"31630:266:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8206,"nodeType":"Block","src":"32094:48:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8199,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8192,"src":"32117:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}],"id":8198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8197,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:25","typeDescriptions":{}}},"id":8200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":8201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":8203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8196,"id":8205,"nodeType":"Return","src":"32104:31:25"}]},"documentation":{"id":8189,"nodeType":"StructuredDocumentation","src":"31902:113:25","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":8207,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:25","nodeType":"FunctionDefinition","parameters":{"id":8193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8192,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:25","nodeType":"VariableDeclaration","scope":8207,"src":"32046:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"},"typeName":{"id":8191,"nodeType":"UserDefinedTypeName","pathNode":{"id":8190,"name":"Rounding","nameLocations":["32046:8:25"],"nodeType":"IdentifierPath","referencedDeclaration":6599,"src":"32046:8:25"},"referencedDeclaration":6599,"src":"32046:8:25","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6599","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:25"},"returnParameters":{"id":8196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8207,"src":"32088:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8194,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:25"},"scope":8208,"src":"32020:122:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8209,"src":"281:31863:25","usedErrors":[],"usedEvents":[]}],"src":"103:32042:25"},"id":25},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9973]},"id":9974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8210,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:26"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":8211,"nodeType":"StructuredDocumentation","src":"218:550:26","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9973,"linearizedBaseContracts":[9973],"name":"SafeCast","nameLocation":"777:8:26","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8212,"nodeType":"StructuredDocumentation","src":"792:68:26","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":8218,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:26","nodeType":"ErrorDefinition","parameters":{"id":8217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8214,"mutability":"mutable","name":"bits","nameLocation":"908:4:26","nodeType":"VariableDeclaration","scope":8218,"src":"902:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8213,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8216,"mutability":"mutable","name":"value","nameLocation":"922:5:26","nodeType":"VariableDeclaration","scope":8218,"src":"914:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8215,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:26"},"src":"865:64:26"},{"documentation":{"id":8219,"nodeType":"StructuredDocumentation","src":"935:75:26","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":8223,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:26","nodeType":"ErrorDefinition","parameters":{"id":8222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8221,"mutability":"mutable","name":"value","nameLocation":"1056:5:26","nodeType":"VariableDeclaration","scope":8223,"src":"1049:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8220,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:26"},"src":"1015:48:26"},{"documentation":{"id":8224,"nodeType":"StructuredDocumentation","src":"1069:67:26","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":8230,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:26","nodeType":"ErrorDefinition","parameters":{"id":8229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8226,"mutability":"mutable","name":"bits","nameLocation":"1183:4:26","nodeType":"VariableDeclaration","scope":8230,"src":"1177:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8225,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8228,"mutability":"mutable","name":"value","nameLocation":"1196:5:26","nodeType":"VariableDeclaration","scope":8230,"src":"1189:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8227,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:26"},"src":"1141:62:26"},{"documentation":{"id":8231,"nodeType":"StructuredDocumentation","src":"1209:75:26","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":8235,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:26","nodeType":"ErrorDefinition","parameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8233,"mutability":"mutable","name":"value","nameLocation":"1331:5:26","nodeType":"VariableDeclaration","scope":8235,"src":"1323:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:26"},"src":"1289:49:26"},{"body":{"id":8262,"nodeType":"Block","src":"1695:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"1709:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8245,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":8244,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":8248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:26","memberName":"max","nodeType":"MemberAccess","src":"1717:17:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8256,"nodeType":"IfStatement","src":"1705:105:26","trueBody":{"id":8255,"nodeType":"Block","src":"1736:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"1793:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8250,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"1757:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8254,"nodeType":"RevertStatement","src":"1750:49:26"}]}},{"expression":{"arguments":[{"id":8259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8238,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8257,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:26","typeDescriptions":{}}},"id":8260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":8242,"id":8261,"nodeType":"Return","src":"1819:21:26"}]},"documentation":{"id":8236,"nodeType":"StructuredDocumentation","src":"1344:280:26","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8263,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:26","nodeType":"FunctionDefinition","parameters":{"id":8239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8238,"mutability":"mutable","name":"value","nameLocation":"1656:5:26","nodeType":"VariableDeclaration","scope":8263,"src":"1648:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8237,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:26"},"returnParameters":{"id":8242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8263,"src":"1686:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":8240,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:26","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:26"},"scope":9973,"src":"1629:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8290,"nodeType":"Block","src":"2204:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"2218:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8273,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":8272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:26","memberName":"max","nodeType":"MemberAccess","src":"2226:17:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8284,"nodeType":"IfStatement","src":"2214:105:26","trueBody":{"id":8283,"nodeType":"Block","src":"2245:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"2302:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8278,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"2266:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8282,"nodeType":"RevertStatement","src":"2259:49:26"}]}},{"expression":{"arguments":[{"id":8287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8266,"src":"2343:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8285,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:26","typeDescriptions":{}}},"id":8288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":8270,"id":8289,"nodeType":"Return","src":"2328:21:26"}]},"documentation":{"id":8264,"nodeType":"StructuredDocumentation","src":"1853:280:26","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8291,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:26","nodeType":"FunctionDefinition","parameters":{"id":8267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8266,"mutability":"mutable","name":"value","nameLocation":"2165:5:26","nodeType":"VariableDeclaration","scope":8291,"src":"2157:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:26"},"returnParameters":{"id":8270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8291,"src":"2195:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":8268,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:26","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:26"},"scope":9973,"src":"2138:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8318,"nodeType":"Block","src":"2713:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"2727:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8301,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":8300,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:26","memberName":"max","nodeType":"MemberAccess","src":"2735:17:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8312,"nodeType":"IfStatement","src":"2723:105:26","trueBody":{"id":8311,"nodeType":"Block","src":"2754:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"2811:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8306,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"2775:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8310,"nodeType":"RevertStatement","src":"2768:49:26"}]}},{"expression":{"arguments":[{"id":8315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8294,"src":"2852:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8313,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:26","typeDescriptions":{}}},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":8298,"id":8317,"nodeType":"Return","src":"2837:21:26"}]},"documentation":{"id":8292,"nodeType":"StructuredDocumentation","src":"2362:280:26","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8319,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:26","nodeType":"FunctionDefinition","parameters":{"id":8295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8294,"mutability":"mutable","name":"value","nameLocation":"2674:5:26","nodeType":"VariableDeclaration","scope":8319,"src":"2666:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8293,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:26"},"returnParameters":{"id":8298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8319,"src":"2704:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":8296,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:26","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:26"},"scope":9973,"src":"2647:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8346,"nodeType":"Block","src":"3222:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"3236:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8329,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":8328,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":8332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:26","memberName":"max","nodeType":"MemberAccess","src":"3244:17:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8340,"nodeType":"IfStatement","src":"3232:105:26","trueBody":{"id":8339,"nodeType":"Block","src":"3263:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"3320:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8334,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"3284:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8338,"nodeType":"RevertStatement","src":"3277:49:26"}]}},{"expression":{"arguments":[{"id":8343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8322,"src":"3361:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8341,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:26","typeDescriptions":{}}},"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8326,"id":8345,"nodeType":"Return","src":"3346:21:26"}]},"documentation":{"id":8320,"nodeType":"StructuredDocumentation","src":"2871:280:26","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8347,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:26","nodeType":"FunctionDefinition","parameters":{"id":8323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8322,"mutability":"mutable","name":"value","nameLocation":"3183:5:26","nodeType":"VariableDeclaration","scope":8347,"src":"3175:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8321,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:26"},"returnParameters":{"id":8326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8347,"src":"3213:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8324,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:26","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:26"},"scope":9973,"src":"3156:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8374,"nodeType":"Block","src":"3731:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"3745:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8357,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":8356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":8360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:26","memberName":"max","nodeType":"MemberAccess","src":"3753:17:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8368,"nodeType":"IfStatement","src":"3741:105:26","trueBody":{"id":8367,"nodeType":"Block","src":"3772:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"3829:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8362,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"3793:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8366,"nodeType":"RevertStatement","src":"3786:49:26"}]}},{"expression":{"arguments":[{"id":8371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8350,"src":"3870:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8369,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:26","typeDescriptions":{}}},"id":8372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":8354,"id":8373,"nodeType":"Return","src":"3855:21:26"}]},"documentation":{"id":8348,"nodeType":"StructuredDocumentation","src":"3380:280:26","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8375,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:26","nodeType":"FunctionDefinition","parameters":{"id":8351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8350,"mutability":"mutable","name":"value","nameLocation":"3692:5:26","nodeType":"VariableDeclaration","scope":8375,"src":"3684:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8349,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:26"},"returnParameters":{"id":8354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8375,"src":"3722:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":8352,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:26","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:26"},"scope":9973,"src":"3665:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8402,"nodeType":"Block","src":"4240:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"4254:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8385,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":8384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":8388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:26","memberName":"max","nodeType":"MemberAccess","src":"4262:17:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8396,"nodeType":"IfStatement","src":"4250:105:26","trueBody":{"id":8395,"nodeType":"Block","src":"4281:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"4338:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8390,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"4302:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8394,"nodeType":"RevertStatement","src":"4295:49:26"}]}},{"expression":{"arguments":[{"id":8399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"4379:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8397,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:26","typeDescriptions":{}}},"id":8400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8382,"id":8401,"nodeType":"Return","src":"4364:21:26"}]},"documentation":{"id":8376,"nodeType":"StructuredDocumentation","src":"3889:280:26","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8403,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:26","nodeType":"FunctionDefinition","parameters":{"id":8379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8378,"mutability":"mutable","name":"value","nameLocation":"4201:5:26","nodeType":"VariableDeclaration","scope":8403,"src":"4193:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8377,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:26"},"returnParameters":{"id":8382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8403,"src":"4231:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8380,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:26","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:26"},"scope":9973,"src":"4174:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8430,"nodeType":"Block","src":"4749:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"4763:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8413,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":8412,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":8416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:26","memberName":"max","nodeType":"MemberAccess","src":"4771:17:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8424,"nodeType":"IfStatement","src":"4759:105:26","trueBody":{"id":8423,"nodeType":"Block","src":"4790:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"4847:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8418,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"4811:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8422,"nodeType":"RevertStatement","src":"4804:49:26"}]}},{"expression":{"arguments":[{"id":8427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"4888:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8425,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:26","typeDescriptions":{}}},"id":8428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":8410,"id":8429,"nodeType":"Return","src":"4873:21:26"}]},"documentation":{"id":8404,"nodeType":"StructuredDocumentation","src":"4398:280:26","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8431,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:26","nodeType":"FunctionDefinition","parameters":{"id":8407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8406,"mutability":"mutable","name":"value","nameLocation":"4710:5:26","nodeType":"VariableDeclaration","scope":8431,"src":"4702:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8405,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:26"},"returnParameters":{"id":8410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8431,"src":"4740:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":8408,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:26","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:26"},"scope":9973,"src":"4683:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8458,"nodeType":"Block","src":"5258:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"5272:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8441,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":8440,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":8444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:26","memberName":"max","nodeType":"MemberAccess","src":"5280:17:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8452,"nodeType":"IfStatement","src":"5268:105:26","trueBody":{"id":8451,"nodeType":"Block","src":"5299:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"5356:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8446,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"5320:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8450,"nodeType":"RevertStatement","src":"5313:49:26"}]}},{"expression":{"arguments":[{"id":8455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8434,"src":"5397:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8453,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:26","typeDescriptions":{}}},"id":8456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":8438,"id":8457,"nodeType":"Return","src":"5382:21:26"}]},"documentation":{"id":8432,"nodeType":"StructuredDocumentation","src":"4907:280:26","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8459,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:26","nodeType":"FunctionDefinition","parameters":{"id":8435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8434,"mutability":"mutable","name":"value","nameLocation":"5219:5:26","nodeType":"VariableDeclaration","scope":8459,"src":"5211:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8433,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:26"},"returnParameters":{"id":8438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8459,"src":"5249:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":8436,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:26","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:26"},"scope":9973,"src":"5192:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8486,"nodeType":"Block","src":"5767:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"5781:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8469,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":8468,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":8472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:26","memberName":"max","nodeType":"MemberAccess","src":"5789:17:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8480,"nodeType":"IfStatement","src":"5777:105:26","trueBody":{"id":8479,"nodeType":"Block","src":"5808:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"5865:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8474,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"5829:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8478,"nodeType":"RevertStatement","src":"5822:49:26"}]}},{"expression":{"arguments":[{"id":8483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"5906:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8481,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:26","typeDescriptions":{}}},"id":8484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":8466,"id":8485,"nodeType":"Return","src":"5891:21:26"}]},"documentation":{"id":8460,"nodeType":"StructuredDocumentation","src":"5416:280:26","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8487,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:26","nodeType":"FunctionDefinition","parameters":{"id":8463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8462,"mutability":"mutable","name":"value","nameLocation":"5728:5:26","nodeType":"VariableDeclaration","scope":8487,"src":"5720:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:26"},"returnParameters":{"id":8466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8487,"src":"5758:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":8464,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:26","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:26"},"scope":9973,"src":"5701:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8514,"nodeType":"Block","src":"6276:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6290:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8497,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":8496,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":8500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:26","memberName":"max","nodeType":"MemberAccess","src":"6298:17:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8508,"nodeType":"IfStatement","src":"6286:105:26","trueBody":{"id":8507,"nodeType":"Block","src":"6317:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8502,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"6338:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8506,"nodeType":"RevertStatement","src":"6331:49:26"}]}},{"expression":{"arguments":[{"id":8511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8490,"src":"6415:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8509,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:26","typeDescriptions":{}}},"id":8512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":8494,"id":8513,"nodeType":"Return","src":"6400:21:26"}]},"documentation":{"id":8488,"nodeType":"StructuredDocumentation","src":"5925:280:26","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8515,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:26","nodeType":"FunctionDefinition","parameters":{"id":8491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8490,"mutability":"mutable","name":"value","nameLocation":"6237:5:26","nodeType":"VariableDeclaration","scope":8515,"src":"6229:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8489,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:26"},"returnParameters":{"id":8494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8515,"src":"6267:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":8492,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:26","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:26"},"scope":9973,"src":"6210:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8542,"nodeType":"Block","src":"6785:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"6799:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8525,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":8524,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":8528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:26","memberName":"max","nodeType":"MemberAccess","src":"6807:17:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8536,"nodeType":"IfStatement","src":"6795:105:26","trueBody":{"id":8535,"nodeType":"Block","src":"6826:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"6883:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8530,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"6847:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8534,"nodeType":"RevertStatement","src":"6840:49:26"}]}},{"expression":{"arguments":[{"id":8539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8518,"src":"6924:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8537,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:26","typeDescriptions":{}}},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":8522,"id":8541,"nodeType":"Return","src":"6909:21:26"}]},"documentation":{"id":8516,"nodeType":"StructuredDocumentation","src":"6434:280:26","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8543,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:26","nodeType":"FunctionDefinition","parameters":{"id":8519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8518,"mutability":"mutable","name":"value","nameLocation":"6746:5:26","nodeType":"VariableDeclaration","scope":8543,"src":"6738:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8517,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:26"},"returnParameters":{"id":8522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8543,"src":"6776:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":8520,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:26","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:26"},"scope":9973,"src":"6719:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8570,"nodeType":"Block","src":"7294:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"7308:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8553,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8552,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:26","memberName":"max","nodeType":"MemberAccess","src":"7316:17:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8564,"nodeType":"IfStatement","src":"7304:105:26","trueBody":{"id":8563,"nodeType":"Block","src":"7335:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"7392:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8558,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"7356:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8562,"nodeType":"RevertStatement","src":"7349:49:26"}]}},{"expression":{"arguments":[{"id":8567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"7433:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8565,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:26","typeDescriptions":{}}},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8550,"id":8569,"nodeType":"Return","src":"7418:21:26"}]},"documentation":{"id":8544,"nodeType":"StructuredDocumentation","src":"6943:280:26","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8571,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:26","nodeType":"FunctionDefinition","parameters":{"id":8547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8546,"mutability":"mutable","name":"value","nameLocation":"7255:5:26","nodeType":"VariableDeclaration","scope":8571,"src":"7247:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:26"},"returnParameters":{"id":8550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8571,"src":"7285:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8548,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:26"},"scope":9973,"src":"7228:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8598,"nodeType":"Block","src":"7803:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"7817:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8581,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:26","memberName":"max","nodeType":"MemberAccess","src":"7825:17:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8592,"nodeType":"IfStatement","src":"7813:105:26","trueBody":{"id":8591,"nodeType":"Block","src":"7844:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"7901:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8586,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"7865:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8590,"nodeType":"RevertStatement","src":"7858:49:26"}]}},{"expression":{"arguments":[{"id":8595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8574,"src":"7942:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8593,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:26","typeDescriptions":{}}},"id":8596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8578,"id":8597,"nodeType":"Return","src":"7927:21:26"}]},"documentation":{"id":8572,"nodeType":"StructuredDocumentation","src":"7452:280:26","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8599,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:26","nodeType":"FunctionDefinition","parameters":{"id":8575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8574,"mutability":"mutable","name":"value","nameLocation":"7764:5:26","nodeType":"VariableDeclaration","scope":8599,"src":"7756:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8573,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:26"},"returnParameters":{"id":8578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8599,"src":"7794:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8576,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:26","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:26"},"scope":9973,"src":"7737:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8626,"nodeType":"Block","src":"8312:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"8326:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8609,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8608,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:26","memberName":"max","nodeType":"MemberAccess","src":"8334:17:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8620,"nodeType":"IfStatement","src":"8322:105:26","trueBody":{"id":8619,"nodeType":"Block","src":"8353:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"8410:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8614,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"8374:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8618,"nodeType":"RevertStatement","src":"8367:49:26"}]}},{"expression":{"arguments":[{"id":8623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8602,"src":"8451:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8621,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:26","typeDescriptions":{}}},"id":8624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8606,"id":8625,"nodeType":"Return","src":"8436:21:26"}]},"documentation":{"id":8600,"nodeType":"StructuredDocumentation","src":"7961:280:26","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8627,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:26","nodeType":"FunctionDefinition","parameters":{"id":8603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8602,"mutability":"mutable","name":"value","nameLocation":"8273:5:26","nodeType":"VariableDeclaration","scope":8627,"src":"8265:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8601,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:26"},"returnParameters":{"id":8606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8627,"src":"8303:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8604,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:26","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:26"},"scope":9973,"src":"8246:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8654,"nodeType":"Block","src":"8821:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"8835:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8637,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8636,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:26","memberName":"max","nodeType":"MemberAccess","src":"8843:17:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8648,"nodeType":"IfStatement","src":"8831:105:26","trueBody":{"id":8647,"nodeType":"Block","src":"8862:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"8919:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8642,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"8883:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8646,"nodeType":"RevertStatement","src":"8876:49:26"}]}},{"expression":{"arguments":[{"id":8651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8630,"src":"8960:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8649,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:26","typeDescriptions":{}}},"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8634,"id":8653,"nodeType":"Return","src":"8945:21:26"}]},"documentation":{"id":8628,"nodeType":"StructuredDocumentation","src":"8470:280:26","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8655,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:26","nodeType":"FunctionDefinition","parameters":{"id":8631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8630,"mutability":"mutable","name":"value","nameLocation":"8782:5:26","nodeType":"VariableDeclaration","scope":8655,"src":"8774:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8629,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:26"},"returnParameters":{"id":8634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8655,"src":"8812:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8632,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:26","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:26"},"scope":9973,"src":"8755:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8682,"nodeType":"Block","src":"9330:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"9344:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8665,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8664,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:26","memberName":"max","nodeType":"MemberAccess","src":"9352:17:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8676,"nodeType":"IfStatement","src":"9340:105:26","trueBody":{"id":8675,"nodeType":"Block","src":"9371:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"9428:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8670,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"9392:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8674,"nodeType":"RevertStatement","src":"9385:49:26"}]}},{"expression":{"arguments":[{"id":8679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8658,"src":"9469:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8677,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:26","typeDescriptions":{}}},"id":8680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8662,"id":8681,"nodeType":"Return","src":"9454:21:26"}]},"documentation":{"id":8656,"nodeType":"StructuredDocumentation","src":"8979:280:26","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8683,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:26","nodeType":"FunctionDefinition","parameters":{"id":8659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8658,"mutability":"mutable","name":"value","nameLocation":"9291:5:26","nodeType":"VariableDeclaration","scope":8683,"src":"9283:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8657,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:26"},"returnParameters":{"id":8662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8683,"src":"9321:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8660,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:26","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:26"},"scope":9973,"src":"9264:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8710,"nodeType":"Block","src":"9839:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"9853:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8693,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8692,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:26","memberName":"max","nodeType":"MemberAccess","src":"9861:17:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8704,"nodeType":"IfStatement","src":"9849:105:26","trueBody":{"id":8703,"nodeType":"Block","src":"9880:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"9937:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8698,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"9901:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8702,"nodeType":"RevertStatement","src":"9894:49:26"}]}},{"expression":{"arguments":[{"id":8707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"9978:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8705,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:26","typeDescriptions":{}}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8690,"id":8709,"nodeType":"Return","src":"9963:21:26"}]},"documentation":{"id":8684,"nodeType":"StructuredDocumentation","src":"9488:280:26","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8711,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:26","nodeType":"FunctionDefinition","parameters":{"id":8687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8686,"mutability":"mutable","name":"value","nameLocation":"9800:5:26","nodeType":"VariableDeclaration","scope":8711,"src":"9792:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8685,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:26"},"returnParameters":{"id":8690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8711,"src":"9830:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8688,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:26","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:26"},"scope":9973,"src":"9773:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8738,"nodeType":"Block","src":"10348:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"10362:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8721,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8720,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:26","memberName":"max","nodeType":"MemberAccess","src":"10370:17:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8732,"nodeType":"IfStatement","src":"10358:105:26","trueBody":{"id":8731,"nodeType":"Block","src":"10389:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"10446:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8726,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"10410:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8730,"nodeType":"RevertStatement","src":"10403:49:26"}]}},{"expression":{"arguments":[{"id":8735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8714,"src":"10487:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8733,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:26","typeDescriptions":{}}},"id":8736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8718,"id":8737,"nodeType":"Return","src":"10472:21:26"}]},"documentation":{"id":8712,"nodeType":"StructuredDocumentation","src":"9997:280:26","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8739,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:26","nodeType":"FunctionDefinition","parameters":{"id":8715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8714,"mutability":"mutable","name":"value","nameLocation":"10309:5:26","nodeType":"VariableDeclaration","scope":8739,"src":"10301:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8713,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:26"},"returnParameters":{"id":8718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8739,"src":"10339:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8716,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:26","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:26"},"scope":9973,"src":"10282:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8766,"nodeType":"Block","src":"10857:152:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"10871:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8749,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8748,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:26","memberName":"max","nodeType":"MemberAccess","src":"10879:17:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8760,"nodeType":"IfStatement","src":"10867:105:26","trueBody":{"id":8759,"nodeType":"Block","src":"10898:74:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"10955:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8754,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"10919:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8758,"nodeType":"RevertStatement","src":"10912:49:26"}]}},{"expression":{"arguments":[{"id":8763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"10996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8761,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:26","typeDescriptions":{}}},"id":8764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8746,"id":8765,"nodeType":"Return","src":"10981:21:26"}]},"documentation":{"id":8740,"nodeType":"StructuredDocumentation","src":"10506:280:26","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8767,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:26","nodeType":"FunctionDefinition","parameters":{"id":8743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8742,"mutability":"mutable","name":"value","nameLocation":"10818:5:26","nodeType":"VariableDeclaration","scope":8767,"src":"10810:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8741,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:26"},"returnParameters":{"id":8746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8767,"src":"10848:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8744,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:26","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:26"},"scope":9973,"src":"10791:218:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8794,"nodeType":"Block","src":"11360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"11374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8777,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8776,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:26","memberName":"max","nodeType":"MemberAccess","src":"11382:16:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8788,"nodeType":"IfStatement","src":"11370:103:26","trueBody":{"id":8787,"nodeType":"Block","src":"11400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"11456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8782,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"11421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8786,"nodeType":"RevertStatement","src":"11414:48:26"}]}},{"expression":{"arguments":[{"id":8791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"11496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8789,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:26","typeDescriptions":{}}},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8774,"id":8793,"nodeType":"Return","src":"11482:20:26"}]},"documentation":{"id":8768,"nodeType":"StructuredDocumentation","src":"11015:276:26","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:26","nodeType":"FunctionDefinition","parameters":{"id":8771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8770,"mutability":"mutable","name":"value","nameLocation":"11322:5:26","nodeType":"VariableDeclaration","scope":8795,"src":"11314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8769,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:26"},"returnParameters":{"id":8774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8795,"src":"11352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8772,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:26","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:26"},"scope":9973,"src":"11296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8822,"nodeType":"Block","src":"11860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"11874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8805,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8804,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:26","memberName":"max","nodeType":"MemberAccess","src":"11882:16:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8816,"nodeType":"IfStatement","src":"11870:103:26","trueBody":{"id":8815,"nodeType":"Block","src":"11900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"11956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8810,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"11921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8814,"nodeType":"RevertStatement","src":"11914:48:26"}]}},{"expression":{"arguments":[{"id":8819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8798,"src":"11996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8817,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:26","typeDescriptions":{}}},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8802,"id":8821,"nodeType":"Return","src":"11982:20:26"}]},"documentation":{"id":8796,"nodeType":"StructuredDocumentation","src":"11515:276:26","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8823,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:26","nodeType":"FunctionDefinition","parameters":{"id":8799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"value","nameLocation":"11822:5:26","nodeType":"VariableDeclaration","scope":8823,"src":"11814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8797,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:26"},"returnParameters":{"id":8802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8823,"src":"11852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8800,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:26","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:26"},"scope":9973,"src":"11796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8850,"nodeType":"Block","src":"12360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"12374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8833,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8832,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:26","memberName":"max","nodeType":"MemberAccess","src":"12382:16:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8844,"nodeType":"IfStatement","src":"12370:103:26","trueBody":{"id":8843,"nodeType":"Block","src":"12400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"12456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8838,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"12421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8842,"nodeType":"RevertStatement","src":"12414:48:26"}]}},{"expression":{"arguments":[{"id":8847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8826,"src":"12496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8845,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:26","typeDescriptions":{}}},"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8830,"id":8849,"nodeType":"Return","src":"12482:20:26"}]},"documentation":{"id":8824,"nodeType":"StructuredDocumentation","src":"12015:276:26","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8851,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:26","nodeType":"FunctionDefinition","parameters":{"id":8827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8826,"mutability":"mutable","name":"value","nameLocation":"12322:5:26","nodeType":"VariableDeclaration","scope":8851,"src":"12314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8825,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:26"},"returnParameters":{"id":8830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8829,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8851,"src":"12352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8828,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:26","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:26"},"scope":9973,"src":"12296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8878,"nodeType":"Block","src":"12860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"12874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8861,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8860,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:26","memberName":"max","nodeType":"MemberAccess","src":"12882:16:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8872,"nodeType":"IfStatement","src":"12870:103:26","trueBody":{"id":8871,"nodeType":"Block","src":"12900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"12956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8866,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"12921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8870,"nodeType":"RevertStatement","src":"12914:48:26"}]}},{"expression":{"arguments":[{"id":8875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8854,"src":"12996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8873,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:26","typeDescriptions":{}}},"id":8876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8858,"id":8877,"nodeType":"Return","src":"12982:20:26"}]},"documentation":{"id":8852,"nodeType":"StructuredDocumentation","src":"12515:276:26","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8879,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:26","nodeType":"FunctionDefinition","parameters":{"id":8855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8854,"mutability":"mutable","name":"value","nameLocation":"12822:5:26","nodeType":"VariableDeclaration","scope":8879,"src":"12814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8853,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:26"},"returnParameters":{"id":8858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8879,"src":"12852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8856,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:26","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:26"},"scope":9973,"src":"12796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8906,"nodeType":"Block","src":"13360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"13374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8889,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8888,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:26","memberName":"max","nodeType":"MemberAccess","src":"13382:16:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8900,"nodeType":"IfStatement","src":"13370:103:26","trueBody":{"id":8899,"nodeType":"Block","src":"13400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"13456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8894,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"13421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8898,"nodeType":"RevertStatement","src":"13414:48:26"}]}},{"expression":{"arguments":[{"id":8903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8882,"src":"13496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8901,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:26","typeDescriptions":{}}},"id":8904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8886,"id":8905,"nodeType":"Return","src":"13482:20:26"}]},"documentation":{"id":8880,"nodeType":"StructuredDocumentation","src":"13015:276:26","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8907,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:26","nodeType":"FunctionDefinition","parameters":{"id":8883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8882,"mutability":"mutable","name":"value","nameLocation":"13322:5:26","nodeType":"VariableDeclaration","scope":8907,"src":"13314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8881,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:26"},"returnParameters":{"id":8886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8907,"src":"13352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8884,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:26","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:26"},"scope":9973,"src":"13296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8934,"nodeType":"Block","src":"13860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"13874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8917,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8916,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:26","memberName":"max","nodeType":"MemberAccess","src":"13882:16:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8928,"nodeType":"IfStatement","src":"13870:103:26","trueBody":{"id":8927,"nodeType":"Block","src":"13900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"13956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8922,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"13921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8926,"nodeType":"RevertStatement","src":"13914:48:26"}]}},{"expression":{"arguments":[{"id":8931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8910,"src":"13996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8929,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:26","typeDescriptions":{}}},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8914,"id":8933,"nodeType":"Return","src":"13982:20:26"}]},"documentation":{"id":8908,"nodeType":"StructuredDocumentation","src":"13515:276:26","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8935,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:26","nodeType":"FunctionDefinition","parameters":{"id":8911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8910,"mutability":"mutable","name":"value","nameLocation":"13822:5:26","nodeType":"VariableDeclaration","scope":8935,"src":"13814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8909,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:26"},"returnParameters":{"id":8914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8935,"src":"13852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8912,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:26","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:26"},"scope":9973,"src":"13796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8962,"nodeType":"Block","src":"14360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"14374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8945,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8944,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:26","memberName":"max","nodeType":"MemberAccess","src":"14382:16:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8956,"nodeType":"IfStatement","src":"14370:103:26","trueBody":{"id":8955,"nodeType":"Block","src":"14400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"14456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8950,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"14421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8954,"nodeType":"RevertStatement","src":"14414:48:26"}]}},{"expression":{"arguments":[{"id":8959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"14496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8957,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:26","typeDescriptions":{}}},"id":8960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8942,"id":8961,"nodeType":"Return","src":"14482:20:26"}]},"documentation":{"id":8936,"nodeType":"StructuredDocumentation","src":"14015:276:26","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8963,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:26","nodeType":"FunctionDefinition","parameters":{"id":8939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8938,"mutability":"mutable","name":"value","nameLocation":"14322:5:26","nodeType":"VariableDeclaration","scope":8963,"src":"14314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8937,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:26"},"returnParameters":{"id":8942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8963,"src":"14352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8940,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:26","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:26"},"scope":9973,"src":"14296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8990,"nodeType":"Block","src":"14860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"14874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8973,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8972,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:26","memberName":"max","nodeType":"MemberAccess","src":"14882:16:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8984,"nodeType":"IfStatement","src":"14870:103:26","trueBody":{"id":8983,"nodeType":"Block","src":"14900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"14956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8978,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"14921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8982,"nodeType":"RevertStatement","src":"14914:48:26"}]}},{"expression":{"arguments":[{"id":8987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"14996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8985,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:26","typeDescriptions":{}}},"id":8988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8970,"id":8989,"nodeType":"Return","src":"14982:20:26"}]},"documentation":{"id":8964,"nodeType":"StructuredDocumentation","src":"14515:276:26","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8991,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:26","nodeType":"FunctionDefinition","parameters":{"id":8967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8966,"mutability":"mutable","name":"value","nameLocation":"14822:5:26","nodeType":"VariableDeclaration","scope":8991,"src":"14814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8965,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:26"},"returnParameters":{"id":8970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8991,"src":"14852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8968,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:26","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:26"},"scope":9973,"src":"14796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9018,"nodeType":"Block","src":"15360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"15374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9001,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":9000,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":9004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:26","memberName":"max","nodeType":"MemberAccess","src":"15382:16:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9012,"nodeType":"IfStatement","src":"15370:103:26","trueBody":{"id":9011,"nodeType":"Block","src":"15400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"15456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9006,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"15421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9010,"nodeType":"RevertStatement","src":"15414:48:26"}]}},{"expression":{"arguments":[{"id":9015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8994,"src":"15496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":9013,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:26","typeDescriptions":{}}},"id":9016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8998,"id":9017,"nodeType":"Return","src":"15482:20:26"}]},"documentation":{"id":8992,"nodeType":"StructuredDocumentation","src":"15015:276:26","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9019,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:26","nodeType":"FunctionDefinition","parameters":{"id":8995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8994,"mutability":"mutable","name":"value","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":9019,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8993,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:26"},"returnParameters":{"id":8998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9019,"src":"15352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8996,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:26"},"scope":9973,"src":"15296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9046,"nodeType":"Block","src":"15860:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"15874:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9029,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":9028,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":9032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:26","memberName":"max","nodeType":"MemberAccess","src":"15882:16:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9040,"nodeType":"IfStatement","src":"15870:103:26","trueBody":{"id":9039,"nodeType":"Block","src":"15900:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"15956:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9034,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"15921:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9038,"nodeType":"RevertStatement","src":"15914:48:26"}]}},{"expression":{"arguments":[{"id":9043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9022,"src":"15996:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9041,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:26","typeDescriptions":{}}},"id":9044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":9026,"id":9045,"nodeType":"Return","src":"15982:20:26"}]},"documentation":{"id":9020,"nodeType":"StructuredDocumentation","src":"15515:276:26","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9047,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:26","nodeType":"FunctionDefinition","parameters":{"id":9023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9022,"mutability":"mutable","name":"value","nameLocation":"15822:5:26","nodeType":"VariableDeclaration","scope":9047,"src":"15814:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9021,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:26"},"returnParameters":{"id":9026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9047,"src":"15852:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":9024,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:26"},"scope":9973,"src":"15796:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9074,"nodeType":"Block","src":"16360:149:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"16374:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9057,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":9056,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":9060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:26","memberName":"max","nodeType":"MemberAccess","src":"16382:16:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9068,"nodeType":"IfStatement","src":"16370:103:26","trueBody":{"id":9067,"nodeType":"Block","src":"16400:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"16456:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9062,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"16421:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9066,"nodeType":"RevertStatement","src":"16414:48:26"}]}},{"expression":{"arguments":[{"id":9071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9050,"src":"16496:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":9069,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:26","typeDescriptions":{}}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":9054,"id":9073,"nodeType":"Return","src":"16482:20:26"}]},"documentation":{"id":9048,"nodeType":"StructuredDocumentation","src":"16015:276:26","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9075,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:26","nodeType":"FunctionDefinition","parameters":{"id":9051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9050,"mutability":"mutable","name":"value","nameLocation":"16322:5:26","nodeType":"VariableDeclaration","scope":9075,"src":"16314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9049,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:26"},"returnParameters":{"id":9054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9075,"src":"16352:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":9052,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:26","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:26"},"scope":9973,"src":"16296:213:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9102,"nodeType":"Block","src":"16854:146:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"16868:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":9086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9085,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":9084,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":9088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:26","memberName":"max","nodeType":"MemberAccess","src":"16876:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9096,"nodeType":"IfStatement","src":"16864:101:26","trueBody":{"id":9095,"nodeType":"Block","src":"16893:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"16948:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9090,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"16914:30:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9094,"nodeType":"RevertStatement","src":"16907:47:26"}]}},{"expression":{"arguments":[{"id":9099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9078,"src":"16987:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":9097,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:26","typeDescriptions":{}}},"id":9100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":9082,"id":9101,"nodeType":"Return","src":"16974:19:26"}]},"documentation":{"id":9076,"nodeType":"StructuredDocumentation","src":"16515:272:26","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9103,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:26","nodeType":"FunctionDefinition","parameters":{"id":9079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9078,"mutability":"mutable","name":"value","nameLocation":"16817:5:26","nodeType":"VariableDeclaration","scope":9103,"src":"16809:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9077,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:26"},"returnParameters":{"id":9082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9103,"src":"16847:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":9080,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:26"},"scope":9973,"src":"16792:208:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9125,"nodeType":"Block","src":"17236:128:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"17250:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":9112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9119,"nodeType":"IfStatement","src":"17246:81:26","trueBody":{"id":9118,"nodeType":"Block","src":"17261:66:26","statements":[{"errorCall":{"arguments":[{"id":9115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"17310:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9114,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8223,"src":"17282:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":9116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9117,"nodeType":"RevertStatement","src":"17275:41:26"}]}},{"expression":{"arguments":[{"id":9122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9106,"src":"17351:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9120,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:26","typeDescriptions":{}}},"id":9123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9110,"id":9124,"nodeType":"Return","src":"17336:21:26"}]},"documentation":{"id":9104,"nodeType":"StructuredDocumentation","src":"17006:160:26","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":9126,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:26","nodeType":"FunctionDefinition","parameters":{"id":9107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9106,"mutability":"mutable","name":"value","nameLocation":"17197:5:26","nodeType":"VariableDeclaration","scope":9126,"src":"17190:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9105,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:26"},"returnParameters":{"id":9110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9126,"src":"17227:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9108,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:26"},"scope":9973,"src":"17171:193:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9151,"nodeType":"Block","src":"17761:150:26","statements":[{"expression":{"id":9139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9134,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"17771:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"17791:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":9135,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:26","typeDescriptions":{}}},"id":9138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":9140,"nodeType":"ExpressionStatement","src":"17771:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9132,"src":"17811:10:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"17825:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9150,"nodeType":"IfStatement","src":"17807:98:26","trueBody":{"id":9149,"nodeType":"Block","src":"17832:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":9145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:26","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":9146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9129,"src":"17888:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9144,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"17853:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9148,"nodeType":"RevertStatement","src":"17846:48:26"}]}}]},"documentation":{"id":9127,"nodeType":"StructuredDocumentation","src":"17370:312:26","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":9152,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:26","nodeType":"FunctionDefinition","parameters":{"id":9130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9129,"mutability":"mutable","name":"value","nameLocation":"17712:5:26","nodeType":"VariableDeclaration","scope":9152,"src":"17705:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9128,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:26"},"returnParameters":{"id":9133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9132,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:26","nodeType":"VariableDeclaration","scope":9152,"src":"17742:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":9131,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:26","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:26"},"scope":9973,"src":"17687:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9177,"nodeType":"Block","src":"18308:150:26","statements":[{"expression":{"id":9165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9160,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9158,"src":"18318:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"18338:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":9161,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:26","typeDescriptions":{}}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":9166,"nodeType":"ExpressionStatement","src":"18318:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9158,"src":"18358:10:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"18372:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9176,"nodeType":"IfStatement","src":"18354:98:26","trueBody":{"id":9175,"nodeType":"Block","src":"18379:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":9171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:26","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":9172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9155,"src":"18435:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9170,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"18400:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9174,"nodeType":"RevertStatement","src":"18393:48:26"}]}}]},"documentation":{"id":9153,"nodeType":"StructuredDocumentation","src":"17917:312:26","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":9178,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:26","nodeType":"FunctionDefinition","parameters":{"id":9156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9155,"mutability":"mutable","name":"value","nameLocation":"18259:5:26","nodeType":"VariableDeclaration","scope":9178,"src":"18252:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9154,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:26"},"returnParameters":{"id":9159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9158,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:26","nodeType":"VariableDeclaration","scope":9178,"src":"18289:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":9157,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:26","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:26"},"scope":9973,"src":"18234:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9203,"nodeType":"Block","src":"18855:150:26","statements":[{"expression":{"id":9191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9186,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9184,"src":"18865:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"18885:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":9187,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:26","typeDescriptions":{}}},"id":9190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":9192,"nodeType":"ExpressionStatement","src":"18865:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9184,"src":"18905:10:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"18919:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9202,"nodeType":"IfStatement","src":"18901:98:26","trueBody":{"id":9201,"nodeType":"Block","src":"18926:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":9197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:26","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":9198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"18982:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9196,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"18947:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9200,"nodeType":"RevertStatement","src":"18940:48:26"}]}}]},"documentation":{"id":9179,"nodeType":"StructuredDocumentation","src":"18464:312:26","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":9204,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:26","nodeType":"FunctionDefinition","parameters":{"id":9182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9181,"mutability":"mutable","name":"value","nameLocation":"18806:5:26","nodeType":"VariableDeclaration","scope":9204,"src":"18799:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9180,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:26"},"returnParameters":{"id":9185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9184,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:26","nodeType":"VariableDeclaration","scope":9204,"src":"18836:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":9183,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:26","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:26"},"scope":9973,"src":"18781:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9229,"nodeType":"Block","src":"19402:150:26","statements":[{"expression":{"id":9217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9212,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9210,"src":"19412:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"19432:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":9213,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:26","typeDescriptions":{}}},"id":9216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":9218,"nodeType":"ExpressionStatement","src":"19412:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9219,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9210,"src":"19452:10:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"19466:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9228,"nodeType":"IfStatement","src":"19448:98:26","trueBody":{"id":9227,"nodeType":"Block","src":"19473:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":9223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:26","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":9224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"19529:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9222,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"19494:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9226,"nodeType":"RevertStatement","src":"19487:48:26"}]}}]},"documentation":{"id":9205,"nodeType":"StructuredDocumentation","src":"19011:312:26","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":9230,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:26","nodeType":"FunctionDefinition","parameters":{"id":9208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9207,"mutability":"mutable","name":"value","nameLocation":"19353:5:26","nodeType":"VariableDeclaration","scope":9230,"src":"19346:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9206,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:26"},"returnParameters":{"id":9211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9210,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:26","nodeType":"VariableDeclaration","scope":9230,"src":"19383:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":9209,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:26","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:26"},"scope":9973,"src":"19328:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9255,"nodeType":"Block","src":"19949:150:26","statements":[{"expression":{"id":9243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9238,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9236,"src":"19959:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"19979:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":9239,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:26","typeDescriptions":{}}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":9244,"nodeType":"ExpressionStatement","src":"19959:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9236,"src":"19999:10:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"20013:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9254,"nodeType":"IfStatement","src":"19995:98:26","trueBody":{"id":9253,"nodeType":"Block","src":"20020:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":9249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:26","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":9250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9233,"src":"20076:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9248,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"20041:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9252,"nodeType":"RevertStatement","src":"20034:48:26"}]}}]},"documentation":{"id":9231,"nodeType":"StructuredDocumentation","src":"19558:312:26","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":9256,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:26","nodeType":"FunctionDefinition","parameters":{"id":9234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9233,"mutability":"mutable","name":"value","nameLocation":"19900:5:26","nodeType":"VariableDeclaration","scope":9256,"src":"19893:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9232,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:26"},"returnParameters":{"id":9237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9236,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:26","nodeType":"VariableDeclaration","scope":9256,"src":"19930:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":9235,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:26","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:26"},"scope":9973,"src":"19875:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9281,"nodeType":"Block","src":"20496:150:26","statements":[{"expression":{"id":9269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9264,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9262,"src":"20506:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"20526:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":9265,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:26","typeDescriptions":{}}},"id":9268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":9270,"nodeType":"ExpressionStatement","src":"20506:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9262,"src":"20546:10:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"20560:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9280,"nodeType":"IfStatement","src":"20542:98:26","trueBody":{"id":9279,"nodeType":"Block","src":"20567:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":9275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:26","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":9276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9259,"src":"20623:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9274,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"20588:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9278,"nodeType":"RevertStatement","src":"20581:48:26"}]}}]},"documentation":{"id":9257,"nodeType":"StructuredDocumentation","src":"20105:312:26","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":9282,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:26","nodeType":"FunctionDefinition","parameters":{"id":9260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9259,"mutability":"mutable","name":"value","nameLocation":"20447:5:26","nodeType":"VariableDeclaration","scope":9282,"src":"20440:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9258,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:26"},"returnParameters":{"id":9263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9262,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:26","nodeType":"VariableDeclaration","scope":9282,"src":"20477:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":9261,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:26","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:26"},"scope":9973,"src":"20422:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9307,"nodeType":"Block","src":"21043:150:26","statements":[{"expression":{"id":9295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9290,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9288,"src":"21053:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"21073:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":9291,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:26","typeDescriptions":{}}},"id":9294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":9296,"nodeType":"ExpressionStatement","src":"21053:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9288,"src":"21093:10:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"21107:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9306,"nodeType":"IfStatement","src":"21089:98:26","trueBody":{"id":9305,"nodeType":"Block","src":"21114:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":9301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:26","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":9302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9285,"src":"21170:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9300,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"21135:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9304,"nodeType":"RevertStatement","src":"21128:48:26"}]}}]},"documentation":{"id":9283,"nodeType":"StructuredDocumentation","src":"20652:312:26","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":9308,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:26","nodeType":"FunctionDefinition","parameters":{"id":9286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9285,"mutability":"mutable","name":"value","nameLocation":"20994:5:26","nodeType":"VariableDeclaration","scope":9308,"src":"20987:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9284,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:26"},"returnParameters":{"id":9289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9288,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:26","nodeType":"VariableDeclaration","scope":9308,"src":"21024:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":9287,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:26","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:26"},"scope":9973,"src":"20969:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9333,"nodeType":"Block","src":"21590:150:26","statements":[{"expression":{"id":9321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9316,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"21600:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"21620:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":9317,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:26","typeDescriptions":{}}},"id":9320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":9322,"nodeType":"ExpressionStatement","src":"21600:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9323,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"21640:10:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"21654:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9332,"nodeType":"IfStatement","src":"21636:98:26","trueBody":{"id":9331,"nodeType":"Block","src":"21661:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":9327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:26","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":9328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"21717:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9326,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"21682:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9330,"nodeType":"RevertStatement","src":"21675:48:26"}]}}]},"documentation":{"id":9309,"nodeType":"StructuredDocumentation","src":"21199:312:26","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":9334,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:26","nodeType":"FunctionDefinition","parameters":{"id":9312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9311,"mutability":"mutable","name":"value","nameLocation":"21541:5:26","nodeType":"VariableDeclaration","scope":9334,"src":"21534:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9310,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:26"},"returnParameters":{"id":9315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9314,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:26","nodeType":"VariableDeclaration","scope":9334,"src":"21571:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":9313,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:26","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:26"},"scope":9973,"src":"21516:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9359,"nodeType":"Block","src":"22137:150:26","statements":[{"expression":{"id":9347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9342,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"22147:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"22167:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":9343,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:26","typeDescriptions":{}}},"id":9346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":9348,"nodeType":"ExpressionStatement","src":"22147:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9349,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9340,"src":"22187:10:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"22201:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9358,"nodeType":"IfStatement","src":"22183:98:26","trueBody":{"id":9357,"nodeType":"Block","src":"22208:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":9353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:26","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":9354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9337,"src":"22264:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9352,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"22229:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9356,"nodeType":"RevertStatement","src":"22222:48:26"}]}}]},"documentation":{"id":9335,"nodeType":"StructuredDocumentation","src":"21746:312:26","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":9360,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:26","nodeType":"FunctionDefinition","parameters":{"id":9338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9337,"mutability":"mutable","name":"value","nameLocation":"22088:5:26","nodeType":"VariableDeclaration","scope":9360,"src":"22081:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9336,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:26"},"returnParameters":{"id":9341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9340,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:26","nodeType":"VariableDeclaration","scope":9360,"src":"22118:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":9339,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:26","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:26"},"scope":9973,"src":"22063:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9385,"nodeType":"Block","src":"22684:150:26","statements":[{"expression":{"id":9373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9368,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9366,"src":"22694:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"22714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":9369,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:26","typeDescriptions":{}}},"id":9372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":9374,"nodeType":"ExpressionStatement","src":"22694:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9375,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9366,"src":"22734:10:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"22748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9384,"nodeType":"IfStatement","src":"22730:98:26","trueBody":{"id":9383,"nodeType":"Block","src":"22755:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":9379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:26","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":9380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9363,"src":"22811:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9378,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"22776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9382,"nodeType":"RevertStatement","src":"22769:48:26"}]}}]},"documentation":{"id":9361,"nodeType":"StructuredDocumentation","src":"22293:312:26","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":9386,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:26","nodeType":"FunctionDefinition","parameters":{"id":9364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9363,"mutability":"mutable","name":"value","nameLocation":"22635:5:26","nodeType":"VariableDeclaration","scope":9386,"src":"22628:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9362,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:26"},"returnParameters":{"id":9367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9366,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:26","nodeType":"VariableDeclaration","scope":9386,"src":"22665:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":9365,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:26","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:26"},"scope":9973,"src":"22610:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9411,"nodeType":"Block","src":"23231:150:26","statements":[{"expression":{"id":9399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9392,"src":"23241:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"23261:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":9395,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:26","typeDescriptions":{}}},"id":9398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":9400,"nodeType":"ExpressionStatement","src":"23241:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9401,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9392,"src":"23281:10:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"23295:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9410,"nodeType":"IfStatement","src":"23277:98:26","trueBody":{"id":9409,"nodeType":"Block","src":"23302:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":9405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:26","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":9406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"23358:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9404,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"23323:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9408,"nodeType":"RevertStatement","src":"23316:48:26"}]}}]},"documentation":{"id":9387,"nodeType":"StructuredDocumentation","src":"22840:312:26","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":9412,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:26","nodeType":"FunctionDefinition","parameters":{"id":9390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9389,"mutability":"mutable","name":"value","nameLocation":"23182:5:26","nodeType":"VariableDeclaration","scope":9412,"src":"23175:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9388,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:26"},"returnParameters":{"id":9393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9392,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:26","nodeType":"VariableDeclaration","scope":9412,"src":"23212:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":9391,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:26","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:26"},"scope":9973,"src":"23157:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9437,"nodeType":"Block","src":"23778:150:26","statements":[{"expression":{"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9420,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"23788:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"23808:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":9421,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:26","typeDescriptions":{}}},"id":9424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":9426,"nodeType":"ExpressionStatement","src":"23788:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9427,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9418,"src":"23828:10:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"23842:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9436,"nodeType":"IfStatement","src":"23824:98:26","trueBody":{"id":9435,"nodeType":"Block","src":"23849:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":9431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:26","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":9432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9415,"src":"23905:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9430,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"23870:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9434,"nodeType":"RevertStatement","src":"23863:48:26"}]}}]},"documentation":{"id":9413,"nodeType":"StructuredDocumentation","src":"23387:312:26","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":9438,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:26","nodeType":"FunctionDefinition","parameters":{"id":9416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9415,"mutability":"mutable","name":"value","nameLocation":"23729:5:26","nodeType":"VariableDeclaration","scope":9438,"src":"23722:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9414,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:26"},"returnParameters":{"id":9419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9418,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:26","nodeType":"VariableDeclaration","scope":9438,"src":"23759:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":9417,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:26","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:26"},"scope":9973,"src":"23704:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9463,"nodeType":"Block","src":"24325:150:26","statements":[{"expression":{"id":9451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9446,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9444,"src":"24335:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"24355:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":9447,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:26","typeDescriptions":{}}},"id":9450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":9452,"nodeType":"ExpressionStatement","src":"24335:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9453,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9444,"src":"24375:10:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"24389:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9462,"nodeType":"IfStatement","src":"24371:98:26","trueBody":{"id":9461,"nodeType":"Block","src":"24396:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":9457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:26","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":9458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9441,"src":"24452:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9456,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"24417:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9460,"nodeType":"RevertStatement","src":"24410:48:26"}]}}]},"documentation":{"id":9439,"nodeType":"StructuredDocumentation","src":"23934:312:26","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":9464,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:26","nodeType":"FunctionDefinition","parameters":{"id":9442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"mutability":"mutable","name":"value","nameLocation":"24276:5:26","nodeType":"VariableDeclaration","scope":9464,"src":"24269:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9440,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:26"},"returnParameters":{"id":9445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9444,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:26","nodeType":"VariableDeclaration","scope":9464,"src":"24306:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":9443,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:26","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:26"},"scope":9973,"src":"24251:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9489,"nodeType":"Block","src":"24872:150:26","statements":[{"expression":{"id":9477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9472,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"24882:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"24902:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":9473,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:26","typeDescriptions":{}}},"id":9476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":9478,"nodeType":"ExpressionStatement","src":"24882:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9479,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9470,"src":"24922:10:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"24936:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9488,"nodeType":"IfStatement","src":"24918:98:26","trueBody":{"id":9487,"nodeType":"Block","src":"24943:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":9483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:26","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":9484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"24999:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9482,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"24964:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9486,"nodeType":"RevertStatement","src":"24957:48:26"}]}}]},"documentation":{"id":9465,"nodeType":"StructuredDocumentation","src":"24481:312:26","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":9490,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:26","nodeType":"FunctionDefinition","parameters":{"id":9468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9467,"mutability":"mutable","name":"value","nameLocation":"24823:5:26","nodeType":"VariableDeclaration","scope":9490,"src":"24816:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9466,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:26"},"returnParameters":{"id":9471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9470,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:26","nodeType":"VariableDeclaration","scope":9490,"src":"24853:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":9469,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:26","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:26"},"scope":9973,"src":"24798:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9515,"nodeType":"Block","src":"25419:150:26","statements":[{"expression":{"id":9503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9498,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9496,"src":"25429:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9493,"src":"25449:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":9499,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:26","typeDescriptions":{}}},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":9504,"nodeType":"ExpressionStatement","src":"25429:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9505,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9496,"src":"25469:10:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9493,"src":"25483:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9514,"nodeType":"IfStatement","src":"25465:98:26","trueBody":{"id":9513,"nodeType":"Block","src":"25490:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":9509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:26","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":9510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9493,"src":"25546:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9508,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"25511:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9512,"nodeType":"RevertStatement","src":"25504:48:26"}]}}]},"documentation":{"id":9491,"nodeType":"StructuredDocumentation","src":"25028:312:26","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":9516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:26","nodeType":"FunctionDefinition","parameters":{"id":9494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9493,"mutability":"mutable","name":"value","nameLocation":"25370:5:26","nodeType":"VariableDeclaration","scope":9516,"src":"25363:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9492,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:26"},"returnParameters":{"id":9497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9496,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:26","nodeType":"VariableDeclaration","scope":9516,"src":"25400:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":9495,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:26","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:26"},"scope":9973,"src":"25345:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9541,"nodeType":"Block","src":"25966:150:26","statements":[{"expression":{"id":9529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"25976:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"25996:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9525,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:26","typeDescriptions":{}}},"id":9528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9530,"nodeType":"ExpressionStatement","src":"25976:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9531,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"26016:10:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"26030:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9540,"nodeType":"IfStatement","src":"26012:98:26","trueBody":{"id":9539,"nodeType":"Block","src":"26037:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":9535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:26","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":9536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9519,"src":"26093:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9534,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"26058:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9538,"nodeType":"RevertStatement","src":"26051:48:26"}]}}]},"documentation":{"id":9517,"nodeType":"StructuredDocumentation","src":"25575:312:26","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":9542,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:26","nodeType":"FunctionDefinition","parameters":{"id":9520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9519,"mutability":"mutable","name":"value","nameLocation":"25917:5:26","nodeType":"VariableDeclaration","scope":9542,"src":"25910:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9518,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:26"},"returnParameters":{"id":9523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9522,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:26","nodeType":"VariableDeclaration","scope":9542,"src":"25947:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9521,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:26","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:26"},"scope":9973,"src":"25892:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9567,"nodeType":"Block","src":"26513:150:26","statements":[{"expression":{"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"26523:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"26543:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9551,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:26","typeDescriptions":{}}},"id":9554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9556,"nodeType":"ExpressionStatement","src":"26523:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9557,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9548,"src":"26563:10:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"26577:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9566,"nodeType":"IfStatement","src":"26559:98:26","trueBody":{"id":9565,"nodeType":"Block","src":"26584:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:26","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"26640:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9560,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"26605:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9564,"nodeType":"RevertStatement","src":"26598:48:26"}]}}]},"documentation":{"id":9543,"nodeType":"StructuredDocumentation","src":"26122:312:26","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9568,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:26","nodeType":"FunctionDefinition","parameters":{"id":9546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9545,"mutability":"mutable","name":"value","nameLocation":"26464:5:26","nodeType":"VariableDeclaration","scope":9568,"src":"26457:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9544,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:26"},"returnParameters":{"id":9549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9548,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:26","nodeType":"VariableDeclaration","scope":9568,"src":"26494:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":9547,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:26","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:26"},"scope":9973,"src":"26439:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9593,"nodeType":"Block","src":"27060:150:26","statements":[{"expression":{"id":9581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"27070:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"27090:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9577,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:26","typeDescriptions":{}}},"id":9580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9582,"nodeType":"ExpressionStatement","src":"27070:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9583,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"27110:10:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"27124:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9592,"nodeType":"IfStatement","src":"27106:98:26","trueBody":{"id":9591,"nodeType":"Block","src":"27131:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:26","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"27187:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9586,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"27152:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9590,"nodeType":"RevertStatement","src":"27145:48:26"}]}}]},"documentation":{"id":9569,"nodeType":"StructuredDocumentation","src":"26669:312:26","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9594,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:26","nodeType":"FunctionDefinition","parameters":{"id":9572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9571,"mutability":"mutable","name":"value","nameLocation":"27011:5:26","nodeType":"VariableDeclaration","scope":9594,"src":"27004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9570,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:26"},"returnParameters":{"id":9575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9574,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:26","nodeType":"VariableDeclaration","scope":9594,"src":"27041:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9573,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:26","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:26"},"scope":9973,"src":"26986:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9619,"nodeType":"Block","src":"27607:150:26","statements":[{"expression":{"id":9607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"27617:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9597,"src":"27637:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9603,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:26","typeDescriptions":{}}},"id":9606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9608,"nodeType":"ExpressionStatement","src":"27617:26:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9609,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9600,"src":"27657:10:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9597,"src":"27671:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9618,"nodeType":"IfStatement","src":"27653:98:26","trueBody":{"id":9617,"nodeType":"Block","src":"27678:73:26","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:26","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9597,"src":"27734:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9612,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"27699:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9616,"nodeType":"RevertStatement","src":"27692:48:26"}]}}]},"documentation":{"id":9595,"nodeType":"StructuredDocumentation","src":"27216:312:26","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9620,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:26","nodeType":"FunctionDefinition","parameters":{"id":9598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9597,"mutability":"mutable","name":"value","nameLocation":"27558:5:26","nodeType":"VariableDeclaration","scope":9620,"src":"27551:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9596,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:26"},"returnParameters":{"id":9601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9600,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:26","nodeType":"VariableDeclaration","scope":9620,"src":"27588:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9599,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:26","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:26"},"scope":9973,"src":"27533:224:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9645,"nodeType":"Block","src":"28147:148:26","statements":[{"expression":{"id":9633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"28157:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9623,"src":"28176:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9629,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:26","typeDescriptions":{}}},"id":9632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9634,"nodeType":"ExpressionStatement","src":"28157:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9635,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9626,"src":"28196:10:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9623,"src":"28210:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9644,"nodeType":"IfStatement","src":"28192:97:26","trueBody":{"id":9643,"nodeType":"Block","src":"28217:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9623,"src":"28272:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9638,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"28238:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9642,"nodeType":"RevertStatement","src":"28231:47:26"}]}}]},"documentation":{"id":9621,"nodeType":"StructuredDocumentation","src":"27763:307:26","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9646,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:26","nodeType":"FunctionDefinition","parameters":{"id":9624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9623,"mutability":"mutable","name":"value","nameLocation":"28099:5:26","nodeType":"VariableDeclaration","scope":9646,"src":"28092:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9622,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:26"},"returnParameters":{"id":9627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9626,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:26","nodeType":"VariableDeclaration","scope":9646,"src":"28129:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9625,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:26","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:26"},"scope":9973,"src":"28075:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9671,"nodeType":"Block","src":"28685:148:26","statements":[{"expression":{"id":9659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"28695:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"28714:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9655,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:26","typeDescriptions":{}}},"id":9658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9660,"nodeType":"ExpressionStatement","src":"28695:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9661,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9652,"src":"28734:10:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"28748:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9670,"nodeType":"IfStatement","src":"28730:97:26","trueBody":{"id":9669,"nodeType":"Block","src":"28755:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:26","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"28810:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9664,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"28776:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9668,"nodeType":"RevertStatement","src":"28769:47:26"}]}}]},"documentation":{"id":9647,"nodeType":"StructuredDocumentation","src":"28301:307:26","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9672,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:26","nodeType":"FunctionDefinition","parameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9649,"mutability":"mutable","name":"value","nameLocation":"28637:5:26","nodeType":"VariableDeclaration","scope":9672,"src":"28630:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9648,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:26"},"returnParameters":{"id":9653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9652,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:26","nodeType":"VariableDeclaration","scope":9672,"src":"28667:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9651,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:26","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:26"},"scope":9973,"src":"28613:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9697,"nodeType":"Block","src":"29223:148:26","statements":[{"expression":{"id":9685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"29233:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"29252:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9681,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:26","typeDescriptions":{}}},"id":9684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9686,"nodeType":"ExpressionStatement","src":"29233:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9687,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9678,"src":"29272:10:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"29286:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9696,"nodeType":"IfStatement","src":"29268:97:26","trueBody":{"id":9695,"nodeType":"Block","src":"29293:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:26","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"29348:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9690,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"29314:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9694,"nodeType":"RevertStatement","src":"29307:47:26"}]}}]},"documentation":{"id":9673,"nodeType":"StructuredDocumentation","src":"28839:307:26","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9698,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:26","nodeType":"FunctionDefinition","parameters":{"id":9676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9675,"mutability":"mutable","name":"value","nameLocation":"29175:5:26","nodeType":"VariableDeclaration","scope":9698,"src":"29168:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9674,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:26"},"returnParameters":{"id":9679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9678,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:26","nodeType":"VariableDeclaration","scope":9698,"src":"29205:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9677,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:26","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:26"},"scope":9973,"src":"29151:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9723,"nodeType":"Block","src":"29761:148:26","statements":[{"expression":{"id":9711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9704,"src":"29771:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"29790:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9707,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:26","typeDescriptions":{}}},"id":9710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9712,"nodeType":"ExpressionStatement","src":"29771:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9713,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9704,"src":"29810:10:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"29824:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9722,"nodeType":"IfStatement","src":"29806:97:26","trueBody":{"id":9721,"nodeType":"Block","src":"29831:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:26","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9701,"src":"29886:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9716,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"29852:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9720,"nodeType":"RevertStatement","src":"29845:47:26"}]}}]},"documentation":{"id":9699,"nodeType":"StructuredDocumentation","src":"29377:307:26","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9724,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:26","nodeType":"FunctionDefinition","parameters":{"id":9702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9701,"mutability":"mutable","name":"value","nameLocation":"29713:5:26","nodeType":"VariableDeclaration","scope":9724,"src":"29706:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9700,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:26"},"returnParameters":{"id":9705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9704,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:26","nodeType":"VariableDeclaration","scope":9724,"src":"29743:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9703,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:26","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:26"},"scope":9973,"src":"29689:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9749,"nodeType":"Block","src":"30299:148:26","statements":[{"expression":{"id":9737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"30309:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"30328:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9733,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:26","typeDescriptions":{}}},"id":9736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9738,"nodeType":"ExpressionStatement","src":"30309:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9739,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9730,"src":"30348:10:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"30362:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9748,"nodeType":"IfStatement","src":"30344:97:26","trueBody":{"id":9747,"nodeType":"Block","src":"30369:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9727,"src":"30424:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9742,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"30390:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9746,"nodeType":"RevertStatement","src":"30383:47:26"}]}}]},"documentation":{"id":9725,"nodeType":"StructuredDocumentation","src":"29915:307:26","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9750,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:26","nodeType":"FunctionDefinition","parameters":{"id":9728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9727,"mutability":"mutable","name":"value","nameLocation":"30251:5:26","nodeType":"VariableDeclaration","scope":9750,"src":"30244:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9726,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:26"},"returnParameters":{"id":9731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9730,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:26","nodeType":"VariableDeclaration","scope":9750,"src":"30281:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9729,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:26","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:26"},"scope":9973,"src":"30227:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9775,"nodeType":"Block","src":"30837:148:26","statements":[{"expression":{"id":9763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9756,"src":"30847:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"30866:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9759,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:26","typeDescriptions":{}}},"id":9762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9764,"nodeType":"ExpressionStatement","src":"30847:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9765,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9756,"src":"30886:10:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"30900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9774,"nodeType":"IfStatement","src":"30882:97:26","trueBody":{"id":9773,"nodeType":"Block","src":"30907:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:26","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9753,"src":"30962:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9768,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"30928:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9772,"nodeType":"RevertStatement","src":"30921:47:26"}]}}]},"documentation":{"id":9751,"nodeType":"StructuredDocumentation","src":"30453:307:26","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9776,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:26","nodeType":"FunctionDefinition","parameters":{"id":9754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9753,"mutability":"mutable","name":"value","nameLocation":"30789:5:26","nodeType":"VariableDeclaration","scope":9776,"src":"30782:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9752,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:26"},"returnParameters":{"id":9757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9756,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:26","nodeType":"VariableDeclaration","scope":9776,"src":"30819:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9755,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:26","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:26"},"scope":9973,"src":"30765:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9801,"nodeType":"Block","src":"31375:148:26","statements":[{"expression":{"id":9789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9784,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"31385:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"31404:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9785,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:26","typeDescriptions":{}}},"id":9788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9790,"nodeType":"ExpressionStatement","src":"31385:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9791,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9782,"src":"31424:10:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"31438:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9800,"nodeType":"IfStatement","src":"31420:97:26","trueBody":{"id":9799,"nodeType":"Block","src":"31445:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9779,"src":"31500:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9794,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"31466:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9798,"nodeType":"RevertStatement","src":"31459:47:26"}]}}]},"documentation":{"id":9777,"nodeType":"StructuredDocumentation","src":"30991:307:26","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9802,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:26","nodeType":"FunctionDefinition","parameters":{"id":9780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9779,"mutability":"mutable","name":"value","nameLocation":"31327:5:26","nodeType":"VariableDeclaration","scope":9802,"src":"31320:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9778,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:26"},"returnParameters":{"id":9783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9782,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:26","nodeType":"VariableDeclaration","scope":9802,"src":"31357:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9781,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:26","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:26"},"scope":9973,"src":"31303:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9827,"nodeType":"Block","src":"31913:148:26","statements":[{"expression":{"id":9815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9808,"src":"31923:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"31942:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9811,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:26","typeDescriptions":{}}},"id":9814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9816,"nodeType":"ExpressionStatement","src":"31923:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9817,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9808,"src":"31962:10:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"31976:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9826,"nodeType":"IfStatement","src":"31958:97:26","trueBody":{"id":9825,"nodeType":"Block","src":"31983:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9805,"src":"32038:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9820,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"32004:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9824,"nodeType":"RevertStatement","src":"31997:47:26"}]}}]},"documentation":{"id":9803,"nodeType":"StructuredDocumentation","src":"31529:307:26","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9828,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:26","nodeType":"FunctionDefinition","parameters":{"id":9806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9805,"mutability":"mutable","name":"value","nameLocation":"31865:5:26","nodeType":"VariableDeclaration","scope":9828,"src":"31858:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9804,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:26"},"returnParameters":{"id":9809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9808,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:26","nodeType":"VariableDeclaration","scope":9828,"src":"31895:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9807,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:26","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:26"},"scope":9973,"src":"31841:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9853,"nodeType":"Block","src":"32451:148:26","statements":[{"expression":{"id":9841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9834,"src":"32461:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"32480:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9837,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:26","typeDescriptions":{}}},"id":9840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9842,"nodeType":"ExpressionStatement","src":"32461:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9843,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9834,"src":"32500:10:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"32514:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9852,"nodeType":"IfStatement","src":"32496:97:26","trueBody":{"id":9851,"nodeType":"Block","src":"32521:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9848,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"32576:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9846,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"32542:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9850,"nodeType":"RevertStatement","src":"32535:47:26"}]}}]},"documentation":{"id":9829,"nodeType":"StructuredDocumentation","src":"32067:307:26","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9854,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:26","nodeType":"FunctionDefinition","parameters":{"id":9832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9831,"mutability":"mutable","name":"value","nameLocation":"32403:5:26","nodeType":"VariableDeclaration","scope":9854,"src":"32396:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9830,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:26"},"returnParameters":{"id":9835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9834,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:26","nodeType":"VariableDeclaration","scope":9854,"src":"32433:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9833,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:26","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:26"},"scope":9973,"src":"32379:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9879,"nodeType":"Block","src":"32989:148:26","statements":[{"expression":{"id":9867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"32999:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"33018:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9863,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:26","typeDescriptions":{}}},"id":9866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9868,"nodeType":"ExpressionStatement","src":"32999:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9869,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9860,"src":"33038:10:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"33052:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9878,"nodeType":"IfStatement","src":"33034:97:26","trueBody":{"id":9877,"nodeType":"Block","src":"33059:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:26","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9857,"src":"33114:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9872,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"33080:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9876,"nodeType":"RevertStatement","src":"33073:47:26"}]}}]},"documentation":{"id":9855,"nodeType":"StructuredDocumentation","src":"32605:307:26","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9880,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:26","nodeType":"FunctionDefinition","parameters":{"id":9858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9857,"mutability":"mutable","name":"value","nameLocation":"32941:5:26","nodeType":"VariableDeclaration","scope":9880,"src":"32934:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9856,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:26"},"returnParameters":{"id":9861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9860,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:26","nodeType":"VariableDeclaration","scope":9880,"src":"32971:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9859,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:26","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:26"},"scope":9973,"src":"32917:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9905,"nodeType":"Block","src":"33527:148:26","statements":[{"expression":{"id":9893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"33537:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9883,"src":"33556:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9889,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:26","typeDescriptions":{}}},"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9894,"nodeType":"ExpressionStatement","src":"33537:25:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9895,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9886,"src":"33576:10:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9883,"src":"33590:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9904,"nodeType":"IfStatement","src":"33572:97:26","trueBody":{"id":9903,"nodeType":"Block","src":"33597:72:26","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9883,"src":"33652:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9898,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"33618:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9902,"nodeType":"RevertStatement","src":"33611:47:26"}]}}]},"documentation":{"id":9881,"nodeType":"StructuredDocumentation","src":"33143:307:26","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9906,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:26","nodeType":"FunctionDefinition","parameters":{"id":9884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9883,"mutability":"mutable","name":"value","nameLocation":"33479:5:26","nodeType":"VariableDeclaration","scope":9906,"src":"33472:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9882,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:26"},"returnParameters":{"id":9887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9886,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:26","nodeType":"VariableDeclaration","scope":9906,"src":"33509:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9885,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:26","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:26"},"scope":9973,"src":"33455:220:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9931,"nodeType":"Block","src":"34058:146:26","statements":[{"expression":{"id":9919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"34068:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9909,"src":"34086:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9915,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:26","typeDescriptions":{}}},"id":9918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9920,"nodeType":"ExpressionStatement","src":"34068:24:26"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9921,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"34106:10:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9909,"src":"34120:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9930,"nodeType":"IfStatement","src":"34102:96:26","trueBody":{"id":9929,"nodeType":"Block","src":"34127:71:26","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9909,"src":"34181:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9924,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"34148:29:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":9927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9928,"nodeType":"RevertStatement","src":"34141:46:26"}]}}]},"documentation":{"id":9907,"nodeType":"StructuredDocumentation","src":"33681:302:26","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9932,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:26","nodeType":"FunctionDefinition","parameters":{"id":9910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9909,"mutability":"mutable","name":"value","nameLocation":"34011:5:26","nodeType":"VariableDeclaration","scope":9932,"src":"34004:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9908,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:26"},"returnParameters":{"id":9913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9912,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:26","nodeType":"VariableDeclaration","scope":9932,"src":"34041:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9911,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:26","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:26"},"scope":9973,"src":"33988:216:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9961,"nodeType":"Block","src":"34444:250:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"34557:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9944,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9943,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:26","memberName":"max","nodeType":"MemberAccess","src":"34573:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9941,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:26","typeDescriptions":{}}},"id":9948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9955,"nodeType":"IfStatement","src":"34553:105:26","trueBody":{"id":9954,"nodeType":"Block","src":"34592:66:26","statements":[{"errorCall":{"arguments":[{"id":9951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"34641:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9950,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"34613:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":9952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9953,"nodeType":"RevertStatement","src":"34606:41:26"}]}},{"expression":{"arguments":[{"id":9958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9935,"src":"34681:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9956,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:26","typeDescriptions":{}}},"id":9959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9939,"id":9960,"nodeType":"Return","src":"34667:20:26"}]},"documentation":{"id":9933,"nodeType":"StructuredDocumentation","src":"34210:165:26","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9962,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:26","nodeType":"FunctionDefinition","parameters":{"id":9936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9935,"mutability":"mutable","name":"value","nameLocation":"34406:5:26","nodeType":"VariableDeclaration","scope":9962,"src":"34398:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9934,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:26"},"returnParameters":{"id":9939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9962,"src":"34436:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9937,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:26"},"scope":9973,"src":"34380:314:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9971,"nodeType":"Block","src":"34853:87:26","statements":[{"AST":{"nativeSrc":"34888:46:26","nodeType":"YulBlock","src":"34888:46:26","statements":[{"nativeSrc":"34902:22:26","nodeType":"YulAssignment","src":"34902:22:26","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:26","nodeType":"YulIdentifier","src":"34921:1:26"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:26","nodeType":"YulIdentifier","src":"34914:6:26"},"nativeSrc":"34914:9:26","nodeType":"YulFunctionCall","src":"34914:9:26"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:26","nodeType":"YulIdentifier","src":"34907:6:26"},"nativeSrc":"34907:17:26","nodeType":"YulFunctionCall","src":"34907:17:26"},"variableNames":[{"name":"u","nativeSrc":"34902:1:26","nodeType":"YulIdentifier","src":"34902:1:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9965,"isOffset":false,"isSlot":false,"src":"34921:1:26","valueSize":1},{"declaration":9968,"isOffset":false,"isSlot":false,"src":"34902:1:26","valueSize":1}],"flags":["memory-safe"],"id":9970,"nodeType":"InlineAssembly","src":"34863:71:26"}]},"documentation":{"id":9963,"nodeType":"StructuredDocumentation","src":"34700:90:26","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9972,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:26","nodeType":"FunctionDefinition","parameters":{"id":9966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9965,"mutability":"mutable","name":"b","nameLocation":"34816:1:26","nodeType":"VariableDeclaration","scope":9972,"src":"34811:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9964,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:26"},"returnParameters":{"id":9969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9968,"mutability":"mutable","name":"u","nameLocation":"34850:1:26","nodeType":"VariableDeclaration","scope":9972,"src":"34842:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9967,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:26"},"scope":9973,"src":"34795:145:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9974,"src":"769:34173:26","usedErrors":[8218,8223,8230,8235],"usedEvents":[]}],"src":"192:34751:26"},"id":26},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9973],"SignedMath":[10117]},"id":10118,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9975,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10118,"sourceUnit":9974,"src":"135:40:27","symbolAliases":[{"foreign":{"id":9976,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"143:8:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9978,"nodeType":"StructuredDocumentation","src":"177:80:27","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":10117,"linearizedBaseContracts":[10117],"name":"SignedMath","nameLocation":"266:10:27","nodeType":"ContractDefinition","nodes":[{"body":{"id":10007,"nodeType":"Block","src":"746:215:27","statements":[{"id":10006,"nodeType":"UncheckedBlock","src":"756:199:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9985,"src":"894:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9983,"src":"900:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9992,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9985,"src":"904:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9999,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9981,"src":"932:9:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9997,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"916:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9973_$","typeString":"type(library SafeCast)"}},"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:27","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9972,"src":"916:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":10000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9995,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:27","typeDescriptions":{}}},"id":10001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10003,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9989,"id":10005,"nodeType":"Return","src":"887:57:27"}]}]},"documentation":{"id":9979,"nodeType":"StructuredDocumentation","src":"283:374:27","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":10008,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:27","nodeType":"FunctionDefinition","parameters":{"id":9986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9981,"mutability":"mutable","name":"condition","nameLocation":"684:9:27","nodeType":"VariableDeclaration","scope":10008,"src":"679:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9980,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9983,"mutability":"mutable","name":"a","nameLocation":"702:1:27","nodeType":"VariableDeclaration","scope":10008,"src":"695:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9982,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9985,"mutability":"mutable","name":"b","nameLocation":"712:1:27","nodeType":"VariableDeclaration","scope":10008,"src":"705:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9984,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:27"},"returnParameters":{"id":9989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10008,"src":"738:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9987,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:27"},"scope":10117,"src":"662:299:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10026,"nodeType":"Block","src":"1102:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10011,"src":"1127:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10013,"src":"1131:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10022,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10011,"src":"1134:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":10023,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10013,"src":"1137:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10018,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"1119:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10017,"id":10025,"nodeType":"Return","src":"1112:27:27"}]},"documentation":{"id":10009,"nodeType":"StructuredDocumentation","src":"967:66:27","text":" @dev Returns the largest of two signed numbers."},"id":10027,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:27","nodeType":"FunctionDefinition","parameters":{"id":10014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10011,"mutability":"mutable","name":"a","nameLocation":"1058:1:27","nodeType":"VariableDeclaration","scope":10027,"src":"1051:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10010,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10013,"mutability":"mutable","name":"b","nameLocation":"1068:1:27","nodeType":"VariableDeclaration","scope":10027,"src":"1061:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10012,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:27"},"returnParameters":{"id":10017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10027,"src":"1094:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10015,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:27"},"scope":10117,"src":"1038:108:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10045,"nodeType":"Block","src":"1288:44:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"1313:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10032,"src":"1317:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":10041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10030,"src":"1320:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":10042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10032,"src":"1323:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10037,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10008,"src":"1305:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":10043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10036,"id":10044,"nodeType":"Return","src":"1298:27:27"}]},"documentation":{"id":10028,"nodeType":"StructuredDocumentation","src":"1152:67:27","text":" @dev Returns the smallest of two signed numbers."},"id":10046,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:27","nodeType":"FunctionDefinition","parameters":{"id":10033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10030,"mutability":"mutable","name":"a","nameLocation":"1244:1:27","nodeType":"VariableDeclaration","scope":10046,"src":"1237:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10029,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10032,"mutability":"mutable","name":"b","nameLocation":"1254:1:27","nodeType":"VariableDeclaration","scope":10046,"src":"1247:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10031,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:27"},"returnParameters":{"id":10036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10046,"src":"1280:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10034,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:27"},"scope":10117,"src":"1224:108:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10089,"nodeType":"Block","src":"1537:162:27","statements":[{"assignments":[10057],"declarations":[{"constant":false,"id":10057,"mutability":"mutable","name":"x","nameLocation":"1606:1:27","nodeType":"VariableDeclaration","scope":10089,"src":"1599:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10056,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10070,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10058,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10049,"src":"1611:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10059,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"1615:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10061,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10049,"src":"1622:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10063,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"1626:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":10066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:27"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10071,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"1651:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10076,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"1671:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:27","typeDescriptions":{}}},"id":10077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":10078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:27","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":10072,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:27","typeDescriptions":{}}},"id":10080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10049,"src":"1685:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10082,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10051,"src":"1689:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":10055,"id":10088,"nodeType":"Return","src":"1644:48:27"}]},"documentation":{"id":10047,"nodeType":"StructuredDocumentation","src":"1338:126:27","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":10090,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:27","nodeType":"FunctionDefinition","parameters":{"id":10052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10049,"mutability":"mutable","name":"a","nameLocation":"1493:1:27","nodeType":"VariableDeclaration","scope":10090,"src":"1486:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10048,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":10051,"mutability":"mutable","name":"b","nameLocation":"1503:1:27","nodeType":"VariableDeclaration","scope":10090,"src":"1496:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10050,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:27"},"returnParameters":{"id":10055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10090,"src":"1529:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10053,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:27"},"scope":10117,"src":"1469:230:27","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":10115,"nodeType":"Block","src":"1843:767:27","statements":[{"id":10114,"nodeType":"UncheckedBlock","src":"1853:751:27","statements":[{"assignments":[10099],"declarations":[{"constant":false,"id":10099,"mutability":"mutable","name":"mask","nameLocation":"2424:4:27","nodeType":"VariableDeclaration","scope":10114,"src":"2417:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10098,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":10103,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10100,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10093,"src":"2431:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":10101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:27","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":10108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10106,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10093,"src":"2576:1:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10107,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10099,"src":"2580:4:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":10109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":10110,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10099,"src":"2588:4:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":10105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:27","typeDescriptions":{}}},"id":10112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10097,"id":10113,"nodeType":"Return","src":"2560:33:27"}]}]},"documentation":{"id":10091,"nodeType":"StructuredDocumentation","src":"1705:78:27","text":" @dev Returns the absolute unsigned value of a signed value."},"id":10116,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:27","nodeType":"FunctionDefinition","parameters":{"id":10094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10093,"mutability":"mutable","name":"n","nameLocation":"1808:1:27","nodeType":"VariableDeclaration","scope":10116,"src":"1801:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":10092,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:27","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:27"},"returnParameters":{"id":10097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10116,"src":"1834:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:27"},"scope":10117,"src":"1788:822:27","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10118,"src":"258:2354:27","usedErrors":[],"usedEvents":[]}],"src":"109:2504:27"},"id":27},"contracts/CollectionDrop.sol":{"ast":{"absolutePath":"contracts/CollectionDrop.sol","exportedSymbols":{"CollectionDrop":[10185],"ContextUpgradeable":[2585],"ERC165Upgradeable":[2625],"ERC721Upgradeable":[2539],"ERC721Utils":[3736],"IERC165":[6587],"IERC721":[3613],"IERC721Errors":[2715],"IERC721Metadata":[3659],"Initializable":[462],"OwnableUpgradeable":[194],"Strings":[6575]},"id":10186,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10119,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol","id":10120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10186,"sourceUnit":2540,"src":"58:80:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":10121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10186,"sourceUnit":195,"src":"139:75:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":10122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10186,"sourceUnit":463,"src":"215:75:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10123,"name":"Initializable","nameLocations":["319:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"319:13:28"},"id":10124,"nodeType":"InheritanceSpecifier","src":"319:13:28"},{"baseName":{"id":10125,"name":"ERC721Upgradeable","nameLocations":["334:17:28"],"nodeType":"IdentifierPath","referencedDeclaration":2539,"src":"334:17:28"},"id":10126,"nodeType":"InheritanceSpecifier","src":"334:17:28"},{"baseName":{"id":10127,"name":"OwnableUpgradeable","nameLocations":["353:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"353:18:28"},"id":10128,"nodeType":"InheritanceSpecifier","src":"353:18:28"}],"canonicalName":"CollectionDrop","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10185,"linearizedBaseContracts":[10185,194,2539,2715,3659,3613,2625,6587,2585,462],"name":"CollectionDrop","nameLocation":"301:14:28","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10130,"mutability":"mutable","name":"_nextTokenId","nameLocation":"394:12:28","nodeType":"VariableDeclaration","scope":10185,"src":"378:28:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10129,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":10137,"nodeType":"Block","src":"480:39:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10134,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"490:20:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"490:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10136,"nodeType":"ExpressionStatement","src":"490:22:28"}]},"documentation":{"id":10131,"nodeType":"StructuredDocumentation","src":"413:48:28","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":10138,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10132,"nodeType":"ParameterList","parameters":[],"src":"477:2:28"},"returnParameters":{"id":10133,"nodeType":"ParameterList","parameters":[],"src":"480:0:28"},"scope":10185,"src":"466:53:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10158,"nodeType":"Block","src":"658:82:28","statements":[{"expression":{"arguments":[{"id":10150,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10140,"src":"682:4:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10151,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10142,"src":"688:6:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10149,"name":"__ERC721_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"668:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":10152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"668:27:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10153,"nodeType":"ExpressionStatement","src":"668:27:28"},{"expression":{"arguments":[{"id":10155,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"720:12:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10154,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"705:14:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"705:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10157,"nodeType":"ExpressionStatement","src":"705:28:28"}]},"functionSelector":"077f224a","id":10159,"implemented":true,"kind":"function","modifiers":[{"id":10147,"kind":"modifierInvocation","modifierName":{"id":10146,"name":"initializer","nameLocations":["646:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"646:11:28"},"nodeType":"ModifierInvocation","src":"646:11:28"}],"name":"initialize","nameLocation":"534:10:28","nodeType":"FunctionDefinition","parameters":{"id":10145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10140,"mutability":"mutable","name":"name","nameLocation":"568:4:28","nodeType":"VariableDeclaration","scope":10159,"src":"554:18:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10139,"name":"string","nodeType":"ElementaryTypeName","src":"554:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10142,"mutability":"mutable","name":"symbol","nameLocation":"596:6:28","nodeType":"VariableDeclaration","scope":10159,"src":"582:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10141,"name":"string","nodeType":"ElementaryTypeName","src":"582:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10144,"mutability":"mutable","name":"initialOwner","nameLocation":"620:12:28","nodeType":"VariableDeclaration","scope":10159,"src":"612:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10143,"name":"address","nodeType":"ElementaryTypeName","src":"612:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"544:94:28"},"returnParameters":{"id":10148,"nodeType":"ParameterList","parameters":[],"src":"658:0:28"},"scope":10185,"src":"525:215:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10174,"nodeType":"Block","src":"779:81:28","statements":[{"assignments":[10165],"declarations":[{"constant":false,"id":10165,"mutability":"mutable","name":"tokenId","nameLocation":"797:7:28","nodeType":"VariableDeclaration","scope":10174,"src":"789:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10164,"name":"uint256","nodeType":"ElementaryTypeName","src":"789:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10168,"initialValue":{"id":10167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:14:28","subExpression":{"id":10166,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10130,"src":"807:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"789:32:28"},{"expression":{"arguments":[{"id":10170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10161,"src":"841:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10171,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10165,"src":"845:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10169,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2201,2231],"referencedDeclaration":2201,"src":"831:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"831:22:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10173,"nodeType":"ExpressionStatement","src":"831:22:28"}]},"functionSelector":"6a627842","id":10175,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"755:4:28","nodeType":"FunctionDefinition","parameters":{"id":10162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10161,"mutability":"mutable","name":"to","nameLocation":"768:2:28","nodeType":"VariableDeclaration","scope":10175,"src":"760:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10160,"name":"address","nodeType":"ElementaryTypeName","src":"760:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"759:12:28"},"returnParameters":{"id":10163,"nodeType":"ParameterList","parameters":[],"src":"779:0:28"},"scope":10185,"src":"746:114:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1730],"body":{"id":10183,"nodeType":"Block","src":"933:33:28","statements":[{"expression":{"hexValue":"697066733a2f2f","id":10181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"950:9:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe","typeString":"literal_string \"ipfs://\""},"value":"ipfs://"},"functionReturnParameters":10180,"id":10182,"nodeType":"Return","src":"943:16:28"}]},"id":10184,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"875:8:28","nodeType":"FunctionDefinition","overrides":{"id":10177,"nodeType":"OverrideSpecifier","overrides":[],"src":"900:8:28"},"parameters":{"id":10176,"nodeType":"ParameterList","parameters":[],"src":"883:2:28"},"returnParameters":{"id":10180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10184,"src":"918:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10178,"name":"string","nodeType":"ElementaryTypeName","src":"918:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"917:15:28"},"scope":10185,"src":"866:100:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":10186,"src":"292:676:28","usedErrors":[30,35,211,214,2673,2678,2687,2692,2697,2704,2709,2714],"usedEvents":[41,219,3512,3521,3530]}],"src":"32:936:28"},"id":28},"contracts/EditionDrop.sol":{"ast":{"absolutePath":"contracts/EditionDrop.sol","exportedSymbols":{"Arrays":[4714],"ContextUpgradeable":[2585],"ERC1155Upgradeable":[1459],"ERC1155Utils":[3496],"ERC165Upgradeable":[2625],"EditionDrop":[10245],"IERC1155":[3284],"IERC1155Errors":[2762],"IERC1155MetadataURI":[3342],"IERC165":[6587],"Initializable":[462],"OwnableUpgradeable":[194]},"id":10246,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10187,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:29"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol","id":10188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10246,"sourceUnit":1460,"src":"58:82:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":10189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10246,"sourceUnit":195,"src":"141:75:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":10190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10246,"sourceUnit":463,"src":"217:75:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10191,"name":"Initializable","nameLocations":["318:13:29"],"nodeType":"IdentifierPath","referencedDeclaration":462,"src":"318:13:29"},"id":10192,"nodeType":"InheritanceSpecifier","src":"318:13:29"},{"baseName":{"id":10193,"name":"ERC1155Upgradeable","nameLocations":["333:18:29"],"nodeType":"IdentifierPath","referencedDeclaration":1459,"src":"333:18:29"},"id":10194,"nodeType":"InheritanceSpecifier","src":"333:18:29"},{"baseName":{"id":10195,"name":"OwnableUpgradeable","nameLocations":["353:18:29"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"353:18:29"},"id":10196,"nodeType":"InheritanceSpecifier","src":"353:18:29"}],"canonicalName":"EditionDrop","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10245,"linearizedBaseContracts":[10245,194,1459,2762,3342,3284,2625,6587,2585,462],"name":"EditionDrop","nameLocation":"303:11:29","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10198,"mutability":"mutable","name":"_nextTokenId","nameLocation":"394:12:29","nodeType":"VariableDeclaration","scope":10245,"src":"378:28:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10197,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":10205,"nodeType":"Block","src":"480:39:29","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10202,"name":"_disableInitializers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"490:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"490:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10204,"nodeType":"ExpressionStatement","src":"490:22:29"}]},"documentation":{"id":10199,"nodeType":"StructuredDocumentation","src":"413:48:29","text":"@custom:oz-upgrades-unsafe-allow constructor"},"id":10206,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10200,"nodeType":"ParameterList","parameters":[],"src":"477:2:29"},"returnParameters":{"id":10201,"nodeType":"ParameterList","parameters":[],"src":"480:0:29"},"scope":10245,"src":"466:53:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10223,"nodeType":"Block","src":"627:74:29","statements":[{"expression":{"arguments":[{"id":10216,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10208,"src":"652:3:29","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":10215,"name":"__ERC1155_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"637:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":10217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"637:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10218,"nodeType":"ExpressionStatement","src":"637:19:29"},{"expression":{"arguments":[{"id":10220,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10210,"src":"681:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10219,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"666:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"666:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10222,"nodeType":"ExpressionStatement","src":"666:28:29"}]},"functionSelector":"7ab4339d","id":10224,"implemented":true,"kind":"function","modifiers":[{"id":10213,"kind":"modifierInvocation","modifierName":{"id":10212,"name":"initializer","nameLocations":["615:11:29"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"615:11:29"},"nodeType":"ModifierInvocation","src":"615:11:29"}],"name":"initialize","nameLocation":"534:10:29","nodeType":"FunctionDefinition","parameters":{"id":10211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10208,"mutability":"mutable","name":"uri","nameLocation":"568:3:29","nodeType":"VariableDeclaration","scope":10224,"src":"554:17:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10207,"name":"string","nodeType":"ElementaryTypeName","src":"554:6:29","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10210,"mutability":"mutable","name":"initialOwner","nameLocation":"589:12:29","nodeType":"VariableDeclaration","scope":10224,"src":"581:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10209,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"544:63:29"},"returnParameters":{"id":10214,"nodeType":"ParameterList","parameters":[],"src":"627:0:29"},"scope":10245,"src":"525:176:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10243,"nodeType":"Block","src":"756:89:29","statements":[{"assignments":[10232],"declarations":[{"constant":false,"id":10232,"mutability":"mutable","name":"tokenId","nameLocation":"774:7:29","nodeType":"VariableDeclaration","scope":10243,"src":"766:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10231,"name":"uint256","nodeType":"ElementaryTypeName","src":"766:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10235,"initialValue":{"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"784:14:29","subExpression":{"id":10233,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10198,"src":"784:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"766:32:29"},{"expression":{"arguments":[{"id":10237,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10226,"src":"814:2:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10238,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10232,"src":"818:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10239,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10228,"src":"827:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"835:2:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10236,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"808:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":10241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"808:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10242,"nodeType":"ExpressionStatement","src":"808:30:29"}]},"functionSelector":"40c10f19","id":10244,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"716:4:29","nodeType":"FunctionDefinition","parameters":{"id":10229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10226,"mutability":"mutable","name":"to","nameLocation":"729:2:29","nodeType":"VariableDeclaration","scope":10244,"src":"721:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10225,"name":"address","nodeType":"ElementaryTypeName","src":"721:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10228,"mutability":"mutable","name":"amount","nameLocation":"741:6:29","nodeType":"VariableDeclaration","scope":10244,"src":"733:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10227,"name":"uint256","nodeType":"ElementaryTypeName","src":"733:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"720:28:29"},"returnParameters":{"id":10230,"nodeType":"ParameterList","parameters":[],"src":"756:0:29"},"scope":10245,"src":"707:138:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10246,"src":"294:553:29","usedErrors":[30,35,211,214,2727,2732,2737,2744,2749,2754,2761],"usedEvents":[41,219,3181,3196,3205,3212]}],"src":"32:815:29"},"id":29},"contracts/NFTFactory.sol":{"ast":{"absolutePath":"contracts/NFTFactory.sol","exportedSymbols":{"Arrays":[4714],"Clones":[3161],"CollectionDrop":[10185],"ContextUpgradeable":[2585],"Create2":[4845],"ERC1155Upgradeable":[1459],"ERC1155Utils":[3496],"ERC165Upgradeable":[2625],"ERC721Upgradeable":[2539],"ERC721Utils":[3736],"EditionDrop":[10245],"Errors":[4867],"IERC1155":[3284],"IERC1155Errors":[2762],"IERC1155MetadataURI":[3342],"IERC165":[6587],"IERC721":[3613],"IERC721Errors":[2715],"IERC721Metadata":[3659],"Initializable":[462],"NFTFactory":[10387],"OwnableUpgradeable":[194],"Strings":[6575]},"id":10388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10247,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:30"},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":10248,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10388,"sourceUnit":3162,"src":"58:50:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/CollectionDrop.sol","file":"./CollectionDrop.sol","id":10249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10388,"sourceUnit":10186,"src":"109:30:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/EditionDrop.sol","file":"./EditionDrop.sol","id":10250,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10388,"sourceUnit":10246,"src":"140:27:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"NFTFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10387,"linearizedBaseContracts":[10387],"name":"NFTFactory","nameLocation":"178:10:30","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3feb0e8d","id":10252,"mutability":"immutable","name":"collectionDropImplementation","nameLocation":"220:28:30","nodeType":"VariableDeclaration","scope":10387,"src":"195:53:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10251,"name":"address","nodeType":"ElementaryTypeName","src":"195:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"dd40bb62","id":10254,"mutability":"immutable","name":"editionDropImplementation","nameLocation":"279:25:30","nodeType":"VariableDeclaration","scope":10387,"src":"254:50:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10253,"name":"address","nodeType":"ElementaryTypeName","src":"254:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":10257,"mutability":"mutable","name":"_collectionContracts","nameLocation":"329:20:30","nodeType":"VariableDeclaration","scope":10387,"src":"311:38:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":10255,"name":"address","nodeType":"ElementaryTypeName","src":"311:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10256,"nodeType":"ArrayTypeName","src":"311:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"constant":false,"id":10260,"mutability":"mutable","name":"_editionContracts","nameLocation":"373:17:30","nodeType":"VariableDeclaration","scope":10387,"src":"355:35:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":10258,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10259,"nodeType":"ArrayTypeName","src":"355:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"anonymous":false,"eventSelector":"7c8df6f7372bc8af86e2ff1c2b0aceb2f8717cca6a7a996f45f60276f878ab40","id":10270,"name":"CollectionDropDeployed","nameLocation":"403:22:30","nodeType":"EventDefinition","parameters":{"id":10269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10262,"indexed":true,"mutability":"mutable","name":"contractAddress","nameLocation":"442:15:30","nodeType":"VariableDeclaration","scope":10270,"src":"426:31:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10261,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10264,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"466:4:30","nodeType":"VariableDeclaration","scope":10270,"src":"459:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10263,"name":"string","nodeType":"ElementaryTypeName","src":"459:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10266,"indexed":false,"mutability":"mutable","name":"symbol","nameLocation":"479:6:30","nodeType":"VariableDeclaration","scope":10270,"src":"472:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10265,"name":"string","nodeType":"ElementaryTypeName","src":"472:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10268,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"503:5:30","nodeType":"VariableDeclaration","scope":10270,"src":"487:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10267,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"425:84:30"},"src":"397:113:30"},{"anonymous":false,"eventSelector":"6dc85245364361a3417062b03ad416cbd908d1ac5d9ef4a123faedf2bfcfd055","id":10278,"name":"EditionDropDeployed","nameLocation":"521:19:30","nodeType":"EventDefinition","parameters":{"id":10277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10272,"indexed":true,"mutability":"mutable","name":"contractAddress","nameLocation":"557:15:30","nodeType":"VariableDeclaration","scope":10278,"src":"541:31:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10271,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10274,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"581:3:30","nodeType":"VariableDeclaration","scope":10278,"src":"574:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10273,"name":"string","nodeType":"ElementaryTypeName","src":"574:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10276,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"602:5:30","nodeType":"VariableDeclaration","scope":10278,"src":"586:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10275,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"540:68:30"},"src":"515:94:30"},{"body":{"id":10293,"nodeType":"Block","src":"702:141:30","statements":[{"expression":{"id":10287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10285,"name":"collectionDropImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"712:28:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10286,"name":"_collectionDropImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10280,"src":"743:29:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"712:60:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10288,"nodeType":"ExpressionStatement","src":"712:60:30"},{"expression":{"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10289,"name":"editionDropImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10254,"src":"782:25:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10290,"name":"_editionDropImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10282,"src":"810:26:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"782:54:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10292,"nodeType":"ExpressionStatement","src":"782:54:30"}]},"id":10294,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10280,"mutability":"mutable","name":"_collectionDropImplementation","nameLocation":"635:29:30","nodeType":"VariableDeclaration","scope":10294,"src":"627:37:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10279,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10282,"mutability":"mutable","name":"_editionDropImplementation","nameLocation":"674:26:30","nodeType":"VariableDeclaration","scope":10294,"src":"666:34:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10281,"name":"address","nodeType":"ElementaryTypeName","src":"666:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"626:75:30"},"returnParameters":{"id":10284,"nodeType":"ParameterList","parameters":[],"src":"702:0:30"},"scope":10387,"src":"615:228:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10332,"nodeType":"Block","src":"945:245:30","statements":[{"assignments":[10304],"declarations":[{"constant":false,"id":10304,"mutability":"mutable","name":"clone","nameLocation":"963:5:30","nodeType":"VariableDeclaration","scope":10332,"src":"955:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10303,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10309,"initialValue":{"arguments":[{"id":10307,"name":"collectionDropImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10252,"src":"984:28:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10305,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"971:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$3161_$","typeString":"type(library Clones)"}},"id":10306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"978:5:30","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":2785,"src":"971:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"971:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"955:58:30"},{"expression":{"arguments":[{"id":10314,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10296,"src":"1056:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10315,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10298,"src":"1062:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10316,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10300,"src":"1070:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":10311,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10304,"src":"1038:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10310,"name":"CollectionDrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10185,"src":"1023:14:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CollectionDrop_$10185_$","typeString":"type(contract CollectionDrop)"}},"id":10312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CollectionDrop_$10185","typeString":"contract CollectionDrop"}},"id":10313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1045:10:30","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":10159,"src":"1023:32:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,string memory,address) external"}},"id":10317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1023:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10318,"nodeType":"ExpressionStatement","src":"1023:53:30"},{"expression":{"arguments":[{"id":10322,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10304,"src":"1112:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10319,"name":"_collectionContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"1086:20:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1107:4:30","memberName":"push","nodeType":"MemberAccess","src":"1086:25:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":10323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1086:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10324,"nodeType":"ExpressionStatement","src":"1086:32:30"},{"eventCall":{"arguments":[{"id":10326,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10304,"src":"1156:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10327,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10296,"src":"1163:4:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10328,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10298,"src":"1169:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10329,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10300,"src":"1177:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10325,"name":"CollectionDropDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10270,"src":"1133:22:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,string memory,string memory,address)"}},"id":10330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1133:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10331,"nodeType":"EmitStatement","src":"1128:55:30"}]},"functionSelector":"e585bcd5","id":10333,"implemented":true,"kind":"function","modifiers":[],"name":"createCollectionDrop","nameLocation":"858:20:30","nodeType":"FunctionDefinition","parameters":{"id":10301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10296,"mutability":"mutable","name":"name","nameLocation":"893:4:30","nodeType":"VariableDeclaration","scope":10333,"src":"879:18:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10295,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10298,"mutability":"mutable","name":"symbol","nameLocation":"913:6:30","nodeType":"VariableDeclaration","scope":10333,"src":"899:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10297,"name":"string","nodeType":"ElementaryTypeName","src":"899:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10300,"mutability":"mutable","name":"owner","nameLocation":"929:5:30","nodeType":"VariableDeclaration","scope":10333,"src":"921:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10299,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"878:57:30"},"returnParameters":{"id":10302,"nodeType":"ParameterList","parameters":[],"src":"945:0:30"},"scope":10387,"src":"849:341:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10367,"nodeType":"Block","src":"1266:215:30","statements":[{"assignments":[10341],"declarations":[{"constant":false,"id":10341,"mutability":"mutable","name":"clone","nameLocation":"1284:5:30","nodeType":"VariableDeclaration","scope":10367,"src":"1276:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10340,"name":"address","nodeType":"ElementaryTypeName","src":"1276:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10346,"initialValue":{"arguments":[{"id":10344,"name":"editionDropImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10254,"src":"1305:25:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10342,"name":"Clones","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3161,"src":"1292:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Clones_$3161_$","typeString":"type(library Clones)"}},"id":10343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1299:5:30","memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":2785,"src":"1292:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$","typeString":"function (address) returns (address)"}},"id":10345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1292:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1276:55:30"},{"expression":{"arguments":[{"id":10351,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10335,"src":"1371:3:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10337,"src":"1376:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":10348,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10341,"src":"1353:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10347,"name":"EditionDrop","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10245,"src":"1341:11:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_EditionDrop_$10245_$","typeString":"type(contract EditionDrop)"}},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1341:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_EditionDrop_$10245","typeString":"contract EditionDrop"}},"id":10350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1360:10:30","memberName":"initialize","nodeType":"MemberAccess","referencedDeclaration":10224,"src":"1341:29:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,address) external"}},"id":10353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1341:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10354,"nodeType":"ExpressionStatement","src":"1341:41:30"},{"expression":{"arguments":[{"id":10358,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10341,"src":"1415:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10355,"name":"_editionContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10260,"src":"1392:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1410:4:30","memberName":"push","nodeType":"MemberAccess","src":"1392:22:30","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1392:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10360,"nodeType":"ExpressionStatement","src":"1392:29:30"},{"eventCall":{"arguments":[{"id":10362,"name":"clone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10341,"src":"1456:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10363,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10335,"src":"1463:3:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":10364,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10337,"src":"1468:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10361,"name":"EditionDropDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10278,"src":"1436:19:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,string memory,address)"}},"id":10365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1436:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10366,"nodeType":"EmitStatement","src":"1431:43:30"}]},"functionSelector":"42d648e3","id":10368,"implemented":true,"kind":"function","modifiers":[],"name":"createEditionDrop","nameLocation":"1205:17:30","nodeType":"FunctionDefinition","parameters":{"id":10338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10335,"mutability":"mutable","name":"uri","nameLocation":"1237:3:30","nodeType":"VariableDeclaration","scope":10368,"src":"1223:17:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10334,"name":"string","nodeType":"ElementaryTypeName","src":"1223:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10337,"mutability":"mutable","name":"owner","nameLocation":"1250:5:30","nodeType":"VariableDeclaration","scope":10368,"src":"1242:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10336,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1222:34:30"},"returnParameters":{"id":10339,"nodeType":"ParameterList","parameters":[],"src":"1266:0:30"},"scope":10387,"src":"1196:285:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10376,"nodeType":"Block","src":"1562:44:30","statements":[{"expression":{"id":10374,"name":"_collectionContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10257,"src":"1579:20:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":10373,"id":10375,"nodeType":"Return","src":"1572:27:30"}]},"functionSelector":"e3fa9df8","id":10377,"implemented":true,"kind":"function","modifiers":[],"name":"getCollectionContracts","nameLocation":"1496:22:30","nodeType":"FunctionDefinition","parameters":{"id":10369,"nodeType":"ParameterList","parameters":[],"src":"1518:2:30"},"returnParameters":{"id":10373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10377,"src":"1544:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10370,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10371,"nodeType":"ArrayTypeName","src":"1544:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1543:18:30"},"scope":10387,"src":"1487:119:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10385,"nodeType":"Block","src":"1684:41:30","statements":[{"expression":{"id":10383,"name":"_editionContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10260,"src":"1701:17:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":10382,"id":10384,"nodeType":"Return","src":"1694:24:30"}]},"functionSelector":"f323b896","id":10386,"implemented":true,"kind":"function","modifiers":[],"name":"getEditionContracts","nameLocation":"1621:19:30","nodeType":"FunctionDefinition","parameters":{"id":10378,"nodeType":"ParameterList","parameters":[],"src":"1640:2:30"},"returnParameters":{"id":10382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10386,"src":"1666:16:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":10379,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10380,"nodeType":"ArrayTypeName","src":"1666:9:30","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1665:18:30"},"scope":10387,"src":"1612:113:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":10388,"src":"169:1558:30","usedErrors":[4855,4861],"usedEvents":[10270,10278]}],"src":"32:1696:30"},"id":30}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol":{"ERC1155Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":\"ERC1155Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol":{"ERC721Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":\"ERC721Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x315bcaebd3738cfe34ddd3525c8d3f1694afaabe0fc9f3857727497b19fb9473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58701c5c131b64e5a48e712c2b89b83a97ee5a2e720650f3941edbf1b90fe75\",\"dweb:/ipfs/QmW3bmSiiMqcTZLBRHFr2ztf9mriMuHrkqWbAv9WQhxFZ8\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol":{"ERC165Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[{"inputs":[],"name":"CloneArgumentsTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034fead5de8dc6cf2d68b7984a8de9a35fcd54372e9e8419de668d7a9a8555e6464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE INVALID 0xAD TSTORE 0xE8 0xDC PUSH13 0xF2D68B7984A8DE9A35FCD54372 0xE9 0xE8 COINBASE SWAP14 0xE6 PUSH9 0xD7A9A8555E6464736F PUSH13 0x63430008180033000000000000 ","sourceMap":"817:13703:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122034fead5de8dc6cf2d68b7984a8de9a35fcd54372e9e8419de668d7a9a8555e6464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE INVALID 0xAD TSTORE 0xE8 0xDC PUSH13 0xF2D68B7984A8DE9A35FCD54372 0xE9 0xE8 COINBASE SWAP14 0xE6 PUSH9 0xD7A9A8555E6464736F PUSH13 0x63430008180033000000000000 ","sourceMap":"817:13703:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CloneArgumentsTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[ERC-1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab5f06fd50b78519a21d3f53ed0c3d1f4394766375b4bb45e7116fb30cb893d964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH0 MOD REVERT POP 0xB7 DUP6 NOT LOG2 SAR EXTCODEHASH MSTORE8 0xED 0xC RETURNDATASIZE 0x1F NUMBER SWAP5 PUSH23 0x6375B4BB45E7116FB30CB893D964736F6C634300081800 CALLER ","sourceMap":"439:3114:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ab5f06fd50b78519a21d3f53ed0c3d1f4394766375b4bb45e7116fb30cb893d964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB PUSH0 MOD REVERT POP 0xB7 DUP6 NOT LOG2 SAR EXTCODEHASH MSTORE8 0xED 0xC RETURNDATASIZE 0x1F NUMBER SWAP5 PUSH23 0x6375B4BB45E7116FB30CB893D964736F6C634300081800 CALLER ","sourceMap":"439:3114:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f734d3c1c82b69070ca050b74f8a0dc3d3a46b683d2d26db8801f657b6da63164736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH20 0x4D3C1C82B69070CA050B74F8A0DC3D3A46B683D2 0xD2 PUSH14 0xB8801F657B6DA63164736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202f734d3c1c82b69070ca050b74f8a0dc3d3a46b683d2d26db8801f657b6da63164736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F PUSH20 0x4D3C1C82B69070CA050B74F8A0DC3D3A46B683D2 0xD2 PUSH14 0xB8801F657B6DA63164736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"431:1490:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b728a5bf26c8b966537f4e54186b789bb9ec66090419abf379bc0407417b78764736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH19 0x8A5BF26C8B966537F4E54186B789BB9EC66090 COINBASE SWAP11 0xBF CALLDATACOPY SWAP12 0xC0 BLOCKHASH PUSH21 0x17B78764736F6C6343000818003300000000000000 ","sourceMap":"459:20446:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202b728a5bf26c8b966537f4e54186b789bb9ec66090419abf379bc0407417b78764736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B PUSH19 0x8A5BF26C8B966537F4E54186B789BB9EC66090 COINBASE SWAP11 0xBF CALLDATACOPY SWAP12 0xC0 BLOCKHASH PUSH21 0x17B78764736F6C6343000818003300000000000000 ","sourceMap":"459:20446:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220489b03972a312eb6afdccb56d088dd6c8a4971a2415e48ebecbf0ff51ee5ff7264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP12 SUB SWAP8 0x2A BALANCE 0x2E 0xB6 0xAF 0xDC 0xCB JUMP 0xD0 DUP9 0xDD PUSH13 0x8A4971A2415E48EBECBF0FF51E 0xE5 SELFDESTRUCT PUSH19 0x64736F6C634300081800330000000000000000 ","sourceMap":"224:218:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220489b03972a312eb6afdccb56d088dd6c8a4971a2415e48ebecbf0ff51ee5ff7264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE SWAP12 SUB SWAP8 0x2A BALANCE 0x2E 0xB6 0xAF 0xDC 0xCB JUMP 0xD0 DUP9 0xDD PUSH13 0x8A4971A2415E48EBECBF0FF51E 0xE5 SELFDESTRUCT PUSH19 0x64736F6C634300081800330000000000000000 ","sourceMap":"224:218:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Create2.sol":{"Create2":{"abi":[{"inputs":[],"name":"Create2EmptyBytecode","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fdf221ef80b9be4e6be40b570affccc4ec86db19c8710c3a95333c48de1ac5e64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDF 0x22 0x1E 0xF8 SIGNEXTEND SWAP12 0xE4 0xE6 0xBE BLOCKHASH 0xB5 PUSH17 0xAFFCCC4EC86DB19C8710C3A95333C48DE1 0xAC MCOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"533:3932:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fdf221ef80b9be4e6be40b570affccc4ec86db19c8710c3a95333c48de1ac5e64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xDF 0x22 0x1E 0xF8 SIGNEXTEND SWAP12 0xE4 0xE6 0xBE BLOCKHASH 0xB5 PUSH17 0xAFFCCC4EC86DB19C8710C3A95333C48DE1 0xAC MCOPY PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"533:3932:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Create2EmptyBytecode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"errors\":{\"Create2EmptyBytecode()\":[{\"details\":\"There's no code to deploy.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a39e0259bf1fadd02a6b22eef51f3c1d149f0374ea0d3c3be8bbbe1c39d156d864736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP15 MUL MSIZE 0xBF 0x1F 0xAD 0xD0 0x2A PUSH12 0x22EEF51F3C1D149F0374EA0D EXTCODECOPY EXTCODESIZE 0xE8 0xBB 0xBE SHR CODECOPY 0xD1 JUMP 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a39e0259bf1fadd02a6b22eef51f3c1d149f0374ea0d3c3be8bbbe1c39d156d864736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 SWAP15 MUL MSIZE 0xBF 0x1F 0xAD 0xD0 0x2A PUSH12 0x22EEF51F3C1D149F0374EA0D EXTCODECOPY EXTCODESIZE 0xE8 0xBB 0xBE SHR CODECOPY 0xD1 JUMP 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"411:484:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077124401dfaf97cd08e586bc2b3443f93be8e32f34d83a0070dc4d71d29e014964736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x124401DFAF97CD08E586BC2B3443F93BE8E32F34D83A0070 0xDC 0x4D PUSH18 0xD29E014964736F6C63430008180033000000 ","sourceMap":"657:1315:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077124401dfaf97cd08e586bc2b3443f93be8e32f34d83a0070dc4d71d29e014964736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x124401DFAF97CD08E586BC2B3443F93BE8E32F34D83A0070 0xDC 0x4D PUSH18 0xD29E014964736F6C63430008180033000000 ","sourceMap":"657:1315:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d87811db7a204da846f3b436784c080f81b7dc29ac00a215552c9bbe606e5c0264736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 PUSH25 0x11DB7A204DA846F3B436784C080F81B7DC29AC00A215552C9B 0xBE PUSH1 0x6E TLOAD MUL PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1599:3723:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d87811db7a204da846f3b436784c080f81b7dc29ac00a215552c9bbe606e5c0264736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 PUSH25 0x11DB7A204DA846F3B436784C080F81B7DC29AC00A215552C9B 0xBE PUSH1 0x6E TLOAD MUL PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"1599:3723:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5dd3f8b3c50549444134de1db0cd4dde85c3f10f2eb57a20735a9ab2f17497b64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDD EXTCODEHASH DUP12 EXTCODECOPY POP SLOAD SWAP5 PREVRANDAO SGT 0x4D 0xE1 0xDB 0xC 0xD4 0xDD 0xE8 TLOAD EXTCODEHASH LT CALLCODE 0xEB JUMPI LOG2 SMOD CALLDATALOAD 0xA9 0xAB 0x2F OR BLOBHASH PUSH28 0x64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"1407:2774:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5dd3f8b3c50549444134de1db0cd4dde85c3f10f2eb57a20735a9ab2f17497b64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDD EXTCODEHASH DUP12 EXTCODECOPY POP SLOAD SWAP5 PREVRANDAO SGT 0x4D 0xE1 0xDB 0xC 0xD4 0xDD 0xE8 TLOAD EXTCODEHASH LT CALLCODE 0xEB JUMPI LOG2 SMOD CALLDATALOAD 0xA9 0xAB 0x2F OR BLOBHASH PUSH28 0x64736F6C634300081800330000000000000000000000000000000000 ","sourceMap":"1407:2774:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033fab01e58ad6ca2683dcc210c4de03885327ead2d0f8011945aa82409a843fe64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER STATICCALL 0xB0 0x1E PC 0xAD PUSH13 0xA2683DCC210C4DE03885327EAD 0x2D 0xF DUP1 GT SWAP5 GAS 0xA8 0x24 MULMOD 0xA8 NUMBER INVALID PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"297:18982:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122033fab01e58ad6ca2683dcc210c4de03885327ead2d0f8011945aa82409a843fe64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER STATICCALL 0xB0 0x1E PC 0xAD PUSH13 0xA2683DCC210C4DE03885327EAD 0x2D 0xF DUP1 GT SWAP5 GAS 0xA8 0x24 MULMOD 0xA8 NUMBER INVALID PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"297:18982:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b7b41f54597a34a30fbcb9caa7557b2f85918a264c26e26cdfc0122e9fc879064736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH28 0x41F54597A34A30FBCB9CAA7557B2F85918A264C26E26CDFC0122E9FC DUP8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208b7b41f54597a34a30fbcb9caa7557b2f85918a264c26e26cdfc0122e9fc879064736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 PUSH28 0x41F54597A34A30FBCB9CAA7557B2F85918A264C26E26CDFC0122E9FC DUP8 SWAP1 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"281:31863:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f566bcc33798f030e57f140ce005b7099829e7434ae2c81bd24cfd7eb2b16a64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CREATE2 PUSH7 0xBCC33798F030E5 PUSH32 0x140CE005B7099829E7434AE2C81BD24CFD7EB2B16A64736F6C63430008180033 ","sourceMap":"769:34173:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b5f566bcc33798f030e57f140ce005b7099829e7434ae2c81bd24cfd7eb2b16a64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CREATE2 PUSH7 0xBCC33798F030E5 PUSH32 0x140CE005B7099829E7434AE2C81BD24CFD7EB2B16A64736F6C63430008180033 ","sourceMap":"769:34173:26:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c3e0ffabae6a6dd7d8ebfd76c1e4e6548f6f9a595cbaddd45c2b7c532cc107c64736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR RETURNDATACOPY 0xF STATICCALL 0xBA 0xE6 0xA6 0xDD PUSH30 0x8EBFD76C1E4E6548F6F9A595CBADDD45C2B7C532CC107C64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"258:2354:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201c3e0ffabae6a6dd7d8ebfd76c1e4e6548f6f9a595cbaddd45c2b7c532cc107c64736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR RETURNDATACOPY 0xF STATICCALL 0xBA 0xE6 0xA6 0xDD PUSH30 0x8EBFD76C1E4E6548F6F9A595CBADDD45C2B7C532CC107C64736F6C634300 ADDMOD XOR STOP CALLER ","sourceMap":"258:2354:27:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/CollectionDrop.sol":{"CollectionDrop":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_10138":{"entryPoint":null,"id":10138,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_416":{"entryPoint":40,"id":416,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":306,"id":461,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":334,"id":447,"parameterSlots":0,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":377,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:456:31","nodeType":"YulBlock","src":"0:456:31","statements":[{"body":{"nativeSrc":"51:57:31","nodeType":"YulBlock","src":"51:57:31","statements":[{"nativeSrc":"61:41:31","nodeType":"YulAssignment","src":"61:41:31","value":{"arguments":[{"name":"value","nativeSrc":"76:5:31","nodeType":"YulIdentifier","src":"76:5:31"},{"kind":"number","nativeSrc":"83:18:31","nodeType":"YulLiteral","src":"83:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"72:3:31","nodeType":"YulIdentifier","src":"72:3:31"},"nativeSrc":"72:30:31","nodeType":"YulFunctionCall","src":"72:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:31","nodeType":"YulIdentifier","src":"61:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"7:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:31","nodeType":"YulTypedName","src":"33:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:31","nodeType":"YulTypedName","src":"43:7:31","type":""}],"src":"7:101:31"},{"body":{"nativeSrc":"177:52:31","nodeType":"YulBlock","src":"177:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"194:3:31","nodeType":"YulIdentifier","src":"194:3:31"},{"arguments":[{"name":"value","nativeSrc":"216:5:31","nodeType":"YulIdentifier","src":"216:5:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"199:16:31","nodeType":"YulIdentifier","src":"199:16:31"},"nativeSrc":"199:23:31","nodeType":"YulFunctionCall","src":"199:23:31"}],"functionName":{"name":"mstore","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:36:31","nodeType":"YulFunctionCall","src":"187:36:31"},"nativeSrc":"187:36:31","nodeType":"YulExpressionStatement","src":"187:36:31"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"114:115:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"165:5:31","nodeType":"YulTypedName","src":"165:5:31","type":""},{"name":"pos","nativeSrc":"172:3:31","nodeType":"YulTypedName","src":"172:3:31","type":""}],"src":"114:115:31"},{"body":{"nativeSrc":"331:122:31","nodeType":"YulBlock","src":"331:122:31","statements":[{"nativeSrc":"341:26:31","nodeType":"YulAssignment","src":"341:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"353:9:31","nodeType":"YulIdentifier","src":"353:9:31"},{"kind":"number","nativeSrc":"364:2:31","nodeType":"YulLiteral","src":"364:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"349:3:31","nodeType":"YulIdentifier","src":"349:3:31"},"nativeSrc":"349:18:31","nodeType":"YulFunctionCall","src":"349:18:31"},"variableNames":[{"name":"tail","nativeSrc":"341:4:31","nodeType":"YulIdentifier","src":"341:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"419:6:31","nodeType":"YulIdentifier","src":"419:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"432:9:31","nodeType":"YulIdentifier","src":"432:9:31"},{"kind":"number","nativeSrc":"443:1:31","nodeType":"YulLiteral","src":"443:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"428:3:31","nodeType":"YulIdentifier","src":"428:3:31"},"nativeSrc":"428:17:31","nodeType":"YulFunctionCall","src":"428:17:31"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"377:41:31","nodeType":"YulIdentifier","src":"377:41:31"},"nativeSrc":"377:69:31","nodeType":"YulFunctionCall","src":"377:69:31"},"nativeSrc":"377:69:31","nodeType":"YulExpressionStatement","src":"377:69:31"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"235:218:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"303:9:31","nodeType":"YulTypedName","src":"303:9:31","type":""},{"name":"value0","nativeSrc":"315:6:31","nodeType":"YulTypedName","src":"315:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"326:4:31","nodeType":"YulTypedName","src":"326:4:31","type":""}],"src":"235:218:31"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001bb565b60006200003a6200013260201b60201c565b90508060000160089054906101000a900460ff161562000086576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146200012f5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff6040516200012691906200019e565b60405180910390a15b50565b600080620001456200014e60201b60201c565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b600067ffffffffffffffff82169050919050565b620001988162000179565b82525050565b6000602082019050620001b560008301846200018d565b92915050565b61298480620001cb6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102cb578063b88d4fde146102e7578063c87b56dd14610303578063e985e9c514610333578063f2fde38b1461036357610116565b806370a0823114610255578063715018a6146102855780638da5cb5b1461028f57806395d89b41146102ad57610116565b8063095ea7b3116100e9578063095ea7b3146101b557806323b872dd146101d157806342842e0e146101ed5780636352211e146102095780636a6278421461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063077f224a14610169578063081812fc14610185575b600080fd5b61013560048036038101906101309190611d43565b61037f565b6040516101429190611d8b565b60405180910390f35b610153610461565b6040516101609190611e36565b60405180910390f35b610183600480360381019061017e9190611feb565b610502565b005b61019f600480360381019061019a91906120ac565b61069d565b6040516101ac91906120e8565b60405180910390f35b6101cf60048036038101906101ca9190612103565b6106b9565b005b6101eb60048036038101906101e69190612143565b6106cf565b005b61020760048036038101906102029190612143565b6107d1565b005b610223600480360381019061021e91906120ac565b6107f1565b60405161023091906120e8565b60405180910390f35b610253600480360381019061024e9190612196565b610803565b005b61026f600480360381019061026a9190612196565b61082b565b60405161027c91906121d2565b60405180910390f35b61028d6108f4565b005b610297610908565b6040516102a491906120e8565b60405180910390f35b6102b5610940565b6040516102c29190611e36565b60405180910390f35b6102e560048036038101906102e09190612219565b6109e1565b005b61030160048036038101906102fc91906122fa565b6109f7565b005b61031d600480360381019061031891906120ac565b610a1c565b60405161032a9190611e36565b60405180910390f35b61034d6004803603810190610348919061237d565b610a85565b60405161035a9190611d8b565b60405180910390f35b61037d60048036038101906103789190612196565b610b27565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a575061045982610bad565b5b9050919050565b6060600061046d610c17565b905080600001805461047e906123ec565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906123ec565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b505050505091505090565b600061050c610c3f565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561055a5750825b9050600060018367ffffffffffffffff1614801561058f575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561059d575080155b156105d4576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106245760018560000160086101000a81548160ff0219169083151502179055505b61062e8888610c53565b61063786610c69565b83156106935760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161068a9190612476565b60405180910390a15b5050505050505050565b60006106a882610c7d565b506106b282610d05565b9050919050565b6106cb82826106c6610d50565b610d58565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107415760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161073891906120e8565b60405180910390fd5b60006107558383610750610d50565b610d6a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107cb578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107c293929190612491565b60405180910390fd5b50505050565b6107ec838383604051806020016040528060008152506109f7565b505050565b60006107fc82610c7d565b9050919050565b6000806000815480929190610817906124f7565b9190505590506108278282610f97565b5050565b600080610836610c17565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108aa5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108a191906120e8565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6108fc610fb5565b610906600061103c565b565b600080610913611113565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6060600061094c610c17565b905080600101805461095d906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610989906123ec565b80156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b505050505091505090565b6109f36109ec610d50565b838361113b565b5050565b610a028484846106cf565b610a16610a0d610d50565b858585856112b9565b50505050565b6060610a2782610c7d565b506000610a3261146a565b90506000815111610a525760405180602001604052806000815250610a7d565b80610a5c846114a7565b604051602001610a6d92919061257b565b6040516020818303038152906040525b915050919050565b600080610a90610c17565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b610b2f610fb5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ba15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b9891906120e8565b60405180910390fd5b610baa8161103c565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b600080610c4a611575565b90508091505090565b610c5b6115a0565b610c6582826115e0565b5050565b610c716115a0565b610c7a8161161d565b50565b600080610c89836116a3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cfc57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610cf391906121d2565b60405180910390fd5b80915050919050565b600080610d10610c17565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b610d6583838360016116ee565b505050565b600080610d75610c17565b90506000610d82856116a3565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610dc457610dc38185876118c2565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e5757610e066000866000806116ee565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610edc5760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b610fb1828260405180602001604052806000815250611986565b5050565b610fbd610d50565b73ffffffffffffffffffffffffffffffffffffffff16610fdb610908565b73ffffffffffffffffffffffffffffffffffffffff161461103a57610ffe610d50565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161103191906120e8565b60405180910390fd5b565b6000611046611113565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000611145610c17565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b857826040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111af91906120e8565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31846040516112ab9190611d8b565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611463578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161131894939291906125f4565b6020604051808303816000875af192505050801561135457506040513d601f19601f820116820180604052508101906113519190612655565b60015b6113d8573d8060008114611384576040519150601f19603f3d011682016040523d82523d6000602084013e611389565b606091505b5060008151036113d057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113c791906120e8565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461146157836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161145891906120e8565b60405180910390fd5b505b5050505050565b60606040518060400160405280600781526020017f697066733a2f2f00000000000000000000000000000000000000000000000000815250905090565b6060600060016114b6846119aa565b01905060008167ffffffffffffffff8111156114d5576114d4611e62565b5b6040519080825280601f01601f1916602001820160405280156115075781602001600182028036833780820191505090505b509050600082602083010190505b60011561156a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161155e5761155d612682565b5b04945060008503611515575b819350505050919050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6115a8611afd565b6115de576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6115e86115a0565b60006115f2610c17565b9050828160000190816116059190612853565b50818160010190816116179190612853565b50505050565b6116256115a0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116975760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161168e91906120e8565b60405180910390fd5b6116a08161103c565b50565b6000806116ae610c17565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006116f8610c17565b905081806117335750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561186757600061174385610c7d565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156117ae57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117c157506117bf8185610a85565b155b1561180357836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117fa91906120e8565b60405180910390fd5b821561186557848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6118cd838383611b1d565b61198157600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194257806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161193991906121d2565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611978929190612925565b60405180910390fd5b505050565b6119908383611bde565b6119a561199b610d50565b60008585856112b9565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a08577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119fe576119fd612682565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a45576d04ee2d6d415b85acef81000000008381611a3b57611a3a612682565b5b0492506020810190505b662386f26fc100008310611a7457662386f26fc100008381611a6a57611a69612682565b5b0492506010810190505b6305f5e1008310611a9d576305f5e1008381611a9357611a92612682565b5b0492506008810190505b6127108310611ac2576127108381611ab857611ab7612682565b5b0492506004810190505b60648310611ae55760648381611adb57611ada612682565b5b0492506002810190505b600a8310611af4576001810190505b80915050919050565b6000611b07610c3f565b60000160089054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bd557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b965750611b958484610a85565b5b80611bd457508273ffffffffffffffffffffffffffffffffffffffff16611bbc83610d05565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c505760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c4791906120e8565b60405180910390fd5b6000611c5e83836000610d6a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cd25760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611cc991906120e8565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d2081611ceb565b8114611d2b57600080fd5b50565b600081359050611d3d81611d17565b92915050565b600060208284031215611d5957611d58611ce1565b5b6000611d6784828501611d2e565b91505092915050565b60008115159050919050565b611d8581611d70565b82525050565b6000602082019050611da06000830184611d7c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611de0578082015181840152602081019050611dc5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e0882611da6565b611e128185611db1565b9350611e22818560208601611dc2565b611e2b81611dec565b840191505092915050565b60006020820190508181036000830152611e508184611dfd565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e9a82611dec565b810181811067ffffffffffffffff82111715611eb957611eb8611e62565b5b80604052505050565b6000611ecc611cd7565b9050611ed88282611e91565b919050565b600067ffffffffffffffff821115611ef857611ef7611e62565b5b611f0182611dec565b9050602081019050919050565b82818337600083830152505050565b6000611f30611f2b84611edd565b611ec2565b905082815260208101848484011115611f4c57611f4b611e5d565b5b611f57848285611f0e565b509392505050565b600082601f830112611f7457611f73611e58565b5b8135611f84848260208601611f1d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fb882611f8d565b9050919050565b611fc881611fad565b8114611fd357600080fd5b50565b600081359050611fe581611fbf565b92915050565b60008060006060848603121561200457612003611ce1565b5b600084013567ffffffffffffffff81111561202257612021611ce6565b5b61202e86828701611f5f565b935050602084013567ffffffffffffffff81111561204f5761204e611ce6565b5b61205b86828701611f5f565b925050604061206c86828701611fd6565b9150509250925092565b6000819050919050565b61208981612076565b811461209457600080fd5b50565b6000813590506120a681612080565b92915050565b6000602082840312156120c2576120c1611ce1565b5b60006120d084828501612097565b91505092915050565b6120e281611fad565b82525050565b60006020820190506120fd60008301846120d9565b92915050565b6000806040838503121561211a57612119611ce1565b5b600061212885828601611fd6565b925050602061213985828601612097565b9150509250929050565b60008060006060848603121561215c5761215b611ce1565b5b600061216a86828701611fd6565b935050602061217b86828701611fd6565b925050604061218c86828701612097565b9150509250925092565b6000602082840312156121ac576121ab611ce1565b5b60006121ba84828501611fd6565b91505092915050565b6121cc81612076565b82525050565b60006020820190506121e760008301846121c3565b92915050565b6121f681611d70565b811461220157600080fd5b50565b600081359050612213816121ed565b92915050565b600080604083850312156122305761222f611ce1565b5b600061223e85828601611fd6565b925050602061224f85828601612204565b9150509250929050565b600067ffffffffffffffff82111561227457612273611e62565b5b61227d82611dec565b9050602081019050919050565b600061229d61229884612259565b611ec2565b9050828152602081018484840111156122b9576122b8611e5d565b5b6122c4848285611f0e565b509392505050565b600082601f8301126122e1576122e0611e58565b5b81356122f184826020860161228a565b91505092915050565b6000806000806080858703121561231457612313611ce1565b5b600061232287828801611fd6565b945050602061233387828801611fd6565b935050604061234487828801612097565b925050606085013567ffffffffffffffff81111561236557612364611ce6565b5b612371878288016122cc565b91505092959194509250565b6000806040838503121561239457612393611ce1565b5b60006123a285828601611fd6565b92505060206123b385828601611fd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061240457607f821691505b602082108103612417576124166123bd565b5b50919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061246061245b6124568461241d565b61243b565b612427565b9050919050565b61247081612445565b82525050565b600060208201905061248b6000830184612467565b92915050565b60006060820190506124a660008301866120d9565b6124b360208301856121c3565b6124c060408301846120d9565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250282612076565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612534576125336124c8565b5b600182019050919050565b600081905092915050565b600061255582611da6565b61255f818561253f565b935061256f818560208601611dc2565b80840191505092915050565b6000612587828561254a565b9150612593828461254a565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006125c68261259f565b6125d081856125aa565b93506125e0818560208601611dc2565b6125e981611dec565b840191505092915050565b600060808201905061260960008301876120d9565b61261660208301866120d9565b61262360408301856121c3565b818103606083015261263581846125bb565b905095945050505050565b60008151905061264f81611d17565b92915050565b60006020828403121561266b5761266a611ce1565b5b600061267984828501612640565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026127137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126d6565b61271d86836126d6565b95508019841693508086168417925050509392505050565b600061275061274b61274684612076565b61243b565b612076565b9050919050565b6000819050919050565b61276a83612735565b61277e61277682612757565b8484546126e3565b825550505050565b600090565b612793612786565b61279e818484612761565b505050565b5b818110156127c2576127b760008261278b565b6001810190506127a4565b5050565b601f821115612807576127d8816126b1565b6127e1846126c6565b810160208510156127f0578190505b6128046127fc856126c6565b8301826127a3565b50505b505050565b600082821c905092915050565b600061282a6000198460080261280c565b1980831691505092915050565b60006128438383612819565b9150826002028217905092915050565b61285c82611da6565b67ffffffffffffffff81111561287557612874611e62565b5b61287f82546123ec565b61288a8282856127c6565b600060209050601f8311600181146128bd57600084156128ab578287015190505b6128b58582612837565b86555061291d565b601f1984166128cb866126b1565b60005b828110156128f3578489015182556001820191506020850194506020810190506128ce565b86831015612910578489015161290c601f891682612819565b8355505b6001600288020188555050505b505050505050565b600060408201905061293a60008301856120d9565b61294760208301846121c3565b939250505056fea2646970667358221220d9ab05bcb0b5b5fa24a2f94ba0933412c2773fa05224c5854f9406921d98ae9164736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BB JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x86 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x12F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x126 SWAP2 SWAP1 PUSH3 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x145 PUSH3 0x14E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x198 DUP2 PUSH3 0x179 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x18D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2984 DUP1 PUSH3 0x1CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x239 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x297 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x44A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x45A JUMPI POP PUSH2 0x459 DUP3 PUSH2 0xBAD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x46D PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AA SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C PUSH2 0xC3F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x55A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x58F JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x59D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x624 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x62E DUP9 DUP9 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x637 DUP7 PUSH2 0xC69 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A8 DUP3 PUSH2 0xC7D JUMP JUMPDEST POP PUSH2 0x6B2 DUP3 PUSH2 0xD05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CB DUP3 DUP3 PUSH2 0x6C6 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x741 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x755 DUP4 DUP4 PUSH2 0x750 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CB JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7EC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP3 PUSH2 0xC7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x817 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x827 DUP3 DUP3 PUSH2 0xF97 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x836 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8AA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FC PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x906 PUSH1 0x0 PUSH2 0x103C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x913 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x94C PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x9EC PUSH2 0xD50 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x113B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 PUSH2 0x6CF JUMP JUMPDEST PUSH2 0xA16 PUSH2 0xA0D PUSH2 0xD50 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x12B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA27 DUP3 PUSH2 0xC7D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA32 PUSH2 0x146A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA7D JUMP JUMPDEST DUP1 PUSH2 0xA5C DUP5 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6D SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA90 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2F PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0x103C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC4A PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC5B PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0xC65 DUP3 DUP3 PUSH2 0x15E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC71 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0x161D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC89 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCFC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD10 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD65 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD75 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD82 DUP6 PUSH2 0x16A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC4 JUMPI PUSH2 0xDC3 DUP2 DUP6 DUP8 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE57 JUMPI PUSH2 0xE06 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEDC JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFB1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1986 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFBD PUSH2 0xD50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDB PUSH2 0x908 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103A JUMPI PUSH2 0xFFE PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AF SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1463 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1354 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x2655 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13D8 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1384 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x13D0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1461 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x14B6 DUP5 PUSH2 0x19AA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D4 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1507 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 DUP4 ADD ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x156A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x155E JUMPI PUSH2 0x155D PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1515 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15E8 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F2 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1605 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1617 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1625 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1697 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A0 DUP2 PUSH2 0x103C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16AE PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F8 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x1733 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1867 JUMPI PUSH1 0x0 PUSH2 0x1743 DUP6 PUSH2 0xC7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17AE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17C1 JUMPI POP PUSH2 0x17BF DUP2 DUP6 PUSH2 0xA85 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1803 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x1865 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18CD DUP4 DUP4 DUP4 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0x1981 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1942 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1939 SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1978 SWAP3 SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1990 DUP4 DUP4 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x19A5 PUSH2 0x199B PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x12B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1A08 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19FE JUMPI PUSH2 0x19FD PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A45 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A74 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A9D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A93 JUMPI PUSH2 0x1A92 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AC2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AE5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1AF4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B07 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BD5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B96 JUMPI POP PUSH2 0x1B95 DUP5 DUP5 PUSH2 0xA85 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BD4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBC DUP4 PUSH2 0xD05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C50 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C47 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C5E DUP4 DUP4 PUSH1 0x0 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CD2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC9 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D20 DUP2 PUSH2 0x1CEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D3D DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D67 DUP5 DUP3 DUP6 ADD PUSH2 0x1D2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D85 DUP2 PUSH2 0x1D70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E08 DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x1E12 DUP2 DUP6 PUSH2 0x1DB1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E22 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0x1E2B DUP2 PUSH2 0x1DEC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E50 DUP2 DUP5 PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E9A DUP3 PUSH2 0x1DEC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECC PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ED8 DUP3 DUP3 PUSH2 0x1E91 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH2 0x1F01 DUP3 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 PUSH2 0x1F2B DUP5 PUSH2 0x1EDD JUMP JUMPDEST PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1E5D JUMP JUMPDEST JUMPDEST PUSH2 0x1F57 DUP5 DUP3 DUP6 PUSH2 0x1F0E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F84 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB8 DUP3 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC8 DUP2 PUSH2 0x1FAD JUMP JUMPDEST DUP2 EQ PUSH2 0x1FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FE5 DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH2 0x202E DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH2 0x205B DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x206C DUP7 DUP3 DUP8 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2089 DUP2 PUSH2 0x2076 JUMP JUMPDEST DUP2 EQ PUSH2 0x2094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20A6 DUP2 PUSH2 0x2080 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E2 DUP2 PUSH2 0x1FAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211A JUMPI PUSH2 0x2119 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2128 DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2139 DUP6 DUP3 DUP7 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x215C JUMPI PUSH2 0x215B PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x216A DUP7 DUP3 DUP8 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x217B DUP7 DUP3 DUP8 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x218C DUP7 DUP3 DUP8 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21AC JUMPI PUSH2 0x21AB PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP5 DUP3 DUP6 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21CC DUP2 PUSH2 0x2076 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21F6 DUP2 PUSH2 0x1D70 JUMP JUMPDEST DUP2 EQ PUSH2 0x2201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2213 DUP2 PUSH2 0x21ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2230 JUMPI PUSH2 0x222F PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x223E DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x224F DUP6 DUP3 DUP7 ADD PUSH2 0x2204 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2274 JUMPI PUSH2 0x2273 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH2 0x227D DUP3 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229D PUSH2 0x2298 DUP5 PUSH2 0x2259 JUMP JUMPDEST PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22B9 JUMPI PUSH2 0x22B8 PUSH2 0x1E5D JUMP JUMPDEST JUMPDEST PUSH2 0x22C4 DUP5 DUP3 DUP6 PUSH2 0x1F0E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22E1 JUMPI PUSH2 0x22E0 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x228A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2314 JUMPI PUSH2 0x2313 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2322 DUP8 DUP3 DUP9 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2333 DUP8 DUP3 DUP9 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2344 DUP8 DUP3 DUP9 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH2 0x2371 DUP8 DUP3 DUP9 ADD PUSH2 0x22CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2394 JUMPI PUSH2 0x2393 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2404 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2417 JUMPI PUSH2 0x2416 PUSH2 0x23BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 PUSH2 0x245B PUSH2 0x2456 DUP5 PUSH2 0x241D JUMP JUMPDEST PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2470 DUP2 PUSH2 0x2445 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24A6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x24B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x24C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2502 DUP3 PUSH2 0x2076 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2555 DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x255F DUP2 DUP6 PUSH2 0x253F JUMP JUMPDEST SWAP4 POP PUSH2 0x256F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2587 DUP3 DUP6 PUSH2 0x254A JUMP JUMPDEST SWAP2 POP PUSH2 0x2593 DUP3 DUP5 PUSH2 0x254A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C6 DUP3 PUSH2 0x259F JUMP JUMPDEST PUSH2 0x25D0 DUP2 DUP6 PUSH2 0x25AA JUMP JUMPDEST SWAP4 POP PUSH2 0x25E0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0x25E9 DUP2 PUSH2 0x1DEC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2609 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x2616 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x2623 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21C3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2635 DUP2 DUP5 PUSH2 0x25BB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x264F DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266B JUMPI PUSH2 0x266A PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2679 DUP5 DUP3 DUP6 ADD PUSH2 0x2640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2713 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0x271D DUP7 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2750 PUSH2 0x274B PUSH2 0x2746 DUP5 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276A DUP4 PUSH2 0x2735 JUMP JUMPDEST PUSH2 0x277E PUSH2 0x2776 DUP3 PUSH2 0x2757 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26E3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2793 PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x279E DUP2 DUP5 DUP5 PUSH2 0x2761 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27C2 JUMPI PUSH2 0x27B7 PUSH1 0x0 DUP3 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2807 JUMPI PUSH2 0x27D8 DUP2 PUSH2 0x26B1 JUMP JUMPDEST PUSH2 0x27E1 DUP5 PUSH2 0x26C6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27F0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2804 PUSH2 0x27FC DUP6 PUSH2 0x26C6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27A3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x280C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2843 DUP4 DUP4 PUSH2 0x2819 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x285C DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2875 JUMPI PUSH2 0x2874 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH2 0x287F DUP3 SLOAD PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x288A DUP3 DUP3 DUP6 PUSH2 0x27C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28BD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x28AB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28B5 DUP6 DUP3 PUSH2 0x2837 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x291D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28CB DUP7 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28F3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28CE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2910 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x290C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2819 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x293A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x2947 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xAB SDIV 0xBC 0xB0 0xB5 0xB5 STATICCALL 0x24 LOG2 0xF9 0x4B LOG0 SWAP4 CALLVALUE SLT 0xC2 PUSH24 0x3FA05224C5854F9406921D98AE9164736F6C634300081800 CALLER ","sourceMap":"292:676:28:-:0;;;466:53;;;;;;;;;;490:22;:20;;;:22;;:::i;:::-;292:676;;7709:422:1;7824:30;7857:26;:24;;;:26;;:::i;:::-;7824:59;;7898:1;:15;;;;;;;;;;;;7894:76;;;7936:23;;;;;;;;;;;;;;7894:76;8001:16;7983:34;;:1;:14;;;;;;;;;;;;:34;;;7979:146;;8050:16;8033:1;:14;;;:33;;;;;;;;;;;;;;;;;;8085:29;8097:16;8085:29;;;;;;:::i;:::-;;;;;;;;7979:146;7758:373;7709:422::o;9071:205::-;9129:30;9171:12;9186:27;:25;;;:27;;:::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:101:31:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;292:676:28:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__ERC721_init_1546":{"entryPoint":3155,"id":1546,"parameterSlots":2,"returnSlots":0},"@__ERC721_init_unchained_1574":{"entryPoint":5600,"id":1574,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":3177,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":5661,"id":81,"parameterSlots":1,"returnSlots":0},"@_approve_2390":{"entryPoint":3416,"id":2390,"parameterSlots":3,"returnSlots":0},"@_approve_2464":{"entryPoint":5870,"id":2464,"parameterSlots":4,"returnSlots":0},"@_baseURI_10184":{"entryPoint":5226,"id":10184,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_2010":{"entryPoint":6338,"id":2010,"parameterSlots":3,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":5536,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":4021,"id":122,"parameterSlots":0,"returnSlots":0},"@_getApproved_1937":{"entryPoint":3333,"id":1937,"parameterSlots":1,"returnSlots":1},"@_getERC721Storage_1530":{"entryPoint":3095,"id":1530,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_461":{"entryPoint":3135,"id":461,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":4371,"id":25,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":5493,"id":447,"parameterSlots":0,"returnSlots":1},"@_isAuthorized_1973":{"entryPoint":6941,"id":1973,"parameterSlots":3,"returnSlots":1},"@_isInitializing_438":{"entryPoint":6909,"id":438,"parameterSlots":0,"returnSlots":1},"@_mint_2186":{"entryPoint":7134,"id":2186,"parameterSlots":2,"returnSlots":0},"@_msgSender_2567":{"entryPoint":3408,"id":2567,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1917":{"entryPoint":5795,"id":1917,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2538":{"entryPoint":3197,"id":2538,"parameterSlots":1,"returnSlots":1},"@_safeMint_2201":{"entryPoint":3991,"id":2201,"parameterSlots":2,"returnSlots":0},"@_safeMint_2231":{"entryPoint":6534,"id":2231,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2509":{"entryPoint":4411,"id":2509,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":4156,"id":193,"parameterSlots":1,"returnSlots":0},"@_update_2136":{"entryPoint":3434,"id":2136,"parameterSlots":3,"returnSlots":1},"@approve_1746":{"entryPoint":1721,"id":1746,"parameterSlots":2,"returnSlots":0},"@balanceOf_1640":{"entryPoint":2091,"id":1640,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_3735":{"entryPoint":4793,"id":3735,"parameterSlots":5,"returnSlots":0},"@getApproved_1763":{"entryPoint":1693,"id":1763,"parameterSlots":1,"returnSlots":1},"@initialize_10159":{"entryPoint":1282,"id":10159,"parameterSlots":3,"returnSlots":0},"@isApprovedForAll_1803":{"entryPoint":2693,"id":1803,"parameterSlots":2,"returnSlots":1},"@log10_8040":{"entryPoint":6570,"id":8040,"parameterSlots":1,"returnSlots":1},"@mint_10175":{"entryPoint":2051,"id":10175,"parameterSlots":1,"returnSlots":0},"@name_1669":{"entryPoint":1121,"id":1669,"parameterSlots":0,"returnSlots":1},"@ownerOf_1653":{"entryPoint":2033,"id":1653,"parameterSlots":1,"returnSlots":1},"@owner_105":{"entryPoint":2312,"id":105,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":2292,"id":136,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1867":{"entryPoint":2001,"id":1867,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1897":{"entryPoint":2551,"id":1897,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1779":{"entryPoint":2529,"id":1779,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1605":{"entryPoint":895,"id":1605,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2624":{"entryPoint":2989,"id":2624,"parameterSlots":1,"returnSlots":1},"@symbol_1685":{"entryPoint":2368,"id":1685,"parameterSlots":0,"returnSlots":1},"@toString_5287":{"entryPoint":5287,"id":5287,"parameterSlots":1,"returnSlots":1},"@tokenURI_1721":{"entryPoint":2588,"id":1721,"parameterSlots":1,"returnSlots":1},"@transferFrom_1849":{"entryPoint":1743,"id":1849,"parameterSlots":3,"returnSlots":0},"@transferOwnership_164":{"entryPoint":2855,"id":164,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8842,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":7965,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7470,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":9792,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8031,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9085,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8515,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8954,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8729,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8451,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7491,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":9813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address":{"entryPoint":8171,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":8364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8409,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7548,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":9659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":9319,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7677,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8643,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9595,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9716,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":10533,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":9361,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7563,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":9334,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8658,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7874,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7383,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8793,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":7901,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":9905,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9631,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7590,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":9642,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7601,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9535,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":10182,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":8109,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7536,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7403,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":9245,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8077,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8310,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":9255,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10147,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":9285,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":10037,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10323,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7950,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7618,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":9926,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9196,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10295,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":7825,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9275,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":9463,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10265,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9416,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":9858,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9149,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7778,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10071,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7768,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7773,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7398,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7393,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7660,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":9942,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10252,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10123,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":9955,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10081,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8127,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8685,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7447,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8320,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10118,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:22357:31","nodeType":"YulBlock","src":"0:22357:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"378:105:31","nodeType":"YulBlock","src":"378:105:31","statements":[{"nativeSrc":"388:89:31","nodeType":"YulAssignment","src":"388:89:31","value":{"arguments":[{"name":"value","nativeSrc":"403:5:31","nodeType":"YulIdentifier","src":"403:5:31"},{"kind":"number","nativeSrc":"410:66:31","nodeType":"YulLiteral","src":"410:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:31","nodeType":"YulIdentifier","src":"399:3:31"},"nativeSrc":"399:78:31","nodeType":"YulFunctionCall","src":"399:78:31"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:31","nodeType":"YulIdentifier","src":"388:7:31"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:31","nodeType":"YulTypedName","src":"360:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:31","nodeType":"YulTypedName","src":"370:7:31","type":""}],"src":"334:149:31"},{"body":{"nativeSrc":"531:78:31","nodeType":"YulBlock","src":"531:78:31","statements":[{"body":{"nativeSrc":"587:16:31","nodeType":"YulBlock","src":"587:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:31","nodeType":"YulLiteral","src":"596:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:31","nodeType":"YulLiteral","src":"599:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:31","nodeType":"YulIdentifier","src":"589:6:31"},"nativeSrc":"589:12:31","nodeType":"YulFunctionCall","src":"589:12:31"},"nativeSrc":"589:12:31","nodeType":"YulExpressionStatement","src":"589:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:31","nodeType":"YulIdentifier","src":"554:5:31"},{"arguments":[{"name":"value","nativeSrc":"578:5:31","nodeType":"YulIdentifier","src":"578:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:31","nodeType":"YulIdentifier","src":"561:16:31"},"nativeSrc":"561:23:31","nodeType":"YulFunctionCall","src":"561:23:31"}],"functionName":{"name":"eq","nativeSrc":"551:2:31","nodeType":"YulIdentifier","src":"551:2:31"},"nativeSrc":"551:34:31","nodeType":"YulFunctionCall","src":"551:34:31"}],"functionName":{"name":"iszero","nativeSrc":"544:6:31","nodeType":"YulIdentifier","src":"544:6:31"},"nativeSrc":"544:42:31","nodeType":"YulFunctionCall","src":"544:42:31"},"nativeSrc":"541:62:31","nodeType":"YulIf","src":"541:62:31"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:31","nodeType":"YulTypedName","src":"524:5:31","type":""}],"src":"489:120:31"},{"body":{"nativeSrc":"666:86:31","nodeType":"YulBlock","src":"666:86:31","statements":[{"nativeSrc":"676:29:31","nodeType":"YulAssignment","src":"676:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:31","nodeType":"YulIdentifier","src":"698:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:31","nodeType":"YulIdentifier","src":"685:12:31"},"nativeSrc":"685:20:31","nodeType":"YulFunctionCall","src":"685:20:31"},"variableNames":[{"name":"value","nativeSrc":"676:5:31","nodeType":"YulIdentifier","src":"676:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:31","nodeType":"YulIdentifier","src":"740:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:31","nodeType":"YulIdentifier","src":"714:25:31"},"nativeSrc":"714:32:31","nodeType":"YulFunctionCall","src":"714:32:31"},"nativeSrc":"714:32:31","nodeType":"YulExpressionStatement","src":"714:32:31"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:31","nodeType":"YulTypedName","src":"644:6:31","type":""},{"name":"end","nativeSrc":"652:3:31","nodeType":"YulTypedName","src":"652:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:31","nodeType":"YulTypedName","src":"660:5:31","type":""}],"src":"615:137:31"},{"body":{"nativeSrc":"823:262:31","nodeType":"YulBlock","src":"823:262:31","statements":[{"body":{"nativeSrc":"869:83:31","nodeType":"YulBlock","src":"869:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:31","nodeType":"YulIdentifier","src":"871:77:31"},"nativeSrc":"871:79:31","nodeType":"YulFunctionCall","src":"871:79:31"},"nativeSrc":"871:79:31","nodeType":"YulExpressionStatement","src":"871:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:31","nodeType":"YulIdentifier","src":"844:7:31"},{"name":"headStart","nativeSrc":"853:9:31","nodeType":"YulIdentifier","src":"853:9:31"}],"functionName":{"name":"sub","nativeSrc":"840:3:31","nodeType":"YulIdentifier","src":"840:3:31"},"nativeSrc":"840:23:31","nodeType":"YulFunctionCall","src":"840:23:31"},{"kind":"number","nativeSrc":"865:2:31","nodeType":"YulLiteral","src":"865:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:31","nodeType":"YulIdentifier","src":"836:3:31"},"nativeSrc":"836:32:31","nodeType":"YulFunctionCall","src":"836:32:31"},"nativeSrc":"833:119:31","nodeType":"YulIf","src":"833:119:31"},{"nativeSrc":"962:116:31","nodeType":"YulBlock","src":"962:116:31","statements":[{"nativeSrc":"977:15:31","nodeType":"YulVariableDeclaration","src":"977:15:31","value":{"kind":"number","nativeSrc":"991:1:31","nodeType":"YulLiteral","src":"991:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:31","nodeType":"YulTypedName","src":"981:6:31","type":""}]},{"nativeSrc":"1006:62:31","nodeType":"YulAssignment","src":"1006:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:31","nodeType":"YulIdentifier","src":"1040:9:31"},{"name":"offset","nativeSrc":"1051:6:31","nodeType":"YulIdentifier","src":"1051:6:31"}],"functionName":{"name":"add","nativeSrc":"1036:3:31","nodeType":"YulIdentifier","src":"1036:3:31"},"nativeSrc":"1036:22:31","nodeType":"YulFunctionCall","src":"1036:22:31"},{"name":"dataEnd","nativeSrc":"1060:7:31","nodeType":"YulIdentifier","src":"1060:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:31","nodeType":"YulIdentifier","src":"1016:19:31"},"nativeSrc":"1016:52:31","nodeType":"YulFunctionCall","src":"1016:52:31"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:31","nodeType":"YulIdentifier","src":"1006:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:31","nodeType":"YulTypedName","src":"793:9:31","type":""},{"name":"dataEnd","nativeSrc":"804:7:31","nodeType":"YulTypedName","src":"804:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:31","nodeType":"YulTypedName","src":"816:6:31","type":""}],"src":"758:327:31"},{"body":{"nativeSrc":"1133:48:31","nodeType":"YulBlock","src":"1133:48:31","statements":[{"nativeSrc":"1143:32:31","nodeType":"YulAssignment","src":"1143:32:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:31","nodeType":"YulIdentifier","src":"1168:5:31"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:31","nodeType":"YulIdentifier","src":"1161:6:31"},"nativeSrc":"1161:13:31","nodeType":"YulFunctionCall","src":"1161:13:31"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:31","nodeType":"YulIdentifier","src":"1154:6:31"},"nativeSrc":"1154:21:31","nodeType":"YulFunctionCall","src":"1154:21:31"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:31","nodeType":"YulIdentifier","src":"1143:7:31"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:31","nodeType":"YulTypedName","src":"1115:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:31","nodeType":"YulTypedName","src":"1125:7:31","type":""}],"src":"1091:90:31"},{"body":{"nativeSrc":"1246:50:31","nodeType":"YulBlock","src":"1246:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:31","nodeType":"YulIdentifier","src":"1263:3:31"},{"arguments":[{"name":"value","nativeSrc":"1283:5:31","nodeType":"YulIdentifier","src":"1283:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:31","nodeType":"YulIdentifier","src":"1268:14:31"},"nativeSrc":"1268:21:31","nodeType":"YulFunctionCall","src":"1268:21:31"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:31","nodeType":"YulIdentifier","src":"1256:6:31"},"nativeSrc":"1256:34:31","nodeType":"YulFunctionCall","src":"1256:34:31"},"nativeSrc":"1256:34:31","nodeType":"YulExpressionStatement","src":"1256:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:31","nodeType":"YulTypedName","src":"1234:5:31","type":""},{"name":"pos","nativeSrc":"1241:3:31","nodeType":"YulTypedName","src":"1241:3:31","type":""}],"src":"1187:109:31"},{"body":{"nativeSrc":"1394:118:31","nodeType":"YulBlock","src":"1394:118:31","statements":[{"nativeSrc":"1404:26:31","nodeType":"YulAssignment","src":"1404:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:31","nodeType":"YulIdentifier","src":"1416:9:31"},{"kind":"number","nativeSrc":"1427:2:31","nodeType":"YulLiteral","src":"1427:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:31","nodeType":"YulIdentifier","src":"1412:3:31"},"nativeSrc":"1412:18:31","nodeType":"YulFunctionCall","src":"1412:18:31"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:31","nodeType":"YulIdentifier","src":"1404:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:31","nodeType":"YulIdentifier","src":"1478:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:31","nodeType":"YulIdentifier","src":"1491:9:31"},{"kind":"number","nativeSrc":"1502:1:31","nodeType":"YulLiteral","src":"1502:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:31","nodeType":"YulIdentifier","src":"1487:3:31"},"nativeSrc":"1487:17:31","nodeType":"YulFunctionCall","src":"1487:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:31","nodeType":"YulIdentifier","src":"1440:37:31"},"nativeSrc":"1440:65:31","nodeType":"YulFunctionCall","src":"1440:65:31"},"nativeSrc":"1440:65:31","nodeType":"YulExpressionStatement","src":"1440:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:31","nodeType":"YulTypedName","src":"1366:9:31","type":""},{"name":"value0","nativeSrc":"1378:6:31","nodeType":"YulTypedName","src":"1378:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:31","nodeType":"YulTypedName","src":"1389:4:31","type":""}],"src":"1302:210:31"},{"body":{"nativeSrc":"1577:40:31","nodeType":"YulBlock","src":"1577:40:31","statements":[{"nativeSrc":"1588:22:31","nodeType":"YulAssignment","src":"1588:22:31","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:31","nodeType":"YulIdentifier","src":"1604:5:31"}],"functionName":{"name":"mload","nativeSrc":"1598:5:31","nodeType":"YulIdentifier","src":"1598:5:31"},"nativeSrc":"1598:12:31","nodeType":"YulFunctionCall","src":"1598:12:31"},"variableNames":[{"name":"length","nativeSrc":"1588:6:31","nodeType":"YulIdentifier","src":"1588:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:31","nodeType":"YulTypedName","src":"1560:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:31","nodeType":"YulTypedName","src":"1570:6:31","type":""}],"src":"1518:99:31"},{"body":{"nativeSrc":"1719:73:31","nodeType":"YulBlock","src":"1719:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:31","nodeType":"YulIdentifier","src":"1736:3:31"},{"name":"length","nativeSrc":"1741:6:31","nodeType":"YulIdentifier","src":"1741:6:31"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:31","nodeType":"YulIdentifier","src":"1729:6:31"},"nativeSrc":"1729:19:31","nodeType":"YulFunctionCall","src":"1729:19:31"},"nativeSrc":"1729:19:31","nodeType":"YulExpressionStatement","src":"1729:19:31"},{"nativeSrc":"1757:29:31","nodeType":"YulAssignment","src":"1757:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:31","nodeType":"YulIdentifier","src":"1776:3:31"},{"kind":"number","nativeSrc":"1781:4:31","nodeType":"YulLiteral","src":"1781:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:31","nodeType":"YulIdentifier","src":"1772:3:31"},"nativeSrc":"1772:14:31","nodeType":"YulFunctionCall","src":"1772:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:31","nodeType":"YulIdentifier","src":"1757:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:31","nodeType":"YulTypedName","src":"1691:3:31","type":""},{"name":"length","nativeSrc":"1696:6:31","nodeType":"YulTypedName","src":"1696:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:31","nodeType":"YulTypedName","src":"1707:11:31","type":""}],"src":"1623:169:31"},{"body":{"nativeSrc":"1860:184:31","nodeType":"YulBlock","src":"1860:184:31","statements":[{"nativeSrc":"1870:10:31","nodeType":"YulVariableDeclaration","src":"1870:10:31","value":{"kind":"number","nativeSrc":"1879:1:31","nodeType":"YulLiteral","src":"1879:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1874:1:31","nodeType":"YulTypedName","src":"1874:1:31","type":""}]},{"body":{"nativeSrc":"1939:63:31","nodeType":"YulBlock","src":"1939:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1964:3:31","nodeType":"YulIdentifier","src":"1964:3:31"},{"name":"i","nativeSrc":"1969:1:31","nodeType":"YulIdentifier","src":"1969:1:31"}],"functionName":{"name":"add","nativeSrc":"1960:3:31","nodeType":"YulIdentifier","src":"1960:3:31"},"nativeSrc":"1960:11:31","nodeType":"YulFunctionCall","src":"1960:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1983:3:31","nodeType":"YulIdentifier","src":"1983:3:31"},{"name":"i","nativeSrc":"1988:1:31","nodeType":"YulIdentifier","src":"1988:1:31"}],"functionName":{"name":"add","nativeSrc":"1979:3:31","nodeType":"YulIdentifier","src":"1979:3:31"},"nativeSrc":"1979:11:31","nodeType":"YulFunctionCall","src":"1979:11:31"}],"functionName":{"name":"mload","nativeSrc":"1973:5:31","nodeType":"YulIdentifier","src":"1973:5:31"},"nativeSrc":"1973:18:31","nodeType":"YulFunctionCall","src":"1973:18:31"}],"functionName":{"name":"mstore","nativeSrc":"1953:6:31","nodeType":"YulIdentifier","src":"1953:6:31"},"nativeSrc":"1953:39:31","nodeType":"YulFunctionCall","src":"1953:39:31"},"nativeSrc":"1953:39:31","nodeType":"YulExpressionStatement","src":"1953:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1900:1:31","nodeType":"YulIdentifier","src":"1900:1:31"},{"name":"length","nativeSrc":"1903:6:31","nodeType":"YulIdentifier","src":"1903:6:31"}],"functionName":{"name":"lt","nativeSrc":"1897:2:31","nodeType":"YulIdentifier","src":"1897:2:31"},"nativeSrc":"1897:13:31","nodeType":"YulFunctionCall","src":"1897:13:31"},"nativeSrc":"1889:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"1911:19:31","nodeType":"YulBlock","src":"1911:19:31","statements":[{"nativeSrc":"1913:15:31","nodeType":"YulAssignment","src":"1913:15:31","value":{"arguments":[{"name":"i","nativeSrc":"1922:1:31","nodeType":"YulIdentifier","src":"1922:1:31"},{"kind":"number","nativeSrc":"1925:2:31","nodeType":"YulLiteral","src":"1925:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1918:3:31","nodeType":"YulIdentifier","src":"1918:3:31"},"nativeSrc":"1918:10:31","nodeType":"YulFunctionCall","src":"1918:10:31"},"variableNames":[{"name":"i","nativeSrc":"1913:1:31","nodeType":"YulIdentifier","src":"1913:1:31"}]}]},"pre":{"nativeSrc":"1893:3:31","nodeType":"YulBlock","src":"1893:3:31","statements":[]},"src":"1889:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2022:3:31","nodeType":"YulIdentifier","src":"2022:3:31"},{"name":"length","nativeSrc":"2027:6:31","nodeType":"YulIdentifier","src":"2027:6:31"}],"functionName":{"name":"add","nativeSrc":"2018:3:31","nodeType":"YulIdentifier","src":"2018:3:31"},"nativeSrc":"2018:16:31","nodeType":"YulFunctionCall","src":"2018:16:31"},{"kind":"number","nativeSrc":"2036:1:31","nodeType":"YulLiteral","src":"2036:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2011:6:31","nodeType":"YulIdentifier","src":"2011:6:31"},"nativeSrc":"2011:27:31","nodeType":"YulFunctionCall","src":"2011:27:31"},"nativeSrc":"2011:27:31","nodeType":"YulExpressionStatement","src":"2011:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:246:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:31","nodeType":"YulTypedName","src":"1842:3:31","type":""},{"name":"dst","nativeSrc":"1847:3:31","nodeType":"YulTypedName","src":"1847:3:31","type":""},{"name":"length","nativeSrc":"1852:6:31","nodeType":"YulTypedName","src":"1852:6:31","type":""}],"src":"1798:246:31"},{"body":{"nativeSrc":"2098:54:31","nodeType":"YulBlock","src":"2098:54:31","statements":[{"nativeSrc":"2108:38:31","nodeType":"YulAssignment","src":"2108:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2126:5:31","nodeType":"YulIdentifier","src":"2126:5:31"},{"kind":"number","nativeSrc":"2133:2:31","nodeType":"YulLiteral","src":"2133:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2122:3:31","nodeType":"YulIdentifier","src":"2122:3:31"},"nativeSrc":"2122:14:31","nodeType":"YulFunctionCall","src":"2122:14:31"},{"arguments":[{"kind":"number","nativeSrc":"2142:2:31","nodeType":"YulLiteral","src":"2142:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2138:3:31","nodeType":"YulIdentifier","src":"2138:3:31"},"nativeSrc":"2138:7:31","nodeType":"YulFunctionCall","src":"2138:7:31"}],"functionName":{"name":"and","nativeSrc":"2118:3:31","nodeType":"YulIdentifier","src":"2118:3:31"},"nativeSrc":"2118:28:31","nodeType":"YulFunctionCall","src":"2118:28:31"},"variableNames":[{"name":"result","nativeSrc":"2108:6:31","nodeType":"YulIdentifier","src":"2108:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2050:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2081:5:31","nodeType":"YulTypedName","src":"2081:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2091:6:31","nodeType":"YulTypedName","src":"2091:6:31","type":""}],"src":"2050:102:31"},{"body":{"nativeSrc":"2250:285:31","nodeType":"YulBlock","src":"2250:285:31","statements":[{"nativeSrc":"2260:53:31","nodeType":"YulVariableDeclaration","src":"2260:53:31","value":{"arguments":[{"name":"value","nativeSrc":"2307:5:31","nodeType":"YulIdentifier","src":"2307:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2274:32:31","nodeType":"YulIdentifier","src":"2274:32:31"},"nativeSrc":"2274:39:31","nodeType":"YulFunctionCall","src":"2274:39:31"},"variables":[{"name":"length","nativeSrc":"2264:6:31","nodeType":"YulTypedName","src":"2264:6:31","type":""}]},{"nativeSrc":"2322:78:31","nodeType":"YulAssignment","src":"2322:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"2388:3:31","nodeType":"YulIdentifier","src":"2388:3:31"},{"name":"length","nativeSrc":"2393:6:31","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2329:58:31","nodeType":"YulIdentifier","src":"2329:58:31"},"nativeSrc":"2329:71:31","nodeType":"YulFunctionCall","src":"2329:71:31"},"variableNames":[{"name":"pos","nativeSrc":"2322:3:31","nodeType":"YulIdentifier","src":"2322:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2448:5:31","nodeType":"YulIdentifier","src":"2448:5:31"},{"kind":"number","nativeSrc":"2455:4:31","nodeType":"YulLiteral","src":"2455:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2444:3:31","nodeType":"YulIdentifier","src":"2444:3:31"},"nativeSrc":"2444:16:31","nodeType":"YulFunctionCall","src":"2444:16:31"},{"name":"pos","nativeSrc":"2462:3:31","nodeType":"YulIdentifier","src":"2462:3:31"},{"name":"length","nativeSrc":"2467:6:31","nodeType":"YulIdentifier","src":"2467:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2409:34:31","nodeType":"YulIdentifier","src":"2409:34:31"},"nativeSrc":"2409:65:31","nodeType":"YulFunctionCall","src":"2409:65:31"},"nativeSrc":"2409:65:31","nodeType":"YulExpressionStatement","src":"2409:65:31"},{"nativeSrc":"2483:46:31","nodeType":"YulAssignment","src":"2483:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"2494:3:31","nodeType":"YulIdentifier","src":"2494:3:31"},{"arguments":[{"name":"length","nativeSrc":"2521:6:31","nodeType":"YulIdentifier","src":"2521:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2499:21:31","nodeType":"YulIdentifier","src":"2499:21:31"},"nativeSrc":"2499:29:31","nodeType":"YulFunctionCall","src":"2499:29:31"}],"functionName":{"name":"add","nativeSrc":"2490:3:31","nodeType":"YulIdentifier","src":"2490:3:31"},"nativeSrc":"2490:39:31","nodeType":"YulFunctionCall","src":"2490:39:31"},"variableNames":[{"name":"end","nativeSrc":"2483:3:31","nodeType":"YulIdentifier","src":"2483:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2158:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2231:5:31","nodeType":"YulTypedName","src":"2231:5:31","type":""},{"name":"pos","nativeSrc":"2238:3:31","nodeType":"YulTypedName","src":"2238:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2246:3:31","nodeType":"YulTypedName","src":"2246:3:31","type":""}],"src":"2158:377:31"},{"body":{"nativeSrc":"2659:195:31","nodeType":"YulBlock","src":"2659:195:31","statements":[{"nativeSrc":"2669:26:31","nodeType":"YulAssignment","src":"2669:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:31","nodeType":"YulIdentifier","src":"2681:9:31"},{"kind":"number","nativeSrc":"2692:2:31","nodeType":"YulLiteral","src":"2692:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2677:3:31","nodeType":"YulIdentifier","src":"2677:3:31"},"nativeSrc":"2677:18:31","nodeType":"YulFunctionCall","src":"2677:18:31"},"variableNames":[{"name":"tail","nativeSrc":"2669:4:31","nodeType":"YulIdentifier","src":"2669:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2716:9:31","nodeType":"YulIdentifier","src":"2716:9:31"},{"kind":"number","nativeSrc":"2727:1:31","nodeType":"YulLiteral","src":"2727:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2712:3:31","nodeType":"YulIdentifier","src":"2712:3:31"},"nativeSrc":"2712:17:31","nodeType":"YulFunctionCall","src":"2712:17:31"},{"arguments":[{"name":"tail","nativeSrc":"2735:4:31","nodeType":"YulIdentifier","src":"2735:4:31"},{"name":"headStart","nativeSrc":"2741:9:31","nodeType":"YulIdentifier","src":"2741:9:31"}],"functionName":{"name":"sub","nativeSrc":"2731:3:31","nodeType":"YulIdentifier","src":"2731:3:31"},"nativeSrc":"2731:20:31","nodeType":"YulFunctionCall","src":"2731:20:31"}],"functionName":{"name":"mstore","nativeSrc":"2705:6:31","nodeType":"YulIdentifier","src":"2705:6:31"},"nativeSrc":"2705:47:31","nodeType":"YulFunctionCall","src":"2705:47:31"},"nativeSrc":"2705:47:31","nodeType":"YulExpressionStatement","src":"2705:47:31"},{"nativeSrc":"2761:86:31","nodeType":"YulAssignment","src":"2761:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"2833:6:31","nodeType":"YulIdentifier","src":"2833:6:31"},{"name":"tail","nativeSrc":"2842:4:31","nodeType":"YulIdentifier","src":"2842:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2769:63:31","nodeType":"YulIdentifier","src":"2769:63:31"},"nativeSrc":"2769:78:31","nodeType":"YulFunctionCall","src":"2769:78:31"},"variableNames":[{"name":"tail","nativeSrc":"2761:4:31","nodeType":"YulIdentifier","src":"2761:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2541:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2631:9:31","nodeType":"YulTypedName","src":"2631:9:31","type":""},{"name":"value0","nativeSrc":"2643:6:31","nodeType":"YulTypedName","src":"2643:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2654:4:31","nodeType":"YulTypedName","src":"2654:4:31","type":""}],"src":"2541:313:31"},{"body":{"nativeSrc":"2949:28:31","nodeType":"YulBlock","src":"2949:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2966:1:31","nodeType":"YulLiteral","src":"2966:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"2969:1:31","nodeType":"YulLiteral","src":"2969:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2959:6:31","nodeType":"YulIdentifier","src":"2959:6:31"},"nativeSrc":"2959:12:31","nodeType":"YulFunctionCall","src":"2959:12:31"},"nativeSrc":"2959:12:31","nodeType":"YulExpressionStatement","src":"2959:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2860:117:31","nodeType":"YulFunctionDefinition","src":"2860:117:31"},{"body":{"nativeSrc":"3072:28:31","nodeType":"YulBlock","src":"3072:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3089:1:31","nodeType":"YulLiteral","src":"3089:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3092:1:31","nodeType":"YulLiteral","src":"3092:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3082:6:31","nodeType":"YulIdentifier","src":"3082:6:31"},"nativeSrc":"3082:12:31","nodeType":"YulFunctionCall","src":"3082:12:31"},"nativeSrc":"3082:12:31","nodeType":"YulExpressionStatement","src":"3082:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2983:117:31","nodeType":"YulFunctionDefinition","src":"2983:117:31"},{"body":{"nativeSrc":"3134:152:31","nodeType":"YulBlock","src":"3134:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3151:1:31","nodeType":"YulLiteral","src":"3151:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3154:77:31","nodeType":"YulLiteral","src":"3154:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3144:6:31","nodeType":"YulIdentifier","src":"3144:6:31"},"nativeSrc":"3144:88:31","nodeType":"YulFunctionCall","src":"3144:88:31"},"nativeSrc":"3144:88:31","nodeType":"YulExpressionStatement","src":"3144:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3248:1:31","nodeType":"YulLiteral","src":"3248:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"3251:4:31","nodeType":"YulLiteral","src":"3251:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"3241:6:31","nodeType":"YulIdentifier","src":"3241:6:31"},"nativeSrc":"3241:15:31","nodeType":"YulFunctionCall","src":"3241:15:31"},"nativeSrc":"3241:15:31","nodeType":"YulExpressionStatement","src":"3241:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:1:31","nodeType":"YulLiteral","src":"3272:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3275:4:31","nodeType":"YulLiteral","src":"3275:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3265:6:31","nodeType":"YulIdentifier","src":"3265:6:31"},"nativeSrc":"3265:15:31","nodeType":"YulFunctionCall","src":"3265:15:31"},"nativeSrc":"3265:15:31","nodeType":"YulExpressionStatement","src":"3265:15:31"}]},"name":"panic_error_0x41","nativeSrc":"3106:180:31","nodeType":"YulFunctionDefinition","src":"3106:180:31"},{"body":{"nativeSrc":"3335:238:31","nodeType":"YulBlock","src":"3335:238:31","statements":[{"nativeSrc":"3345:58:31","nodeType":"YulVariableDeclaration","src":"3345:58:31","value":{"arguments":[{"name":"memPtr","nativeSrc":"3367:6:31","nodeType":"YulIdentifier","src":"3367:6:31"},{"arguments":[{"name":"size","nativeSrc":"3397:4:31","nodeType":"YulIdentifier","src":"3397:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3375:21:31","nodeType":"YulIdentifier","src":"3375:21:31"},"nativeSrc":"3375:27:31","nodeType":"YulFunctionCall","src":"3375:27:31"}],"functionName":{"name":"add","nativeSrc":"3363:3:31","nodeType":"YulIdentifier","src":"3363:3:31"},"nativeSrc":"3363:40:31","nodeType":"YulFunctionCall","src":"3363:40:31"},"variables":[{"name":"newFreePtr","nativeSrc":"3349:10:31","nodeType":"YulTypedName","src":"3349:10:31","type":""}]},{"body":{"nativeSrc":"3514:22:31","nodeType":"YulBlock","src":"3514:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3516:16:31","nodeType":"YulIdentifier","src":"3516:16:31"},"nativeSrc":"3516:18:31","nodeType":"YulFunctionCall","src":"3516:18:31"},"nativeSrc":"3516:18:31","nodeType":"YulExpressionStatement","src":"3516:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3457:10:31","nodeType":"YulIdentifier","src":"3457:10:31"},{"kind":"number","nativeSrc":"3469:18:31","nodeType":"YulLiteral","src":"3469:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3454:2:31","nodeType":"YulIdentifier","src":"3454:2:31"},"nativeSrc":"3454:34:31","nodeType":"YulFunctionCall","src":"3454:34:31"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3493:10:31","nodeType":"YulIdentifier","src":"3493:10:31"},{"name":"memPtr","nativeSrc":"3505:6:31","nodeType":"YulIdentifier","src":"3505:6:31"}],"functionName":{"name":"lt","nativeSrc":"3490:2:31","nodeType":"YulIdentifier","src":"3490:2:31"},"nativeSrc":"3490:22:31","nodeType":"YulFunctionCall","src":"3490:22:31"}],"functionName":{"name":"or","nativeSrc":"3451:2:31","nodeType":"YulIdentifier","src":"3451:2:31"},"nativeSrc":"3451:62:31","nodeType":"YulFunctionCall","src":"3451:62:31"},"nativeSrc":"3448:88:31","nodeType":"YulIf","src":"3448:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3552:2:31","nodeType":"YulLiteral","src":"3552:2:31","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3556:10:31","nodeType":"YulIdentifier","src":"3556:10:31"}],"functionName":{"name":"mstore","nativeSrc":"3545:6:31","nodeType":"YulIdentifier","src":"3545:6:31"},"nativeSrc":"3545:22:31","nodeType":"YulFunctionCall","src":"3545:22:31"},"nativeSrc":"3545:22:31","nodeType":"YulExpressionStatement","src":"3545:22:31"}]},"name":"finalize_allocation","nativeSrc":"3292:281:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3321:6:31","nodeType":"YulTypedName","src":"3321:6:31","type":""},{"name":"size","nativeSrc":"3329:4:31","nodeType":"YulTypedName","src":"3329:4:31","type":""}],"src":"3292:281:31"},{"body":{"nativeSrc":"3620:88:31","nodeType":"YulBlock","src":"3620:88:31","statements":[{"nativeSrc":"3630:30:31","nodeType":"YulAssignment","src":"3630:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"3640:18:31","nodeType":"YulIdentifier","src":"3640:18:31"},"nativeSrc":"3640:20:31","nodeType":"YulFunctionCall","src":"3640:20:31"},"variableNames":[{"name":"memPtr","nativeSrc":"3630:6:31","nodeType":"YulIdentifier","src":"3630:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3689:6:31","nodeType":"YulIdentifier","src":"3689:6:31"},{"name":"size","nativeSrc":"3697:4:31","nodeType":"YulIdentifier","src":"3697:4:31"}],"functionName":{"name":"finalize_allocation","nativeSrc":"3669:19:31","nodeType":"YulIdentifier","src":"3669:19:31"},"nativeSrc":"3669:33:31","nodeType":"YulFunctionCall","src":"3669:33:31"},"nativeSrc":"3669:33:31","nodeType":"YulExpressionStatement","src":"3669:33:31"}]},"name":"allocate_memory","nativeSrc":"3579:129:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"3604:4:31","nodeType":"YulTypedName","src":"3604:4:31","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"3613:6:31","nodeType":"YulTypedName","src":"3613:6:31","type":""}],"src":"3579:129:31"},{"body":{"nativeSrc":"3781:241:31","nodeType":"YulBlock","src":"3781:241:31","statements":[{"body":{"nativeSrc":"3886:22:31","nodeType":"YulBlock","src":"3886:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3888:16:31","nodeType":"YulIdentifier","src":"3888:16:31"},"nativeSrc":"3888:18:31","nodeType":"YulFunctionCall","src":"3888:18:31"},"nativeSrc":"3888:18:31","nodeType":"YulExpressionStatement","src":"3888:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3858:6:31","nodeType":"YulIdentifier","src":"3858:6:31"},{"kind":"number","nativeSrc":"3866:18:31","nodeType":"YulLiteral","src":"3866:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3855:2:31","nodeType":"YulIdentifier","src":"3855:2:31"},"nativeSrc":"3855:30:31","nodeType":"YulFunctionCall","src":"3855:30:31"},"nativeSrc":"3852:56:31","nodeType":"YulIf","src":"3852:56:31"},{"nativeSrc":"3918:37:31","nodeType":"YulAssignment","src":"3918:37:31","value":{"arguments":[{"name":"length","nativeSrc":"3948:6:31","nodeType":"YulIdentifier","src":"3948:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3926:21:31","nodeType":"YulIdentifier","src":"3926:21:31"},"nativeSrc":"3926:29:31","nodeType":"YulFunctionCall","src":"3926:29:31"},"variableNames":[{"name":"size","nativeSrc":"3918:4:31","nodeType":"YulIdentifier","src":"3918:4:31"}]},{"nativeSrc":"3992:23:31","nodeType":"YulAssignment","src":"3992:23:31","value":{"arguments":[{"name":"size","nativeSrc":"4004:4:31","nodeType":"YulIdentifier","src":"4004:4:31"},{"kind":"number","nativeSrc":"4010:4:31","nodeType":"YulLiteral","src":"4010:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4000:3:31","nodeType":"YulIdentifier","src":"4000:3:31"},"nativeSrc":"4000:15:31","nodeType":"YulFunctionCall","src":"4000:15:31"},"variableNames":[{"name":"size","nativeSrc":"3992:4:31","nodeType":"YulIdentifier","src":"3992:4:31"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"3714:308:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"3765:6:31","nodeType":"YulTypedName","src":"3765:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"3776:4:31","nodeType":"YulTypedName","src":"3776:4:31","type":""}],"src":"3714:308:31"},{"body":{"nativeSrc":"4092:82:31","nodeType":"YulBlock","src":"4092:82:31","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"4115:3:31","nodeType":"YulIdentifier","src":"4115:3:31"},{"name":"src","nativeSrc":"4120:3:31","nodeType":"YulIdentifier","src":"4120:3:31"},{"name":"length","nativeSrc":"4125:6:31","nodeType":"YulIdentifier","src":"4125:6:31"}],"functionName":{"name":"calldatacopy","nativeSrc":"4102:12:31","nodeType":"YulIdentifier","src":"4102:12:31"},"nativeSrc":"4102:30:31","nodeType":"YulFunctionCall","src":"4102:30:31"},"nativeSrc":"4102:30:31","nodeType":"YulExpressionStatement","src":"4102:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4152:3:31","nodeType":"YulIdentifier","src":"4152:3:31"},{"name":"length","nativeSrc":"4157:6:31","nodeType":"YulIdentifier","src":"4157:6:31"}],"functionName":{"name":"add","nativeSrc":"4148:3:31","nodeType":"YulIdentifier","src":"4148:3:31"},"nativeSrc":"4148:16:31","nodeType":"YulFunctionCall","src":"4148:16:31"},{"kind":"number","nativeSrc":"4166:1:31","nodeType":"YulLiteral","src":"4166:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4141:6:31","nodeType":"YulIdentifier","src":"4141:6:31"},"nativeSrc":"4141:27:31","nodeType":"YulFunctionCall","src":"4141:27:31"},"nativeSrc":"4141:27:31","nodeType":"YulExpressionStatement","src":"4141:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4028:146:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4074:3:31","nodeType":"YulTypedName","src":"4074:3:31","type":""},{"name":"dst","nativeSrc":"4079:3:31","nodeType":"YulTypedName","src":"4079:3:31","type":""},{"name":"length","nativeSrc":"4084:6:31","nodeType":"YulTypedName","src":"4084:6:31","type":""}],"src":"4028:146:31"},{"body":{"nativeSrc":"4264:341:31","nodeType":"YulBlock","src":"4264:341:31","statements":[{"nativeSrc":"4274:75:31","nodeType":"YulAssignment","src":"4274:75:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"4341:6:31","nodeType":"YulIdentifier","src":"4341:6:31"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"4299:41:31","nodeType":"YulIdentifier","src":"4299:41:31"},"nativeSrc":"4299:49:31","nodeType":"YulFunctionCall","src":"4299:49:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"4283:15:31","nodeType":"YulIdentifier","src":"4283:15:31"},"nativeSrc":"4283:66:31","nodeType":"YulFunctionCall","src":"4283:66:31"},"variableNames":[{"name":"array","nativeSrc":"4274:5:31","nodeType":"YulIdentifier","src":"4274:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"4365:5:31","nodeType":"YulIdentifier","src":"4365:5:31"},{"name":"length","nativeSrc":"4372:6:31","nodeType":"YulIdentifier","src":"4372:6:31"}],"functionName":{"name":"mstore","nativeSrc":"4358:6:31","nodeType":"YulIdentifier","src":"4358:6:31"},"nativeSrc":"4358:21:31","nodeType":"YulFunctionCall","src":"4358:21:31"},"nativeSrc":"4358:21:31","nodeType":"YulExpressionStatement","src":"4358:21:31"},{"nativeSrc":"4388:27:31","nodeType":"YulVariableDeclaration","src":"4388:27:31","value":{"arguments":[{"name":"array","nativeSrc":"4403:5:31","nodeType":"YulIdentifier","src":"4403:5:31"},{"kind":"number","nativeSrc":"4410:4:31","nodeType":"YulLiteral","src":"4410:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4399:3:31","nodeType":"YulIdentifier","src":"4399:3:31"},"nativeSrc":"4399:16:31","nodeType":"YulFunctionCall","src":"4399:16:31"},"variables":[{"name":"dst","nativeSrc":"4392:3:31","nodeType":"YulTypedName","src":"4392:3:31","type":""}]},{"body":{"nativeSrc":"4453:83:31","nodeType":"YulBlock","src":"4453:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"4455:77:31","nodeType":"YulIdentifier","src":"4455:77:31"},"nativeSrc":"4455:79:31","nodeType":"YulFunctionCall","src":"4455:79:31"},"nativeSrc":"4455:79:31","nodeType":"YulExpressionStatement","src":"4455:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4434:3:31","nodeType":"YulIdentifier","src":"4434:3:31"},{"name":"length","nativeSrc":"4439:6:31","nodeType":"YulIdentifier","src":"4439:6:31"}],"functionName":{"name":"add","nativeSrc":"4430:3:31","nodeType":"YulIdentifier","src":"4430:3:31"},"nativeSrc":"4430:16:31","nodeType":"YulFunctionCall","src":"4430:16:31"},{"name":"end","nativeSrc":"4448:3:31","nodeType":"YulIdentifier","src":"4448:3:31"}],"functionName":{"name":"gt","nativeSrc":"4427:2:31","nodeType":"YulIdentifier","src":"4427:2:31"},"nativeSrc":"4427:25:31","nodeType":"YulFunctionCall","src":"4427:25:31"},"nativeSrc":"4424:112:31","nodeType":"YulIf","src":"4424:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"4582:3:31","nodeType":"YulIdentifier","src":"4582:3:31"},{"name":"dst","nativeSrc":"4587:3:31","nodeType":"YulIdentifier","src":"4587:3:31"},{"name":"length","nativeSrc":"4592:6:31","nodeType":"YulIdentifier","src":"4592:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"4545:36:31","nodeType":"YulIdentifier","src":"4545:36:31"},"nativeSrc":"4545:54:31","nodeType":"YulFunctionCall","src":"4545:54:31"},"nativeSrc":"4545:54:31","nodeType":"YulExpressionStatement","src":"4545:54:31"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4180:425:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"4237:3:31","nodeType":"YulTypedName","src":"4237:3:31","type":""},{"name":"length","nativeSrc":"4242:6:31","nodeType":"YulTypedName","src":"4242:6:31","type":""},{"name":"end","nativeSrc":"4250:3:31","nodeType":"YulTypedName","src":"4250:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4258:5:31","nodeType":"YulTypedName","src":"4258:5:31","type":""}],"src":"4180:425:31"},{"body":{"nativeSrc":"4687:278:31","nodeType":"YulBlock","src":"4687:278:31","statements":[{"body":{"nativeSrc":"4736:83:31","nodeType":"YulBlock","src":"4736:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"4738:77:31","nodeType":"YulIdentifier","src":"4738:77:31"},"nativeSrc":"4738:79:31","nodeType":"YulFunctionCall","src":"4738:79:31"},"nativeSrc":"4738:79:31","nodeType":"YulExpressionStatement","src":"4738:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4715:6:31","nodeType":"YulIdentifier","src":"4715:6:31"},{"kind":"number","nativeSrc":"4723:4:31","nodeType":"YulLiteral","src":"4723:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4711:3:31","nodeType":"YulIdentifier","src":"4711:3:31"},"nativeSrc":"4711:17:31","nodeType":"YulFunctionCall","src":"4711:17:31"},{"name":"end","nativeSrc":"4730:3:31","nodeType":"YulIdentifier","src":"4730:3:31"}],"functionName":{"name":"slt","nativeSrc":"4707:3:31","nodeType":"YulIdentifier","src":"4707:3:31"},"nativeSrc":"4707:27:31","nodeType":"YulFunctionCall","src":"4707:27:31"}],"functionName":{"name":"iszero","nativeSrc":"4700:6:31","nodeType":"YulIdentifier","src":"4700:6:31"},"nativeSrc":"4700:35:31","nodeType":"YulFunctionCall","src":"4700:35:31"},"nativeSrc":"4697:122:31","nodeType":"YulIf","src":"4697:122:31"},{"nativeSrc":"4828:34:31","nodeType":"YulVariableDeclaration","src":"4828:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"4855:6:31","nodeType":"YulIdentifier","src":"4855:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"4842:12:31","nodeType":"YulIdentifier","src":"4842:12:31"},"nativeSrc":"4842:20:31","nodeType":"YulFunctionCall","src":"4842:20:31"},"variables":[{"name":"length","nativeSrc":"4832:6:31","nodeType":"YulTypedName","src":"4832:6:31","type":""}]},{"nativeSrc":"4871:88:31","nodeType":"YulAssignment","src":"4871:88:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4932:6:31","nodeType":"YulIdentifier","src":"4932:6:31"},{"kind":"number","nativeSrc":"4940:4:31","nodeType":"YulLiteral","src":"4940:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4928:3:31","nodeType":"YulIdentifier","src":"4928:3:31"},"nativeSrc":"4928:17:31","nodeType":"YulFunctionCall","src":"4928:17:31"},{"name":"length","nativeSrc":"4947:6:31","nodeType":"YulIdentifier","src":"4947:6:31"},{"name":"end","nativeSrc":"4955:3:31","nodeType":"YulIdentifier","src":"4955:3:31"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"4880:47:31","nodeType":"YulIdentifier","src":"4880:47:31"},"nativeSrc":"4880:79:31","nodeType":"YulFunctionCall","src":"4880:79:31"},"variableNames":[{"name":"array","nativeSrc":"4871:5:31","nodeType":"YulIdentifier","src":"4871:5:31"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"4625:340:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4665:6:31","nodeType":"YulTypedName","src":"4665:6:31","type":""},{"name":"end","nativeSrc":"4673:3:31","nodeType":"YulTypedName","src":"4673:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4681:5:31","nodeType":"YulTypedName","src":"4681:5:31","type":""}],"src":"4625:340:31"},{"body":{"nativeSrc":"5016:81:31","nodeType":"YulBlock","src":"5016:81:31","statements":[{"nativeSrc":"5026:65:31","nodeType":"YulAssignment","src":"5026:65:31","value":{"arguments":[{"name":"value","nativeSrc":"5041:5:31","nodeType":"YulIdentifier","src":"5041:5:31"},{"kind":"number","nativeSrc":"5048:42:31","nodeType":"YulLiteral","src":"5048:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5037:3:31","nodeType":"YulIdentifier","src":"5037:3:31"},"nativeSrc":"5037:54:31","nodeType":"YulFunctionCall","src":"5037:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"5026:7:31","nodeType":"YulIdentifier","src":"5026:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"4971:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4998:5:31","nodeType":"YulTypedName","src":"4998:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5008:7:31","nodeType":"YulTypedName","src":"5008:7:31","type":""}],"src":"4971:126:31"},{"body":{"nativeSrc":"5148:51:31","nodeType":"YulBlock","src":"5148:51:31","statements":[{"nativeSrc":"5158:35:31","nodeType":"YulAssignment","src":"5158:35:31","value":{"arguments":[{"name":"value","nativeSrc":"5187:5:31","nodeType":"YulIdentifier","src":"5187:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5169:17:31","nodeType":"YulIdentifier","src":"5169:17:31"},"nativeSrc":"5169:24:31","nodeType":"YulFunctionCall","src":"5169:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"5158:7:31","nodeType":"YulIdentifier","src":"5158:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"5103:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5130:5:31","nodeType":"YulTypedName","src":"5130:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5140:7:31","nodeType":"YulTypedName","src":"5140:7:31","type":""}],"src":"5103:96:31"},{"body":{"nativeSrc":"5248:79:31","nodeType":"YulBlock","src":"5248:79:31","statements":[{"body":{"nativeSrc":"5305:16:31","nodeType":"YulBlock","src":"5305:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5314:1:31","nodeType":"YulLiteral","src":"5314:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5317:1:31","nodeType":"YulLiteral","src":"5317:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5307:6:31","nodeType":"YulIdentifier","src":"5307:6:31"},"nativeSrc":"5307:12:31","nodeType":"YulFunctionCall","src":"5307:12:31"},"nativeSrc":"5307:12:31","nodeType":"YulExpressionStatement","src":"5307:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5271:5:31","nodeType":"YulIdentifier","src":"5271:5:31"},{"arguments":[{"name":"value","nativeSrc":"5296:5:31","nodeType":"YulIdentifier","src":"5296:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5278:17:31","nodeType":"YulIdentifier","src":"5278:17:31"},"nativeSrc":"5278:24:31","nodeType":"YulFunctionCall","src":"5278:24:31"}],"functionName":{"name":"eq","nativeSrc":"5268:2:31","nodeType":"YulIdentifier","src":"5268:2:31"},"nativeSrc":"5268:35:31","nodeType":"YulFunctionCall","src":"5268:35:31"}],"functionName":{"name":"iszero","nativeSrc":"5261:6:31","nodeType":"YulIdentifier","src":"5261:6:31"},"nativeSrc":"5261:43:31","nodeType":"YulFunctionCall","src":"5261:43:31"},"nativeSrc":"5258:63:31","nodeType":"YulIf","src":"5258:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"5205:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5241:5:31","nodeType":"YulTypedName","src":"5241:5:31","type":""}],"src":"5205:122:31"},{"body":{"nativeSrc":"5385:87:31","nodeType":"YulBlock","src":"5385:87:31","statements":[{"nativeSrc":"5395:29:31","nodeType":"YulAssignment","src":"5395:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"5417:6:31","nodeType":"YulIdentifier","src":"5417:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"5404:12:31","nodeType":"YulIdentifier","src":"5404:12:31"},"nativeSrc":"5404:20:31","nodeType":"YulFunctionCall","src":"5404:20:31"},"variableNames":[{"name":"value","nativeSrc":"5395:5:31","nodeType":"YulIdentifier","src":"5395:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5460:5:31","nodeType":"YulIdentifier","src":"5460:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"5433:26:31","nodeType":"YulIdentifier","src":"5433:26:31"},"nativeSrc":"5433:33:31","nodeType":"YulFunctionCall","src":"5433:33:31"},"nativeSrc":"5433:33:31","nodeType":"YulExpressionStatement","src":"5433:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"5333:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5363:6:31","nodeType":"YulTypedName","src":"5363:6:31","type":""},{"name":"end","nativeSrc":"5371:3:31","nodeType":"YulTypedName","src":"5371:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5379:5:31","nodeType":"YulTypedName","src":"5379:5:31","type":""}],"src":"5333:139:31"},{"body":{"nativeSrc":"5598:859:31","nodeType":"YulBlock","src":"5598:859:31","statements":[{"body":{"nativeSrc":"5644:83:31","nodeType":"YulBlock","src":"5644:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5646:77:31","nodeType":"YulIdentifier","src":"5646:77:31"},"nativeSrc":"5646:79:31","nodeType":"YulFunctionCall","src":"5646:79:31"},"nativeSrc":"5646:79:31","nodeType":"YulExpressionStatement","src":"5646:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5619:7:31","nodeType":"YulIdentifier","src":"5619:7:31"},{"name":"headStart","nativeSrc":"5628:9:31","nodeType":"YulIdentifier","src":"5628:9:31"}],"functionName":{"name":"sub","nativeSrc":"5615:3:31","nodeType":"YulIdentifier","src":"5615:3:31"},"nativeSrc":"5615:23:31","nodeType":"YulFunctionCall","src":"5615:23:31"},{"kind":"number","nativeSrc":"5640:2:31","nodeType":"YulLiteral","src":"5640:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5611:3:31","nodeType":"YulIdentifier","src":"5611:3:31"},"nativeSrc":"5611:32:31","nodeType":"YulFunctionCall","src":"5611:32:31"},"nativeSrc":"5608:119:31","nodeType":"YulIf","src":"5608:119:31"},{"nativeSrc":"5737:287:31","nodeType":"YulBlock","src":"5737:287:31","statements":[{"nativeSrc":"5752:45:31","nodeType":"YulVariableDeclaration","src":"5752:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5783:9:31","nodeType":"YulIdentifier","src":"5783:9:31"},{"kind":"number","nativeSrc":"5794:1:31","nodeType":"YulLiteral","src":"5794:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5779:3:31","nodeType":"YulIdentifier","src":"5779:3:31"},"nativeSrc":"5779:17:31","nodeType":"YulFunctionCall","src":"5779:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"5766:12:31","nodeType":"YulIdentifier","src":"5766:12:31"},"nativeSrc":"5766:31:31","nodeType":"YulFunctionCall","src":"5766:31:31"},"variables":[{"name":"offset","nativeSrc":"5756:6:31","nodeType":"YulTypedName","src":"5756:6:31","type":""}]},{"body":{"nativeSrc":"5844:83:31","nodeType":"YulBlock","src":"5844:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"5846:77:31","nodeType":"YulIdentifier","src":"5846:77:31"},"nativeSrc":"5846:79:31","nodeType":"YulFunctionCall","src":"5846:79:31"},"nativeSrc":"5846:79:31","nodeType":"YulExpressionStatement","src":"5846:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5816:6:31","nodeType":"YulIdentifier","src":"5816:6:31"},{"kind":"number","nativeSrc":"5824:18:31","nodeType":"YulLiteral","src":"5824:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5813:2:31","nodeType":"YulIdentifier","src":"5813:2:31"},"nativeSrc":"5813:30:31","nodeType":"YulFunctionCall","src":"5813:30:31"},"nativeSrc":"5810:117:31","nodeType":"YulIf","src":"5810:117:31"},{"nativeSrc":"5941:73:31","nodeType":"YulAssignment","src":"5941:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5986:9:31","nodeType":"YulIdentifier","src":"5986:9:31"},{"name":"offset","nativeSrc":"5997:6:31","nodeType":"YulIdentifier","src":"5997:6:31"}],"functionName":{"name":"add","nativeSrc":"5982:3:31","nodeType":"YulIdentifier","src":"5982:3:31"},"nativeSrc":"5982:22:31","nodeType":"YulFunctionCall","src":"5982:22:31"},{"name":"dataEnd","nativeSrc":"6006:7:31","nodeType":"YulIdentifier","src":"6006:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"5951:30:31","nodeType":"YulIdentifier","src":"5951:30:31"},"nativeSrc":"5951:63:31","nodeType":"YulFunctionCall","src":"5951:63:31"},"variableNames":[{"name":"value0","nativeSrc":"5941:6:31","nodeType":"YulIdentifier","src":"5941:6:31"}]}]},{"nativeSrc":"6034:288:31","nodeType":"YulBlock","src":"6034:288:31","statements":[{"nativeSrc":"6049:46:31","nodeType":"YulVariableDeclaration","src":"6049:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6080:9:31","nodeType":"YulIdentifier","src":"6080:9:31"},{"kind":"number","nativeSrc":"6091:2:31","nodeType":"YulLiteral","src":"6091:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6076:3:31","nodeType":"YulIdentifier","src":"6076:3:31"},"nativeSrc":"6076:18:31","nodeType":"YulFunctionCall","src":"6076:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"6063:12:31","nodeType":"YulIdentifier","src":"6063:12:31"},"nativeSrc":"6063:32:31","nodeType":"YulFunctionCall","src":"6063:32:31"},"variables":[{"name":"offset","nativeSrc":"6053:6:31","nodeType":"YulTypedName","src":"6053:6:31","type":""}]},{"body":{"nativeSrc":"6142:83:31","nodeType":"YulBlock","src":"6142:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6144:77:31","nodeType":"YulIdentifier","src":"6144:77:31"},"nativeSrc":"6144:79:31","nodeType":"YulFunctionCall","src":"6144:79:31"},"nativeSrc":"6144:79:31","nodeType":"YulExpressionStatement","src":"6144:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6114:6:31","nodeType":"YulIdentifier","src":"6114:6:31"},{"kind":"number","nativeSrc":"6122:18:31","nodeType":"YulLiteral","src":"6122:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6111:2:31","nodeType":"YulIdentifier","src":"6111:2:31"},"nativeSrc":"6111:30:31","nodeType":"YulFunctionCall","src":"6111:30:31"},"nativeSrc":"6108:117:31","nodeType":"YulIf","src":"6108:117:31"},{"nativeSrc":"6239:73:31","nodeType":"YulAssignment","src":"6239:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6284:9:31","nodeType":"YulIdentifier","src":"6284:9:31"},{"name":"offset","nativeSrc":"6295:6:31","nodeType":"YulIdentifier","src":"6295:6:31"}],"functionName":{"name":"add","nativeSrc":"6280:3:31","nodeType":"YulIdentifier","src":"6280:3:31"},"nativeSrc":"6280:22:31","nodeType":"YulFunctionCall","src":"6280:22:31"},{"name":"dataEnd","nativeSrc":"6304:7:31","nodeType":"YulIdentifier","src":"6304:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"6249:30:31","nodeType":"YulIdentifier","src":"6249:30:31"},"nativeSrc":"6249:63:31","nodeType":"YulFunctionCall","src":"6249:63:31"},"variableNames":[{"name":"value1","nativeSrc":"6239:6:31","nodeType":"YulIdentifier","src":"6239:6:31"}]}]},{"nativeSrc":"6332:118:31","nodeType":"YulBlock","src":"6332:118:31","statements":[{"nativeSrc":"6347:16:31","nodeType":"YulVariableDeclaration","src":"6347:16:31","value":{"kind":"number","nativeSrc":"6361:2:31","nodeType":"YulLiteral","src":"6361:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6351:6:31","nodeType":"YulTypedName","src":"6351:6:31","type":""}]},{"nativeSrc":"6377:63:31","nodeType":"YulAssignment","src":"6377:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6412:9:31","nodeType":"YulIdentifier","src":"6412:9:31"},{"name":"offset","nativeSrc":"6423:6:31","nodeType":"YulIdentifier","src":"6423:6:31"}],"functionName":{"name":"add","nativeSrc":"6408:3:31","nodeType":"YulIdentifier","src":"6408:3:31"},"nativeSrc":"6408:22:31","nodeType":"YulFunctionCall","src":"6408:22:31"},{"name":"dataEnd","nativeSrc":"6432:7:31","nodeType":"YulIdentifier","src":"6432:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6387:20:31","nodeType":"YulIdentifier","src":"6387:20:31"},"nativeSrc":"6387:53:31","nodeType":"YulFunctionCall","src":"6387:53:31"},"variableNames":[{"name":"value2","nativeSrc":"6377:6:31","nodeType":"YulIdentifier","src":"6377:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address","nativeSrc":"5478:979:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5552:9:31","nodeType":"YulTypedName","src":"5552:9:31","type":""},{"name":"dataEnd","nativeSrc":"5563:7:31","nodeType":"YulTypedName","src":"5563:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5575:6:31","nodeType":"YulTypedName","src":"5575:6:31","type":""},{"name":"value1","nativeSrc":"5583:6:31","nodeType":"YulTypedName","src":"5583:6:31","type":""},{"name":"value2","nativeSrc":"5591:6:31","nodeType":"YulTypedName","src":"5591:6:31","type":""}],"src":"5478:979:31"},{"body":{"nativeSrc":"6508:32:31","nodeType":"YulBlock","src":"6508:32:31","statements":[{"nativeSrc":"6518:16:31","nodeType":"YulAssignment","src":"6518:16:31","value":{"name":"value","nativeSrc":"6529:5:31","nodeType":"YulIdentifier","src":"6529:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"6518:7:31","nodeType":"YulIdentifier","src":"6518:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"6463:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6490:5:31","nodeType":"YulTypedName","src":"6490:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6500:7:31","nodeType":"YulTypedName","src":"6500:7:31","type":""}],"src":"6463:77:31"},{"body":{"nativeSrc":"6589:79:31","nodeType":"YulBlock","src":"6589:79:31","statements":[{"body":{"nativeSrc":"6646:16:31","nodeType":"YulBlock","src":"6646:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6655:1:31","nodeType":"YulLiteral","src":"6655:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"6658:1:31","nodeType":"YulLiteral","src":"6658:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6648:6:31","nodeType":"YulIdentifier","src":"6648:6:31"},"nativeSrc":"6648:12:31","nodeType":"YulFunctionCall","src":"6648:12:31"},"nativeSrc":"6648:12:31","nodeType":"YulExpressionStatement","src":"6648:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6612:5:31","nodeType":"YulIdentifier","src":"6612:5:31"},{"arguments":[{"name":"value","nativeSrc":"6637:5:31","nodeType":"YulIdentifier","src":"6637:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6619:17:31","nodeType":"YulIdentifier","src":"6619:17:31"},"nativeSrc":"6619:24:31","nodeType":"YulFunctionCall","src":"6619:24:31"}],"functionName":{"name":"eq","nativeSrc":"6609:2:31","nodeType":"YulIdentifier","src":"6609:2:31"},"nativeSrc":"6609:35:31","nodeType":"YulFunctionCall","src":"6609:35:31"}],"functionName":{"name":"iszero","nativeSrc":"6602:6:31","nodeType":"YulIdentifier","src":"6602:6:31"},"nativeSrc":"6602:43:31","nodeType":"YulFunctionCall","src":"6602:43:31"},"nativeSrc":"6599:63:31","nodeType":"YulIf","src":"6599:63:31"}]},"name":"validator_revert_t_uint256","nativeSrc":"6546:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6582:5:31","nodeType":"YulTypedName","src":"6582:5:31","type":""}],"src":"6546:122:31"},{"body":{"nativeSrc":"6726:87:31","nodeType":"YulBlock","src":"6726:87:31","statements":[{"nativeSrc":"6736:29:31","nodeType":"YulAssignment","src":"6736:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"6758:6:31","nodeType":"YulIdentifier","src":"6758:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"6745:12:31","nodeType":"YulIdentifier","src":"6745:12:31"},"nativeSrc":"6745:20:31","nodeType":"YulFunctionCall","src":"6745:20:31"},"variableNames":[{"name":"value","nativeSrc":"6736:5:31","nodeType":"YulIdentifier","src":"6736:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"6801:5:31","nodeType":"YulIdentifier","src":"6801:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"6774:26:31","nodeType":"YulIdentifier","src":"6774:26:31"},"nativeSrc":"6774:33:31","nodeType":"YulFunctionCall","src":"6774:33:31"},"nativeSrc":"6774:33:31","nodeType":"YulExpressionStatement","src":"6774:33:31"}]},"name":"abi_decode_t_uint256","nativeSrc":"6674:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6704:6:31","nodeType":"YulTypedName","src":"6704:6:31","type":""},{"name":"end","nativeSrc":"6712:3:31","nodeType":"YulTypedName","src":"6712:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6720:5:31","nodeType":"YulTypedName","src":"6720:5:31","type":""}],"src":"6674:139:31"},{"body":{"nativeSrc":"6885:263:31","nodeType":"YulBlock","src":"6885:263:31","statements":[{"body":{"nativeSrc":"6931:83:31","nodeType":"YulBlock","src":"6931:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6933:77:31","nodeType":"YulIdentifier","src":"6933:77:31"},"nativeSrc":"6933:79:31","nodeType":"YulFunctionCall","src":"6933:79:31"},"nativeSrc":"6933:79:31","nodeType":"YulExpressionStatement","src":"6933:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6906:7:31","nodeType":"YulIdentifier","src":"6906:7:31"},{"name":"headStart","nativeSrc":"6915:9:31","nodeType":"YulIdentifier","src":"6915:9:31"}],"functionName":{"name":"sub","nativeSrc":"6902:3:31","nodeType":"YulIdentifier","src":"6902:3:31"},"nativeSrc":"6902:23:31","nodeType":"YulFunctionCall","src":"6902:23:31"},{"kind":"number","nativeSrc":"6927:2:31","nodeType":"YulLiteral","src":"6927:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"6898:3:31","nodeType":"YulIdentifier","src":"6898:3:31"},"nativeSrc":"6898:32:31","nodeType":"YulFunctionCall","src":"6898:32:31"},"nativeSrc":"6895:119:31","nodeType":"YulIf","src":"6895:119:31"},{"nativeSrc":"7024:117:31","nodeType":"YulBlock","src":"7024:117:31","statements":[{"nativeSrc":"7039:15:31","nodeType":"YulVariableDeclaration","src":"7039:15:31","value":{"kind":"number","nativeSrc":"7053:1:31","nodeType":"YulLiteral","src":"7053:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7043:6:31","nodeType":"YulTypedName","src":"7043:6:31","type":""}]},{"nativeSrc":"7068:63:31","nodeType":"YulAssignment","src":"7068:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7103:9:31","nodeType":"YulIdentifier","src":"7103:9:31"},{"name":"offset","nativeSrc":"7114:6:31","nodeType":"YulIdentifier","src":"7114:6:31"}],"functionName":{"name":"add","nativeSrc":"7099:3:31","nodeType":"YulIdentifier","src":"7099:3:31"},"nativeSrc":"7099:22:31","nodeType":"YulFunctionCall","src":"7099:22:31"},{"name":"dataEnd","nativeSrc":"7123:7:31","nodeType":"YulIdentifier","src":"7123:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7078:20:31","nodeType":"YulIdentifier","src":"7078:20:31"},"nativeSrc":"7078:53:31","nodeType":"YulFunctionCall","src":"7078:53:31"},"variableNames":[{"name":"value0","nativeSrc":"7068:6:31","nodeType":"YulIdentifier","src":"7068:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"6819:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6855:9:31","nodeType":"YulTypedName","src":"6855:9:31","type":""},{"name":"dataEnd","nativeSrc":"6866:7:31","nodeType":"YulTypedName","src":"6866:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6878:6:31","nodeType":"YulTypedName","src":"6878:6:31","type":""}],"src":"6819:329:31"},{"body":{"nativeSrc":"7219:53:31","nodeType":"YulBlock","src":"7219:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7236:3:31","nodeType":"YulIdentifier","src":"7236:3:31"},{"arguments":[{"name":"value","nativeSrc":"7259:5:31","nodeType":"YulIdentifier","src":"7259:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7241:17:31","nodeType":"YulIdentifier","src":"7241:17:31"},"nativeSrc":"7241:24:31","nodeType":"YulFunctionCall","src":"7241:24:31"}],"functionName":{"name":"mstore","nativeSrc":"7229:6:31","nodeType":"YulIdentifier","src":"7229:6:31"},"nativeSrc":"7229:37:31","nodeType":"YulFunctionCall","src":"7229:37:31"},"nativeSrc":"7229:37:31","nodeType":"YulExpressionStatement","src":"7229:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7154:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7207:5:31","nodeType":"YulTypedName","src":"7207:5:31","type":""},{"name":"pos","nativeSrc":"7214:3:31","nodeType":"YulTypedName","src":"7214:3:31","type":""}],"src":"7154:118:31"},{"body":{"nativeSrc":"7376:124:31","nodeType":"YulBlock","src":"7376:124:31","statements":[{"nativeSrc":"7386:26:31","nodeType":"YulAssignment","src":"7386:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"7398:9:31","nodeType":"YulIdentifier","src":"7398:9:31"},{"kind":"number","nativeSrc":"7409:2:31","nodeType":"YulLiteral","src":"7409:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7394:3:31","nodeType":"YulIdentifier","src":"7394:3:31"},"nativeSrc":"7394:18:31","nodeType":"YulFunctionCall","src":"7394:18:31"},"variableNames":[{"name":"tail","nativeSrc":"7386:4:31","nodeType":"YulIdentifier","src":"7386:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7466:6:31","nodeType":"YulIdentifier","src":"7466:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"7479:9:31","nodeType":"YulIdentifier","src":"7479:9:31"},{"kind":"number","nativeSrc":"7490:1:31","nodeType":"YulLiteral","src":"7490:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7475:3:31","nodeType":"YulIdentifier","src":"7475:3:31"},"nativeSrc":"7475:17:31","nodeType":"YulFunctionCall","src":"7475:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7422:43:31","nodeType":"YulIdentifier","src":"7422:43:31"},"nativeSrc":"7422:71:31","nodeType":"YulFunctionCall","src":"7422:71:31"},"nativeSrc":"7422:71:31","nodeType":"YulExpressionStatement","src":"7422:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7278:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7348:9:31","nodeType":"YulTypedName","src":"7348:9:31","type":""},{"name":"value0","nativeSrc":"7360:6:31","nodeType":"YulTypedName","src":"7360:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7371:4:31","nodeType":"YulTypedName","src":"7371:4:31","type":""}],"src":"7278:222:31"},{"body":{"nativeSrc":"7589:391:31","nodeType":"YulBlock","src":"7589:391:31","statements":[{"body":{"nativeSrc":"7635:83:31","nodeType":"YulBlock","src":"7635:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7637:77:31","nodeType":"YulIdentifier","src":"7637:77:31"},"nativeSrc":"7637:79:31","nodeType":"YulFunctionCall","src":"7637:79:31"},"nativeSrc":"7637:79:31","nodeType":"YulExpressionStatement","src":"7637:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7610:7:31","nodeType":"YulIdentifier","src":"7610:7:31"},{"name":"headStart","nativeSrc":"7619:9:31","nodeType":"YulIdentifier","src":"7619:9:31"}],"functionName":{"name":"sub","nativeSrc":"7606:3:31","nodeType":"YulIdentifier","src":"7606:3:31"},"nativeSrc":"7606:23:31","nodeType":"YulFunctionCall","src":"7606:23:31"},{"kind":"number","nativeSrc":"7631:2:31","nodeType":"YulLiteral","src":"7631:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"7602:3:31","nodeType":"YulIdentifier","src":"7602:3:31"},"nativeSrc":"7602:32:31","nodeType":"YulFunctionCall","src":"7602:32:31"},"nativeSrc":"7599:119:31","nodeType":"YulIf","src":"7599:119:31"},{"nativeSrc":"7728:117:31","nodeType":"YulBlock","src":"7728:117:31","statements":[{"nativeSrc":"7743:15:31","nodeType":"YulVariableDeclaration","src":"7743:15:31","value":{"kind":"number","nativeSrc":"7757:1:31","nodeType":"YulLiteral","src":"7757:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7747:6:31","nodeType":"YulTypedName","src":"7747:6:31","type":""}]},{"nativeSrc":"7772:63:31","nodeType":"YulAssignment","src":"7772:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7807:9:31","nodeType":"YulIdentifier","src":"7807:9:31"},{"name":"offset","nativeSrc":"7818:6:31","nodeType":"YulIdentifier","src":"7818:6:31"}],"functionName":{"name":"add","nativeSrc":"7803:3:31","nodeType":"YulIdentifier","src":"7803:3:31"},"nativeSrc":"7803:22:31","nodeType":"YulFunctionCall","src":"7803:22:31"},{"name":"dataEnd","nativeSrc":"7827:7:31","nodeType":"YulIdentifier","src":"7827:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7782:20:31","nodeType":"YulIdentifier","src":"7782:20:31"},"nativeSrc":"7782:53:31","nodeType":"YulFunctionCall","src":"7782:53:31"},"variableNames":[{"name":"value0","nativeSrc":"7772:6:31","nodeType":"YulIdentifier","src":"7772:6:31"}]}]},{"nativeSrc":"7855:118:31","nodeType":"YulBlock","src":"7855:118:31","statements":[{"nativeSrc":"7870:16:31","nodeType":"YulVariableDeclaration","src":"7870:16:31","value":{"kind":"number","nativeSrc":"7884:2:31","nodeType":"YulLiteral","src":"7884:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7874:6:31","nodeType":"YulTypedName","src":"7874:6:31","type":""}]},{"nativeSrc":"7900:63:31","nodeType":"YulAssignment","src":"7900:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7935:9:31","nodeType":"YulIdentifier","src":"7935:9:31"},{"name":"offset","nativeSrc":"7946:6:31","nodeType":"YulIdentifier","src":"7946:6:31"}],"functionName":{"name":"add","nativeSrc":"7931:3:31","nodeType":"YulIdentifier","src":"7931:3:31"},"nativeSrc":"7931:22:31","nodeType":"YulFunctionCall","src":"7931:22:31"},{"name":"dataEnd","nativeSrc":"7955:7:31","nodeType":"YulIdentifier","src":"7955:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7910:20:31","nodeType":"YulIdentifier","src":"7910:20:31"},"nativeSrc":"7910:53:31","nodeType":"YulFunctionCall","src":"7910:53:31"},"variableNames":[{"name":"value1","nativeSrc":"7900:6:31","nodeType":"YulIdentifier","src":"7900:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"7506:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7551:9:31","nodeType":"YulTypedName","src":"7551:9:31","type":""},{"name":"dataEnd","nativeSrc":"7562:7:31","nodeType":"YulTypedName","src":"7562:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7574:6:31","nodeType":"YulTypedName","src":"7574:6:31","type":""},{"name":"value1","nativeSrc":"7582:6:31","nodeType":"YulTypedName","src":"7582:6:31","type":""}],"src":"7506:474:31"},{"body":{"nativeSrc":"8086:519:31","nodeType":"YulBlock","src":"8086:519:31","statements":[{"body":{"nativeSrc":"8132:83:31","nodeType":"YulBlock","src":"8132:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8134:77:31","nodeType":"YulIdentifier","src":"8134:77:31"},"nativeSrc":"8134:79:31","nodeType":"YulFunctionCall","src":"8134:79:31"},"nativeSrc":"8134:79:31","nodeType":"YulExpressionStatement","src":"8134:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8107:7:31","nodeType":"YulIdentifier","src":"8107:7:31"},{"name":"headStart","nativeSrc":"8116:9:31","nodeType":"YulIdentifier","src":"8116:9:31"}],"functionName":{"name":"sub","nativeSrc":"8103:3:31","nodeType":"YulIdentifier","src":"8103:3:31"},"nativeSrc":"8103:23:31","nodeType":"YulFunctionCall","src":"8103:23:31"},{"kind":"number","nativeSrc":"8128:2:31","nodeType":"YulLiteral","src":"8128:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"8099:3:31","nodeType":"YulIdentifier","src":"8099:3:31"},"nativeSrc":"8099:32:31","nodeType":"YulFunctionCall","src":"8099:32:31"},"nativeSrc":"8096:119:31","nodeType":"YulIf","src":"8096:119:31"},{"nativeSrc":"8225:117:31","nodeType":"YulBlock","src":"8225:117:31","statements":[{"nativeSrc":"8240:15:31","nodeType":"YulVariableDeclaration","src":"8240:15:31","value":{"kind":"number","nativeSrc":"8254:1:31","nodeType":"YulLiteral","src":"8254:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8244:6:31","nodeType":"YulTypedName","src":"8244:6:31","type":""}]},{"nativeSrc":"8269:63:31","nodeType":"YulAssignment","src":"8269:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8304:9:31","nodeType":"YulIdentifier","src":"8304:9:31"},{"name":"offset","nativeSrc":"8315:6:31","nodeType":"YulIdentifier","src":"8315:6:31"}],"functionName":{"name":"add","nativeSrc":"8300:3:31","nodeType":"YulIdentifier","src":"8300:3:31"},"nativeSrc":"8300:22:31","nodeType":"YulFunctionCall","src":"8300:22:31"},{"name":"dataEnd","nativeSrc":"8324:7:31","nodeType":"YulIdentifier","src":"8324:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8279:20:31","nodeType":"YulIdentifier","src":"8279:20:31"},"nativeSrc":"8279:53:31","nodeType":"YulFunctionCall","src":"8279:53:31"},"variableNames":[{"name":"value0","nativeSrc":"8269:6:31","nodeType":"YulIdentifier","src":"8269:6:31"}]}]},{"nativeSrc":"8352:118:31","nodeType":"YulBlock","src":"8352:118:31","statements":[{"nativeSrc":"8367:16:31","nodeType":"YulVariableDeclaration","src":"8367:16:31","value":{"kind":"number","nativeSrc":"8381:2:31","nodeType":"YulLiteral","src":"8381:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8371:6:31","nodeType":"YulTypedName","src":"8371:6:31","type":""}]},{"nativeSrc":"8397:63:31","nodeType":"YulAssignment","src":"8397:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8432:9:31","nodeType":"YulIdentifier","src":"8432:9:31"},{"name":"offset","nativeSrc":"8443:6:31","nodeType":"YulIdentifier","src":"8443:6:31"}],"functionName":{"name":"add","nativeSrc":"8428:3:31","nodeType":"YulIdentifier","src":"8428:3:31"},"nativeSrc":"8428:22:31","nodeType":"YulFunctionCall","src":"8428:22:31"},{"name":"dataEnd","nativeSrc":"8452:7:31","nodeType":"YulIdentifier","src":"8452:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8407:20:31","nodeType":"YulIdentifier","src":"8407:20:31"},"nativeSrc":"8407:53:31","nodeType":"YulFunctionCall","src":"8407:53:31"},"variableNames":[{"name":"value1","nativeSrc":"8397:6:31","nodeType":"YulIdentifier","src":"8397:6:31"}]}]},{"nativeSrc":"8480:118:31","nodeType":"YulBlock","src":"8480:118:31","statements":[{"nativeSrc":"8495:16:31","nodeType":"YulVariableDeclaration","src":"8495:16:31","value":{"kind":"number","nativeSrc":"8509:2:31","nodeType":"YulLiteral","src":"8509:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"8499:6:31","nodeType":"YulTypedName","src":"8499:6:31","type":""}]},{"nativeSrc":"8525:63:31","nodeType":"YulAssignment","src":"8525:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8560:9:31","nodeType":"YulIdentifier","src":"8560:9:31"},{"name":"offset","nativeSrc":"8571:6:31","nodeType":"YulIdentifier","src":"8571:6:31"}],"functionName":{"name":"add","nativeSrc":"8556:3:31","nodeType":"YulIdentifier","src":"8556:3:31"},"nativeSrc":"8556:22:31","nodeType":"YulFunctionCall","src":"8556:22:31"},{"name":"dataEnd","nativeSrc":"8580:7:31","nodeType":"YulIdentifier","src":"8580:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"8535:20:31","nodeType":"YulIdentifier","src":"8535:20:31"},"nativeSrc":"8535:53:31","nodeType":"YulFunctionCall","src":"8535:53:31"},"variableNames":[{"name":"value2","nativeSrc":"8525:6:31","nodeType":"YulIdentifier","src":"8525:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"7986:619:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8040:9:31","nodeType":"YulTypedName","src":"8040:9:31","type":""},{"name":"dataEnd","nativeSrc":"8051:7:31","nodeType":"YulTypedName","src":"8051:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8063:6:31","nodeType":"YulTypedName","src":"8063:6:31","type":""},{"name":"value1","nativeSrc":"8071:6:31","nodeType":"YulTypedName","src":"8071:6:31","type":""},{"name":"value2","nativeSrc":"8079:6:31","nodeType":"YulTypedName","src":"8079:6:31","type":""}],"src":"7986:619:31"},{"body":{"nativeSrc":"8677:263:31","nodeType":"YulBlock","src":"8677:263:31","statements":[{"body":{"nativeSrc":"8723:83:31","nodeType":"YulBlock","src":"8723:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8725:77:31","nodeType":"YulIdentifier","src":"8725:77:31"},"nativeSrc":"8725:79:31","nodeType":"YulFunctionCall","src":"8725:79:31"},"nativeSrc":"8725:79:31","nodeType":"YulExpressionStatement","src":"8725:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8698:7:31","nodeType":"YulIdentifier","src":"8698:7:31"},{"name":"headStart","nativeSrc":"8707:9:31","nodeType":"YulIdentifier","src":"8707:9:31"}],"functionName":{"name":"sub","nativeSrc":"8694:3:31","nodeType":"YulIdentifier","src":"8694:3:31"},"nativeSrc":"8694:23:31","nodeType":"YulFunctionCall","src":"8694:23:31"},{"kind":"number","nativeSrc":"8719:2:31","nodeType":"YulLiteral","src":"8719:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8690:3:31","nodeType":"YulIdentifier","src":"8690:3:31"},"nativeSrc":"8690:32:31","nodeType":"YulFunctionCall","src":"8690:32:31"},"nativeSrc":"8687:119:31","nodeType":"YulIf","src":"8687:119:31"},{"nativeSrc":"8816:117:31","nodeType":"YulBlock","src":"8816:117:31","statements":[{"nativeSrc":"8831:15:31","nodeType":"YulVariableDeclaration","src":"8831:15:31","value":{"kind":"number","nativeSrc":"8845:1:31","nodeType":"YulLiteral","src":"8845:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8835:6:31","nodeType":"YulTypedName","src":"8835:6:31","type":""}]},{"nativeSrc":"8860:63:31","nodeType":"YulAssignment","src":"8860:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8895:9:31","nodeType":"YulIdentifier","src":"8895:9:31"},{"name":"offset","nativeSrc":"8906:6:31","nodeType":"YulIdentifier","src":"8906:6:31"}],"functionName":{"name":"add","nativeSrc":"8891:3:31","nodeType":"YulIdentifier","src":"8891:3:31"},"nativeSrc":"8891:22:31","nodeType":"YulFunctionCall","src":"8891:22:31"},{"name":"dataEnd","nativeSrc":"8915:7:31","nodeType":"YulIdentifier","src":"8915:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8870:20:31","nodeType":"YulIdentifier","src":"8870:20:31"},"nativeSrc":"8870:53:31","nodeType":"YulFunctionCall","src":"8870:53:31"},"variableNames":[{"name":"value0","nativeSrc":"8860:6:31","nodeType":"YulIdentifier","src":"8860:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"8611:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8647:9:31","nodeType":"YulTypedName","src":"8647:9:31","type":""},{"name":"dataEnd","nativeSrc":"8658:7:31","nodeType":"YulTypedName","src":"8658:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8670:6:31","nodeType":"YulTypedName","src":"8670:6:31","type":""}],"src":"8611:329:31"},{"body":{"nativeSrc":"9011:53:31","nodeType":"YulBlock","src":"9011:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9028:3:31","nodeType":"YulIdentifier","src":"9028:3:31"},{"arguments":[{"name":"value","nativeSrc":"9051:5:31","nodeType":"YulIdentifier","src":"9051:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9033:17:31","nodeType":"YulIdentifier","src":"9033:17:31"},"nativeSrc":"9033:24:31","nodeType":"YulFunctionCall","src":"9033:24:31"}],"functionName":{"name":"mstore","nativeSrc":"9021:6:31","nodeType":"YulIdentifier","src":"9021:6:31"},"nativeSrc":"9021:37:31","nodeType":"YulFunctionCall","src":"9021:37:31"},"nativeSrc":"9021:37:31","nodeType":"YulExpressionStatement","src":"9021:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8946:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8999:5:31","nodeType":"YulTypedName","src":"8999:5:31","type":""},{"name":"pos","nativeSrc":"9006:3:31","nodeType":"YulTypedName","src":"9006:3:31","type":""}],"src":"8946:118:31"},{"body":{"nativeSrc":"9168:124:31","nodeType":"YulBlock","src":"9168:124:31","statements":[{"nativeSrc":"9178:26:31","nodeType":"YulAssignment","src":"9178:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"9190:9:31","nodeType":"YulIdentifier","src":"9190:9:31"},{"kind":"number","nativeSrc":"9201:2:31","nodeType":"YulLiteral","src":"9201:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9186:3:31","nodeType":"YulIdentifier","src":"9186:3:31"},"nativeSrc":"9186:18:31","nodeType":"YulFunctionCall","src":"9186:18:31"},"variableNames":[{"name":"tail","nativeSrc":"9178:4:31","nodeType":"YulIdentifier","src":"9178:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9258:6:31","nodeType":"YulIdentifier","src":"9258:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"9271:9:31","nodeType":"YulIdentifier","src":"9271:9:31"},{"kind":"number","nativeSrc":"9282:1:31","nodeType":"YulLiteral","src":"9282:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9267:3:31","nodeType":"YulIdentifier","src":"9267:3:31"},"nativeSrc":"9267:17:31","nodeType":"YulFunctionCall","src":"9267:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9214:43:31","nodeType":"YulIdentifier","src":"9214:43:31"},"nativeSrc":"9214:71:31","nodeType":"YulFunctionCall","src":"9214:71:31"},"nativeSrc":"9214:71:31","nodeType":"YulExpressionStatement","src":"9214:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"9070:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9140:9:31","nodeType":"YulTypedName","src":"9140:9:31","type":""},{"name":"value0","nativeSrc":"9152:6:31","nodeType":"YulTypedName","src":"9152:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9163:4:31","nodeType":"YulTypedName","src":"9163:4:31","type":""}],"src":"9070:222:31"},{"body":{"nativeSrc":"9338:76:31","nodeType":"YulBlock","src":"9338:76:31","statements":[{"body":{"nativeSrc":"9392:16:31","nodeType":"YulBlock","src":"9392:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9401:1:31","nodeType":"YulLiteral","src":"9401:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"9404:1:31","nodeType":"YulLiteral","src":"9404:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9394:6:31","nodeType":"YulIdentifier","src":"9394:6:31"},"nativeSrc":"9394:12:31","nodeType":"YulFunctionCall","src":"9394:12:31"},"nativeSrc":"9394:12:31","nodeType":"YulExpressionStatement","src":"9394:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9361:5:31","nodeType":"YulIdentifier","src":"9361:5:31"},{"arguments":[{"name":"value","nativeSrc":"9383:5:31","nodeType":"YulIdentifier","src":"9383:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"9368:14:31","nodeType":"YulIdentifier","src":"9368:14:31"},"nativeSrc":"9368:21:31","nodeType":"YulFunctionCall","src":"9368:21:31"}],"functionName":{"name":"eq","nativeSrc":"9358:2:31","nodeType":"YulIdentifier","src":"9358:2:31"},"nativeSrc":"9358:32:31","nodeType":"YulFunctionCall","src":"9358:32:31"}],"functionName":{"name":"iszero","nativeSrc":"9351:6:31","nodeType":"YulIdentifier","src":"9351:6:31"},"nativeSrc":"9351:40:31","nodeType":"YulFunctionCall","src":"9351:40:31"},"nativeSrc":"9348:60:31","nodeType":"YulIf","src":"9348:60:31"}]},"name":"validator_revert_t_bool","nativeSrc":"9298:116:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9331:5:31","nodeType":"YulTypedName","src":"9331:5:31","type":""}],"src":"9298:116:31"},{"body":{"nativeSrc":"9469:84:31","nodeType":"YulBlock","src":"9469:84:31","statements":[{"nativeSrc":"9479:29:31","nodeType":"YulAssignment","src":"9479:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"9501:6:31","nodeType":"YulIdentifier","src":"9501:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"9488:12:31","nodeType":"YulIdentifier","src":"9488:12:31"},"nativeSrc":"9488:20:31","nodeType":"YulFunctionCall","src":"9488:20:31"},"variableNames":[{"name":"value","nativeSrc":"9479:5:31","nodeType":"YulIdentifier","src":"9479:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9541:5:31","nodeType":"YulIdentifier","src":"9541:5:31"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"9517:23:31","nodeType":"YulIdentifier","src":"9517:23:31"},"nativeSrc":"9517:30:31","nodeType":"YulFunctionCall","src":"9517:30:31"},"nativeSrc":"9517:30:31","nodeType":"YulExpressionStatement","src":"9517:30:31"}]},"name":"abi_decode_t_bool","nativeSrc":"9420:133:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9447:6:31","nodeType":"YulTypedName","src":"9447:6:31","type":""},{"name":"end","nativeSrc":"9455:3:31","nodeType":"YulTypedName","src":"9455:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9463:5:31","nodeType":"YulTypedName","src":"9463:5:31","type":""}],"src":"9420:133:31"},{"body":{"nativeSrc":"9639:388:31","nodeType":"YulBlock","src":"9639:388:31","statements":[{"body":{"nativeSrc":"9685:83:31","nodeType":"YulBlock","src":"9685:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9687:77:31","nodeType":"YulIdentifier","src":"9687:77:31"},"nativeSrc":"9687:79:31","nodeType":"YulFunctionCall","src":"9687:79:31"},"nativeSrc":"9687:79:31","nodeType":"YulExpressionStatement","src":"9687:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9660:7:31","nodeType":"YulIdentifier","src":"9660:7:31"},{"name":"headStart","nativeSrc":"9669:9:31","nodeType":"YulIdentifier","src":"9669:9:31"}],"functionName":{"name":"sub","nativeSrc":"9656:3:31","nodeType":"YulIdentifier","src":"9656:3:31"},"nativeSrc":"9656:23:31","nodeType":"YulFunctionCall","src":"9656:23:31"},{"kind":"number","nativeSrc":"9681:2:31","nodeType":"YulLiteral","src":"9681:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9652:3:31","nodeType":"YulIdentifier","src":"9652:3:31"},"nativeSrc":"9652:32:31","nodeType":"YulFunctionCall","src":"9652:32:31"},"nativeSrc":"9649:119:31","nodeType":"YulIf","src":"9649:119:31"},{"nativeSrc":"9778:117:31","nodeType":"YulBlock","src":"9778:117:31","statements":[{"nativeSrc":"9793:15:31","nodeType":"YulVariableDeclaration","src":"9793:15:31","value":{"kind":"number","nativeSrc":"9807:1:31","nodeType":"YulLiteral","src":"9807:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9797:6:31","nodeType":"YulTypedName","src":"9797:6:31","type":""}]},{"nativeSrc":"9822:63:31","nodeType":"YulAssignment","src":"9822:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9857:9:31","nodeType":"YulIdentifier","src":"9857:9:31"},{"name":"offset","nativeSrc":"9868:6:31","nodeType":"YulIdentifier","src":"9868:6:31"}],"functionName":{"name":"add","nativeSrc":"9853:3:31","nodeType":"YulIdentifier","src":"9853:3:31"},"nativeSrc":"9853:22:31","nodeType":"YulFunctionCall","src":"9853:22:31"},{"name":"dataEnd","nativeSrc":"9877:7:31","nodeType":"YulIdentifier","src":"9877:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9832:20:31","nodeType":"YulIdentifier","src":"9832:20:31"},"nativeSrc":"9832:53:31","nodeType":"YulFunctionCall","src":"9832:53:31"},"variableNames":[{"name":"value0","nativeSrc":"9822:6:31","nodeType":"YulIdentifier","src":"9822:6:31"}]}]},{"nativeSrc":"9905:115:31","nodeType":"YulBlock","src":"9905:115:31","statements":[{"nativeSrc":"9920:16:31","nodeType":"YulVariableDeclaration","src":"9920:16:31","value":{"kind":"number","nativeSrc":"9934:2:31","nodeType":"YulLiteral","src":"9934:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9924:6:31","nodeType":"YulTypedName","src":"9924:6:31","type":""}]},{"nativeSrc":"9950:60:31","nodeType":"YulAssignment","src":"9950:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9982:9:31","nodeType":"YulIdentifier","src":"9982:9:31"},{"name":"offset","nativeSrc":"9993:6:31","nodeType":"YulIdentifier","src":"9993:6:31"}],"functionName":{"name":"add","nativeSrc":"9978:3:31","nodeType":"YulIdentifier","src":"9978:3:31"},"nativeSrc":"9978:22:31","nodeType":"YulFunctionCall","src":"9978:22:31"},{"name":"dataEnd","nativeSrc":"10002:7:31","nodeType":"YulIdentifier","src":"10002:7:31"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"9960:17:31","nodeType":"YulIdentifier","src":"9960:17:31"},"nativeSrc":"9960:50:31","nodeType":"YulFunctionCall","src":"9960:50:31"},"variableNames":[{"name":"value1","nativeSrc":"9950:6:31","nodeType":"YulIdentifier","src":"9950:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"9559:468:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9601:9:31","nodeType":"YulTypedName","src":"9601:9:31","type":""},{"name":"dataEnd","nativeSrc":"9612:7:31","nodeType":"YulTypedName","src":"9612:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9624:6:31","nodeType":"YulTypedName","src":"9624:6:31","type":""},{"name":"value1","nativeSrc":"9632:6:31","nodeType":"YulTypedName","src":"9632:6:31","type":""}],"src":"9559:468:31"},{"body":{"nativeSrc":"10099:241:31","nodeType":"YulBlock","src":"10099:241:31","statements":[{"body":{"nativeSrc":"10204:22:31","nodeType":"YulBlock","src":"10204:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10206:16:31","nodeType":"YulIdentifier","src":"10206:16:31"},"nativeSrc":"10206:18:31","nodeType":"YulFunctionCall","src":"10206:18:31"},"nativeSrc":"10206:18:31","nodeType":"YulExpressionStatement","src":"10206:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10176:6:31","nodeType":"YulIdentifier","src":"10176:6:31"},{"kind":"number","nativeSrc":"10184:18:31","nodeType":"YulLiteral","src":"10184:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10173:2:31","nodeType":"YulIdentifier","src":"10173:2:31"},"nativeSrc":"10173:30:31","nodeType":"YulFunctionCall","src":"10173:30:31"},"nativeSrc":"10170:56:31","nodeType":"YulIf","src":"10170:56:31"},{"nativeSrc":"10236:37:31","nodeType":"YulAssignment","src":"10236:37:31","value":{"arguments":[{"name":"length","nativeSrc":"10266:6:31","nodeType":"YulIdentifier","src":"10266:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10244:21:31","nodeType":"YulIdentifier","src":"10244:21:31"},"nativeSrc":"10244:29:31","nodeType":"YulFunctionCall","src":"10244:29:31"},"variableNames":[{"name":"size","nativeSrc":"10236:4:31","nodeType":"YulIdentifier","src":"10236:4:31"}]},{"nativeSrc":"10310:23:31","nodeType":"YulAssignment","src":"10310:23:31","value":{"arguments":[{"name":"size","nativeSrc":"10322:4:31","nodeType":"YulIdentifier","src":"10322:4:31"},{"kind":"number","nativeSrc":"10328:4:31","nodeType":"YulLiteral","src":"10328:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10318:3:31","nodeType":"YulIdentifier","src":"10318:3:31"},"nativeSrc":"10318:15:31","nodeType":"YulFunctionCall","src":"10318:15:31"},"variableNames":[{"name":"size","nativeSrc":"10310:4:31","nodeType":"YulIdentifier","src":"10310:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"10033:307:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"10083:6:31","nodeType":"YulTypedName","src":"10083:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"10094:4:31","nodeType":"YulTypedName","src":"10094:4:31","type":""}],"src":"10033:307:31"},{"body":{"nativeSrc":"10429:340:31","nodeType":"YulBlock","src":"10429:340:31","statements":[{"nativeSrc":"10439:74:31","nodeType":"YulAssignment","src":"10439:74:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"10505:6:31","nodeType":"YulIdentifier","src":"10505:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"10464:40:31","nodeType":"YulIdentifier","src":"10464:40:31"},"nativeSrc":"10464:48:31","nodeType":"YulFunctionCall","src":"10464:48:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"10448:15:31","nodeType":"YulIdentifier","src":"10448:15:31"},"nativeSrc":"10448:65:31","nodeType":"YulFunctionCall","src":"10448:65:31"},"variableNames":[{"name":"array","nativeSrc":"10439:5:31","nodeType":"YulIdentifier","src":"10439:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"10529:5:31","nodeType":"YulIdentifier","src":"10529:5:31"},{"name":"length","nativeSrc":"10536:6:31","nodeType":"YulIdentifier","src":"10536:6:31"}],"functionName":{"name":"mstore","nativeSrc":"10522:6:31","nodeType":"YulIdentifier","src":"10522:6:31"},"nativeSrc":"10522:21:31","nodeType":"YulFunctionCall","src":"10522:21:31"},"nativeSrc":"10522:21:31","nodeType":"YulExpressionStatement","src":"10522:21:31"},{"nativeSrc":"10552:27:31","nodeType":"YulVariableDeclaration","src":"10552:27:31","value":{"arguments":[{"name":"array","nativeSrc":"10567:5:31","nodeType":"YulIdentifier","src":"10567:5:31"},{"kind":"number","nativeSrc":"10574:4:31","nodeType":"YulLiteral","src":"10574:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10563:3:31","nodeType":"YulIdentifier","src":"10563:3:31"},"nativeSrc":"10563:16:31","nodeType":"YulFunctionCall","src":"10563:16:31"},"variables":[{"name":"dst","nativeSrc":"10556:3:31","nodeType":"YulTypedName","src":"10556:3:31","type":""}]},{"body":{"nativeSrc":"10617:83:31","nodeType":"YulBlock","src":"10617:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"10619:77:31","nodeType":"YulIdentifier","src":"10619:77:31"},"nativeSrc":"10619:79:31","nodeType":"YulFunctionCall","src":"10619:79:31"},"nativeSrc":"10619:79:31","nodeType":"YulExpressionStatement","src":"10619:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10598:3:31","nodeType":"YulIdentifier","src":"10598:3:31"},{"name":"length","nativeSrc":"10603:6:31","nodeType":"YulIdentifier","src":"10603:6:31"}],"functionName":{"name":"add","nativeSrc":"10594:3:31","nodeType":"YulIdentifier","src":"10594:3:31"},"nativeSrc":"10594:16:31","nodeType":"YulFunctionCall","src":"10594:16:31"},{"name":"end","nativeSrc":"10612:3:31","nodeType":"YulIdentifier","src":"10612:3:31"}],"functionName":{"name":"gt","nativeSrc":"10591:2:31","nodeType":"YulIdentifier","src":"10591:2:31"},"nativeSrc":"10591:25:31","nodeType":"YulFunctionCall","src":"10591:25:31"},"nativeSrc":"10588:112:31","nodeType":"YulIf","src":"10588:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"10746:3:31","nodeType":"YulIdentifier","src":"10746:3:31"},{"name":"dst","nativeSrc":"10751:3:31","nodeType":"YulIdentifier","src":"10751:3:31"},{"name":"length","nativeSrc":"10756:6:31","nodeType":"YulIdentifier","src":"10756:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"10709:36:31","nodeType":"YulIdentifier","src":"10709:36:31"},"nativeSrc":"10709:54:31","nodeType":"YulFunctionCall","src":"10709:54:31"},"nativeSrc":"10709:54:31","nodeType":"YulExpressionStatement","src":"10709:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"10346:423:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"10402:3:31","nodeType":"YulTypedName","src":"10402:3:31","type":""},{"name":"length","nativeSrc":"10407:6:31","nodeType":"YulTypedName","src":"10407:6:31","type":""},{"name":"end","nativeSrc":"10415:3:31","nodeType":"YulTypedName","src":"10415:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10423:5:31","nodeType":"YulTypedName","src":"10423:5:31","type":""}],"src":"10346:423:31"},{"body":{"nativeSrc":"10849:277:31","nodeType":"YulBlock","src":"10849:277:31","statements":[{"body":{"nativeSrc":"10898:83:31","nodeType":"YulBlock","src":"10898:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10900:77:31","nodeType":"YulIdentifier","src":"10900:77:31"},"nativeSrc":"10900:79:31","nodeType":"YulFunctionCall","src":"10900:79:31"},"nativeSrc":"10900:79:31","nodeType":"YulExpressionStatement","src":"10900:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10877:6:31","nodeType":"YulIdentifier","src":"10877:6:31"},{"kind":"number","nativeSrc":"10885:4:31","nodeType":"YulLiteral","src":"10885:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10873:3:31","nodeType":"YulIdentifier","src":"10873:3:31"},"nativeSrc":"10873:17:31","nodeType":"YulFunctionCall","src":"10873:17:31"},{"name":"end","nativeSrc":"10892:3:31","nodeType":"YulIdentifier","src":"10892:3:31"}],"functionName":{"name":"slt","nativeSrc":"10869:3:31","nodeType":"YulIdentifier","src":"10869:3:31"},"nativeSrc":"10869:27:31","nodeType":"YulFunctionCall","src":"10869:27:31"}],"functionName":{"name":"iszero","nativeSrc":"10862:6:31","nodeType":"YulIdentifier","src":"10862:6:31"},"nativeSrc":"10862:35:31","nodeType":"YulFunctionCall","src":"10862:35:31"},"nativeSrc":"10859:122:31","nodeType":"YulIf","src":"10859:122:31"},{"nativeSrc":"10990:34:31","nodeType":"YulVariableDeclaration","src":"10990:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"11017:6:31","nodeType":"YulIdentifier","src":"11017:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"11004:12:31","nodeType":"YulIdentifier","src":"11004:12:31"},"nativeSrc":"11004:20:31","nodeType":"YulFunctionCall","src":"11004:20:31"},"variables":[{"name":"length","nativeSrc":"10994:6:31","nodeType":"YulTypedName","src":"10994:6:31","type":""}]},{"nativeSrc":"11033:87:31","nodeType":"YulAssignment","src":"11033:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11093:6:31","nodeType":"YulIdentifier","src":"11093:6:31"},{"kind":"number","nativeSrc":"11101:4:31","nodeType":"YulLiteral","src":"11101:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11089:3:31","nodeType":"YulIdentifier","src":"11089:3:31"},"nativeSrc":"11089:17:31","nodeType":"YulFunctionCall","src":"11089:17:31"},{"name":"length","nativeSrc":"11108:6:31","nodeType":"YulIdentifier","src":"11108:6:31"},{"name":"end","nativeSrc":"11116:3:31","nodeType":"YulIdentifier","src":"11116:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"11042:46:31","nodeType":"YulIdentifier","src":"11042:46:31"},"nativeSrc":"11042:78:31","nodeType":"YulFunctionCall","src":"11042:78:31"},"variableNames":[{"name":"array","nativeSrc":"11033:5:31","nodeType":"YulIdentifier","src":"11033:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"10788:338:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10827:6:31","nodeType":"YulTypedName","src":"10827:6:31","type":""},{"name":"end","nativeSrc":"10835:3:31","nodeType":"YulTypedName","src":"10835:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10843:5:31","nodeType":"YulTypedName","src":"10843:5:31","type":""}],"src":"10788:338:31"},{"body":{"nativeSrc":"11258:817:31","nodeType":"YulBlock","src":"11258:817:31","statements":[{"body":{"nativeSrc":"11305:83:31","nodeType":"YulBlock","src":"11305:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11307:77:31","nodeType":"YulIdentifier","src":"11307:77:31"},"nativeSrc":"11307:79:31","nodeType":"YulFunctionCall","src":"11307:79:31"},"nativeSrc":"11307:79:31","nodeType":"YulExpressionStatement","src":"11307:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11279:7:31","nodeType":"YulIdentifier","src":"11279:7:31"},{"name":"headStart","nativeSrc":"11288:9:31","nodeType":"YulIdentifier","src":"11288:9:31"}],"functionName":{"name":"sub","nativeSrc":"11275:3:31","nodeType":"YulIdentifier","src":"11275:3:31"},"nativeSrc":"11275:23:31","nodeType":"YulFunctionCall","src":"11275:23:31"},{"kind":"number","nativeSrc":"11300:3:31","nodeType":"YulLiteral","src":"11300:3:31","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"11271:3:31","nodeType":"YulIdentifier","src":"11271:3:31"},"nativeSrc":"11271:33:31","nodeType":"YulFunctionCall","src":"11271:33:31"},"nativeSrc":"11268:120:31","nodeType":"YulIf","src":"11268:120:31"},{"nativeSrc":"11398:117:31","nodeType":"YulBlock","src":"11398:117:31","statements":[{"nativeSrc":"11413:15:31","nodeType":"YulVariableDeclaration","src":"11413:15:31","value":{"kind":"number","nativeSrc":"11427:1:31","nodeType":"YulLiteral","src":"11427:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11417:6:31","nodeType":"YulTypedName","src":"11417:6:31","type":""}]},{"nativeSrc":"11442:63:31","nodeType":"YulAssignment","src":"11442:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11477:9:31","nodeType":"YulIdentifier","src":"11477:9:31"},{"name":"offset","nativeSrc":"11488:6:31","nodeType":"YulIdentifier","src":"11488:6:31"}],"functionName":{"name":"add","nativeSrc":"11473:3:31","nodeType":"YulIdentifier","src":"11473:3:31"},"nativeSrc":"11473:22:31","nodeType":"YulFunctionCall","src":"11473:22:31"},{"name":"dataEnd","nativeSrc":"11497:7:31","nodeType":"YulIdentifier","src":"11497:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11452:20:31","nodeType":"YulIdentifier","src":"11452:20:31"},"nativeSrc":"11452:53:31","nodeType":"YulFunctionCall","src":"11452:53:31"},"variableNames":[{"name":"value0","nativeSrc":"11442:6:31","nodeType":"YulIdentifier","src":"11442:6:31"}]}]},{"nativeSrc":"11525:118:31","nodeType":"YulBlock","src":"11525:118:31","statements":[{"nativeSrc":"11540:16:31","nodeType":"YulVariableDeclaration","src":"11540:16:31","value":{"kind":"number","nativeSrc":"11554:2:31","nodeType":"YulLiteral","src":"11554:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11544:6:31","nodeType":"YulTypedName","src":"11544:6:31","type":""}]},{"nativeSrc":"11570:63:31","nodeType":"YulAssignment","src":"11570:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11605:9:31","nodeType":"YulIdentifier","src":"11605:9:31"},{"name":"offset","nativeSrc":"11616:6:31","nodeType":"YulIdentifier","src":"11616:6:31"}],"functionName":{"name":"add","nativeSrc":"11601:3:31","nodeType":"YulIdentifier","src":"11601:3:31"},"nativeSrc":"11601:22:31","nodeType":"YulFunctionCall","src":"11601:22:31"},{"name":"dataEnd","nativeSrc":"11625:7:31","nodeType":"YulIdentifier","src":"11625:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11580:20:31","nodeType":"YulIdentifier","src":"11580:20:31"},"nativeSrc":"11580:53:31","nodeType":"YulFunctionCall","src":"11580:53:31"},"variableNames":[{"name":"value1","nativeSrc":"11570:6:31","nodeType":"YulIdentifier","src":"11570:6:31"}]}]},{"nativeSrc":"11653:118:31","nodeType":"YulBlock","src":"11653:118:31","statements":[{"nativeSrc":"11668:16:31","nodeType":"YulVariableDeclaration","src":"11668:16:31","value":{"kind":"number","nativeSrc":"11682:2:31","nodeType":"YulLiteral","src":"11682:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"11672:6:31","nodeType":"YulTypedName","src":"11672:6:31","type":""}]},{"nativeSrc":"11698:63:31","nodeType":"YulAssignment","src":"11698:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11733:9:31","nodeType":"YulIdentifier","src":"11733:9:31"},{"name":"offset","nativeSrc":"11744:6:31","nodeType":"YulIdentifier","src":"11744:6:31"}],"functionName":{"name":"add","nativeSrc":"11729:3:31","nodeType":"YulIdentifier","src":"11729:3:31"},"nativeSrc":"11729:22:31","nodeType":"YulFunctionCall","src":"11729:22:31"},{"name":"dataEnd","nativeSrc":"11753:7:31","nodeType":"YulIdentifier","src":"11753:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11708:20:31","nodeType":"YulIdentifier","src":"11708:20:31"},"nativeSrc":"11708:53:31","nodeType":"YulFunctionCall","src":"11708:53:31"},"variableNames":[{"name":"value2","nativeSrc":"11698:6:31","nodeType":"YulIdentifier","src":"11698:6:31"}]}]},{"nativeSrc":"11781:287:31","nodeType":"YulBlock","src":"11781:287:31","statements":[{"nativeSrc":"11796:46:31","nodeType":"YulVariableDeclaration","src":"11796:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11827:9:31","nodeType":"YulIdentifier","src":"11827:9:31"},{"kind":"number","nativeSrc":"11838:2:31","nodeType":"YulLiteral","src":"11838:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11823:3:31","nodeType":"YulIdentifier","src":"11823:3:31"},"nativeSrc":"11823:18:31","nodeType":"YulFunctionCall","src":"11823:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"11810:12:31","nodeType":"YulIdentifier","src":"11810:12:31"},"nativeSrc":"11810:32:31","nodeType":"YulFunctionCall","src":"11810:32:31"},"variables":[{"name":"offset","nativeSrc":"11800:6:31","nodeType":"YulTypedName","src":"11800:6:31","type":""}]},{"body":{"nativeSrc":"11889:83:31","nodeType":"YulBlock","src":"11889:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11891:77:31","nodeType":"YulIdentifier","src":"11891:77:31"},"nativeSrc":"11891:79:31","nodeType":"YulFunctionCall","src":"11891:79:31"},"nativeSrc":"11891:79:31","nodeType":"YulExpressionStatement","src":"11891:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11861:6:31","nodeType":"YulIdentifier","src":"11861:6:31"},{"kind":"number","nativeSrc":"11869:18:31","nodeType":"YulLiteral","src":"11869:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11858:2:31","nodeType":"YulIdentifier","src":"11858:2:31"},"nativeSrc":"11858:30:31","nodeType":"YulFunctionCall","src":"11858:30:31"},"nativeSrc":"11855:117:31","nodeType":"YulIf","src":"11855:117:31"},{"nativeSrc":"11986:72:31","nodeType":"YulAssignment","src":"11986:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12030:9:31","nodeType":"YulIdentifier","src":"12030:9:31"},{"name":"offset","nativeSrc":"12041:6:31","nodeType":"YulIdentifier","src":"12041:6:31"}],"functionName":{"name":"add","nativeSrc":"12026:3:31","nodeType":"YulIdentifier","src":"12026:3:31"},"nativeSrc":"12026:22:31","nodeType":"YulFunctionCall","src":"12026:22:31"},{"name":"dataEnd","nativeSrc":"12050:7:31","nodeType":"YulIdentifier","src":"12050:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11996:29:31","nodeType":"YulIdentifier","src":"11996:29:31"},"nativeSrc":"11996:62:31","nodeType":"YulFunctionCall","src":"11996:62:31"},"variableNames":[{"name":"value3","nativeSrc":"11986:6:31","nodeType":"YulIdentifier","src":"11986:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"11132:943:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11204:9:31","nodeType":"YulTypedName","src":"11204:9:31","type":""},{"name":"dataEnd","nativeSrc":"11215:7:31","nodeType":"YulTypedName","src":"11215:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11227:6:31","nodeType":"YulTypedName","src":"11227:6:31","type":""},{"name":"value1","nativeSrc":"11235:6:31","nodeType":"YulTypedName","src":"11235:6:31","type":""},{"name":"value2","nativeSrc":"11243:6:31","nodeType":"YulTypedName","src":"11243:6:31","type":""},{"name":"value3","nativeSrc":"11251:6:31","nodeType":"YulTypedName","src":"11251:6:31","type":""}],"src":"11132:943:31"},{"body":{"nativeSrc":"12164:391:31","nodeType":"YulBlock","src":"12164:391:31","statements":[{"body":{"nativeSrc":"12210:83:31","nodeType":"YulBlock","src":"12210:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"12212:77:31","nodeType":"YulIdentifier","src":"12212:77:31"},"nativeSrc":"12212:79:31","nodeType":"YulFunctionCall","src":"12212:79:31"},"nativeSrc":"12212:79:31","nodeType":"YulExpressionStatement","src":"12212:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12185:7:31","nodeType":"YulIdentifier","src":"12185:7:31"},{"name":"headStart","nativeSrc":"12194:9:31","nodeType":"YulIdentifier","src":"12194:9:31"}],"functionName":{"name":"sub","nativeSrc":"12181:3:31","nodeType":"YulIdentifier","src":"12181:3:31"},"nativeSrc":"12181:23:31","nodeType":"YulFunctionCall","src":"12181:23:31"},{"kind":"number","nativeSrc":"12206:2:31","nodeType":"YulLiteral","src":"12206:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"12177:3:31","nodeType":"YulIdentifier","src":"12177:3:31"},"nativeSrc":"12177:32:31","nodeType":"YulFunctionCall","src":"12177:32:31"},"nativeSrc":"12174:119:31","nodeType":"YulIf","src":"12174:119:31"},{"nativeSrc":"12303:117:31","nodeType":"YulBlock","src":"12303:117:31","statements":[{"nativeSrc":"12318:15:31","nodeType":"YulVariableDeclaration","src":"12318:15:31","value":{"kind":"number","nativeSrc":"12332:1:31","nodeType":"YulLiteral","src":"12332:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"12322:6:31","nodeType":"YulTypedName","src":"12322:6:31","type":""}]},{"nativeSrc":"12347:63:31","nodeType":"YulAssignment","src":"12347:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12382:9:31","nodeType":"YulIdentifier","src":"12382:9:31"},{"name":"offset","nativeSrc":"12393:6:31","nodeType":"YulIdentifier","src":"12393:6:31"}],"functionName":{"name":"add","nativeSrc":"12378:3:31","nodeType":"YulIdentifier","src":"12378:3:31"},"nativeSrc":"12378:22:31","nodeType":"YulFunctionCall","src":"12378:22:31"},{"name":"dataEnd","nativeSrc":"12402:7:31","nodeType":"YulIdentifier","src":"12402:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12357:20:31","nodeType":"YulIdentifier","src":"12357:20:31"},"nativeSrc":"12357:53:31","nodeType":"YulFunctionCall","src":"12357:53:31"},"variableNames":[{"name":"value0","nativeSrc":"12347:6:31","nodeType":"YulIdentifier","src":"12347:6:31"}]}]},{"nativeSrc":"12430:118:31","nodeType":"YulBlock","src":"12430:118:31","statements":[{"nativeSrc":"12445:16:31","nodeType":"YulVariableDeclaration","src":"12445:16:31","value":{"kind":"number","nativeSrc":"12459:2:31","nodeType":"YulLiteral","src":"12459:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12449:6:31","nodeType":"YulTypedName","src":"12449:6:31","type":""}]},{"nativeSrc":"12475:63:31","nodeType":"YulAssignment","src":"12475:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12510:9:31","nodeType":"YulIdentifier","src":"12510:9:31"},{"name":"offset","nativeSrc":"12521:6:31","nodeType":"YulIdentifier","src":"12521:6:31"}],"functionName":{"name":"add","nativeSrc":"12506:3:31","nodeType":"YulIdentifier","src":"12506:3:31"},"nativeSrc":"12506:22:31","nodeType":"YulFunctionCall","src":"12506:22:31"},{"name":"dataEnd","nativeSrc":"12530:7:31","nodeType":"YulIdentifier","src":"12530:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"12485:20:31","nodeType":"YulIdentifier","src":"12485:20:31"},"nativeSrc":"12485:53:31","nodeType":"YulFunctionCall","src":"12485:53:31"},"variableNames":[{"name":"value1","nativeSrc":"12475:6:31","nodeType":"YulIdentifier","src":"12475:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"12081:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12126:9:31","nodeType":"YulTypedName","src":"12126:9:31","type":""},{"name":"dataEnd","nativeSrc":"12137:7:31","nodeType":"YulTypedName","src":"12137:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12149:6:31","nodeType":"YulTypedName","src":"12149:6:31","type":""},{"name":"value1","nativeSrc":"12157:6:31","nodeType":"YulTypedName","src":"12157:6:31","type":""}],"src":"12081:474:31"},{"body":{"nativeSrc":"12589:152:31","nodeType":"YulBlock","src":"12589:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12606:1:31","nodeType":"YulLiteral","src":"12606:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"12609:77:31","nodeType":"YulLiteral","src":"12609:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12599:6:31","nodeType":"YulIdentifier","src":"12599:6:31"},"nativeSrc":"12599:88:31","nodeType":"YulFunctionCall","src":"12599:88:31"},"nativeSrc":"12599:88:31","nodeType":"YulExpressionStatement","src":"12599:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12703:1:31","nodeType":"YulLiteral","src":"12703:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"12706:4:31","nodeType":"YulLiteral","src":"12706:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12696:6:31","nodeType":"YulIdentifier","src":"12696:6:31"},"nativeSrc":"12696:15:31","nodeType":"YulFunctionCall","src":"12696:15:31"},"nativeSrc":"12696:15:31","nodeType":"YulExpressionStatement","src":"12696:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12727:1:31","nodeType":"YulLiteral","src":"12727:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"12730:4:31","nodeType":"YulLiteral","src":"12730:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12720:6:31","nodeType":"YulIdentifier","src":"12720:6:31"},"nativeSrc":"12720:15:31","nodeType":"YulFunctionCall","src":"12720:15:31"},"nativeSrc":"12720:15:31","nodeType":"YulExpressionStatement","src":"12720:15:31"}]},"name":"panic_error_0x22","nativeSrc":"12561:180:31","nodeType":"YulFunctionDefinition","src":"12561:180:31"},{"body":{"nativeSrc":"12798:269:31","nodeType":"YulBlock","src":"12798:269:31","statements":[{"nativeSrc":"12808:22:31","nodeType":"YulAssignment","src":"12808:22:31","value":{"arguments":[{"name":"data","nativeSrc":"12822:4:31","nodeType":"YulIdentifier","src":"12822:4:31"},{"kind":"number","nativeSrc":"12828:1:31","nodeType":"YulLiteral","src":"12828:1:31","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"12818:3:31","nodeType":"YulIdentifier","src":"12818:3:31"},"nativeSrc":"12818:12:31","nodeType":"YulFunctionCall","src":"12818:12:31"},"variableNames":[{"name":"length","nativeSrc":"12808:6:31","nodeType":"YulIdentifier","src":"12808:6:31"}]},{"nativeSrc":"12839:38:31","nodeType":"YulVariableDeclaration","src":"12839:38:31","value":{"arguments":[{"name":"data","nativeSrc":"12869:4:31","nodeType":"YulIdentifier","src":"12869:4:31"},{"kind":"number","nativeSrc":"12875:1:31","nodeType":"YulLiteral","src":"12875:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12865:3:31","nodeType":"YulIdentifier","src":"12865:3:31"},"nativeSrc":"12865:12:31","nodeType":"YulFunctionCall","src":"12865:12:31"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12843:18:31","nodeType":"YulTypedName","src":"12843:18:31","type":""}]},{"body":{"nativeSrc":"12916:51:31","nodeType":"YulBlock","src":"12916:51:31","statements":[{"nativeSrc":"12930:27:31","nodeType":"YulAssignment","src":"12930:27:31","value":{"arguments":[{"name":"length","nativeSrc":"12944:6:31","nodeType":"YulIdentifier","src":"12944:6:31"},{"kind":"number","nativeSrc":"12952:4:31","nodeType":"YulLiteral","src":"12952:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12940:3:31","nodeType":"YulIdentifier","src":"12940:3:31"},"nativeSrc":"12940:17:31","nodeType":"YulFunctionCall","src":"12940:17:31"},"variableNames":[{"name":"length","nativeSrc":"12930:6:31","nodeType":"YulIdentifier","src":"12930:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12896:18:31","nodeType":"YulIdentifier","src":"12896:18:31"}],"functionName":{"name":"iszero","nativeSrc":"12889:6:31","nodeType":"YulIdentifier","src":"12889:6:31"},"nativeSrc":"12889:26:31","nodeType":"YulFunctionCall","src":"12889:26:31"},"nativeSrc":"12886:81:31","nodeType":"YulIf","src":"12886:81:31"},{"body":{"nativeSrc":"13019:42:31","nodeType":"YulBlock","src":"13019:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"13033:16:31","nodeType":"YulIdentifier","src":"13033:16:31"},"nativeSrc":"13033:18:31","nodeType":"YulFunctionCall","src":"13033:18:31"},"nativeSrc":"13033:18:31","nodeType":"YulExpressionStatement","src":"13033:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12983:18:31","nodeType":"YulIdentifier","src":"12983:18:31"},{"arguments":[{"name":"length","nativeSrc":"13006:6:31","nodeType":"YulIdentifier","src":"13006:6:31"},{"kind":"number","nativeSrc":"13014:2:31","nodeType":"YulLiteral","src":"13014:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"13003:2:31","nodeType":"YulIdentifier","src":"13003:2:31"},"nativeSrc":"13003:14:31","nodeType":"YulFunctionCall","src":"13003:14:31"}],"functionName":{"name":"eq","nativeSrc":"12980:2:31","nodeType":"YulIdentifier","src":"12980:2:31"},"nativeSrc":"12980:38:31","nodeType":"YulFunctionCall","src":"12980:38:31"},"nativeSrc":"12977:84:31","nodeType":"YulIf","src":"12977:84:31"}]},"name":"extract_byte_array_length","nativeSrc":"12747:320:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12782:4:31","nodeType":"YulTypedName","src":"12782:4:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12791:6:31","nodeType":"YulTypedName","src":"12791:6:31","type":""}],"src":"12747:320:31"},{"body":{"nativeSrc":"13126:32:31","nodeType":"YulBlock","src":"13126:32:31","statements":[{"nativeSrc":"13136:16:31","nodeType":"YulAssignment","src":"13136:16:31","value":{"name":"value","nativeSrc":"13147:5:31","nodeType":"YulIdentifier","src":"13147:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"13136:7:31","nodeType":"YulIdentifier","src":"13136:7:31"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"13073:85:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13108:5:31","nodeType":"YulTypedName","src":"13108:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"13118:7:31","nodeType":"YulTypedName","src":"13118:7:31","type":""}],"src":"13073:85:31"},{"body":{"nativeSrc":"13208:57:31","nodeType":"YulBlock","src":"13208:57:31","statements":[{"nativeSrc":"13218:41:31","nodeType":"YulAssignment","src":"13218:41:31","value":{"arguments":[{"name":"value","nativeSrc":"13233:5:31","nodeType":"YulIdentifier","src":"13233:5:31"},{"kind":"number","nativeSrc":"13240:18:31","nodeType":"YulLiteral","src":"13240:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"13229:3:31","nodeType":"YulIdentifier","src":"13229:3:31"},"nativeSrc":"13229:30:31","nodeType":"YulFunctionCall","src":"13229:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"13218:7:31","nodeType":"YulIdentifier","src":"13218:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"13164:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13190:5:31","nodeType":"YulTypedName","src":"13190:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"13200:7:31","nodeType":"YulTypedName","src":"13200:7:31","type":""}],"src":"13164:101:31"},{"body":{"nativeSrc":"13303:28:31","nodeType":"YulBlock","src":"13303:28:31","statements":[{"nativeSrc":"13313:12:31","nodeType":"YulAssignment","src":"13313:12:31","value":{"name":"value","nativeSrc":"13320:5:31","nodeType":"YulIdentifier","src":"13320:5:31"},"variableNames":[{"name":"ret","nativeSrc":"13313:3:31","nodeType":"YulIdentifier","src":"13313:3:31"}]}]},"name":"identity","nativeSrc":"13271:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13289:5:31","nodeType":"YulTypedName","src":"13289:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"13299:3:31","nodeType":"YulTypedName","src":"13299:3:31","type":""}],"src":"13271:60:31"},{"body":{"nativeSrc":"13404:89:31","nodeType":"YulBlock","src":"13404:89:31","statements":[{"nativeSrc":"13414:73:31","nodeType":"YulAssignment","src":"13414:73:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13479:5:31","nodeType":"YulIdentifier","src":"13479:5:31"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"13453:25:31","nodeType":"YulIdentifier","src":"13453:25:31"},"nativeSrc":"13453:32:31","nodeType":"YulFunctionCall","src":"13453:32:31"}],"functionName":{"name":"identity","nativeSrc":"13444:8:31","nodeType":"YulIdentifier","src":"13444:8:31"},"nativeSrc":"13444:42:31","nodeType":"YulFunctionCall","src":"13444:42:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"13427:16:31","nodeType":"YulIdentifier","src":"13427:16:31"},"nativeSrc":"13427:60:31","nodeType":"YulFunctionCall","src":"13427:60:31"},"variableNames":[{"name":"converted","nativeSrc":"13414:9:31","nodeType":"YulIdentifier","src":"13414:9:31"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"13337:156:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13384:5:31","nodeType":"YulTypedName","src":"13384:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"13394:9:31","nodeType":"YulTypedName","src":"13394:9:31","type":""}],"src":"13337:156:31"},{"body":{"nativeSrc":"13571:73:31","nodeType":"YulBlock","src":"13571:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"13588:3:31","nodeType":"YulIdentifier","src":"13588:3:31"},{"arguments":[{"name":"value","nativeSrc":"13631:5:31","nodeType":"YulIdentifier","src":"13631:5:31"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"13593:37:31","nodeType":"YulIdentifier","src":"13593:37:31"},"nativeSrc":"13593:44:31","nodeType":"YulFunctionCall","src":"13593:44:31"}],"functionName":{"name":"mstore","nativeSrc":"13581:6:31","nodeType":"YulIdentifier","src":"13581:6:31"},"nativeSrc":"13581:57:31","nodeType":"YulFunctionCall","src":"13581:57:31"},"nativeSrc":"13581:57:31","nodeType":"YulExpressionStatement","src":"13581:57:31"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"13499:145:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13559:5:31","nodeType":"YulTypedName","src":"13559:5:31","type":""},{"name":"pos","nativeSrc":"13566:3:31","nodeType":"YulTypedName","src":"13566:3:31","type":""}],"src":"13499:145:31"},{"body":{"nativeSrc":"13755:131:31","nodeType":"YulBlock","src":"13755:131:31","statements":[{"nativeSrc":"13765:26:31","nodeType":"YulAssignment","src":"13765:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"13777:9:31","nodeType":"YulIdentifier","src":"13777:9:31"},{"kind":"number","nativeSrc":"13788:2:31","nodeType":"YulLiteral","src":"13788:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13773:3:31","nodeType":"YulIdentifier","src":"13773:3:31"},"nativeSrc":"13773:18:31","nodeType":"YulFunctionCall","src":"13773:18:31"},"variableNames":[{"name":"tail","nativeSrc":"13765:4:31","nodeType":"YulIdentifier","src":"13765:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13852:6:31","nodeType":"YulIdentifier","src":"13852:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"13865:9:31","nodeType":"YulIdentifier","src":"13865:9:31"},{"kind":"number","nativeSrc":"13876:1:31","nodeType":"YulLiteral","src":"13876:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13861:3:31","nodeType":"YulIdentifier","src":"13861:3:31"},"nativeSrc":"13861:17:31","nodeType":"YulFunctionCall","src":"13861:17:31"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"13801:50:31","nodeType":"YulIdentifier","src":"13801:50:31"},"nativeSrc":"13801:78:31","nodeType":"YulFunctionCall","src":"13801:78:31"},"nativeSrc":"13801:78:31","nodeType":"YulExpressionStatement","src":"13801:78:31"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"13650:236:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13727:9:31","nodeType":"YulTypedName","src":"13727:9:31","type":""},{"name":"value0","nativeSrc":"13739:6:31","nodeType":"YulTypedName","src":"13739:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13750:4:31","nodeType":"YulTypedName","src":"13750:4:31","type":""}],"src":"13650:236:31"},{"body":{"nativeSrc":"14046:288:31","nodeType":"YulBlock","src":"14046:288:31","statements":[{"nativeSrc":"14056:26:31","nodeType":"YulAssignment","src":"14056:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"14068:9:31","nodeType":"YulIdentifier","src":"14068:9:31"},{"kind":"number","nativeSrc":"14079:2:31","nodeType":"YulLiteral","src":"14079:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14064:3:31","nodeType":"YulIdentifier","src":"14064:3:31"},"nativeSrc":"14064:18:31","nodeType":"YulFunctionCall","src":"14064:18:31"},"variableNames":[{"name":"tail","nativeSrc":"14056:4:31","nodeType":"YulIdentifier","src":"14056:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14136:6:31","nodeType":"YulIdentifier","src":"14136:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"14149:9:31","nodeType":"YulIdentifier","src":"14149:9:31"},{"kind":"number","nativeSrc":"14160:1:31","nodeType":"YulLiteral","src":"14160:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14145:3:31","nodeType":"YulIdentifier","src":"14145:3:31"},"nativeSrc":"14145:17:31","nodeType":"YulFunctionCall","src":"14145:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14092:43:31","nodeType":"YulIdentifier","src":"14092:43:31"},"nativeSrc":"14092:71:31","nodeType":"YulFunctionCall","src":"14092:71:31"},"nativeSrc":"14092:71:31","nodeType":"YulExpressionStatement","src":"14092:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14217:6:31","nodeType":"YulIdentifier","src":"14217:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"14230:9:31","nodeType":"YulIdentifier","src":"14230:9:31"},{"kind":"number","nativeSrc":"14241:2:31","nodeType":"YulLiteral","src":"14241:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14226:3:31","nodeType":"YulIdentifier","src":"14226:3:31"},"nativeSrc":"14226:18:31","nodeType":"YulFunctionCall","src":"14226:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14173:43:31","nodeType":"YulIdentifier","src":"14173:43:31"},"nativeSrc":"14173:72:31","nodeType":"YulFunctionCall","src":"14173:72:31"},"nativeSrc":"14173:72:31","nodeType":"YulExpressionStatement","src":"14173:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14299:6:31","nodeType":"YulIdentifier","src":"14299:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"14312:9:31","nodeType":"YulIdentifier","src":"14312:9:31"},{"kind":"number","nativeSrc":"14323:2:31","nodeType":"YulLiteral","src":"14323:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14308:3:31","nodeType":"YulIdentifier","src":"14308:3:31"},"nativeSrc":"14308:18:31","nodeType":"YulFunctionCall","src":"14308:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14255:43:31","nodeType":"YulIdentifier","src":"14255:43:31"},"nativeSrc":"14255:72:31","nodeType":"YulFunctionCall","src":"14255:72:31"},"nativeSrc":"14255:72:31","nodeType":"YulExpressionStatement","src":"14255:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"13892:442:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14002:9:31","nodeType":"YulTypedName","src":"14002:9:31","type":""},{"name":"value2","nativeSrc":"14014:6:31","nodeType":"YulTypedName","src":"14014:6:31","type":""},{"name":"value1","nativeSrc":"14022:6:31","nodeType":"YulTypedName","src":"14022:6:31","type":""},{"name":"value0","nativeSrc":"14030:6:31","nodeType":"YulTypedName","src":"14030:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14041:4:31","nodeType":"YulTypedName","src":"14041:4:31","type":""}],"src":"13892:442:31"},{"body":{"nativeSrc":"14368:152:31","nodeType":"YulBlock","src":"14368:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14385:1:31","nodeType":"YulLiteral","src":"14385:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"14388:77:31","nodeType":"YulLiteral","src":"14388:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14378:6:31","nodeType":"YulIdentifier","src":"14378:6:31"},"nativeSrc":"14378:88:31","nodeType":"YulFunctionCall","src":"14378:88:31"},"nativeSrc":"14378:88:31","nodeType":"YulExpressionStatement","src":"14378:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14482:1:31","nodeType":"YulLiteral","src":"14482:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"14485:4:31","nodeType":"YulLiteral","src":"14485:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"14475:6:31","nodeType":"YulIdentifier","src":"14475:6:31"},"nativeSrc":"14475:15:31","nodeType":"YulFunctionCall","src":"14475:15:31"},"nativeSrc":"14475:15:31","nodeType":"YulExpressionStatement","src":"14475:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14506:1:31","nodeType":"YulLiteral","src":"14506:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"14509:4:31","nodeType":"YulLiteral","src":"14509:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14499:6:31","nodeType":"YulIdentifier","src":"14499:6:31"},"nativeSrc":"14499:15:31","nodeType":"YulFunctionCall","src":"14499:15:31"},"nativeSrc":"14499:15:31","nodeType":"YulExpressionStatement","src":"14499:15:31"}]},"name":"panic_error_0x11","nativeSrc":"14340:180:31","nodeType":"YulFunctionDefinition","src":"14340:180:31"},{"body":{"nativeSrc":"14569:190:31","nodeType":"YulBlock","src":"14569:190:31","statements":[{"nativeSrc":"14579:33:31","nodeType":"YulAssignment","src":"14579:33:31","value":{"arguments":[{"name":"value","nativeSrc":"14606:5:31","nodeType":"YulIdentifier","src":"14606:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14588:17:31","nodeType":"YulIdentifier","src":"14588:17:31"},"nativeSrc":"14588:24:31","nodeType":"YulFunctionCall","src":"14588:24:31"},"variableNames":[{"name":"value","nativeSrc":"14579:5:31","nodeType":"YulIdentifier","src":"14579:5:31"}]},{"body":{"nativeSrc":"14702:22:31","nodeType":"YulBlock","src":"14702:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"14704:16:31","nodeType":"YulIdentifier","src":"14704:16:31"},"nativeSrc":"14704:18:31","nodeType":"YulFunctionCall","src":"14704:18:31"},"nativeSrc":"14704:18:31","nodeType":"YulExpressionStatement","src":"14704:18:31"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"14627:5:31","nodeType":"YulIdentifier","src":"14627:5:31"},{"kind":"number","nativeSrc":"14634:66:31","nodeType":"YulLiteral","src":"14634:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"14624:2:31","nodeType":"YulIdentifier","src":"14624:2:31"},"nativeSrc":"14624:77:31","nodeType":"YulFunctionCall","src":"14624:77:31"},"nativeSrc":"14621:103:31","nodeType":"YulIf","src":"14621:103:31"},{"nativeSrc":"14733:20:31","nodeType":"YulAssignment","src":"14733:20:31","value":{"arguments":[{"name":"value","nativeSrc":"14744:5:31","nodeType":"YulIdentifier","src":"14744:5:31"},{"kind":"number","nativeSrc":"14751:1:31","nodeType":"YulLiteral","src":"14751:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"14740:3:31","nodeType":"YulIdentifier","src":"14740:3:31"},"nativeSrc":"14740:13:31","nodeType":"YulFunctionCall","src":"14740:13:31"},"variableNames":[{"name":"ret","nativeSrc":"14733:3:31","nodeType":"YulIdentifier","src":"14733:3:31"}]}]},"name":"increment_t_uint256","nativeSrc":"14526:233:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14555:5:31","nodeType":"YulTypedName","src":"14555:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"14565:3:31","nodeType":"YulTypedName","src":"14565:3:31","type":""}],"src":"14526:233:31"},{"body":{"nativeSrc":"14879:34:31","nodeType":"YulBlock","src":"14879:34:31","statements":[{"nativeSrc":"14889:18:31","nodeType":"YulAssignment","src":"14889:18:31","value":{"name":"pos","nativeSrc":"14904:3:31","nodeType":"YulIdentifier","src":"14904:3:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"14889:11:31","nodeType":"YulIdentifier","src":"14889:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14765:148:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14851:3:31","nodeType":"YulTypedName","src":"14851:3:31","type":""},{"name":"length","nativeSrc":"14856:6:31","nodeType":"YulTypedName","src":"14856:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14867:11:31","nodeType":"YulTypedName","src":"14867:11:31","type":""}],"src":"14765:148:31"},{"body":{"nativeSrc":"15029:280:31","nodeType":"YulBlock","src":"15029:280:31","statements":[{"nativeSrc":"15039:53:31","nodeType":"YulVariableDeclaration","src":"15039:53:31","value":{"arguments":[{"name":"value","nativeSrc":"15086:5:31","nodeType":"YulIdentifier","src":"15086:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"15053:32:31","nodeType":"YulIdentifier","src":"15053:32:31"},"nativeSrc":"15053:39:31","nodeType":"YulFunctionCall","src":"15053:39:31"},"variables":[{"name":"length","nativeSrc":"15043:6:31","nodeType":"YulTypedName","src":"15043:6:31","type":""}]},{"nativeSrc":"15101:96:31","nodeType":"YulAssignment","src":"15101:96:31","value":{"arguments":[{"name":"pos","nativeSrc":"15185:3:31","nodeType":"YulIdentifier","src":"15185:3:31"},{"name":"length","nativeSrc":"15190:6:31","nodeType":"YulIdentifier","src":"15190:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15108:76:31","nodeType":"YulIdentifier","src":"15108:76:31"},"nativeSrc":"15108:89:31","nodeType":"YulFunctionCall","src":"15108:89:31"},"variableNames":[{"name":"pos","nativeSrc":"15101:3:31","nodeType":"YulIdentifier","src":"15101:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"15245:5:31","nodeType":"YulIdentifier","src":"15245:5:31"},{"kind":"number","nativeSrc":"15252:4:31","nodeType":"YulLiteral","src":"15252:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15241:3:31","nodeType":"YulIdentifier","src":"15241:3:31"},"nativeSrc":"15241:16:31","nodeType":"YulFunctionCall","src":"15241:16:31"},{"name":"pos","nativeSrc":"15259:3:31","nodeType":"YulIdentifier","src":"15259:3:31"},{"name":"length","nativeSrc":"15264:6:31","nodeType":"YulIdentifier","src":"15264:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"15206:34:31","nodeType":"YulIdentifier","src":"15206:34:31"},"nativeSrc":"15206:65:31","nodeType":"YulFunctionCall","src":"15206:65:31"},"nativeSrc":"15206:65:31","nodeType":"YulExpressionStatement","src":"15206:65:31"},{"nativeSrc":"15280:23:31","nodeType":"YulAssignment","src":"15280:23:31","value":{"arguments":[{"name":"pos","nativeSrc":"15291:3:31","nodeType":"YulIdentifier","src":"15291:3:31"},{"name":"length","nativeSrc":"15296:6:31","nodeType":"YulIdentifier","src":"15296:6:31"}],"functionName":{"name":"add","nativeSrc":"15287:3:31","nodeType":"YulIdentifier","src":"15287:3:31"},"nativeSrc":"15287:16:31","nodeType":"YulFunctionCall","src":"15287:16:31"},"variableNames":[{"name":"end","nativeSrc":"15280:3:31","nodeType":"YulIdentifier","src":"15280:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14919:390:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15010:5:31","nodeType":"YulTypedName","src":"15010:5:31","type":""},{"name":"pos","nativeSrc":"15017:3:31","nodeType":"YulTypedName","src":"15017:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15025:3:31","nodeType":"YulTypedName","src":"15025:3:31","type":""}],"src":"14919:390:31"},{"body":{"nativeSrc":"15499:251:31","nodeType":"YulBlock","src":"15499:251:31","statements":[{"nativeSrc":"15510:102:31","nodeType":"YulAssignment","src":"15510:102:31","value":{"arguments":[{"name":"value0","nativeSrc":"15599:6:31","nodeType":"YulIdentifier","src":"15599:6:31"},{"name":"pos","nativeSrc":"15608:3:31","nodeType":"YulIdentifier","src":"15608:3:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15517:81:31","nodeType":"YulIdentifier","src":"15517:81:31"},"nativeSrc":"15517:95:31","nodeType":"YulFunctionCall","src":"15517:95:31"},"variableNames":[{"name":"pos","nativeSrc":"15510:3:31","nodeType":"YulIdentifier","src":"15510:3:31"}]},{"nativeSrc":"15622:102:31","nodeType":"YulAssignment","src":"15622:102:31","value":{"arguments":[{"name":"value1","nativeSrc":"15711:6:31","nodeType":"YulIdentifier","src":"15711:6:31"},{"name":"pos","nativeSrc":"15720:3:31","nodeType":"YulIdentifier","src":"15720:3:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"15629:81:31","nodeType":"YulIdentifier","src":"15629:81:31"},"nativeSrc":"15629:95:31","nodeType":"YulFunctionCall","src":"15629:95:31"},"variableNames":[{"name":"pos","nativeSrc":"15622:3:31","nodeType":"YulIdentifier","src":"15622:3:31"}]},{"nativeSrc":"15734:10:31","nodeType":"YulAssignment","src":"15734:10:31","value":{"name":"pos","nativeSrc":"15741:3:31","nodeType":"YulIdentifier","src":"15741:3:31"},"variableNames":[{"name":"end","nativeSrc":"15734:3:31","nodeType":"YulIdentifier","src":"15734:3:31"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"15315:435:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15470:3:31","nodeType":"YulTypedName","src":"15470:3:31","type":""},{"name":"value1","nativeSrc":"15476:6:31","nodeType":"YulTypedName","src":"15476:6:31","type":""},{"name":"value0","nativeSrc":"15484:6:31","nodeType":"YulTypedName","src":"15484:6:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15495:3:31","nodeType":"YulTypedName","src":"15495:3:31","type":""}],"src":"15315:435:31"},{"body":{"nativeSrc":"15814:40:31","nodeType":"YulBlock","src":"15814:40:31","statements":[{"nativeSrc":"15825:22:31","nodeType":"YulAssignment","src":"15825:22:31","value":{"arguments":[{"name":"value","nativeSrc":"15841:5:31","nodeType":"YulIdentifier","src":"15841:5:31"}],"functionName":{"name":"mload","nativeSrc":"15835:5:31","nodeType":"YulIdentifier","src":"15835:5:31"},"nativeSrc":"15835:12:31","nodeType":"YulFunctionCall","src":"15835:12:31"},"variableNames":[{"name":"length","nativeSrc":"15825:6:31","nodeType":"YulIdentifier","src":"15825:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"15756:98:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15797:5:31","nodeType":"YulTypedName","src":"15797:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"15807:6:31","nodeType":"YulTypedName","src":"15807:6:31","type":""}],"src":"15756:98:31"},{"body":{"nativeSrc":"15955:73:31","nodeType":"YulBlock","src":"15955:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15972:3:31","nodeType":"YulIdentifier","src":"15972:3:31"},{"name":"length","nativeSrc":"15977:6:31","nodeType":"YulIdentifier","src":"15977:6:31"}],"functionName":{"name":"mstore","nativeSrc":"15965:6:31","nodeType":"YulIdentifier","src":"15965:6:31"},"nativeSrc":"15965:19:31","nodeType":"YulFunctionCall","src":"15965:19:31"},"nativeSrc":"15965:19:31","nodeType":"YulExpressionStatement","src":"15965:19:31"},{"nativeSrc":"15993:29:31","nodeType":"YulAssignment","src":"15993:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"16012:3:31","nodeType":"YulIdentifier","src":"16012:3:31"},{"kind":"number","nativeSrc":"16017:4:31","nodeType":"YulLiteral","src":"16017:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16008:3:31","nodeType":"YulIdentifier","src":"16008:3:31"},"nativeSrc":"16008:14:31","nodeType":"YulFunctionCall","src":"16008:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"15993:11:31","nodeType":"YulIdentifier","src":"15993:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"15860:168:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15927:3:31","nodeType":"YulTypedName","src":"15927:3:31","type":""},{"name":"length","nativeSrc":"15932:6:31","nodeType":"YulTypedName","src":"15932:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"15943:11:31","nodeType":"YulTypedName","src":"15943:11:31","type":""}],"src":"15860:168:31"},{"body":{"nativeSrc":"16124:283:31","nodeType":"YulBlock","src":"16124:283:31","statements":[{"nativeSrc":"16134:52:31","nodeType":"YulVariableDeclaration","src":"16134:52:31","value":{"arguments":[{"name":"value","nativeSrc":"16180:5:31","nodeType":"YulIdentifier","src":"16180:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"16148:31:31","nodeType":"YulIdentifier","src":"16148:31:31"},"nativeSrc":"16148:38:31","nodeType":"YulFunctionCall","src":"16148:38:31"},"variables":[{"name":"length","nativeSrc":"16138:6:31","nodeType":"YulTypedName","src":"16138:6:31","type":""}]},{"nativeSrc":"16195:77:31","nodeType":"YulAssignment","src":"16195:77:31","value":{"arguments":[{"name":"pos","nativeSrc":"16260:3:31","nodeType":"YulIdentifier","src":"16260:3:31"},{"name":"length","nativeSrc":"16265:6:31","nodeType":"YulIdentifier","src":"16265:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"16202:57:31","nodeType":"YulIdentifier","src":"16202:57:31"},"nativeSrc":"16202:70:31","nodeType":"YulFunctionCall","src":"16202:70:31"},"variableNames":[{"name":"pos","nativeSrc":"16195:3:31","nodeType":"YulIdentifier","src":"16195:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16320:5:31","nodeType":"YulIdentifier","src":"16320:5:31"},{"kind":"number","nativeSrc":"16327:4:31","nodeType":"YulLiteral","src":"16327:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16316:3:31","nodeType":"YulIdentifier","src":"16316:3:31"},"nativeSrc":"16316:16:31","nodeType":"YulFunctionCall","src":"16316:16:31"},{"name":"pos","nativeSrc":"16334:3:31","nodeType":"YulIdentifier","src":"16334:3:31"},{"name":"length","nativeSrc":"16339:6:31","nodeType":"YulIdentifier","src":"16339:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"16281:34:31","nodeType":"YulIdentifier","src":"16281:34:31"},"nativeSrc":"16281:65:31","nodeType":"YulFunctionCall","src":"16281:65:31"},"nativeSrc":"16281:65:31","nodeType":"YulExpressionStatement","src":"16281:65:31"},{"nativeSrc":"16355:46:31","nodeType":"YulAssignment","src":"16355:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"16366:3:31","nodeType":"YulIdentifier","src":"16366:3:31"},{"arguments":[{"name":"length","nativeSrc":"16393:6:31","nodeType":"YulIdentifier","src":"16393:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"16371:21:31","nodeType":"YulIdentifier","src":"16371:21:31"},"nativeSrc":"16371:29:31","nodeType":"YulFunctionCall","src":"16371:29:31"}],"functionName":{"name":"add","nativeSrc":"16362:3:31","nodeType":"YulIdentifier","src":"16362:3:31"},"nativeSrc":"16362:39:31","nodeType":"YulFunctionCall","src":"16362:39:31"},"variableNames":[{"name":"end","nativeSrc":"16355:3:31","nodeType":"YulIdentifier","src":"16355:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"16034:373:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16105:5:31","nodeType":"YulTypedName","src":"16105:5:31","type":""},{"name":"pos","nativeSrc":"16112:3:31","nodeType":"YulTypedName","src":"16112:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16120:3:31","nodeType":"YulTypedName","src":"16120:3:31","type":""}],"src":"16034:373:31"},{"body":{"nativeSrc":"16613:440:31","nodeType":"YulBlock","src":"16613:440:31","statements":[{"nativeSrc":"16623:27:31","nodeType":"YulAssignment","src":"16623:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"16635:9:31","nodeType":"YulIdentifier","src":"16635:9:31"},{"kind":"number","nativeSrc":"16646:3:31","nodeType":"YulLiteral","src":"16646:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16631:3:31","nodeType":"YulIdentifier","src":"16631:3:31"},"nativeSrc":"16631:19:31","nodeType":"YulFunctionCall","src":"16631:19:31"},"variableNames":[{"name":"tail","nativeSrc":"16623:4:31","nodeType":"YulIdentifier","src":"16623:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16704:6:31","nodeType":"YulIdentifier","src":"16704:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"16717:9:31","nodeType":"YulIdentifier","src":"16717:9:31"},{"kind":"number","nativeSrc":"16728:1:31","nodeType":"YulLiteral","src":"16728:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16713:3:31","nodeType":"YulIdentifier","src":"16713:3:31"},"nativeSrc":"16713:17:31","nodeType":"YulFunctionCall","src":"16713:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16660:43:31","nodeType":"YulIdentifier","src":"16660:43:31"},"nativeSrc":"16660:71:31","nodeType":"YulFunctionCall","src":"16660:71:31"},"nativeSrc":"16660:71:31","nodeType":"YulExpressionStatement","src":"16660:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16785:6:31","nodeType":"YulIdentifier","src":"16785:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"16798:9:31","nodeType":"YulIdentifier","src":"16798:9:31"},{"kind":"number","nativeSrc":"16809:2:31","nodeType":"YulLiteral","src":"16809:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16794:3:31","nodeType":"YulIdentifier","src":"16794:3:31"},"nativeSrc":"16794:18:31","nodeType":"YulFunctionCall","src":"16794:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16741:43:31","nodeType":"YulIdentifier","src":"16741:43:31"},"nativeSrc":"16741:72:31","nodeType":"YulFunctionCall","src":"16741:72:31"},"nativeSrc":"16741:72:31","nodeType":"YulExpressionStatement","src":"16741:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"16867:6:31","nodeType":"YulIdentifier","src":"16867:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"16880:9:31","nodeType":"YulIdentifier","src":"16880:9:31"},{"kind":"number","nativeSrc":"16891:2:31","nodeType":"YulLiteral","src":"16891:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16876:3:31","nodeType":"YulIdentifier","src":"16876:3:31"},"nativeSrc":"16876:18:31","nodeType":"YulFunctionCall","src":"16876:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16823:43:31","nodeType":"YulIdentifier","src":"16823:43:31"},"nativeSrc":"16823:72:31","nodeType":"YulFunctionCall","src":"16823:72:31"},"nativeSrc":"16823:72:31","nodeType":"YulExpressionStatement","src":"16823:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16916:9:31","nodeType":"YulIdentifier","src":"16916:9:31"},{"kind":"number","nativeSrc":"16927:2:31","nodeType":"YulLiteral","src":"16927:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16912:3:31","nodeType":"YulIdentifier","src":"16912:3:31"},"nativeSrc":"16912:18:31","nodeType":"YulFunctionCall","src":"16912:18:31"},{"arguments":[{"name":"tail","nativeSrc":"16936:4:31","nodeType":"YulIdentifier","src":"16936:4:31"},{"name":"headStart","nativeSrc":"16942:9:31","nodeType":"YulIdentifier","src":"16942:9:31"}],"functionName":{"name":"sub","nativeSrc":"16932:3:31","nodeType":"YulIdentifier","src":"16932:3:31"},"nativeSrc":"16932:20:31","nodeType":"YulFunctionCall","src":"16932:20:31"}],"functionName":{"name":"mstore","nativeSrc":"16905:6:31","nodeType":"YulIdentifier","src":"16905:6:31"},"nativeSrc":"16905:48:31","nodeType":"YulFunctionCall","src":"16905:48:31"},"nativeSrc":"16905:48:31","nodeType":"YulExpressionStatement","src":"16905:48:31"},{"nativeSrc":"16962:84:31","nodeType":"YulAssignment","src":"16962:84:31","value":{"arguments":[{"name":"value3","nativeSrc":"17032:6:31","nodeType":"YulIdentifier","src":"17032:6:31"},{"name":"tail","nativeSrc":"17041:4:31","nodeType":"YulIdentifier","src":"17041:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"16970:61:31","nodeType":"YulIdentifier","src":"16970:61:31"},"nativeSrc":"16970:76:31","nodeType":"YulFunctionCall","src":"16970:76:31"},"variableNames":[{"name":"tail","nativeSrc":"16962:4:31","nodeType":"YulIdentifier","src":"16962:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"16413:640:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16561:9:31","nodeType":"YulTypedName","src":"16561:9:31","type":""},{"name":"value3","nativeSrc":"16573:6:31","nodeType":"YulTypedName","src":"16573:6:31","type":""},{"name":"value2","nativeSrc":"16581:6:31","nodeType":"YulTypedName","src":"16581:6:31","type":""},{"name":"value1","nativeSrc":"16589:6:31","nodeType":"YulTypedName","src":"16589:6:31","type":""},{"name":"value0","nativeSrc":"16597:6:31","nodeType":"YulTypedName","src":"16597:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16608:4:31","nodeType":"YulTypedName","src":"16608:4:31","type":""}],"src":"16413:640:31"},{"body":{"nativeSrc":"17121:79:31","nodeType":"YulBlock","src":"17121:79:31","statements":[{"nativeSrc":"17131:22:31","nodeType":"YulAssignment","src":"17131:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"17146:6:31","nodeType":"YulIdentifier","src":"17146:6:31"}],"functionName":{"name":"mload","nativeSrc":"17140:5:31","nodeType":"YulIdentifier","src":"17140:5:31"},"nativeSrc":"17140:13:31","nodeType":"YulFunctionCall","src":"17140:13:31"},"variableNames":[{"name":"value","nativeSrc":"17131:5:31","nodeType":"YulIdentifier","src":"17131:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17188:5:31","nodeType":"YulIdentifier","src":"17188:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"17162:25:31","nodeType":"YulIdentifier","src":"17162:25:31"},"nativeSrc":"17162:32:31","nodeType":"YulFunctionCall","src":"17162:32:31"},"nativeSrc":"17162:32:31","nodeType":"YulExpressionStatement","src":"17162:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"17059:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17099:6:31","nodeType":"YulTypedName","src":"17099:6:31","type":""},{"name":"end","nativeSrc":"17107:3:31","nodeType":"YulTypedName","src":"17107:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17115:5:31","nodeType":"YulTypedName","src":"17115:5:31","type":""}],"src":"17059:141:31"},{"body":{"nativeSrc":"17282:273:31","nodeType":"YulBlock","src":"17282:273:31","statements":[{"body":{"nativeSrc":"17328:83:31","nodeType":"YulBlock","src":"17328:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17330:77:31","nodeType":"YulIdentifier","src":"17330:77:31"},"nativeSrc":"17330:79:31","nodeType":"YulFunctionCall","src":"17330:79:31"},"nativeSrc":"17330:79:31","nodeType":"YulExpressionStatement","src":"17330:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17303:7:31","nodeType":"YulIdentifier","src":"17303:7:31"},{"name":"headStart","nativeSrc":"17312:9:31","nodeType":"YulIdentifier","src":"17312:9:31"}],"functionName":{"name":"sub","nativeSrc":"17299:3:31","nodeType":"YulIdentifier","src":"17299:3:31"},"nativeSrc":"17299:23:31","nodeType":"YulFunctionCall","src":"17299:23:31"},{"kind":"number","nativeSrc":"17324:2:31","nodeType":"YulLiteral","src":"17324:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17295:3:31","nodeType":"YulIdentifier","src":"17295:3:31"},"nativeSrc":"17295:32:31","nodeType":"YulFunctionCall","src":"17295:32:31"},"nativeSrc":"17292:119:31","nodeType":"YulIf","src":"17292:119:31"},{"nativeSrc":"17421:127:31","nodeType":"YulBlock","src":"17421:127:31","statements":[{"nativeSrc":"17436:15:31","nodeType":"YulVariableDeclaration","src":"17436:15:31","value":{"kind":"number","nativeSrc":"17450:1:31","nodeType":"YulLiteral","src":"17450:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17440:6:31","nodeType":"YulTypedName","src":"17440:6:31","type":""}]},{"nativeSrc":"17465:73:31","nodeType":"YulAssignment","src":"17465:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17510:9:31","nodeType":"YulIdentifier","src":"17510:9:31"},{"name":"offset","nativeSrc":"17521:6:31","nodeType":"YulIdentifier","src":"17521:6:31"}],"functionName":{"name":"add","nativeSrc":"17506:3:31","nodeType":"YulIdentifier","src":"17506:3:31"},"nativeSrc":"17506:22:31","nodeType":"YulFunctionCall","src":"17506:22:31"},{"name":"dataEnd","nativeSrc":"17530:7:31","nodeType":"YulIdentifier","src":"17530:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"17475:30:31","nodeType":"YulIdentifier","src":"17475:30:31"},"nativeSrc":"17475:63:31","nodeType":"YulFunctionCall","src":"17475:63:31"},"variableNames":[{"name":"value0","nativeSrc":"17465:6:31","nodeType":"YulIdentifier","src":"17465:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"17206:349:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17252:9:31","nodeType":"YulTypedName","src":"17252:9:31","type":""},{"name":"dataEnd","nativeSrc":"17263:7:31","nodeType":"YulTypedName","src":"17263:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17275:6:31","nodeType":"YulTypedName","src":"17275:6:31","type":""}],"src":"17206:349:31"},{"body":{"nativeSrc":"17589:152:31","nodeType":"YulBlock","src":"17589:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17606:1:31","nodeType":"YulLiteral","src":"17606:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"17609:77:31","nodeType":"YulLiteral","src":"17609:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17599:6:31","nodeType":"YulIdentifier","src":"17599:6:31"},"nativeSrc":"17599:88:31","nodeType":"YulFunctionCall","src":"17599:88:31"},"nativeSrc":"17599:88:31","nodeType":"YulExpressionStatement","src":"17599:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17703:1:31","nodeType":"YulLiteral","src":"17703:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"17706:4:31","nodeType":"YulLiteral","src":"17706:4:31","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"17696:6:31","nodeType":"YulIdentifier","src":"17696:6:31"},"nativeSrc":"17696:15:31","nodeType":"YulFunctionCall","src":"17696:15:31"},"nativeSrc":"17696:15:31","nodeType":"YulExpressionStatement","src":"17696:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17727:1:31","nodeType":"YulLiteral","src":"17727:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"17730:4:31","nodeType":"YulLiteral","src":"17730:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17720:6:31","nodeType":"YulIdentifier","src":"17720:6:31"},"nativeSrc":"17720:15:31","nodeType":"YulFunctionCall","src":"17720:15:31"},"nativeSrc":"17720:15:31","nodeType":"YulExpressionStatement","src":"17720:15:31"}]},"name":"panic_error_0x12","nativeSrc":"17561:180:31","nodeType":"YulFunctionDefinition","src":"17561:180:31"},{"body":{"nativeSrc":"17801:87:31","nodeType":"YulBlock","src":"17801:87:31","statements":[{"nativeSrc":"17811:11:31","nodeType":"YulAssignment","src":"17811:11:31","value":{"name":"ptr","nativeSrc":"17819:3:31","nodeType":"YulIdentifier","src":"17819:3:31"},"variableNames":[{"name":"data","nativeSrc":"17811:4:31","nodeType":"YulIdentifier","src":"17811:4:31"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17839:1:31","nodeType":"YulLiteral","src":"17839:1:31","type":"","value":"0"},{"name":"ptr","nativeSrc":"17842:3:31","nodeType":"YulIdentifier","src":"17842:3:31"}],"functionName":{"name":"mstore","nativeSrc":"17832:6:31","nodeType":"YulIdentifier","src":"17832:6:31"},"nativeSrc":"17832:14:31","nodeType":"YulFunctionCall","src":"17832:14:31"},"nativeSrc":"17832:14:31","nodeType":"YulExpressionStatement","src":"17832:14:31"},{"nativeSrc":"17855:26:31","nodeType":"YulAssignment","src":"17855:26:31","value":{"arguments":[{"kind":"number","nativeSrc":"17873:1:31","nodeType":"YulLiteral","src":"17873:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"17876:4:31","nodeType":"YulLiteral","src":"17876:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"17863:9:31","nodeType":"YulIdentifier","src":"17863:9:31"},"nativeSrc":"17863:18:31","nodeType":"YulFunctionCall","src":"17863:18:31"},"variableNames":[{"name":"data","nativeSrc":"17855:4:31","nodeType":"YulIdentifier","src":"17855:4:31"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"17747:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"17788:3:31","nodeType":"YulTypedName","src":"17788:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"17796:4:31","nodeType":"YulTypedName","src":"17796:4:31","type":""}],"src":"17747:141:31"},{"body":{"nativeSrc":"17938:49:31","nodeType":"YulBlock","src":"17938:49:31","statements":[{"nativeSrc":"17948:33:31","nodeType":"YulAssignment","src":"17948:33:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17966:5:31","nodeType":"YulIdentifier","src":"17966:5:31"},{"kind":"number","nativeSrc":"17973:2:31","nodeType":"YulLiteral","src":"17973:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"17962:3:31","nodeType":"YulIdentifier","src":"17962:3:31"},"nativeSrc":"17962:14:31","nodeType":"YulFunctionCall","src":"17962:14:31"},{"kind":"number","nativeSrc":"17978:2:31","nodeType":"YulLiteral","src":"17978:2:31","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"17958:3:31","nodeType":"YulIdentifier","src":"17958:3:31"},"nativeSrc":"17958:23:31","nodeType":"YulFunctionCall","src":"17958:23:31"},"variableNames":[{"name":"result","nativeSrc":"17948:6:31","nodeType":"YulIdentifier","src":"17948:6:31"}]}]},"name":"divide_by_32_ceil","nativeSrc":"17894:93:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17921:5:31","nodeType":"YulTypedName","src":"17921:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"17931:6:31","nodeType":"YulTypedName","src":"17931:6:31","type":""}],"src":"17894:93:31"},{"body":{"nativeSrc":"18046:54:31","nodeType":"YulBlock","src":"18046:54:31","statements":[{"nativeSrc":"18056:37:31","nodeType":"YulAssignment","src":"18056:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"18081:4:31","nodeType":"YulIdentifier","src":"18081:4:31"},{"name":"value","nativeSrc":"18087:5:31","nodeType":"YulIdentifier","src":"18087:5:31"}],"functionName":{"name":"shl","nativeSrc":"18077:3:31","nodeType":"YulIdentifier","src":"18077:3:31"},"nativeSrc":"18077:16:31","nodeType":"YulFunctionCall","src":"18077:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"18056:8:31","nodeType":"YulIdentifier","src":"18056:8:31"}]}]},"name":"shift_left_dynamic","nativeSrc":"17993:107:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"18021:4:31","nodeType":"YulTypedName","src":"18021:4:31","type":""},{"name":"value","nativeSrc":"18027:5:31","nodeType":"YulTypedName","src":"18027:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"18037:8:31","nodeType":"YulTypedName","src":"18037:8:31","type":""}],"src":"17993:107:31"},{"body":{"nativeSrc":"18182:317:31","nodeType":"YulBlock","src":"18182:317:31","statements":[{"nativeSrc":"18192:35:31","nodeType":"YulVariableDeclaration","src":"18192:35:31","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"18213:10:31","nodeType":"YulIdentifier","src":"18213:10:31"},{"kind":"number","nativeSrc":"18225:1:31","nodeType":"YulLiteral","src":"18225:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"18209:3:31","nodeType":"YulIdentifier","src":"18209:3:31"},"nativeSrc":"18209:18:31","nodeType":"YulFunctionCall","src":"18209:18:31"},"variables":[{"name":"shiftBits","nativeSrc":"18196:9:31","nodeType":"YulTypedName","src":"18196:9:31","type":""}]},{"nativeSrc":"18236:109:31","nodeType":"YulVariableDeclaration","src":"18236:109:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18267:9:31","nodeType":"YulIdentifier","src":"18267:9:31"},{"kind":"number","nativeSrc":"18278:66:31","nodeType":"YulLiteral","src":"18278:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18248:18:31","nodeType":"YulIdentifier","src":"18248:18:31"},"nativeSrc":"18248:97:31","nodeType":"YulFunctionCall","src":"18248:97:31"},"variables":[{"name":"mask","nativeSrc":"18240:4:31","nodeType":"YulTypedName","src":"18240:4:31","type":""}]},{"nativeSrc":"18354:51:31","nodeType":"YulAssignment","src":"18354:51:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"18385:9:31","nodeType":"YulIdentifier","src":"18385:9:31"},{"name":"toInsert","nativeSrc":"18396:8:31","nodeType":"YulIdentifier","src":"18396:8:31"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"18366:18:31","nodeType":"YulIdentifier","src":"18366:18:31"},"nativeSrc":"18366:39:31","nodeType":"YulFunctionCall","src":"18366:39:31"},"variableNames":[{"name":"toInsert","nativeSrc":"18354:8:31","nodeType":"YulIdentifier","src":"18354:8:31"}]},{"nativeSrc":"18414:30:31","nodeType":"YulAssignment","src":"18414:30:31","value":{"arguments":[{"name":"value","nativeSrc":"18427:5:31","nodeType":"YulIdentifier","src":"18427:5:31"},{"arguments":[{"name":"mask","nativeSrc":"18438:4:31","nodeType":"YulIdentifier","src":"18438:4:31"}],"functionName":{"name":"not","nativeSrc":"18434:3:31","nodeType":"YulIdentifier","src":"18434:3:31"},"nativeSrc":"18434:9:31","nodeType":"YulFunctionCall","src":"18434:9:31"}],"functionName":{"name":"and","nativeSrc":"18423:3:31","nodeType":"YulIdentifier","src":"18423:3:31"},"nativeSrc":"18423:21:31","nodeType":"YulFunctionCall","src":"18423:21:31"},"variableNames":[{"name":"value","nativeSrc":"18414:5:31","nodeType":"YulIdentifier","src":"18414:5:31"}]},{"nativeSrc":"18453:40:31","nodeType":"YulAssignment","src":"18453:40:31","value":{"arguments":[{"name":"value","nativeSrc":"18466:5:31","nodeType":"YulIdentifier","src":"18466:5:31"},{"arguments":[{"name":"toInsert","nativeSrc":"18477:8:31","nodeType":"YulIdentifier","src":"18477:8:31"},{"name":"mask","nativeSrc":"18487:4:31","nodeType":"YulIdentifier","src":"18487:4:31"}],"functionName":{"name":"and","nativeSrc":"18473:3:31","nodeType":"YulIdentifier","src":"18473:3:31"},"nativeSrc":"18473:19:31","nodeType":"YulFunctionCall","src":"18473:19:31"}],"functionName":{"name":"or","nativeSrc":"18463:2:31","nodeType":"YulIdentifier","src":"18463:2:31"},"nativeSrc":"18463:30:31","nodeType":"YulFunctionCall","src":"18463:30:31"},"variableNames":[{"name":"result","nativeSrc":"18453:6:31","nodeType":"YulIdentifier","src":"18453:6:31"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"18106:393:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18143:5:31","nodeType":"YulTypedName","src":"18143:5:31","type":""},{"name":"shiftBytes","nativeSrc":"18150:10:31","nodeType":"YulTypedName","src":"18150:10:31","type":""},{"name":"toInsert","nativeSrc":"18162:8:31","nodeType":"YulTypedName","src":"18162:8:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"18175:6:31","nodeType":"YulTypedName","src":"18175:6:31","type":""}],"src":"18106:393:31"},{"body":{"nativeSrc":"18565:82:31","nodeType":"YulBlock","src":"18565:82:31","statements":[{"nativeSrc":"18575:66:31","nodeType":"YulAssignment","src":"18575:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18633:5:31","nodeType":"YulIdentifier","src":"18633:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18615:17:31","nodeType":"YulIdentifier","src":"18615:17:31"},"nativeSrc":"18615:24:31","nodeType":"YulFunctionCall","src":"18615:24:31"}],"functionName":{"name":"identity","nativeSrc":"18606:8:31","nodeType":"YulIdentifier","src":"18606:8:31"},"nativeSrc":"18606:34:31","nodeType":"YulFunctionCall","src":"18606:34:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18588:17:31","nodeType":"YulIdentifier","src":"18588:17:31"},"nativeSrc":"18588:53:31","nodeType":"YulFunctionCall","src":"18588:53:31"},"variableNames":[{"name":"converted","nativeSrc":"18575:9:31","nodeType":"YulIdentifier","src":"18575:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"18505:142:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18545:5:31","nodeType":"YulTypedName","src":"18545:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"18555:9:31","nodeType":"YulTypedName","src":"18555:9:31","type":""}],"src":"18505:142:31"},{"body":{"nativeSrc":"18700:28:31","nodeType":"YulBlock","src":"18700:28:31","statements":[{"nativeSrc":"18710:12:31","nodeType":"YulAssignment","src":"18710:12:31","value":{"name":"value","nativeSrc":"18717:5:31","nodeType":"YulIdentifier","src":"18717:5:31"},"variableNames":[{"name":"ret","nativeSrc":"18710:3:31","nodeType":"YulIdentifier","src":"18710:3:31"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"18653:75:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18686:5:31","nodeType":"YulTypedName","src":"18686:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"18696:3:31","nodeType":"YulTypedName","src":"18696:3:31","type":""}],"src":"18653:75:31"},{"body":{"nativeSrc":"18810:193:31","nodeType":"YulBlock","src":"18810:193:31","statements":[{"nativeSrc":"18820:63:31","nodeType":"YulVariableDeclaration","src":"18820:63:31","value":{"arguments":[{"name":"value_0","nativeSrc":"18875:7:31","nodeType":"YulIdentifier","src":"18875:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"18844:30:31","nodeType":"YulIdentifier","src":"18844:30:31"},"nativeSrc":"18844:39:31","nodeType":"YulFunctionCall","src":"18844:39:31"},"variables":[{"name":"convertedValue_0","nativeSrc":"18824:16:31","nodeType":"YulTypedName","src":"18824:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"18899:4:31","nodeType":"YulIdentifier","src":"18899:4:31"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"18939:4:31","nodeType":"YulIdentifier","src":"18939:4:31"}],"functionName":{"name":"sload","nativeSrc":"18933:5:31","nodeType":"YulIdentifier","src":"18933:5:31"},"nativeSrc":"18933:11:31","nodeType":"YulFunctionCall","src":"18933:11:31"},{"name":"offset","nativeSrc":"18946:6:31","nodeType":"YulIdentifier","src":"18946:6:31"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"18978:16:31","nodeType":"YulIdentifier","src":"18978:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"18954:23:31","nodeType":"YulIdentifier","src":"18954:23:31"},"nativeSrc":"18954:41:31","nodeType":"YulFunctionCall","src":"18954:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"18905:27:31","nodeType":"YulIdentifier","src":"18905:27:31"},"nativeSrc":"18905:91:31","nodeType":"YulFunctionCall","src":"18905:91:31"}],"functionName":{"name":"sstore","nativeSrc":"18892:6:31","nodeType":"YulIdentifier","src":"18892:6:31"},"nativeSrc":"18892:105:31","nodeType":"YulFunctionCall","src":"18892:105:31"},"nativeSrc":"18892:105:31","nodeType":"YulExpressionStatement","src":"18892:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"18734:269:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"18787:4:31","nodeType":"YulTypedName","src":"18787:4:31","type":""},{"name":"offset","nativeSrc":"18793:6:31","nodeType":"YulTypedName","src":"18793:6:31","type":""},{"name":"value_0","nativeSrc":"18801:7:31","nodeType":"YulTypedName","src":"18801:7:31","type":""}],"src":"18734:269:31"},{"body":{"nativeSrc":"19058:24:31","nodeType":"YulBlock","src":"19058:24:31","statements":[{"nativeSrc":"19068:8:31","nodeType":"YulAssignment","src":"19068:8:31","value":{"kind":"number","nativeSrc":"19075:1:31","nodeType":"YulLiteral","src":"19075:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"19068:3:31","nodeType":"YulIdentifier","src":"19068:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"19009:73:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"19054:3:31","nodeType":"YulTypedName","src":"19054:3:31","type":""}],"src":"19009:73:31"},{"body":{"nativeSrc":"19141:136:31","nodeType":"YulBlock","src":"19141:136:31","statements":[{"nativeSrc":"19151:46:31","nodeType":"YulVariableDeclaration","src":"19151:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"19165:30:31","nodeType":"YulIdentifier","src":"19165:30:31"},"nativeSrc":"19165:32:31","nodeType":"YulFunctionCall","src":"19165:32:31"},"variables":[{"name":"zero_0","nativeSrc":"19155:6:31","nodeType":"YulTypedName","src":"19155:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"19250:4:31","nodeType":"YulIdentifier","src":"19250:4:31"},{"name":"offset","nativeSrc":"19256:6:31","nodeType":"YulIdentifier","src":"19256:6:31"},{"name":"zero_0","nativeSrc":"19264:6:31","nodeType":"YulIdentifier","src":"19264:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"19206:43:31","nodeType":"YulIdentifier","src":"19206:43:31"},"nativeSrc":"19206:65:31","nodeType":"YulFunctionCall","src":"19206:65:31"},"nativeSrc":"19206:65:31","nodeType":"YulExpressionStatement","src":"19206:65:31"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"19088:189:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"19127:4:31","nodeType":"YulTypedName","src":"19127:4:31","type":""},{"name":"offset","nativeSrc":"19133:6:31","nodeType":"YulTypedName","src":"19133:6:31","type":""}],"src":"19088:189:31"},{"body":{"nativeSrc":"19333:136:31","nodeType":"YulBlock","src":"19333:136:31","statements":[{"body":{"nativeSrc":"19400:63:31","nodeType":"YulBlock","src":"19400:63:31","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"19444:5:31","nodeType":"YulIdentifier","src":"19444:5:31"},{"kind":"number","nativeSrc":"19451:1:31","nodeType":"YulLiteral","src":"19451:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"19414:29:31","nodeType":"YulIdentifier","src":"19414:29:31"},"nativeSrc":"19414:39:31","nodeType":"YulFunctionCall","src":"19414:39:31"},"nativeSrc":"19414:39:31","nodeType":"YulExpressionStatement","src":"19414:39:31"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"19353:5:31","nodeType":"YulIdentifier","src":"19353:5:31"},{"name":"end","nativeSrc":"19360:3:31","nodeType":"YulIdentifier","src":"19360:3:31"}],"functionName":{"name":"lt","nativeSrc":"19350:2:31","nodeType":"YulIdentifier","src":"19350:2:31"},"nativeSrc":"19350:14:31","nodeType":"YulFunctionCall","src":"19350:14:31"},"nativeSrc":"19343:120:31","nodeType":"YulForLoop","post":{"nativeSrc":"19365:26:31","nodeType":"YulBlock","src":"19365:26:31","statements":[{"nativeSrc":"19367:22:31","nodeType":"YulAssignment","src":"19367:22:31","value":{"arguments":[{"name":"start","nativeSrc":"19380:5:31","nodeType":"YulIdentifier","src":"19380:5:31"},{"kind":"number","nativeSrc":"19387:1:31","nodeType":"YulLiteral","src":"19387:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"19376:3:31","nodeType":"YulIdentifier","src":"19376:3:31"},"nativeSrc":"19376:13:31","nodeType":"YulFunctionCall","src":"19376:13:31"},"variableNames":[{"name":"start","nativeSrc":"19367:5:31","nodeType":"YulIdentifier","src":"19367:5:31"}]}]},"pre":{"nativeSrc":"19347:2:31","nodeType":"YulBlock","src":"19347:2:31","statements":[]},"src":"19343:120:31"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"19283:186:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"19321:5:31","nodeType":"YulTypedName","src":"19321:5:31","type":""},{"name":"end","nativeSrc":"19328:3:31","nodeType":"YulTypedName","src":"19328:3:31","type":""}],"src":"19283:186:31"},{"body":{"nativeSrc":"19554:464:31","nodeType":"YulBlock","src":"19554:464:31","statements":[{"body":{"nativeSrc":"19580:431:31","nodeType":"YulBlock","src":"19580:431:31","statements":[{"nativeSrc":"19594:54:31","nodeType":"YulVariableDeclaration","src":"19594:54:31","value":{"arguments":[{"name":"array","nativeSrc":"19642:5:31","nodeType":"YulIdentifier","src":"19642:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"19610:31:31","nodeType":"YulIdentifier","src":"19610:31:31"},"nativeSrc":"19610:38:31","nodeType":"YulFunctionCall","src":"19610:38:31"},"variables":[{"name":"dataArea","nativeSrc":"19598:8:31","nodeType":"YulTypedName","src":"19598:8:31","type":""}]},{"nativeSrc":"19661:63:31","nodeType":"YulVariableDeclaration","src":"19661:63:31","value":{"arguments":[{"name":"dataArea","nativeSrc":"19684:8:31","nodeType":"YulIdentifier","src":"19684:8:31"},{"arguments":[{"name":"startIndex","nativeSrc":"19712:10:31","nodeType":"YulIdentifier","src":"19712:10:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"19694:17:31","nodeType":"YulIdentifier","src":"19694:17:31"},"nativeSrc":"19694:29:31","nodeType":"YulFunctionCall","src":"19694:29:31"}],"functionName":{"name":"add","nativeSrc":"19680:3:31","nodeType":"YulIdentifier","src":"19680:3:31"},"nativeSrc":"19680:44:31","nodeType":"YulFunctionCall","src":"19680:44:31"},"variables":[{"name":"deleteStart","nativeSrc":"19665:11:31","nodeType":"YulTypedName","src":"19665:11:31","type":""}]},{"body":{"nativeSrc":"19881:27:31","nodeType":"YulBlock","src":"19881:27:31","statements":[{"nativeSrc":"19883:23:31","nodeType":"YulAssignment","src":"19883:23:31","value":{"name":"dataArea","nativeSrc":"19898:8:31","nodeType":"YulIdentifier","src":"19898:8:31"},"variableNames":[{"name":"deleteStart","nativeSrc":"19883:11:31","nodeType":"YulIdentifier","src":"19883:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"19865:10:31","nodeType":"YulIdentifier","src":"19865:10:31"},{"kind":"number","nativeSrc":"19877:2:31","nodeType":"YulLiteral","src":"19877:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"19862:2:31","nodeType":"YulIdentifier","src":"19862:2:31"},"nativeSrc":"19862:18:31","nodeType":"YulFunctionCall","src":"19862:18:31"},"nativeSrc":"19859:49:31","nodeType":"YulIf","src":"19859:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"19950:11:31","nodeType":"YulIdentifier","src":"19950:11:31"},{"arguments":[{"name":"dataArea","nativeSrc":"19967:8:31","nodeType":"YulIdentifier","src":"19967:8:31"},{"arguments":[{"name":"len","nativeSrc":"19995:3:31","nodeType":"YulIdentifier","src":"19995:3:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"19977:17:31","nodeType":"YulIdentifier","src":"19977:17:31"},"nativeSrc":"19977:22:31","nodeType":"YulFunctionCall","src":"19977:22:31"}],"functionName":{"name":"add","nativeSrc":"19963:3:31","nodeType":"YulIdentifier","src":"19963:3:31"},"nativeSrc":"19963:37:31","nodeType":"YulFunctionCall","src":"19963:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"19921:28:31","nodeType":"YulIdentifier","src":"19921:28:31"},"nativeSrc":"19921:80:31","nodeType":"YulFunctionCall","src":"19921:80:31"},"nativeSrc":"19921:80:31","nodeType":"YulExpressionStatement","src":"19921:80:31"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"19571:3:31","nodeType":"YulIdentifier","src":"19571:3:31"},{"kind":"number","nativeSrc":"19576:2:31","nodeType":"YulLiteral","src":"19576:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"19568:2:31","nodeType":"YulIdentifier","src":"19568:2:31"},"nativeSrc":"19568:11:31","nodeType":"YulFunctionCall","src":"19568:11:31"},"nativeSrc":"19565:446:31","nodeType":"YulIf","src":"19565:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"19475:543:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"19530:5:31","nodeType":"YulTypedName","src":"19530:5:31","type":""},{"name":"len","nativeSrc":"19537:3:31","nodeType":"YulTypedName","src":"19537:3:31","type":""},{"name":"startIndex","nativeSrc":"19542:10:31","nodeType":"YulTypedName","src":"19542:10:31","type":""}],"src":"19475:543:31"},{"body":{"nativeSrc":"20087:54:31","nodeType":"YulBlock","src":"20087:54:31","statements":[{"nativeSrc":"20097:37:31","nodeType":"YulAssignment","src":"20097:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"20122:4:31","nodeType":"YulIdentifier","src":"20122:4:31"},{"name":"value","nativeSrc":"20128:5:31","nodeType":"YulIdentifier","src":"20128:5:31"}],"functionName":{"name":"shr","nativeSrc":"20118:3:31","nodeType":"YulIdentifier","src":"20118:3:31"},"nativeSrc":"20118:16:31","nodeType":"YulFunctionCall","src":"20118:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"20097:8:31","nodeType":"YulIdentifier","src":"20097:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"20024:117:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"20062:4:31","nodeType":"YulTypedName","src":"20062:4:31","type":""},{"name":"value","nativeSrc":"20068:5:31","nodeType":"YulTypedName","src":"20068:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"20078:8:31","nodeType":"YulTypedName","src":"20078:8:31","type":""}],"src":"20024:117:31"},{"body":{"nativeSrc":"20198:118:31","nodeType":"YulBlock","src":"20198:118:31","statements":[{"nativeSrc":"20208:68:31","nodeType":"YulVariableDeclaration","src":"20208:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"20257:1:31","nodeType":"YulLiteral","src":"20257:1:31","type":"","value":"8"},{"name":"bytes","nativeSrc":"20260:5:31","nodeType":"YulIdentifier","src":"20260:5:31"}],"functionName":{"name":"mul","nativeSrc":"20253:3:31","nodeType":"YulIdentifier","src":"20253:3:31"},"nativeSrc":"20253:13:31","nodeType":"YulFunctionCall","src":"20253:13:31"},{"arguments":[{"kind":"number","nativeSrc":"20272:1:31","nodeType":"YulLiteral","src":"20272:1:31","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"20268:3:31","nodeType":"YulIdentifier","src":"20268:3:31"},"nativeSrc":"20268:6:31","nodeType":"YulFunctionCall","src":"20268:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"20224:28:31","nodeType":"YulIdentifier","src":"20224:28:31"},"nativeSrc":"20224:51:31","nodeType":"YulFunctionCall","src":"20224:51:31"}],"functionName":{"name":"not","nativeSrc":"20220:3:31","nodeType":"YulIdentifier","src":"20220:3:31"},"nativeSrc":"20220:56:31","nodeType":"YulFunctionCall","src":"20220:56:31"},"variables":[{"name":"mask","nativeSrc":"20212:4:31","nodeType":"YulTypedName","src":"20212:4:31","type":""}]},{"nativeSrc":"20285:25:31","nodeType":"YulAssignment","src":"20285:25:31","value":{"arguments":[{"name":"data","nativeSrc":"20299:4:31","nodeType":"YulIdentifier","src":"20299:4:31"},{"name":"mask","nativeSrc":"20305:4:31","nodeType":"YulIdentifier","src":"20305:4:31"}],"functionName":{"name":"and","nativeSrc":"20295:3:31","nodeType":"YulIdentifier","src":"20295:3:31"},"nativeSrc":"20295:15:31","nodeType":"YulFunctionCall","src":"20295:15:31"},"variableNames":[{"name":"result","nativeSrc":"20285:6:31","nodeType":"YulIdentifier","src":"20285:6:31"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"20147:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20175:4:31","nodeType":"YulTypedName","src":"20175:4:31","type":""},{"name":"bytes","nativeSrc":"20181:5:31","nodeType":"YulTypedName","src":"20181:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"20191:6:31","nodeType":"YulTypedName","src":"20191:6:31","type":""}],"src":"20147:169:31"},{"body":{"nativeSrc":"20402:214:31","nodeType":"YulBlock","src":"20402:214:31","statements":[{"nativeSrc":"20535:37:31","nodeType":"YulAssignment","src":"20535:37:31","value":{"arguments":[{"name":"data","nativeSrc":"20562:4:31","nodeType":"YulIdentifier","src":"20562:4:31"},{"name":"len","nativeSrc":"20568:3:31","nodeType":"YulIdentifier","src":"20568:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"20543:18:31","nodeType":"YulIdentifier","src":"20543:18:31"},"nativeSrc":"20543:29:31","nodeType":"YulFunctionCall","src":"20543:29:31"},"variableNames":[{"name":"data","nativeSrc":"20535:4:31","nodeType":"YulIdentifier","src":"20535:4:31"}]},{"nativeSrc":"20581:29:31","nodeType":"YulAssignment","src":"20581:29:31","value":{"arguments":[{"name":"data","nativeSrc":"20592:4:31","nodeType":"YulIdentifier","src":"20592:4:31"},{"arguments":[{"kind":"number","nativeSrc":"20602:1:31","nodeType":"YulLiteral","src":"20602:1:31","type":"","value":"2"},{"name":"len","nativeSrc":"20605:3:31","nodeType":"YulIdentifier","src":"20605:3:31"}],"functionName":{"name":"mul","nativeSrc":"20598:3:31","nodeType":"YulIdentifier","src":"20598:3:31"},"nativeSrc":"20598:11:31","nodeType":"YulFunctionCall","src":"20598:11:31"}],"functionName":{"name":"or","nativeSrc":"20589:2:31","nodeType":"YulIdentifier","src":"20589:2:31"},"nativeSrc":"20589:21:31","nodeType":"YulFunctionCall","src":"20589:21:31"},"variableNames":[{"name":"used","nativeSrc":"20581:4:31","nodeType":"YulIdentifier","src":"20581:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"20321:295:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"20383:4:31","nodeType":"YulTypedName","src":"20383:4:31","type":""},{"name":"len","nativeSrc":"20389:3:31","nodeType":"YulTypedName","src":"20389:3:31","type":""}],"returnVariables":[{"name":"used","nativeSrc":"20397:4:31","nodeType":"YulTypedName","src":"20397:4:31","type":""}],"src":"20321:295:31"},{"body":{"nativeSrc":"20713:1303:31","nodeType":"YulBlock","src":"20713:1303:31","statements":[{"nativeSrc":"20724:51:31","nodeType":"YulVariableDeclaration","src":"20724:51:31","value":{"arguments":[{"name":"src","nativeSrc":"20771:3:31","nodeType":"YulIdentifier","src":"20771:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"20738:32:31","nodeType":"YulIdentifier","src":"20738:32:31"},"nativeSrc":"20738:37:31","nodeType":"YulFunctionCall","src":"20738:37:31"},"variables":[{"name":"newLen","nativeSrc":"20728:6:31","nodeType":"YulTypedName","src":"20728:6:31","type":""}]},{"body":{"nativeSrc":"20860:22:31","nodeType":"YulBlock","src":"20860:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"20862:16:31","nodeType":"YulIdentifier","src":"20862:16:31"},"nativeSrc":"20862:18:31","nodeType":"YulFunctionCall","src":"20862:18:31"},"nativeSrc":"20862:18:31","nodeType":"YulExpressionStatement","src":"20862:18:31"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"20832:6:31","nodeType":"YulIdentifier","src":"20832:6:31"},{"kind":"number","nativeSrc":"20840:18:31","nodeType":"YulLiteral","src":"20840:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"20829:2:31","nodeType":"YulIdentifier","src":"20829:2:31"},"nativeSrc":"20829:30:31","nodeType":"YulFunctionCall","src":"20829:30:31"},"nativeSrc":"20826:56:31","nodeType":"YulIf","src":"20826:56:31"},{"nativeSrc":"20892:52:31","nodeType":"YulVariableDeclaration","src":"20892:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"20938:4:31","nodeType":"YulIdentifier","src":"20938:4:31"}],"functionName":{"name":"sload","nativeSrc":"20932:5:31","nodeType":"YulIdentifier","src":"20932:5:31"},"nativeSrc":"20932:11:31","nodeType":"YulFunctionCall","src":"20932:11:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"20906:25:31","nodeType":"YulIdentifier","src":"20906:25:31"},"nativeSrc":"20906:38:31","nodeType":"YulFunctionCall","src":"20906:38:31"},"variables":[{"name":"oldLen","nativeSrc":"20896:6:31","nodeType":"YulTypedName","src":"20896:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21037:4:31","nodeType":"YulIdentifier","src":"21037:4:31"},{"name":"oldLen","nativeSrc":"21043:6:31","nodeType":"YulIdentifier","src":"21043:6:31"},{"name":"newLen","nativeSrc":"21051:6:31","nodeType":"YulIdentifier","src":"21051:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"20991:45:31","nodeType":"YulIdentifier","src":"20991:45:31"},"nativeSrc":"20991:67:31","nodeType":"YulFunctionCall","src":"20991:67:31"},"nativeSrc":"20991:67:31","nodeType":"YulExpressionStatement","src":"20991:67:31"},{"nativeSrc":"21068:18:31","nodeType":"YulVariableDeclaration","src":"21068:18:31","value":{"kind":"number","nativeSrc":"21085:1:31","nodeType":"YulLiteral","src":"21085:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"21072:9:31","nodeType":"YulTypedName","src":"21072:9:31","type":""}]},{"nativeSrc":"21096:17:31","nodeType":"YulAssignment","src":"21096:17:31","value":{"kind":"number","nativeSrc":"21109:4:31","nodeType":"YulLiteral","src":"21109:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"21096:9:31","nodeType":"YulIdentifier","src":"21096:9:31"}]},{"cases":[{"body":{"nativeSrc":"21160:611:31","nodeType":"YulBlock","src":"21160:611:31","statements":[{"nativeSrc":"21174:37:31","nodeType":"YulVariableDeclaration","src":"21174:37:31","value":{"arguments":[{"name":"newLen","nativeSrc":"21193:6:31","nodeType":"YulIdentifier","src":"21193:6:31"},{"arguments":[{"kind":"number","nativeSrc":"21205:4:31","nodeType":"YulLiteral","src":"21205:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"21201:3:31","nodeType":"YulIdentifier","src":"21201:3:31"},"nativeSrc":"21201:9:31","nodeType":"YulFunctionCall","src":"21201:9:31"}],"functionName":{"name":"and","nativeSrc":"21189:3:31","nodeType":"YulIdentifier","src":"21189:3:31"},"nativeSrc":"21189:22:31","nodeType":"YulFunctionCall","src":"21189:22:31"},"variables":[{"name":"loopEnd","nativeSrc":"21178:7:31","nodeType":"YulTypedName","src":"21178:7:31","type":""}]},{"nativeSrc":"21225:51:31","nodeType":"YulVariableDeclaration","src":"21225:51:31","value":{"arguments":[{"name":"slot","nativeSrc":"21271:4:31","nodeType":"YulIdentifier","src":"21271:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"21239:31:31","nodeType":"YulIdentifier","src":"21239:31:31"},"nativeSrc":"21239:37:31","nodeType":"YulFunctionCall","src":"21239:37:31"},"variables":[{"name":"dstPtr","nativeSrc":"21229:6:31","nodeType":"YulTypedName","src":"21229:6:31","type":""}]},{"nativeSrc":"21289:10:31","nodeType":"YulVariableDeclaration","src":"21289:10:31","value":{"kind":"number","nativeSrc":"21298:1:31","nodeType":"YulLiteral","src":"21298:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"21293:1:31","nodeType":"YulTypedName","src":"21293:1:31","type":""}]},{"body":{"nativeSrc":"21357:163:31","nodeType":"YulBlock","src":"21357:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"21382:6:31","nodeType":"YulIdentifier","src":"21382:6:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21400:3:31","nodeType":"YulIdentifier","src":"21400:3:31"},{"name":"srcOffset","nativeSrc":"21405:9:31","nodeType":"YulIdentifier","src":"21405:9:31"}],"functionName":{"name":"add","nativeSrc":"21396:3:31","nodeType":"YulIdentifier","src":"21396:3:31"},"nativeSrc":"21396:19:31","nodeType":"YulFunctionCall","src":"21396:19:31"}],"functionName":{"name":"mload","nativeSrc":"21390:5:31","nodeType":"YulIdentifier","src":"21390:5:31"},"nativeSrc":"21390:26:31","nodeType":"YulFunctionCall","src":"21390:26:31"}],"functionName":{"name":"sstore","nativeSrc":"21375:6:31","nodeType":"YulIdentifier","src":"21375:6:31"},"nativeSrc":"21375:42:31","nodeType":"YulFunctionCall","src":"21375:42:31"},"nativeSrc":"21375:42:31","nodeType":"YulExpressionStatement","src":"21375:42:31"},{"nativeSrc":"21434:24:31","nodeType":"YulAssignment","src":"21434:24:31","value":{"arguments":[{"name":"dstPtr","nativeSrc":"21448:6:31","nodeType":"YulIdentifier","src":"21448:6:31"},{"kind":"number","nativeSrc":"21456:1:31","nodeType":"YulLiteral","src":"21456:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21444:3:31","nodeType":"YulIdentifier","src":"21444:3:31"},"nativeSrc":"21444:14:31","nodeType":"YulFunctionCall","src":"21444:14:31"},"variableNames":[{"name":"dstPtr","nativeSrc":"21434:6:31","nodeType":"YulIdentifier","src":"21434:6:31"}]},{"nativeSrc":"21475:31:31","nodeType":"YulAssignment","src":"21475:31:31","value":{"arguments":[{"name":"srcOffset","nativeSrc":"21492:9:31","nodeType":"YulIdentifier","src":"21492:9:31"},{"kind":"number","nativeSrc":"21503:2:31","nodeType":"YulLiteral","src":"21503:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21488:3:31","nodeType":"YulIdentifier","src":"21488:3:31"},"nativeSrc":"21488:18:31","nodeType":"YulFunctionCall","src":"21488:18:31"},"variableNames":[{"name":"srcOffset","nativeSrc":"21475:9:31","nodeType":"YulIdentifier","src":"21475:9:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"21323:1:31","nodeType":"YulIdentifier","src":"21323:1:31"},{"name":"loopEnd","nativeSrc":"21326:7:31","nodeType":"YulIdentifier","src":"21326:7:31"}],"functionName":{"name":"lt","nativeSrc":"21320:2:31","nodeType":"YulIdentifier","src":"21320:2:31"},"nativeSrc":"21320:14:31","nodeType":"YulFunctionCall","src":"21320:14:31"},"nativeSrc":"21312:208:31","nodeType":"YulForLoop","post":{"nativeSrc":"21335:21:31","nodeType":"YulBlock","src":"21335:21:31","statements":[{"nativeSrc":"21337:17:31","nodeType":"YulAssignment","src":"21337:17:31","value":{"arguments":[{"name":"i","nativeSrc":"21346:1:31","nodeType":"YulIdentifier","src":"21346:1:31"},{"kind":"number","nativeSrc":"21349:4:31","nodeType":"YulLiteral","src":"21349:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21342:3:31","nodeType":"YulIdentifier","src":"21342:3:31"},"nativeSrc":"21342:12:31","nodeType":"YulFunctionCall","src":"21342:12:31"},"variableNames":[{"name":"i","nativeSrc":"21337:1:31","nodeType":"YulIdentifier","src":"21337:1:31"}]}]},"pre":{"nativeSrc":"21316:3:31","nodeType":"YulBlock","src":"21316:3:31","statements":[]},"src":"21312:208:31"},{"body":{"nativeSrc":"21556:156:31","nodeType":"YulBlock","src":"21556:156:31","statements":[{"nativeSrc":"21574:43:31","nodeType":"YulVariableDeclaration","src":"21574:43:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21601:3:31","nodeType":"YulIdentifier","src":"21601:3:31"},{"name":"srcOffset","nativeSrc":"21606:9:31","nodeType":"YulIdentifier","src":"21606:9:31"}],"functionName":{"name":"add","nativeSrc":"21597:3:31","nodeType":"YulIdentifier","src":"21597:3:31"},"nativeSrc":"21597:19:31","nodeType":"YulFunctionCall","src":"21597:19:31"}],"functionName":{"name":"mload","nativeSrc":"21591:5:31","nodeType":"YulIdentifier","src":"21591:5:31"},"nativeSrc":"21591:26:31","nodeType":"YulFunctionCall","src":"21591:26:31"},"variables":[{"name":"lastValue","nativeSrc":"21578:9:31","nodeType":"YulTypedName","src":"21578:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"21641:6:31","nodeType":"YulIdentifier","src":"21641:6:31"},{"arguments":[{"name":"lastValue","nativeSrc":"21668:9:31","nodeType":"YulIdentifier","src":"21668:9:31"},{"arguments":[{"name":"newLen","nativeSrc":"21683:6:31","nodeType":"YulIdentifier","src":"21683:6:31"},{"kind":"number","nativeSrc":"21691:4:31","nodeType":"YulLiteral","src":"21691:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"21679:3:31","nodeType":"YulIdentifier","src":"21679:3:31"},"nativeSrc":"21679:17:31","nodeType":"YulFunctionCall","src":"21679:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"21649:18:31","nodeType":"YulIdentifier","src":"21649:18:31"},"nativeSrc":"21649:48:31","nodeType":"YulFunctionCall","src":"21649:48:31"}],"functionName":{"name":"sstore","nativeSrc":"21634:6:31","nodeType":"YulIdentifier","src":"21634:6:31"},"nativeSrc":"21634:64:31","nodeType":"YulFunctionCall","src":"21634:64:31"},"nativeSrc":"21634:64:31","nodeType":"YulExpressionStatement","src":"21634:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"21539:7:31","nodeType":"YulIdentifier","src":"21539:7:31"},{"name":"newLen","nativeSrc":"21548:6:31","nodeType":"YulIdentifier","src":"21548:6:31"}],"functionName":{"name":"lt","nativeSrc":"21536:2:31","nodeType":"YulIdentifier","src":"21536:2:31"},"nativeSrc":"21536:19:31","nodeType":"YulFunctionCall","src":"21536:19:31"},"nativeSrc":"21533:179:31","nodeType":"YulIf","src":"21533:179:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21732:4:31","nodeType":"YulIdentifier","src":"21732:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"21746:6:31","nodeType":"YulIdentifier","src":"21746:6:31"},{"kind":"number","nativeSrc":"21754:1:31","nodeType":"YulLiteral","src":"21754:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"21742:3:31","nodeType":"YulIdentifier","src":"21742:3:31"},"nativeSrc":"21742:14:31","nodeType":"YulFunctionCall","src":"21742:14:31"},{"kind":"number","nativeSrc":"21758:1:31","nodeType":"YulLiteral","src":"21758:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21738:3:31","nodeType":"YulIdentifier","src":"21738:3:31"},"nativeSrc":"21738:22:31","nodeType":"YulFunctionCall","src":"21738:22:31"}],"functionName":{"name":"sstore","nativeSrc":"21725:6:31","nodeType":"YulIdentifier","src":"21725:6:31"},"nativeSrc":"21725:36:31","nodeType":"YulFunctionCall","src":"21725:36:31"},"nativeSrc":"21725:36:31","nodeType":"YulExpressionStatement","src":"21725:36:31"}]},"nativeSrc":"21153:618:31","nodeType":"YulCase","src":"21153:618:31","value":{"kind":"number","nativeSrc":"21158:1:31","nodeType":"YulLiteral","src":"21158:1:31","type":"","value":"1"}},{"body":{"nativeSrc":"21788:222:31","nodeType":"YulBlock","src":"21788:222:31","statements":[{"nativeSrc":"21802:14:31","nodeType":"YulVariableDeclaration","src":"21802:14:31","value":{"kind":"number","nativeSrc":"21815:1:31","nodeType":"YulLiteral","src":"21815:1:31","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"21806:5:31","nodeType":"YulTypedName","src":"21806:5:31","type":""}]},{"body":{"nativeSrc":"21839:67:31","nodeType":"YulBlock","src":"21839:67:31","statements":[{"nativeSrc":"21857:35:31","nodeType":"YulAssignment","src":"21857:35:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"21876:3:31","nodeType":"YulIdentifier","src":"21876:3:31"},{"name":"srcOffset","nativeSrc":"21881:9:31","nodeType":"YulIdentifier","src":"21881:9:31"}],"functionName":{"name":"add","nativeSrc":"21872:3:31","nodeType":"YulIdentifier","src":"21872:3:31"},"nativeSrc":"21872:19:31","nodeType":"YulFunctionCall","src":"21872:19:31"}],"functionName":{"name":"mload","nativeSrc":"21866:5:31","nodeType":"YulIdentifier","src":"21866:5:31"},"nativeSrc":"21866:26:31","nodeType":"YulFunctionCall","src":"21866:26:31"},"variableNames":[{"name":"value","nativeSrc":"21857:5:31","nodeType":"YulIdentifier","src":"21857:5:31"}]}]},"condition":{"name":"newLen","nativeSrc":"21832:6:31","nodeType":"YulIdentifier","src":"21832:6:31"},"nativeSrc":"21829:77:31","nodeType":"YulIf","src":"21829:77:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21926:4:31","nodeType":"YulIdentifier","src":"21926:4:31"},{"arguments":[{"name":"value","nativeSrc":"21985:5:31","nodeType":"YulIdentifier","src":"21985:5:31"},{"name":"newLen","nativeSrc":"21992:6:31","nodeType":"YulIdentifier","src":"21992:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"21932:52:31","nodeType":"YulIdentifier","src":"21932:52:31"},"nativeSrc":"21932:67:31","nodeType":"YulFunctionCall","src":"21932:67:31"}],"functionName":{"name":"sstore","nativeSrc":"21919:6:31","nodeType":"YulIdentifier","src":"21919:6:31"},"nativeSrc":"21919:81:31","nodeType":"YulFunctionCall","src":"21919:81:31"},"nativeSrc":"21919:81:31","nodeType":"YulExpressionStatement","src":"21919:81:31"}]},"nativeSrc":"21780:230:31","nodeType":"YulCase","src":"21780:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"21133:6:31","nodeType":"YulIdentifier","src":"21133:6:31"},{"kind":"number","nativeSrc":"21141:2:31","nodeType":"YulLiteral","src":"21141:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"21130:2:31","nodeType":"YulIdentifier","src":"21130:2:31"},"nativeSrc":"21130:14:31","nodeType":"YulFunctionCall","src":"21130:14:31"},"nativeSrc":"21123:887:31","nodeType":"YulSwitch","src":"21123:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"20621:1395:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"20702:4:31","nodeType":"YulTypedName","src":"20702:4:31","type":""},{"name":"src","nativeSrc":"20708:3:31","nodeType":"YulTypedName","src":"20708:3:31","type":""}],"src":"20621:1395:31"},{"body":{"nativeSrc":"22148:206:31","nodeType":"YulBlock","src":"22148:206:31","statements":[{"nativeSrc":"22158:26:31","nodeType":"YulAssignment","src":"22158:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"22170:9:31","nodeType":"YulIdentifier","src":"22170:9:31"},{"kind":"number","nativeSrc":"22181:2:31","nodeType":"YulLiteral","src":"22181:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22166:3:31","nodeType":"YulIdentifier","src":"22166:3:31"},"nativeSrc":"22166:18:31","nodeType":"YulFunctionCall","src":"22166:18:31"},"variableNames":[{"name":"tail","nativeSrc":"22158:4:31","nodeType":"YulIdentifier","src":"22158:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22238:6:31","nodeType":"YulIdentifier","src":"22238:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22251:9:31","nodeType":"YulIdentifier","src":"22251:9:31"},{"kind":"number","nativeSrc":"22262:1:31","nodeType":"YulLiteral","src":"22262:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22247:3:31","nodeType":"YulIdentifier","src":"22247:3:31"},"nativeSrc":"22247:17:31","nodeType":"YulFunctionCall","src":"22247:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22194:43:31","nodeType":"YulIdentifier","src":"22194:43:31"},"nativeSrc":"22194:71:31","nodeType":"YulFunctionCall","src":"22194:71:31"},"nativeSrc":"22194:71:31","nodeType":"YulExpressionStatement","src":"22194:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22319:6:31","nodeType":"YulIdentifier","src":"22319:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22332:9:31","nodeType":"YulIdentifier","src":"22332:9:31"},{"kind":"number","nativeSrc":"22343:2:31","nodeType":"YulLiteral","src":"22343:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22328:3:31","nodeType":"YulIdentifier","src":"22328:3:31"},"nativeSrc":"22328:18:31","nodeType":"YulFunctionCall","src":"22328:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22275:43:31","nodeType":"YulIdentifier","src":"22275:43:31"},"nativeSrc":"22275:72:31","nodeType":"YulFunctionCall","src":"22275:72:31"},"nativeSrc":"22275:72:31","nodeType":"YulExpressionStatement","src":"22275:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"22022:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22112:9:31","nodeType":"YulTypedName","src":"22112:9:31","type":""},{"name":"value1","nativeSrc":"22124:6:31","nodeType":"YulTypedName","src":"22124:6:31","type":""},{"name":"value0","nativeSrc":"22132:6:31","nodeType":"YulTypedName","src":"22132:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22143:4:31","nodeType":"YulTypedName","src":"22143:4:31","type":""}],"src":"22022:332:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb465146102cb578063b88d4fde146102e7578063c87b56dd14610303578063e985e9c514610333578063f2fde38b1461036357610116565b806370a0823114610255578063715018a6146102855780638da5cb5b1461028f57806395d89b41146102ad57610116565b8063095ea7b3116100e9578063095ea7b3146101b557806323b872dd146101d157806342842e0e146101ed5780636352211e146102095780636a6278421461023957610116565b806301ffc9a71461011b57806306fdde031461014b578063077f224a14610169578063081812fc14610185575b600080fd5b61013560048036038101906101309190611d43565b61037f565b6040516101429190611d8b565b60405180910390f35b610153610461565b6040516101609190611e36565b60405180910390f35b610183600480360381019061017e9190611feb565b610502565b005b61019f600480360381019061019a91906120ac565b61069d565b6040516101ac91906120e8565b60405180910390f35b6101cf60048036038101906101ca9190612103565b6106b9565b005b6101eb60048036038101906101e69190612143565b6106cf565b005b61020760048036038101906102029190612143565b6107d1565b005b610223600480360381019061021e91906120ac565b6107f1565b60405161023091906120e8565b60405180910390f35b610253600480360381019061024e9190612196565b610803565b005b61026f600480360381019061026a9190612196565b61082b565b60405161027c91906121d2565b60405180910390f35b61028d6108f4565b005b610297610908565b6040516102a491906120e8565b60405180910390f35b6102b5610940565b6040516102c29190611e36565b60405180910390f35b6102e560048036038101906102e09190612219565b6109e1565b005b61030160048036038101906102fc91906122fa565b6109f7565b005b61031d600480360381019061031891906120ac565b610a1c565b60405161032a9190611e36565b60405180910390f35b61034d6004803603810190610348919061237d565b610a85565b60405161035a9190611d8b565b60405180910390f35b61037d60048036038101906103789190612196565b610b27565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061045a575061045982610bad565b5b9050919050565b6060600061046d610c17565b905080600001805461047e906123ec565b80601f01602080910402602001604051908101604052809291908181526020018280546104aa906123ec565b80156104f75780601f106104cc576101008083540402835291602001916104f7565b820191906000526020600020905b8154815290600101906020018083116104da57829003601f168201915b505050505091505090565b600061050c610c3f565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff1614801561055a5750825b9050600060018367ffffffffffffffff1614801561058f575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561059d575080155b156105d4576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106245760018560000160086101000a81548160ff0219169083151502179055505b61062e8888610c53565b61063786610c69565b83156106935760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161068a9190612476565b60405180910390a15b5050505050505050565b60006106a882610c7d565b506106b282610d05565b9050919050565b6106cb82826106c6610d50565b610d58565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107415760006040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161073891906120e8565b60405180910390fd5b60006107558383610750610d50565b610d6a565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107cb578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107c293929190612491565b60405180910390fd5b50505050565b6107ec838383604051806020016040528060008152506109f7565b505050565b60006107fc82610c7d565b9050919050565b6000806000815480929190610817906124f7565b9190505590506108278282610f97565b5050565b600080610836610c17565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108aa5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108a191906120e8565b60405180910390fd5b8060030160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915050919050565b6108fc610fb5565b610906600061103c565b565b600080610913611113565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b6060600061094c610c17565b905080600101805461095d906123ec565b80601f0160208091040260200160405190810160405280929190818152602001828054610989906123ec565b80156109d65780601f106109ab576101008083540402835291602001916109d6565b820191906000526020600020905b8154815290600101906020018083116109b957829003601f168201915b505050505091505090565b6109f36109ec610d50565b838361113b565b5050565b610a028484846106cf565b610a16610a0d610d50565b858585856112b9565b50505050565b6060610a2782610c7d565b506000610a3261146a565b90506000815111610a525760405180602001604052806000815250610a7d565b80610a5c846114a7565b604051602001610a6d92919061257b565b6040516020818303038152906040525b915050919050565b600080610a90610c17565b90508060050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b610b2f610fb5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ba15760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b9891906120e8565b60405180910390fd5b610baa8161103c565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60007f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300905090565b600080610c4a611575565b90508091505090565b610c5b6115a0565b610c6582826115e0565b5050565b610c716115a0565b610c7a8161161d565b50565b600080610c89836116a3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cfc57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610cf391906121d2565b60405180910390fd5b80915050919050565b600080610d10610c17565b905080600401600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b600033905090565b610d6583838360016116ee565b505050565b600080610d75610c17565b90506000610d82856116a3565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610dc457610dc38185876118c2565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e5757610e066000866000806116ee565b60018260030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610edc5760018260030160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8582600201600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480925050509392505050565b610fb1828260405180602001604052806000815250611986565b5050565b610fbd610d50565b73ffffffffffffffffffffffffffffffffffffffff16610fdb610908565b73ffffffffffffffffffffffffffffffffffffffff161461103a57610ffe610d50565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161103191906120e8565b60405180910390fd5b565b6000611046611113565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000611145610c17565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111b857826040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111af91906120e8565b60405180910390fd5b818160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31846040516112ab9190611d8b565b60405180910390a350505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611463578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161131894939291906125f4565b6020604051808303816000875af192505050801561135457506040513d601f19601f820116820180604052508101906113519190612655565b60015b6113d8573d8060008114611384576040519150601f19603f3d011682016040523d82523d6000602084013e611389565b606091505b5060008151036113d057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113c791906120e8565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461146157836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161145891906120e8565b60405180910390fd5b505b5050505050565b60606040518060400160405280600781526020017f697066733a2f2f00000000000000000000000000000000000000000000000000815250905090565b6060600060016114b6846119aa565b01905060008167ffffffffffffffff8111156114d5576114d4611e62565b5b6040519080825280601f01601f1916602001820160405280156115075781602001600182028036833780820191505090505b509050600082602083010190505b60011561156a578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161155e5761155d612682565b5b04945060008503611515575b819350505050919050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6115a8611afd565b6115de576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6115e86115a0565b60006115f2610c17565b9050828160000190816116059190612853565b50818160010190816116179190612853565b50505050565b6116256115a0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036116975760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161168e91906120e8565b60405180910390fd5b6116a08161103c565b50565b6000806116ae610c17565b905080600201600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b60006116f8610c17565b905081806117335750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561186757600061174385610c7d565b9050600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156117ae57508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117c157506117bf8185610a85565b155b1561180357836040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016117fa91906120e8565b60405180910390fd5b821561186557848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8481600401600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b6118cd838383611b1d565b61198157600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194257806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161193991906121d2565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611978929190612925565b60405180910390fd5b505050565b6119908383611bde565b6119a561199b610d50565b60008585856112b9565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a08577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119fe576119fd612682565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a45576d04ee2d6d415b85acef81000000008381611a3b57611a3a612682565b5b0492506020810190505b662386f26fc100008310611a7457662386f26fc100008381611a6a57611a69612682565b5b0492506010810190505b6305f5e1008310611a9d576305f5e1008381611a9357611a92612682565b5b0492506008810190505b6127108310611ac2576127108381611ab857611ab7612682565b5b0492506004810190505b60648310611ae55760648381611adb57611ada612682565b5b0492506002810190505b600a8310611af4576001810190505b80915050919050565b6000611b07610c3f565b60000160089054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bd557508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b965750611b958484610a85565b5b80611bd457508273ffffffffffffffffffffffffffffffffffffffff16611bbc83610d05565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c505760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611c4791906120e8565b60405180910390fd5b6000611c5e83836000610d6a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611cd25760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611cc991906120e8565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d2081611ceb565b8114611d2b57600080fd5b50565b600081359050611d3d81611d17565b92915050565b600060208284031215611d5957611d58611ce1565b5b6000611d6784828501611d2e565b91505092915050565b60008115159050919050565b611d8581611d70565b82525050565b6000602082019050611da06000830184611d7c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611de0578082015181840152602081019050611dc5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611e0882611da6565b611e128185611db1565b9350611e22818560208601611dc2565b611e2b81611dec565b840191505092915050565b60006020820190508181036000830152611e508184611dfd565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e9a82611dec565b810181811067ffffffffffffffff82111715611eb957611eb8611e62565b5b80604052505050565b6000611ecc611cd7565b9050611ed88282611e91565b919050565b600067ffffffffffffffff821115611ef857611ef7611e62565b5b611f0182611dec565b9050602081019050919050565b82818337600083830152505050565b6000611f30611f2b84611edd565b611ec2565b905082815260208101848484011115611f4c57611f4b611e5d565b5b611f57848285611f0e565b509392505050565b600082601f830112611f7457611f73611e58565b5b8135611f84848260208601611f1d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fb882611f8d565b9050919050565b611fc881611fad565b8114611fd357600080fd5b50565b600081359050611fe581611fbf565b92915050565b60008060006060848603121561200457612003611ce1565b5b600084013567ffffffffffffffff81111561202257612021611ce6565b5b61202e86828701611f5f565b935050602084013567ffffffffffffffff81111561204f5761204e611ce6565b5b61205b86828701611f5f565b925050604061206c86828701611fd6565b9150509250925092565b6000819050919050565b61208981612076565b811461209457600080fd5b50565b6000813590506120a681612080565b92915050565b6000602082840312156120c2576120c1611ce1565b5b60006120d084828501612097565b91505092915050565b6120e281611fad565b82525050565b60006020820190506120fd60008301846120d9565b92915050565b6000806040838503121561211a57612119611ce1565b5b600061212885828601611fd6565b925050602061213985828601612097565b9150509250929050565b60008060006060848603121561215c5761215b611ce1565b5b600061216a86828701611fd6565b935050602061217b86828701611fd6565b925050604061218c86828701612097565b9150509250925092565b6000602082840312156121ac576121ab611ce1565b5b60006121ba84828501611fd6565b91505092915050565b6121cc81612076565b82525050565b60006020820190506121e760008301846121c3565b92915050565b6121f681611d70565b811461220157600080fd5b50565b600081359050612213816121ed565b92915050565b600080604083850312156122305761222f611ce1565b5b600061223e85828601611fd6565b925050602061224f85828601612204565b9150509250929050565b600067ffffffffffffffff82111561227457612273611e62565b5b61227d82611dec565b9050602081019050919050565b600061229d61229884612259565b611ec2565b9050828152602081018484840111156122b9576122b8611e5d565b5b6122c4848285611f0e565b509392505050565b600082601f8301126122e1576122e0611e58565b5b81356122f184826020860161228a565b91505092915050565b6000806000806080858703121561231457612313611ce1565b5b600061232287828801611fd6565b945050602061233387828801611fd6565b935050604061234487828801612097565b925050606085013567ffffffffffffffff81111561236557612364611ce6565b5b612371878288016122cc565b91505092959194509250565b6000806040838503121561239457612393611ce1565b5b60006123a285828601611fd6565b92505060206123b385828601611fd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061240457607f821691505b602082108103612417576124166123bd565b5b50919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b600061246061245b6124568461241d565b61243b565b612427565b9050919050565b61247081612445565b82525050565b600060208201905061248b6000830184612467565b92915050565b60006060820190506124a660008301866120d9565b6124b360208301856121c3565b6124c060408301846120d9565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061250282612076565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612534576125336124c8565b5b600182019050919050565b600081905092915050565b600061255582611da6565b61255f818561253f565b935061256f818560208601611dc2565b80840191505092915050565b6000612587828561254a565b9150612593828461254a565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b60006125c68261259f565b6125d081856125aa565b93506125e0818560208601611dc2565b6125e981611dec565b840191505092915050565b600060808201905061260960008301876120d9565b61261660208301866120d9565b61262360408301856121c3565b818103606083015261263581846125bb565b905095945050505050565b60008151905061264f81611d17565b92915050565b60006020828403121561266b5761266a611ce1565b5b600061267984828501612640565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026127137fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126d6565b61271d86836126d6565b95508019841693508086168417925050509392505050565b600061275061274b61274684612076565b61243b565b612076565b9050919050565b6000819050919050565b61276a83612735565b61277e61277682612757565b8484546126e3565b825550505050565b600090565b612793612786565b61279e818484612761565b505050565b5b818110156127c2576127b760008261278b565b6001810190506127a4565b5050565b601f821115612807576127d8816126b1565b6127e1846126c6565b810160208510156127f0578190505b6128046127fc856126c6565b8301826127a3565b50505b505050565b600082821c905092915050565b600061282a6000198460080261280c565b1980831691505092915050565b60006128438383612819565b9150826002028217905092915050565b61285c82611da6565b67ffffffffffffffff81111561287557612874611e62565b5b61287f82546123ec565b61288a8282856127c6565b600060209050601f8311600181146128bd57600084156128ab578287015190505b6128b58582612837565b86555061291d565b601f1984166128cb866126b1565b60005b828110156128f3578489015182556001820191506020850194506020810190506128ce565b86831015612910578489015161290c601f891682612819565b8355505b6001600288020188555050505b505050505050565b600060408201905061293a60008301856120d9565b61294760208301846121c3565b939250505056fea2646970667358221220d9ab05bcb0b5b5fa24a2f94ba0933412c2773fa05224c5854f9406921d98ae9164736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x239 JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x77F224A EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x185 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH2 0x37F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1FEB JUMP JUMPDEST PUSH2 0x502 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x69D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH2 0x6B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x7D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH2 0x82B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x297 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x2219 JUMP JUMPDEST PUSH2 0x9E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x9F7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x20AC JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1E36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x237D JUMP JUMPDEST PUSH2 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x44A JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x45A JUMPI POP PUSH2 0x459 DUP3 PUSH2 0xBAD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x46D PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4AA SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C PUSH2 0xC3F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x55A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x58F JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x59D JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x624 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x62E DUP9 DUP9 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x637 DUP7 PUSH2 0xC69 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x693 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x68A SWAP2 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A8 DUP3 PUSH2 0xC7D JUMP JUMPDEST POP PUSH2 0x6B2 DUP3 PUSH2 0xD05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6CB DUP3 DUP3 PUSH2 0x6C6 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0xD58 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x741 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x738 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x755 DUP4 DUP4 PUSH2 0x750 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7CB JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7EC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FC DUP3 PUSH2 0xC7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x817 SWAP1 PUSH2 0x24F7 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x827 DUP3 DUP3 PUSH2 0xF97 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x836 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8AA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FC PUSH2 0xFB5 JUMP JUMPDEST PUSH2 0x906 PUSH1 0x0 PUSH2 0x103C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x913 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x94C PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x95D SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x989 SWAP1 PUSH2 0x23EC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9D6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9D6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x9EC PUSH2 0xD50 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x113B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA02 DUP5 DUP5 DUP5 PUSH2 0x6CF JUMP JUMPDEST PUSH2 0xA16 PUSH2 0xA0D PUSH2 0xD50 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x12B9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA27 DUP3 PUSH2 0xC7D JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xA32 PUSH2 0x146A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xA52 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA7D JUMP JUMPDEST DUP1 PUSH2 0xA5C DUP5 PUSH2 0x14A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6D SWAP3 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA90 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB2F PUSH2 0xFB5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB98 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0x103C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80BB2B638CC20BC4D0A60D66940F3AB4A00C1D7B313497CA82FB0B4AB0079300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC4A PUSH2 0x1575 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xC5B PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0xC65 DUP3 DUP3 PUSH2 0x15E0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xC71 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0x161D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC89 DUP4 PUSH2 0x16A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCFC JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCF3 SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD10 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD65 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD75 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD82 DUP6 PUSH2 0x16A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC4 JUMPI PUSH2 0xDC3 DUP2 DUP6 DUP8 PUSH2 0x18C2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE57 JUMPI PUSH2 0xE06 PUSH1 0x0 DUP7 PUSH1 0x0 DUP1 PUSH2 0x16EE JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEDC JUMPI PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP6 DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFB1 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1986 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xFBD PUSH2 0xD50 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDB PUSH2 0x908 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x103A JUMPI PUSH2 0xFFE PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1031 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1046 PUSH2 0x1113 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1145 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B8 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AF SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x5 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x1D8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1463 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1318 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25F4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1354 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1351 SWAP2 SWAP1 PUSH2 0x2655 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x13D8 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1384 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x13D0 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C7 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1461 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1458 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x14B6 DUP5 PUSH2 0x19AA JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14D5 JUMPI PUSH2 0x14D4 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1507 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 DUP4 ADD ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x156A JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x155E JUMPI PUSH2 0x155D PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1515 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x1AFD JUMP JUMPDEST PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15E8 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15F2 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1605 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1617 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1625 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1697 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168E SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16A0 DUP2 PUSH2 0x103C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x16AE PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F8 PUSH2 0xC17 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 PUSH2 0x1733 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1867 JUMPI PUSH1 0x0 PUSH2 0x1743 DUP6 PUSH2 0xC7D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17AE JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17C1 JUMPI POP PUSH2 0x17BF DUP2 DUP6 PUSH2 0xA85 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1803 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 ISZERO PUSH2 0x1865 JUMPI DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP5 DUP2 PUSH1 0x4 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18CD DUP4 DUP4 DUP4 PUSH2 0x1B1D JUMP JUMPDEST PUSH2 0x1981 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1942 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1939 SWAP2 SWAP1 PUSH2 0x21D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1978 SWAP3 SWAP2 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1990 DUP4 DUP4 PUSH2 0x1BDE JUMP JUMPDEST PUSH2 0x19A5 PUSH2 0x199B PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x12B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1A08 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19FE JUMPI PUSH2 0x19FD PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A45 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A3B JUMPI PUSH2 0x1A3A PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A74 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A6A JUMPI PUSH2 0x1A69 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A9D JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A93 JUMPI PUSH2 0x1A92 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AC2 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1AB8 JUMPI PUSH2 0x1AB7 PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1AE5 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1ADB JUMPI PUSH2 0x1ADA PUSH2 0x2682 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1AF4 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B07 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BD5 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B96 JUMPI POP PUSH2 0x1B95 DUP5 DUP5 PUSH2 0xA85 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BD4 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BBC DUP4 PUSH2 0xD05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C50 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C47 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C5E DUP4 DUP4 PUSH1 0x0 PUSH2 0xD6A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CD2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC9 SWAP2 SWAP1 PUSH2 0x20E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D20 DUP2 PUSH2 0x1CEB JUMP JUMPDEST DUP2 EQ PUSH2 0x1D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D3D DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D59 JUMPI PUSH2 0x1D58 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D67 DUP5 DUP3 DUP6 ADD PUSH2 0x1D2E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D85 DUP2 PUSH2 0x1D70 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DA0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DE0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E08 DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x1E12 DUP2 DUP6 PUSH2 0x1DB1 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E22 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0x1E2B DUP2 PUSH2 0x1DEC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E50 DUP2 DUP5 PUSH2 0x1DFD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E9A DUP3 PUSH2 0x1DEC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EB9 JUMPI PUSH2 0x1EB8 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECC PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ED8 DUP3 DUP3 PUSH2 0x1E91 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EF8 JUMPI PUSH2 0x1EF7 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH2 0x1F01 DUP3 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F30 PUSH2 0x1F2B DUP5 PUSH2 0x1EDD JUMP JUMPDEST PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F4C JUMPI PUSH2 0x1F4B PUSH2 0x1E5D JUMP JUMPDEST JUMPDEST PUSH2 0x1F57 DUP5 DUP3 DUP6 PUSH2 0x1F0E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F74 JUMPI PUSH2 0x1F73 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F84 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB8 DUP3 PUSH2 0x1F8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FC8 DUP2 PUSH2 0x1FAD JUMP JUMPDEST DUP2 EQ PUSH2 0x1FD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FE5 DUP2 PUSH2 0x1FBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2004 JUMPI PUSH2 0x2003 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2022 JUMPI PUSH2 0x2021 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH2 0x202E DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x204F JUMPI PUSH2 0x204E PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH2 0x205B DUP7 DUP3 DUP8 ADD PUSH2 0x1F5F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x206C DUP7 DUP3 DUP8 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2089 DUP2 PUSH2 0x2076 JUMP JUMPDEST DUP2 EQ PUSH2 0x2094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20A6 DUP2 PUSH2 0x2080 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20D0 DUP5 DUP3 DUP6 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20E2 DUP2 PUSH2 0x1FAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20FD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211A JUMPI PUSH2 0x2119 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2128 DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2139 DUP6 DUP3 DUP7 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x215C JUMPI PUSH2 0x215B PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x216A DUP7 DUP3 DUP8 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x217B DUP7 DUP3 DUP8 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x218C DUP7 DUP3 DUP8 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21AC JUMPI PUSH2 0x21AB PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21BA DUP5 DUP3 DUP6 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21CC DUP2 PUSH2 0x2076 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21F6 DUP2 PUSH2 0x1D70 JUMP JUMPDEST DUP2 EQ PUSH2 0x2201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2213 DUP2 PUSH2 0x21ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2230 JUMPI PUSH2 0x222F PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x223E DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x224F DUP6 DUP3 DUP7 ADD PUSH2 0x2204 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2274 JUMPI PUSH2 0x2273 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH2 0x227D DUP3 PUSH2 0x1DEC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229D PUSH2 0x2298 DUP5 PUSH2 0x2259 JUMP JUMPDEST PUSH2 0x1EC2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x22B9 JUMPI PUSH2 0x22B8 PUSH2 0x1E5D JUMP JUMPDEST JUMPDEST PUSH2 0x22C4 DUP5 DUP3 DUP6 PUSH2 0x1F0E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22E1 JUMPI PUSH2 0x22E0 PUSH2 0x1E58 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x22F1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x228A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2314 JUMPI PUSH2 0x2313 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2322 DUP8 DUP3 DUP9 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2333 DUP8 DUP3 DUP9 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2344 DUP8 DUP3 DUP9 ADD PUSH2 0x2097 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2365 JUMPI PUSH2 0x2364 PUSH2 0x1CE6 JUMP JUMPDEST JUMPDEST PUSH2 0x2371 DUP8 DUP3 DUP9 ADD PUSH2 0x22CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2394 JUMPI PUSH2 0x2393 PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23A2 DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1FD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2404 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2417 JUMPI PUSH2 0x2416 PUSH2 0x23BD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2460 PUSH2 0x245B PUSH2 0x2456 DUP5 PUSH2 0x241D JUMP JUMPDEST PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2470 DUP2 PUSH2 0x2445 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x248B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2467 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24A6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x24B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21C3 JUMP JUMPDEST PUSH2 0x24C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x20D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2502 DUP3 PUSH2 0x2076 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2534 JUMPI PUSH2 0x2533 PUSH2 0x24C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2555 DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0x255F DUP2 DUP6 PUSH2 0x253F JUMP JUMPDEST SWAP4 POP PUSH2 0x256F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2587 DUP3 DUP6 PUSH2 0x254A JUMP JUMPDEST SWAP2 POP PUSH2 0x2593 DUP3 DUP5 PUSH2 0x254A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C6 DUP3 PUSH2 0x259F JUMP JUMPDEST PUSH2 0x25D0 DUP2 DUP6 PUSH2 0x25AA JUMP JUMPDEST SWAP4 POP PUSH2 0x25E0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0x25E9 DUP2 PUSH2 0x1DEC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2609 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x2616 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x2623 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21C3 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2635 DUP2 DUP5 PUSH2 0x25BB JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x264F DUP2 PUSH2 0x1D17 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266B JUMPI PUSH2 0x266A PUSH2 0x1CE1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2679 DUP5 DUP3 DUP6 ADD PUSH2 0x2640 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2713 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26D6 JUMP JUMPDEST PUSH2 0x271D DUP7 DUP4 PUSH2 0x26D6 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2750 PUSH2 0x274B PUSH2 0x2746 DUP5 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x276A DUP4 PUSH2 0x2735 JUMP JUMPDEST PUSH2 0x277E PUSH2 0x2776 DUP3 PUSH2 0x2757 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26E3 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2793 PUSH2 0x2786 JUMP JUMPDEST PUSH2 0x279E DUP2 DUP5 DUP5 PUSH2 0x2761 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27C2 JUMPI PUSH2 0x27B7 PUSH1 0x0 DUP3 PUSH2 0x278B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2807 JUMPI PUSH2 0x27D8 DUP2 PUSH2 0x26B1 JUMP JUMPDEST PUSH2 0x27E1 DUP5 PUSH2 0x26C6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27F0 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2804 PUSH2 0x27FC DUP6 PUSH2 0x26C6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x27A3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x280C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2843 DUP4 DUP4 PUSH2 0x2819 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x285C DUP3 PUSH2 0x1DA6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2875 JUMPI PUSH2 0x2874 PUSH2 0x1E62 JUMP JUMPDEST JUMPDEST PUSH2 0x287F DUP3 SLOAD PUSH2 0x23EC JUMP JUMPDEST PUSH2 0x288A DUP3 DUP3 DUP6 PUSH2 0x27C6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28BD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x28AB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x28B5 DUP6 DUP3 PUSH2 0x2837 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x291D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28CB DUP7 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28F3 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28CE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2910 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x290C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2819 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x293A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0x2947 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xAB SDIV 0xBC 0xB0 0xB5 0xB5 STATICCALL 0x24 LOG2 0xF9 0x4B LOG0 SWAP4 CALLVALUE SLT 0xC2 PUSH24 0x3FA05224C5854F9406921D98AE9164736F6C634300081800 CALLER ","sourceMap":"292:676:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2640:311:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3444:146;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;525:215:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4594:154:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4447:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5204:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5816:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3284:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;746:114:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2985:265:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;2441:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3632:150:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4782:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5982:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3824:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4960:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2640:311:3;2753:4;2803:25;2788:40;;;:11;:40;;;;:104;;;;2859:33;2844:48;;;:11;:48;;;;2788:104;:156;;;;2908:36;2932:11;2908:23;:36::i;:::-;2788:156;2769:175;;2640:311;;;:::o;3444:146::-;3489:13;3514:23;3540:19;:17;:19::i;:::-;3514:45;;3576:1;:7;;3569:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3444:146;:::o;525:215:28:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;668:27:28::1;682:4;688:6;668:13;:27::i;:::-;705:28;720:12;705:14;:28::i;:::-;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;525:215:28;;;:::o;4594:154:3:-;4661:7;4680:22;4694:7;4680:13;:22::i;:::-;;4720:21;4733:7;4720:12;:21::i;:::-;4713:28;;4594:154;;;:::o;4447:113::-;4518:35;4527:2;4531:7;4540:12;:10;:12::i;:::-;4518:8;:35::i;:::-;4447:113;;:::o;5204:578::-;5312:1;5298:16;;:2;:16;;;5294:87;;5367:1;5337:33;;;;;;;;;;;:::i;:::-;;;;;;;;5294:87;5599:21;5623:34;5631:2;5635:7;5644:12;:10;:12::i;:::-;5623:7;:34::i;:::-;5599:58;;5688:4;5671:21;;:13;:21;;;5667:109;;5736:4;5742:7;5751:13;5715:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;5667:109;5284:498;5204:578;;;:::o;5816:132::-;5902:39;5919:4;5925:2;5929:7;5902:39;;;;;;;;;;;;:16;:39::i;:::-;5816:132;;;:::o;3284:118::-;3347:7;3373:22;3387:7;3373:13;:22::i;:::-;3366:29;;3284:118;;;:::o;746:114:28:-;789:15;807:12;;:14;;;;;;;;;:::i;:::-;;;;;789:32;;831:22;841:2;845:7;831:9;:22::i;:::-;779:81;746:114;:::o;2985:265:3:-;3048:7;3067:23;3093:19;:17;:19::i;:::-;3067:45;;3143:1;3126:19;;:5;:19;;;3122:87;;3195:1;3168:30;;;;;;;;;;;:::i;:::-;;;;;;;;3122:87;3225:1;:11;;:18;3237:5;3225:18;;;;;;;;;;;;;;;;3218:25;;;2985:265;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3632:150:3:-;3679:13;3704:23;3730:19;:17;:19::i;:::-;3704:45;;3766:1;:9;;3759:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3632:150;:::o;4782:144::-;4867:52;4886:12;:10;:12::i;:::-;4900:8;4910;4867:18;:52::i;:::-;4782:144;;:::o;5982:233::-;6095:31;6108:4;6114:2;6118:7;6095:12;:31::i;:::-;6136:72;6170:12;:10;:12::i;:::-;6184:4;6190:2;6194:7;6203:4;6136:33;:72::i;:::-;5982:233;;;;:::o;3824:255::-;3888:13;3913:22;3927:7;3913:13;:22::i;:::-;;3946:21;3970:10;:8;:10::i;:::-;3946:34;;4021:1;4003:7;3997:21;:25;:75;;;;;;;;;;;;;;;;;4039:7;4048:18;:7;:16;:18::i;:::-;4025:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3997:75;3990:82;;;3824:255;;;:::o;4960:210::-;5048:4;5064:23;5090:19;:17;:19::i;:::-;5064:45;;5126:1;:20;;:27;5147:5;5126:27;;;;;;;;;;;;;;;:37;5154:8;5126:37;;;;;;;;;;;;;;;;;;;;;;;;;5119:44;;;4960:210;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1002:146:5:-;1078:4;1116:25;1101:40;;;:11;:40;;;;1094:47;;1002:146;;;:::o;1957:156:3:-;2008:23;2076:21;2066:31;;1957:156;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2232:149:3:-;6929:20:1;:18;:20::i;:::-;2335:39:3::1;2359:5;2366:7;2335:23;:39::i;:::-;2232:149:::0;;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;17556:241:3:-;17619:7;17638:13;17654:17;17663:7;17654:8;:17::i;:::-;17638:33;;17702:1;17685:19;;:5;:19;;;17681:88;;17750:7;17727:31;;;;;;;;;;;:::i;:::-;;;;;;;;17681:88;17785:5;17778:12;;;17556:241;;;:::o;7018:184::-;7088:7;7107:23;7133:19;:17;:19::i;:::-;7107:45;;7169:1;:17;;:26;7187:7;7169:26;;;;;;;;;;;;;;;;;;;;;7162:33;;;7018:184;;;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;15722:120:3:-;15802:33;15811:2;15815:7;15824:4;15830;15802:8;:33::i;:::-;15722:120;;;:::o;10030:856::-;10116:7;10135:23;10161:19;:17;:19::i;:::-;10135:45;;10190:12;10205:17;10214:7;10205:8;:17::i;:::-;10190:32;;10298:1;10282:18;;:4;:18;;;10278:86;;10316:37;10333:4;10339;10345:7;10316:16;:37::i;:::-;10278:86;10424:1;10408:18;;:4;:18;;;10404:258;;10524:48;10541:1;10545:7;10562:1;10566:5;10524:8;:48::i;:::-;10636:1;10615;:11;;:17;10627:4;10615:17;;;;;;;;;;;;;;;;:22;;;;;;;;;;;10404:258;10690:1;10676:16;;:2;:16;;;10672:109;;10755:1;10736;:11;;:15;10748:2;10736:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;10672:109;10812:2;10791:1;:9;;:18;10801:7;10791:18;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;10849:7;10845:2;10830:27;;10839:4;10830:27;;;;;;;;;;;;10875:4;10868:11;;;;10030:856;;;;;:::o;11886:100::-;11953:26;11963:2;11967:7;11953:26;;;;;;;;;;;;:9;:26::i;:::-;11886:100;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;16952:369:3:-;17055:23;17081:19;:17;:19::i;:::-;17055:45;;17134:1;17114:22;;:8;:22;;;17110:91;;17181:8;17159:31;;;;;;;;;;;:::i;:::-;;;;;;;;17110:91;17250:8;17210:1;:20;;:27;17231:5;17210:27;;;;;;;;;;;;;;;:37;17238:8;17210:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;17295:8;17273:41;;17288:5;17273:41;;;17305:8;17273:41;;;;;;:::i;:::-;;;;;;;;17045:276;16952:369;;;:::o;993:926:15:-;1190:1;1173:2;:14;;;:18;1169:744;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:325;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:325;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:744;993:926;;;;;:::o;866:100:28:-;918:13;943:16;;;;;;;;;;;;;;;;;;;866:100;:::o;1308:634:23:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1618:6;1611:4;1603:6;1599:17;1595:30;1588:37;;1652:247;1659:4;1652:247;;;1683:5;;;;;;;;1787:10;1782:2;1775:5;1771:14;1766:32;1761:3;1753:46;1843:2;1834:11;;;;;;:::i;:::-;;;;;1876:1;1867:5;:10;1652:247;1863:21;1652:247;1919:6;1912:13;;;;;1308:634;;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2387:219:3:-;6929:20:1;:18;:20::i;:::-;2500:23:3::1;2526:19;:17;:19::i;:::-;2500:45;;2565:5;2555:1;:7;;:15;;;;;;:::i;:::-;;2592:7;2580:1;:9;;:19;;;;;;:::i;:::-;;2490:116;2387:219:::0;;:::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;6730:172:3:-;6796:7;6815:23;6841:19;:17;:19::i;:::-;6815:45;;6877:1;:9;;:18;6887:7;6877:18;;;;;;;;;;;;;;;;;;;;;6870:25;;;6730:172;;;:::o;16024:719::-;16128:23;16154:19;:17;:19::i;:::-;16128:45;;16239:9;:31;;;;16268:1;16252:18;;:4;:18;;;;16239:31;16235:460;;;16286:13;16302:22;16316:7;16302:13;:22::i;:::-;16286:38;;16468:1;16452:18;;:4;:18;;;;:35;;;;;16483:4;16474:13;;:5;:13;;;;16452:35;:69;;;;;16492:29;16509:5;16516:4;16492:16;:29::i;:::-;16491:30;16452:69;16448:142;;;16570:4;16548:27;;;;;;;;;;;:::i;:::-;;;;;;;;16448:142;16608:9;16604:81;;;16662:7;16658:2;16642:28;;16651:5;16642:28;;;;;;;;;;;;16604:81;16272:423;16235:460;16734:2;16705:1;:17;;:26;16723:7;16705:26;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;16118:625;16024:719;;;;:::o;8217:368::-;8329:38;8343:5;8350:7;8359;8329:13;:38::i;:::-;8324:255;;8404:1;8387:19;;:5;:19;;;8383:186;;8456:7;8433:31;;;;;;;;;;;:::i;:::-;;;;;;;;8383:186;8537:7;8546;8510:44;;;;;;;;;;;;:::i;:::-;;;;;;;;8324:255;8217:368;;;:::o;12207:207::-;12301:18;12307:2;12311:7;12301:5;:18::i;:::-;12329:78;12363:12;:10;:12::i;:::-;12385:1;12389:2;12393:7;12402:4;12329:33;:78::i;:::-;12207:207;;;:::o;29154:916:25:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;7513:272:3:-;7616:4;7670:1;7651:21;;:7;:21;;;;:127;;;;;7698:7;7689:16;;:5;:16;;;:52;;;;7709:32;7726:5;7733:7;7709:16;:32::i;:::-;7689:52;:88;;;;7770:7;7745:32;;:21;7758:7;7745:12;:21::i;:::-;:32;;;7689:88;7651:127;7632:146;;7513:272;;;;;:::o;11208:327::-;11289:1;11275:16;;:2;:16;;;11271:87;;11344:1;11314:33;;;;;;;;;;;:::i;:::-;;;;;;;;11271:87;11367:21;11391:32;11399:2;11403:7;11420:1;11391:7;:32::i;:::-;11367:56;;11462:1;11437:27;;:13;:27;;;11433:96;;11515:1;11487:31;;;;;;;;;;;:::i;:::-;;;;;;;;11433:96;11261:274;11208:327;;:::o;7:75:31:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:117::-;2969:1;2966;2959:12;2983:117;3092:1;3089;3082:12;3106:180;3154:77;3151:1;3144:88;3251:4;3248:1;3241:15;3275:4;3272:1;3265:15;3292:281;3375:27;3397:4;3375:27;:::i;:::-;3367:6;3363:40;3505:6;3493:10;3490:22;3469:18;3457:10;3454:34;3451:62;3448:88;;;3516:18;;:::i;:::-;3448:88;3556:10;3552:2;3545:22;3335:238;3292:281;;:::o;3579:129::-;3613:6;3640:20;;:::i;:::-;3630:30;;3669:33;3697:4;3689:6;3669:33;:::i;:::-;3579:129;;;:::o;3714:308::-;3776:4;3866:18;3858:6;3855:30;3852:56;;;3888:18;;:::i;:::-;3852:56;3926:29;3948:6;3926:29;:::i;:::-;3918:37;;4010:4;4004;4000:15;3992:23;;3714:308;;;:::o;4028:146::-;4125:6;4120:3;4115;4102:30;4166:1;4157:6;4152:3;4148:16;4141:27;4028:146;;;:::o;4180:425::-;4258:5;4283:66;4299:49;4341:6;4299:49;:::i;:::-;4283:66;:::i;:::-;4274:75;;4372:6;4365:5;4358:21;4410:4;4403:5;4399:16;4448:3;4439:6;4434:3;4430:16;4427:25;4424:112;;;4455:79;;:::i;:::-;4424:112;4545:54;4592:6;4587:3;4582;4545:54;:::i;:::-;4264:341;4180:425;;;;;:::o;4625:340::-;4681:5;4730:3;4723:4;4715:6;4711:17;4707:27;4697:122;;4738:79;;:::i;:::-;4697:122;4855:6;4842:20;4880:79;4955:3;4947:6;4940:4;4932:6;4928:17;4880:79;:::i;:::-;4871:88;;4687:278;4625:340;;;;:::o;4971:126::-;5008:7;5048:42;5041:5;5037:54;5026:65;;4971:126;;;:::o;5103:96::-;5140:7;5169:24;5187:5;5169:24;:::i;:::-;5158:35;;5103:96;;;:::o;5205:122::-;5278:24;5296:5;5278:24;:::i;:::-;5271:5;5268:35;5258:63;;5317:1;5314;5307:12;5258:63;5205:122;:::o;5333:139::-;5379:5;5417:6;5404:20;5395:29;;5433:33;5460:5;5433:33;:::i;:::-;5333:139;;;;:::o;5478:979::-;5575:6;5583;5591;5640:2;5628:9;5619:7;5615:23;5611:32;5608:119;;;5646:79;;:::i;:::-;5608:119;5794:1;5783:9;5779:17;5766:31;5824:18;5816:6;5813:30;5810:117;;;5846:79;;:::i;:::-;5810:117;5951:63;6006:7;5997:6;5986:9;5982:22;5951:63;:::i;:::-;5941:73;;5737:287;6091:2;6080:9;6076:18;6063:32;6122:18;6114:6;6111:30;6108:117;;;6144:79;;:::i;:::-;6108:117;6249:63;6304:7;6295:6;6284:9;6280:22;6249:63;:::i;:::-;6239:73;;6034:288;6361:2;6387:53;6432:7;6423:6;6412:9;6408:22;6387:53;:::i;:::-;6377:63;;6332:118;5478:979;;;;;:::o;6463:77::-;6500:7;6529:5;6518:16;;6463:77;;;:::o;6546:122::-;6619:24;6637:5;6619:24;:::i;:::-;6612:5;6609:35;6599:63;;6658:1;6655;6648:12;6599:63;6546:122;:::o;6674:139::-;6720:5;6758:6;6745:20;6736:29;;6774:33;6801:5;6774:33;:::i;:::-;6674:139;;;;:::o;6819:329::-;6878:6;6927:2;6915:9;6906:7;6902:23;6898:32;6895:119;;;6933:79;;:::i;:::-;6895:119;7053:1;7078:53;7123:7;7114:6;7103:9;7099:22;7078:53;:::i;:::-;7068:63;;7024:117;6819:329;;;;:::o;7154:118::-;7241:24;7259:5;7241:24;:::i;:::-;7236:3;7229:37;7154:118;;:::o;7278:222::-;7371:4;7409:2;7398:9;7394:18;7386:26;;7422:71;7490:1;7479:9;7475:17;7466:6;7422:71;:::i;:::-;7278:222;;;;:::o;7506:474::-;7574:6;7582;7631:2;7619:9;7610:7;7606:23;7602:32;7599:119;;;7637:79;;:::i;:::-;7599:119;7757:1;7782:53;7827:7;7818:6;7807:9;7803:22;7782:53;:::i;:::-;7772:63;;7728:117;7884:2;7910:53;7955:7;7946:6;7935:9;7931:22;7910:53;:::i;:::-;7900:63;;7855:118;7506:474;;;;;:::o;7986:619::-;8063:6;8071;8079;8128:2;8116:9;8107:7;8103:23;8099:32;8096:119;;;8134:79;;:::i;:::-;8096:119;8254:1;8279:53;8324:7;8315:6;8304:9;8300:22;8279:53;:::i;:::-;8269:63;;8225:117;8381:2;8407:53;8452:7;8443:6;8432:9;8428:22;8407:53;:::i;:::-;8397:63;;8352:118;8509:2;8535:53;8580:7;8571:6;8560:9;8556:22;8535:53;:::i;:::-;8525:63;;8480:118;7986:619;;;;;:::o;8611:329::-;8670:6;8719:2;8707:9;8698:7;8694:23;8690:32;8687:119;;;8725:79;;:::i;:::-;8687:119;8845:1;8870:53;8915:7;8906:6;8895:9;8891:22;8870:53;:::i;:::-;8860:63;;8816:117;8611:329;;;;:::o;8946:118::-;9033:24;9051:5;9033:24;:::i;:::-;9028:3;9021:37;8946:118;;:::o;9070:222::-;9163:4;9201:2;9190:9;9186:18;9178:26;;9214:71;9282:1;9271:9;9267:17;9258:6;9214:71;:::i;:::-;9070:222;;;;:::o;9298:116::-;9368:21;9383:5;9368:21;:::i;:::-;9361:5;9358:32;9348:60;;9404:1;9401;9394:12;9348:60;9298:116;:::o;9420:133::-;9463:5;9501:6;9488:20;9479:29;;9517:30;9541:5;9517:30;:::i;:::-;9420:133;;;;:::o;9559:468::-;9624:6;9632;9681:2;9669:9;9660:7;9656:23;9652:32;9649:119;;;9687:79;;:::i;:::-;9649:119;9807:1;9832:53;9877:7;9868:6;9857:9;9853:22;9832:53;:::i;:::-;9822:63;;9778:117;9934:2;9960:50;10002:7;9993:6;9982:9;9978:22;9960:50;:::i;:::-;9950:60;;9905:115;9559:468;;;;;:::o;10033:307::-;10094:4;10184:18;10176:6;10173:30;10170:56;;;10206:18;;:::i;:::-;10170:56;10244:29;10266:6;10244:29;:::i;:::-;10236:37;;10328:4;10322;10318:15;10310:23;;10033:307;;;:::o;10346:423::-;10423:5;10448:65;10464:48;10505:6;10464:48;:::i;:::-;10448:65;:::i;:::-;10439:74;;10536:6;10529:5;10522:21;10574:4;10567:5;10563:16;10612:3;10603:6;10598:3;10594:16;10591:25;10588:112;;;10619:79;;:::i;:::-;10588:112;10709:54;10756:6;10751:3;10746;10709:54;:::i;:::-;10429:340;10346:423;;;;;:::o;10788:338::-;10843:5;10892:3;10885:4;10877:6;10873:17;10869:27;10859:122;;10900:79;;:::i;:::-;10859:122;11017:6;11004:20;11042:78;11116:3;11108:6;11101:4;11093:6;11089:17;11042:78;:::i;:::-;11033:87;;10849:277;10788:338;;;;:::o;11132:943::-;11227:6;11235;11243;11251;11300:3;11288:9;11279:7;11275:23;11271:33;11268:120;;;11307:79;;:::i;:::-;11268:120;11427:1;11452:53;11497:7;11488:6;11477:9;11473:22;11452:53;:::i;:::-;11442:63;;11398:117;11554:2;11580:53;11625:7;11616:6;11605:9;11601:22;11580:53;:::i;:::-;11570:63;;11525:118;11682:2;11708:53;11753:7;11744:6;11733:9;11729:22;11708:53;:::i;:::-;11698:63;;11653:118;11838:2;11827:9;11823:18;11810:32;11869:18;11861:6;11858:30;11855:117;;;11891:79;;:::i;:::-;11855:117;11996:62;12050:7;12041:6;12030:9;12026:22;11996:62;:::i;:::-;11986:72;;11781:287;11132:943;;;;;;;:::o;12081:474::-;12149:6;12157;12206:2;12194:9;12185:7;12181:23;12177:32;12174:119;;;12212:79;;:::i;:::-;12174:119;12332:1;12357:53;12402:7;12393:6;12382:9;12378:22;12357:53;:::i;:::-;12347:63;;12303:117;12459:2;12485:53;12530:7;12521:6;12510:9;12506:22;12485:53;:::i;:::-;12475:63;;12430:118;12081:474;;;;;:::o;12561:180::-;12609:77;12606:1;12599:88;12706:4;12703:1;12696:15;12730:4;12727:1;12720:15;12747:320;12791:6;12828:1;12822:4;12818:12;12808:22;;12875:1;12869:4;12865:12;12896:18;12886:81;;12952:4;12944:6;12940:17;12930:27;;12886:81;13014:2;13006:6;13003:14;12983:18;12980:38;12977:84;;13033:18;;:::i;:::-;12977:84;12798:269;12747:320;;;:::o;13073:85::-;13118:7;13147:5;13136:16;;13073:85;;;:::o;13164:101::-;13200:7;13240:18;13233:5;13229:30;13218:41;;13164:101;;;:::o;13271:60::-;13299:3;13320:5;13313:12;;13271:60;;;:::o;13337:156::-;13394:9;13427:60;13444:42;13453:32;13479:5;13453:32;:::i;:::-;13444:42;:::i;:::-;13427:60;:::i;:::-;13414:73;;13337:156;;;:::o;13499:145::-;13593:44;13631:5;13593:44;:::i;:::-;13588:3;13581:57;13499:145;;:::o;13650:236::-;13750:4;13788:2;13777:9;13773:18;13765:26;;13801:78;13876:1;13865:9;13861:17;13852:6;13801:78;:::i;:::-;13650:236;;;;:::o;13892:442::-;14041:4;14079:2;14068:9;14064:18;14056:26;;14092:71;14160:1;14149:9;14145:17;14136:6;14092:71;:::i;:::-;14173:72;14241:2;14230:9;14226:18;14217:6;14173:72;:::i;:::-;14255;14323:2;14312:9;14308:18;14299:6;14255:72;:::i;:::-;13892:442;;;;;;:::o;14340:180::-;14388:77;14385:1;14378:88;14485:4;14482:1;14475:15;14509:4;14506:1;14499:15;14526:233;14565:3;14588:24;14606:5;14588:24;:::i;:::-;14579:33;;14634:66;14627:5;14624:77;14621:103;;14704:18;;:::i;:::-;14621:103;14751:1;14744:5;14740:13;14733:20;;14526:233;;;:::o;14765:148::-;14867:11;14904:3;14889:18;;14765:148;;;;:::o;14919:390::-;15025:3;15053:39;15086:5;15053:39;:::i;:::-;15108:89;15190:6;15185:3;15108:89;:::i;:::-;15101:96;;15206:65;15264:6;15259:3;15252:4;15245:5;15241:16;15206:65;:::i;:::-;15296:6;15291:3;15287:16;15280:23;;15029:280;14919:390;;;;:::o;15315:435::-;15495:3;15517:95;15608:3;15599:6;15517:95;:::i;:::-;15510:102;;15629:95;15720:3;15711:6;15629:95;:::i;:::-;15622:102;;15741:3;15734:10;;15315:435;;;;;:::o;15756:98::-;15807:6;15841:5;15835:12;15825:22;;15756:98;;;:::o;15860:168::-;15943:11;15977:6;15972:3;15965:19;16017:4;16012:3;16008:14;15993:29;;15860:168;;;;:::o;16034:373::-;16120:3;16148:38;16180:5;16148:38;:::i;:::-;16202:70;16265:6;16260:3;16202:70;:::i;:::-;16195:77;;16281:65;16339:6;16334:3;16327:4;16320:5;16316:16;16281:65;:::i;:::-;16371:29;16393:6;16371:29;:::i;:::-;16366:3;16362:39;16355:46;;16124:283;16034:373;;;;:::o;16413:640::-;16608:4;16646:3;16635:9;16631:19;16623:27;;16660:71;16728:1;16717:9;16713:17;16704:6;16660:71;:::i;:::-;16741:72;16809:2;16798:9;16794:18;16785:6;16741:72;:::i;:::-;16823;16891:2;16880:9;16876:18;16867:6;16823:72;:::i;:::-;16942:9;16936:4;16932:20;16927:2;16916:9;16912:18;16905:48;16970:76;17041:4;17032:6;16970:76;:::i;:::-;16962:84;;16413:640;;;;;;;:::o;17059:141::-;17115:5;17146:6;17140:13;17131:22;;17162:32;17188:5;17162:32;:::i;:::-;17059:141;;;;:::o;17206:349::-;17275:6;17324:2;17312:9;17303:7;17299:23;17295:32;17292:119;;;17330:79;;:::i;:::-;17292:119;17450:1;17475:63;17530:7;17521:6;17510:9;17506:22;17475:63;:::i;:::-;17465:73;;17421:127;17206:349;;;;:::o;17561:180::-;17609:77;17606:1;17599:88;17706:4;17703:1;17696:15;17730:4;17727:1;17720:15;17747:141;17796:4;17819:3;17811:11;;17842:3;17839:1;17832:14;17876:4;17873:1;17863:18;17855:26;;17747:141;;;:::o;17894:93::-;17931:6;17978:2;17973;17966:5;17962:14;17958:23;17948:33;;17894:93;;;:::o;17993:107::-;18037:8;18087:5;18081:4;18077:16;18056:37;;17993:107;;;;:::o;18106:393::-;18175:6;18225:1;18213:10;18209:18;18248:97;18278:66;18267:9;18248:97;:::i;:::-;18366:39;18396:8;18385:9;18366:39;:::i;:::-;18354:51;;18438:4;18434:9;18427:5;18423:21;18414:30;;18487:4;18477:8;18473:19;18466:5;18463:30;18453:40;;18182:317;;18106:393;;;;;:::o;18505:142::-;18555:9;18588:53;18606:34;18615:24;18633:5;18615:24;:::i;:::-;18606:34;:::i;:::-;18588:53;:::i;:::-;18575:66;;18505:142;;;:::o;18653:75::-;18696:3;18717:5;18710:12;;18653:75;;;:::o;18734:269::-;18844:39;18875:7;18844:39;:::i;:::-;18905:91;18954:41;18978:16;18954:41;:::i;:::-;18946:6;18939:4;18933:11;18905:91;:::i;:::-;18899:4;18892:105;18810:193;18734:269;;;:::o;19009:73::-;19054:3;19009:73;:::o;19088:189::-;19165:32;;:::i;:::-;19206:65;19264:6;19256;19250:4;19206:65;:::i;:::-;19141:136;19088:189;;:::o;19283:186::-;19343:120;19360:3;19353:5;19350:14;19343:120;;;19414:39;19451:1;19444:5;19414:39;:::i;:::-;19387:1;19380:5;19376:13;19367:22;;19343:120;;;19283:186;;:::o;19475:543::-;19576:2;19571:3;19568:11;19565:446;;;19610:38;19642:5;19610:38;:::i;:::-;19694:29;19712:10;19694:29;:::i;:::-;19684:8;19680:44;19877:2;19865:10;19862:18;19859:49;;;19898:8;19883:23;;19859:49;19921:80;19977:22;19995:3;19977:22;:::i;:::-;19967:8;19963:37;19950:11;19921:80;:::i;:::-;19580:431;;19565:446;19475:543;;;:::o;20024:117::-;20078:8;20128:5;20122:4;20118:16;20097:37;;20024:117;;;;:::o;20147:169::-;20191:6;20224:51;20272:1;20268:6;20260:5;20257:1;20253:13;20224:51;:::i;:::-;20220:56;20305:4;20299;20295:15;20285:25;;20198:118;20147:169;;;;:::o;20321:295::-;20397:4;20543:29;20568:3;20562:4;20543:29;:::i;:::-;20535:37;;20605:3;20602:1;20598:11;20592:4;20589:21;20581:29;;20321:295;;;;:::o;20621:1395::-;20738:37;20771:3;20738:37;:::i;:::-;20840:18;20832:6;20829:30;20826:56;;;20862:18;;:::i;:::-;20826:56;20906:38;20938:4;20932:11;20906:38;:::i;:::-;20991:67;21051:6;21043;21037:4;20991:67;:::i;:::-;21085:1;21109:4;21096:17;;21141:2;21133:6;21130:14;21158:1;21153:618;;;;21815:1;21832:6;21829:77;;;21881:9;21876:3;21872:19;21866:26;21857:35;;21829:77;21932:67;21992:6;21985:5;21932:67;:::i;:::-;21926:4;21919:81;21788:222;21123:887;;21153:618;21205:4;21201:9;21193:6;21189:22;21239:37;21271:4;21239:37;:::i;:::-;21298:1;21312:208;21326:7;21323:1;21320:14;21312:208;;;21405:9;21400:3;21396:19;21390:26;21382:6;21375:42;21456:1;21448:6;21444:14;21434:24;;21503:2;21492:9;21488:18;21475:31;;21349:4;21346:1;21342:12;21337:17;;21312:208;;;21548:6;21539:7;21536:19;21533:179;;;21606:9;21601:3;21597:19;21591:26;21649:48;21691:4;21683:6;21679:17;21668:9;21649:48;:::i;:::-;21641:6;21634:64;21556:156;21533:179;21758:1;21754;21746:6;21742:14;21738:22;21732:4;21725:36;21160:611;;;21123:887;;20713:1303;;;20621:1395;;:::o;22022:332::-;22143:4;22181:2;22170:9;22166:18;22158:26;;22194:71;22262:1;22251:9;22247:17;22238:6;22194:71;:::i;:::-;22275:72;22343:2;22332:9;22328:18;22319:6;22275:72;:::i;:::-;22022:332;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","initialize(string,string,address)":"077f224a","isApprovedForAll(address,address)":"e985e9c5","mint(address)":"6a627842","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CollectionDrop.sol\":\"CollectionDrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x315bcaebd3738cfe34ddd3525c8d3f1694afaabe0fc9f3857727497b19fb9473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58701c5c131b64e5a48e712c2b89b83a97ee5a2e720650f3941edbf1b90fe75\",\"dweb:/ipfs/QmW3bmSiiMqcTZLBRHFr2ztf9mriMuHrkqWbAv9WQhxFZ8\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/CollectionDrop.sol\":{\"keccak256\":\"0x6cd36652f75155d5992d1a06267ee8db9825bfe4fa71fb58715d0782d95db65f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7eccedf2003162fca15f61dac265bedae27f18f9f188689cc6e932c6e7b1647\",\"dweb:/ipfs/QmTW1dQrSSMYjn1qzzKDP6J61gqeujw5EVop4n3yzCXkHG\"]}},\"version\":1}"}},"contracts/EditionDrop.sol":{"EditionDrop":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"address","name":"initialOwner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_10206":{"entryPoint":null,"id":10206,"parameterSlots":0,"returnSlots":0},"@_disableInitializers_416":{"entryPoint":40,"id":416,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_461":{"entryPoint":306,"id":461,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":334,"id":447,"parameterSlots":0,"returnSlots":1},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":397,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":414,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":377,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:456:31","nodeType":"YulBlock","src":"0:456:31","statements":[{"body":{"nativeSrc":"51:57:31","nodeType":"YulBlock","src":"51:57:31","statements":[{"nativeSrc":"61:41:31","nodeType":"YulAssignment","src":"61:41:31","value":{"arguments":[{"name":"value","nativeSrc":"76:5:31","nodeType":"YulIdentifier","src":"76:5:31"},{"kind":"number","nativeSrc":"83:18:31","nodeType":"YulLiteral","src":"83:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"72:3:31","nodeType":"YulIdentifier","src":"72:3:31"},"nativeSrc":"72:30:31","nodeType":"YulFunctionCall","src":"72:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:31","nodeType":"YulIdentifier","src":"61:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"7:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:31","nodeType":"YulTypedName","src":"33:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:31","nodeType":"YulTypedName","src":"43:7:31","type":""}],"src":"7:101:31"},{"body":{"nativeSrc":"177:52:31","nodeType":"YulBlock","src":"177:52:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"194:3:31","nodeType":"YulIdentifier","src":"194:3:31"},{"arguments":[{"name":"value","nativeSrc":"216:5:31","nodeType":"YulIdentifier","src":"216:5:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"199:16:31","nodeType":"YulIdentifier","src":"199:16:31"},"nativeSrc":"199:23:31","nodeType":"YulFunctionCall","src":"199:23:31"}],"functionName":{"name":"mstore","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:36:31","nodeType":"YulFunctionCall","src":"187:36:31"},"nativeSrc":"187:36:31","nodeType":"YulExpressionStatement","src":"187:36:31"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"114:115:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"165:5:31","nodeType":"YulTypedName","src":"165:5:31","type":""},{"name":"pos","nativeSrc":"172:3:31","nodeType":"YulTypedName","src":"172:3:31","type":""}],"src":"114:115:31"},{"body":{"nativeSrc":"331:122:31","nodeType":"YulBlock","src":"331:122:31","statements":[{"nativeSrc":"341:26:31","nodeType":"YulAssignment","src":"341:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"353:9:31","nodeType":"YulIdentifier","src":"353:9:31"},{"kind":"number","nativeSrc":"364:2:31","nodeType":"YulLiteral","src":"364:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"349:3:31","nodeType":"YulIdentifier","src":"349:3:31"},"nativeSrc":"349:18:31","nodeType":"YulFunctionCall","src":"349:18:31"},"variableNames":[{"name":"tail","nativeSrc":"341:4:31","nodeType":"YulIdentifier","src":"341:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"419:6:31","nodeType":"YulIdentifier","src":"419:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"432:9:31","nodeType":"YulIdentifier","src":"432:9:31"},{"kind":"number","nativeSrc":"443:1:31","nodeType":"YulLiteral","src":"443:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"428:3:31","nodeType":"YulIdentifier","src":"428:3:31"},"nativeSrc":"428:17:31","nodeType":"YulFunctionCall","src":"428:17:31"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"377:41:31","nodeType":"YulIdentifier","src":"377:41:31"},"nativeSrc":"377:69:31","nodeType":"YulFunctionCall","src":"377:69:31"},"nativeSrc":"377:69:31","nodeType":"YulExpressionStatement","src":"377:69:31"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"235:218:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"303:9:31","nodeType":"YulTypedName","src":"303:9:31","type":""},{"name":"value0","nativeSrc":"315:6:31","nodeType":"YulTypedName","src":"315:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"326:4:31","nodeType":"YulTypedName","src":"326:4:31","type":""}],"src":"235:218:31"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001bb565b60006200003a6200013260201b60201c565b90508060000160089054906101000a900460ff161562000086576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67ffffffffffffffff80168160000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16146200012f5767ffffffffffffffff8160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d267ffffffffffffffff6040516200012691906200019e565b60405180910390a15b50565b600080620001456200014e60201b60201c565b90508091505090565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b600067ffffffffffffffff82169050919050565b620001988162000179565b82525050565b6000602082019050620001b560008301846200018d565b92915050565b612ace80620001cb6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063715018a61161008c578063a22cb46511610066578063a22cb4651461020f578063e985e9c51461022b578063f242432a1461025b578063f2fde38b14610277576100ce565b8063715018a6146101cb5780637ab4339d146101d55780638da5cb5b146101f1576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630e89341c146101335780632eb2c2d61461016357806340c10f191461017f5780634e1273f41461019b575b600080fd5b6100ed60048036038101906100e89190611acd565b610293565b6040516100fa9190611b1c565b60405180910390f35b61011d60048036038101906101189190611b8f565b6102fc565b60405161012a9190611bd7565b60405180910390f35b61014d60048036038101906101489190611bf2565b6103de565b60405161015a9190611caf565b60405180910390f35b61017d60048036038101906101789190611ece565b610481565b005b61019960048036038101906101949190611acd565b610529565b005b6101b560048036038101906101b09190612060565b610563565b6040516101c29190612196565b60405180910390f35b6101d361066c565b005b6101ef60048036038101906101ea9190612259565b610680565b005b6101f9610819565b60405161020691906122c4565b60405180910390f35b6102296004803603810190610224919061230b565b610851565b005b6102456004803603810190610240919061234b565b610867565b6040516102529190611bd7565b60405180910390f35b6102756004803603810190610270919061238b565b610909565b005b610291600480360381019061028c9190612422565b6109b1565b005b60008061029e610a37565b905080600001600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d757506103d682610a5f565b5b9050919050565b606060006103ea610a37565b90508060020180546103fb9061247e565b80601f01602080910402602001604051908101604052809291908181526020018280546104279061247e565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050915050919050565b600061048b610ac9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104d057506104ce8682610867565b155b156105145780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161050b9291906124af565b60405180910390fd5b6105218686868686610ad1565b505050505050565b600080600081548092919061053d90612507565b91905055905061055e83828460405180602001604052806000815250610bc9565b505050565b606081518351146105af57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105a692919061254f565b60405180910390fd5b6000835167ffffffffffffffff8111156105cc576105cb611cd6565b5b6040519080825280602002602001820160405280156105fa5781602001602082028036833780820191505090505b50905060005b84518110156106615761063761061f8287610c6290919063ffffffff16565b6106328387610c7690919063ffffffff16565b610293565b82828151811061064a57610649612578565b5b602002602001018181525050806001019050610600565b508091505092915050565b610674610c8a565b61067e6000610d11565b565b600061068a610de8565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156106d85750825b9050600060018367ffffffffffffffff1614801561070d575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561071b575080155b15610752576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156107a25760018560000160086101000a81548160ff0219169083151502179055505b6107ab87610dfc565b6107b486610e10565b83156108105760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108079190612600565b60405180910390a15b50505050505050565b600080610824610e24565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b61086361085c610ac9565b8383610e4c565b5050565b600080610872610a37565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610913610ac9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561095857506109568682610867565b155b1561099c5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109939291906124af565b60405180910390fd5b6109a98686868686610fcb565b505050505050565b6109b9610c8a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a2b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a2291906122c4565b60405180910390fd5b610a3481610d11565b50565b60007f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b435760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b3a91906122c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610bb55760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610bac91906122c4565b60405180910390fd5b610bc285858585856110d6565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c3b5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c3291906122c4565b60405180910390fd5b600080610c488585611188565b91509150610c5a6000878484876110d6565b505050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b610c92610ac9565b73ffffffffffffffffffffffffffffffffffffffff16610cb0610819565b73ffffffffffffffffffffffffffffffffffffffff1614610d0f57610cd3610ac9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0691906122c4565b60405180910390fd5b565b6000610d1b610e24565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600080610df36111b8565b90508091505090565b610e046111e3565b610e0d81611223565b50565b610e186111e3565b610e2181611237565b50565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000610e56610a37565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eca5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610ec191906122c4565b60405180910390fd5b818160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051610fbd9190611bd7565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361103d5760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161103491906122c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110af5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110a691906122c4565b60405180910390fd5b6000806110bc8585611188565b915091506110cd87878484876110d6565b50505050505050565b6110e2858585856112bd565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611181576000611120610ac9565b90506001845103611170576000611141600086610c7690919063ffffffff16565b90506000611159600086610c7690919063ffffffff16565b905061116983898985858961167b565b505061117f565b61117e81878787878761182f565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6111eb6119e3565b611221576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61122b6111e3565b61123481611a03565b50565b61123f6111e3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112b15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112a891906122c4565b60405180910390fd5b6112ba81610d11565b50565b60006112c7610a37565b9050815183511461131357825182516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161130a92919061254f565b60405180910390fd5b600061131d610ac9565b905060005b84518110156115355760006113408287610c7690919063ffffffff16565b905060006113578387610c7690919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161461148a57600085600001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561142f57898183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611426949392919061261b565b60405180910390fd5b81810386600001600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611528578085600001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115209190612660565b925050819055505b5050806001019050611322565b5060018451036115f4576000611555600086610c7690919063ffffffff16565b9050600061156d600086610c7690919063ffffffff16565b90508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516115e592919061254f565b60405180910390a45050611673565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161166a929190612694565b60405180910390a45b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611827578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016116dc959493929190612720565b6020604051808303816000875af192505050801561171857506040513d601f19601f82011682018060405250810190611715919061278f565b60015b61179c573d8060008114611748576040519150601f19603f3d011682016040523d82523d6000602084013e61174d565b606091505b50600081510361179457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161178b91906122c4565b60405180910390fd5b805160208201fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461182557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161181c91906122c4565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156119db578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016118909594939291906127bc565b6020604051808303816000875af19250505080156118cc57506040513d601f19601f820116820180604052508101906118c9919061278f565b60015b611950573d80600081146118fc576040519150601f19603f3d011682016040523d82523d6000602084013e611901565b606091505b50600081510361194857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161193f91906122c4565b60405180910390fd5b805160208201fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119d957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016119d091906122c4565b60405180910390fd5b505b505050505050565b60006119ed610de8565b60000160089054906101000a900460ff16905090565b6000611a0d610a37565b905081816002019081611a2091906129c6565b505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a6482611a39565b9050919050565b611a7481611a59565b8114611a7f57600080fd5b50565b600081359050611a9181611a6b565b92915050565b6000819050919050565b611aaa81611a97565b8114611ab557600080fd5b50565b600081359050611ac781611aa1565b92915050565b60008060408385031215611ae457611ae3611a2f565b5b6000611af285828601611a82565b9250506020611b0385828601611ab8565b9150509250929050565b611b1681611a97565b82525050565b6000602082019050611b316000830184611b0d565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b6c81611b37565b8114611b7757600080fd5b50565b600081359050611b8981611b63565b92915050565b600060208284031215611ba557611ba4611a2f565b5b6000611bb384828501611b7a565b91505092915050565b60008115159050919050565b611bd181611bbc565b82525050565b6000602082019050611bec6000830184611bc8565b92915050565b600060208284031215611c0857611c07611a2f565b5b6000611c1684828501611ab8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c59578082015181840152602081019050611c3e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c8182611c1f565b611c8b8185611c2a565b9350611c9b818560208601611c3b565b611ca481611c65565b840191505092915050565b60006020820190508181036000830152611cc98184611c76565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d0e82611c65565b810181811067ffffffffffffffff82111715611d2d57611d2c611cd6565b5b80604052505050565b6000611d40611a25565b9050611d4c8282611d05565b919050565b600067ffffffffffffffff821115611d6c57611d6b611cd6565b5b602082029050602081019050919050565b600080fd5b6000611d95611d9084611d51565b611d36565b90508083825260208201905060208402830185811115611db857611db7611d7d565b5b835b81811015611de15780611dcd8882611ab8565b845260208401935050602081019050611dba565b5050509392505050565b600082601f830112611e0057611dff611cd1565b5b8135611e10848260208601611d82565b91505092915050565b600080fd5b600067ffffffffffffffff821115611e3957611e38611cd6565b5b611e4282611c65565b9050602081019050919050565b82818337600083830152505050565b6000611e71611e6c84611e1e565b611d36565b905082815260208101848484011115611e8d57611e8c611e19565b5b611e98848285611e4f565b509392505050565b600082601f830112611eb557611eb4611cd1565b5b8135611ec5848260208601611e5e565b91505092915050565b600080600080600060a08688031215611eea57611ee9611a2f565b5b6000611ef888828901611a82565b9550506020611f0988828901611a82565b945050604086013567ffffffffffffffff811115611f2a57611f29611a34565b5b611f3688828901611deb565b935050606086013567ffffffffffffffff811115611f5757611f56611a34565b5b611f6388828901611deb565b925050608086013567ffffffffffffffff811115611f8457611f83611a34565b5b611f9088828901611ea0565b9150509295509295909350565b600067ffffffffffffffff821115611fb857611fb7611cd6565b5b602082029050602081019050919050565b6000611fdc611fd784611f9d565b611d36565b90508083825260208201905060208402830185811115611fff57611ffe611d7d565b5b835b8181101561202857806120148882611a82565b845260208401935050602081019050612001565b5050509392505050565b600082601f83011261204757612046611cd1565b5b8135612057848260208601611fc9565b91505092915050565b6000806040838503121561207757612076611a2f565b5b600083013567ffffffffffffffff81111561209557612094611a34565b5b6120a185828601612032565b925050602083013567ffffffffffffffff8111156120c2576120c1611a34565b5b6120ce85828601611deb565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61210d81611a97565b82525050565b600061211f8383612104565b60208301905092915050565b6000602082019050919050565b6000612143826120d8565b61214d81856120e3565b9350612158836120f4565b8060005b838110156121895781516121708882612113565b975061217b8361212b565b92505060018101905061215c565b5085935050505092915050565b600060208201905081810360008301526121b08184612138565b905092915050565b600067ffffffffffffffff8211156121d3576121d2611cd6565b5b6121dc82611c65565b9050602081019050919050565b60006121fc6121f7846121b8565b611d36565b90508281526020810184848401111561221857612217611e19565b5b612223848285611e4f565b509392505050565b600082601f8301126122405761223f611cd1565b5b81356122508482602086016121e9565b91505092915050565b600080604083850312156122705761226f611a2f565b5b600083013567ffffffffffffffff81111561228e5761228d611a34565b5b61229a8582860161222b565b92505060206122ab85828601611a82565b9150509250929050565b6122be81611a59565b82525050565b60006020820190506122d960008301846122b5565b92915050565b6122e881611bbc565b81146122f357600080fd5b50565b600081359050612305816122df565b92915050565b6000806040838503121561232257612321611a2f565b5b600061233085828601611a82565b9250506020612341858286016122f6565b9150509250929050565b6000806040838503121561236257612361611a2f565b5b600061237085828601611a82565b925050602061238185828601611a82565b9150509250929050565b600080600080600060a086880312156123a7576123a6611a2f565b5b60006123b588828901611a82565b95505060206123c688828901611a82565b94505060406123d788828901611ab8565b93505060606123e888828901611ab8565b925050608086013567ffffffffffffffff81111561240957612408611a34565b5b61241588828901611ea0565b9150509295509295909350565b60006020828403121561243857612437611a2f565b5b600061244684828501611a82565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061249657607f821691505b6020821081036124a9576124a861244f565b5b50919050565b60006040820190506124c460008301856122b5565b6124d160208301846122b5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061251282611a97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612544576125436124d8565b5b600182019050919050565b60006040820190506125646000830185611b0d565b6125716020830184611b0d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006125ea6125e56125e0846125a7565b6125c5565b6125b1565b9050919050565b6125fa816125cf565b82525050565b600060208201905061261560008301846125f1565b92915050565b600060808201905061263060008301876122b5565b61263d6020830186611b0d565b61264a6040830185611b0d565b6126576060830184611b0d565b95945050505050565b600061266b82611a97565b915061267683611a97565b925082820190508082111561268e5761268d6124d8565b5b92915050565b600060408201905081810360008301526126ae8185612138565b905081810360208301526126c28184612138565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006126f2826126cb565b6126fc81856126d6565b935061270c818560208601611c3b565b61271581611c65565b840191505092915050565b600060a08201905061273560008301886122b5565b61274260208301876122b5565b61274f6040830186611b0d565b61275c6060830185611b0d565b818103608083015261276e81846126e7565b90509695505050505050565b60008151905061278981611b63565b92915050565b6000602082840312156127a5576127a4611a2f565b5b60006127b38482850161277a565b91505092915050565b600060a0820190506127d160008301886122b5565b6127de60208301876122b5565b81810360408301526127f08186612138565b905081810360608301526128048185612138565b9050818103608083015261281881846126e7565b90509695505050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026128867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612849565b6128908683612849565b95508019841693508086168417925050509392505050565b60006128c36128be6128b984611a97565b6125c5565b611a97565b9050919050565b6000819050919050565b6128dd836128a8565b6128f16128e9826128ca565b848454612856565b825550505050565b600090565b6129066128f9565b6129118184846128d4565b505050565b5b818110156129355761292a6000826128fe565b600181019050612917565b5050565b601f82111561297a5761294b81612824565b61295484612839565b81016020851015612963578190505b61297761296f85612839565b830182612916565b50505b505050565b600082821c905092915050565b600061299d6000198460080261297f565b1980831691505092915050565b60006129b6838361298c565b9150826002028217905092915050565b6129cf82611c1f565b67ffffffffffffffff8111156129e8576129e7611cd6565b5b6129f2825461247e565b6129fd828285612939565b600060209050601f831160018114612a305760008415612a1e578287015190505b612a2885826129aa565b865550612a90565b601f198416612a3e86612824565b60005b82811015612a6657848901518255600182019150602085019450602081019050612a41565b86831015612a835784890151612a7f601f89168261298c565b8355505b6001600288020188555050505b50505050505056fea26469706673582212201ef850087e0645e59a8c38e4c28dc16c8b5d28c170a2f25287999c31bfea12df64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x22 PUSH3 0x28 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1BB JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A PUSH3 0x132 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH3 0x86 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH3 0x12F JUMPI PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD PUSH3 0x126 SWAP2 SWAP1 PUSH3 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x145 PUSH3 0x14E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x198 DUP2 PUSH3 0x179 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x18D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2ACE DUP1 PUSH3 0x1CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x277 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7AB4339D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F1 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29E PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C7 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D6 DUP3 PUSH2 0xA5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3EA PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x247E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x247E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI POP PUSH2 0x4CE DUP7 DUP3 PUSH2 0x867 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x514 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x521 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAD1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x53D SWAP1 PUSH2 0x2507 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x55E DUP4 DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBC9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5AF JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH2 0x637 PUSH2 0x61F DUP3 DUP8 PUSH2 0xC62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x632 DUP4 DUP8 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64A JUMPI PUSH2 0x649 PUSH2 0x2578 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x600 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x674 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x67E PUSH1 0x0 PUSH2 0xD11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A PUSH2 0xDE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x6D8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x70D JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x7AB DUP8 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x7B4 DUP7 PUSH2 0xE10 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x824 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x863 PUSH2 0x85C PUSH2 0xAC9 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x872 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x913 PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI POP PUSH2 0x956 DUP7 DUP3 PUSH2 0x867 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x99C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFCB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA34 DUP2 PUSH2 0xD11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB43 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBB5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10D6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC48 DUP6 DUP6 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC5A PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x10D6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC92 PUSH2 0xAC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB0 PUSH2 0x819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0F JUMPI PUSH2 0xCD3 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1B PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDF3 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0x1223 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE18 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0xE21 DUP2 PUSH2 0x1237 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10BC DUP6 DUP6 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10CD DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x10D6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10E2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1181 JUMPI PUSH1 0x0 PUSH2 0x1120 PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1170 JUMPI PUSH1 0x0 PUSH2 0x1141 PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1159 PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1169 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x167B JUMP JUMPDEST POP POP PUSH2 0x117F JUMP JUMPDEST PUSH2 0x117E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x182F JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11EB PUSH2 0x19E3 JUMP JUMPDEST PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x122B PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x1A03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x123F PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A8 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12BA DUP2 PUSH2 0xD11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C7 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1313 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130A SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x131D PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1535 JUMPI PUSH1 0x0 PUSH2 0x1340 DUP3 DUP8 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1357 DUP4 DUP8 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148A JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x142F JUMPI DUP10 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x261B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP7 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1528 JUMPI DUP1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x15F4 JUMPI PUSH1 0x0 PUSH2 0x1555 PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x156D PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15E5 SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1673 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x166A SWAP3 SWAP2 SWAP1 PUSH2 0x2694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1827 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1718 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x179C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1748 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x174D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1794 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178B SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1825 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19DB JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1890 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18CC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C9 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1950 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1948 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193F SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19D9 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D0 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19ED PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1A20 SWAP2 SWAP1 PUSH2 0x29C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A64 DUP3 PUSH2 0x1A39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1A59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A91 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAA DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC7 DUP2 PUSH2 0x1AA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE4 JUMPI PUSH2 0x1AE3 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B03 DUP6 DUP3 DUP7 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B16 DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B31 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6C DUP2 PUSH2 0x1B37 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B89 DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA5 JUMPI PUSH2 0x1BA4 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1B7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C16 DUP5 DUP3 DUP6 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C59 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1C8B DUP2 DUP6 PUSH2 0x1C2A JUMP JUMPDEST SWAP4 POP PUSH2 0x1C9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x1CA4 DUP2 PUSH2 0x1C65 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC9 DUP2 DUP5 PUSH2 0x1C76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D0E DUP3 PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D2D JUMPI PUSH2 0x1D2C PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D40 PUSH2 0x1A25 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D4C DUP3 DUP3 PUSH2 0x1D05 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D95 PUSH2 0x1D90 DUP5 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DB8 JUMPI PUSH2 0x1DB7 PUSH2 0x1D7D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DE1 JUMPI DUP1 PUSH2 0x1DCD DUP9 DUP3 PUSH2 0x1AB8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DBA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E10 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E39 JUMPI PUSH2 0x1E38 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH2 0x1E42 DUP3 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 PUSH2 0x1E6C DUP5 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8C PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH2 0x1E98 DUP5 DUP3 DUP6 PUSH2 0x1E4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EB5 JUMPI PUSH2 0x1EB4 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EC5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF8 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F09 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F29 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x1F36 DUP9 DUP3 DUP10 ADD PUSH2 0x1DEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x1F63 DUP9 DUP3 DUP10 ADD PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F84 JUMPI PUSH2 0x1F83 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x1F90 DUP9 DUP3 DUP10 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDC PUSH2 0x1FD7 DUP5 PUSH2 0x1F9D JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1FFF JUMPI PUSH2 0x1FFE PUSH2 0x1D7D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2028 JUMPI DUP1 PUSH2 0x2014 DUP9 DUP3 PUSH2 0x1A82 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2001 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2057 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2095 JUMPI PUSH2 0x2094 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x20A1 DUP6 DUP3 DUP7 ADD PUSH2 0x2032 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x20CE DUP6 DUP3 DUP7 ADD PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210D DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP4 DUP4 PUSH2 0x2104 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2143 DUP3 PUSH2 0x20D8 JUMP JUMPDEST PUSH2 0x214D DUP2 DUP6 PUSH2 0x20E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2158 DUP4 PUSH2 0x20F4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2189 JUMPI DUP2 MLOAD PUSH2 0x2170 DUP9 DUP3 PUSH2 0x2113 JUMP JUMPDEST SWAP8 POP PUSH2 0x217B DUP4 PUSH2 0x212B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x215C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B0 DUP2 DUP5 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21D3 JUMPI PUSH2 0x21D2 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH2 0x21DC DUP3 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FC PUSH2 0x21F7 DUP5 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH2 0x2223 DUP5 DUP3 DUP6 PUSH2 0x1E4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2240 JUMPI PUSH2 0x223F PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2250 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2270 JUMPI PUSH2 0x226F PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228E JUMPI PUSH2 0x228D PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x229A DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22AB DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22BE DUP2 PUSH2 0x1A59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22E8 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP2 EQ PUSH2 0x22F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2305 DUP2 PUSH2 0x22DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2322 JUMPI PUSH2 0x2321 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2330 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2341 DUP6 DUP3 DUP7 ADD PUSH2 0x22F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2370 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2381 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23A7 JUMPI PUSH2 0x23A6 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B5 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23C6 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23E8 DUP9 DUP3 DUP10 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x2415 DUP9 DUP3 DUP10 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2438 JUMPI PUSH2 0x2437 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2446 DUP5 DUP3 DUP6 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2496 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24A9 JUMPI PUSH2 0x24A8 PUSH2 0x244F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x24D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2512 DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2544 JUMPI PUSH2 0x2543 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x2571 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EA PUSH2 0x25E5 PUSH2 0x25E0 DUP5 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x25B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25FA DUP2 PUSH2 0x25CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2615 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2630 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x263D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x264A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x2657 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266B DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2676 DUP4 PUSH2 0x1A97 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x268E JUMPI PUSH2 0x268D PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26AE DUP2 DUP6 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x26C2 DUP2 DUP5 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH2 0x26FC DUP2 DUP6 PUSH2 0x26D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x270C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x2715 DUP2 PUSH2 0x1C65 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2735 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x2742 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x274F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x275C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x276E DUP2 DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2789 DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A5 JUMPI PUSH2 0x27A4 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B3 DUP5 DUP3 DUP6 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x27D1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x27DE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x27F0 DUP2 DUP7 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2804 DUP2 DUP6 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2818 DUP2 DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2886 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2849 JUMP JUMPDEST PUSH2 0x2890 DUP7 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C3 PUSH2 0x28BE PUSH2 0x28B9 DUP5 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28DD DUP4 PUSH2 0x28A8 JUMP JUMPDEST PUSH2 0x28F1 PUSH2 0x28E9 DUP3 PUSH2 0x28CA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2856 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2906 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x2911 DUP2 DUP5 DUP5 PUSH2 0x28D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2935 JUMPI PUSH2 0x292A PUSH1 0x0 DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2917 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x297A JUMPI PUSH2 0x294B DUP2 PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x2954 DUP5 PUSH2 0x2839 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2963 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2977 PUSH2 0x296F DUP6 PUSH2 0x2839 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2916 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x297F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B6 DUP4 DUP4 PUSH2 0x298C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29CF DUP3 PUSH2 0x1C1F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29E8 JUMPI PUSH2 0x29E7 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH2 0x29F2 DUP3 SLOAD PUSH2 0x247E JUMP JUMPDEST PUSH2 0x29FD DUP3 DUP3 DUP6 PUSH2 0x2939 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A30 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2A1E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A28 DUP6 DUP3 PUSH2 0x29AA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A90 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A3E DUP7 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A66 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A41 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2A83 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2A7F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x298C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xF8 POP ADDMOD PUSH31 0x645E59A8C38E4C28DC16C8B5D28C170A2F25287999C31BFEA12DF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"294:553:29:-:0;;;466:53;;;;;;;;;;490:22;:20;;;:22;;:::i;:::-;294:553;;7709:422:1;7824:30;7857:26;:24;;;:26;;:::i;:::-;7824:59;;7898:1;:15;;;;;;;;;;;;7894:76;;;7936:23;;;;;;;;;;;;;;7894:76;8001:16;7983:34;;:1;:14;;;;;;;;;;;;:34;;;7979:146;;8050:16;8033:1;:14;;;:33;;;;;;;;;;;;;;;;;;8085:29;8097:16;8085:29;;;;;;:::i;:::-;;;;;;;;7979:146;7758:373;7709:422::o;9071:205::-;9129:30;9171:12;9186:27;:25;;;:27;;:::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;8819:122::-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7:101:31:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;294:553:29:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@__ERC1155_init_543":{"entryPoint":3580,"id":543,"parameterSlots":1,"returnSlots":0},"@__ERC1155_init_unchained_555":{"entryPoint":4643,"id":555,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":3600,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":4663,"id":81,"parameterSlots":1,"returnSlots":0},"@_asSingletonArrays_1458":{"entryPoint":4488,"id":1458,"parameterSlots":2,"returnSlots":2},"@_checkInitializing_370":{"entryPoint":4579,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":3210,"id":122,"parameterSlots":0,"returnSlots":0},"@_getERC1155Storage_530":{"entryPoint":2615,"id":530,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_461":{"entryPoint":3560,"id":461,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":3620,"id":25,"parameterSlots":0,"returnSlots":1},"@_initializableStorageSlot_447":{"entryPoint":4536,"id":447,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":6627,"id":438,"parameterSlots":0,"returnSlots":1},"@_mint_1264":{"entryPoint":3017,"id":1264,"parameterSlots":4,"returnSlots":0},"@_msgSender_2567":{"entryPoint":2761,"id":2567,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_1193":{"entryPoint":2769,"id":1193,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_1138":{"entryPoint":4043,"id":1138,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1442":{"entryPoint":3660,"id":1442,"parameterSlots":3,"returnSlots":0},"@_setURI_1212":{"entryPoint":6659,"id":1212,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":3345,"id":193,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_1072":{"entryPoint":4310,"id":1072,"parameterSlots":5,"returnSlots":0},"@_update_992":{"entryPoint":4797,"id":992,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_698":{"entryPoint":1379,"id":698,"parameterSlots":2,"returnSlots":1},"@balanceOf_628":{"entryPoint":659,"id":628,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_3495":{"entryPoint":6191,"id":3495,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_3421":{"entryPoint":5755,"id":3421,"parameterSlots":6,"returnSlots":0},"@initialize_10224":{"entryPoint":1664,"id":10224,"parameterSlots":2,"returnSlots":0},"@isApprovedForAll_738":{"entryPoint":2151,"id":738,"parameterSlots":2,"returnSlots":1},"@mint_10244":{"entryPoint":1321,"id":10244,"parameterSlots":2,"returnSlots":0},"@owner_105":{"entryPoint":2073,"id":105,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":1644,"id":136,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_828":{"entryPoint":1153,"id":828,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_782":{"entryPoint":2313,"id":782,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_714":{"entryPoint":2129,"id":714,"parameterSlots":2,"returnSlots":0},"@supportsInterface_2624":{"entryPoint":2655,"id":2624,"parameterSlots":1,"returnSlots":1},"@supportsInterface_586":{"entryPoint":764,"id":586,"parameterSlots":1,"returnSlots":1},"@transferOwnership_164":{"entryPoint":2481,"id":164,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_4606":{"entryPoint":3170,"id":4606,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_4632":{"entryPoint":3190,"id":4632,"parameterSlots":2,"returnSlots":1},"@uri_604":{"entryPoint":990,"id":604,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8137,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7554,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7774,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":8681,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8242,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7659,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8950,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7034,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":10106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":8747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9250,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9035,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":7886,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":9099,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8971,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6861,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8288,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7055,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":10127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address":{"entryPoint":8793,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":7154,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":8467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8885,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7112,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":9959,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack":{"entryPoint":9713,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8452,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6925,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8900,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":9391,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10172,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10016,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9755,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9876,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":9728,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9551,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":7478,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6693,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":8093,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7505,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7710,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":8632,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8436,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":10276,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8408,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":9931,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7199,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8491,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8419,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":9942,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7210,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9824,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":10553,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":6745,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7100,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6967,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":9639,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6713,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6807,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":9649,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10518,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint64":{"entryPoint":9679,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":10408,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":10694,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7759,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7227,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10297,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9342,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10666,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":7429,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":9669,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":9479,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10636,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9432,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9295,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9592,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7382,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10442,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7377,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7549,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7705,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6708,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6703,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7269,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10313,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10623,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10494,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10326,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10452,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6763,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8927,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7011,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6817,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10489,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:30455:31","nodeType":"YulBlock","src":"0:30455:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"379:81:31","nodeType":"YulBlock","src":"379:81:31","statements":[{"nativeSrc":"389:65:31","nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nativeSrc":"404:5:31","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nativeSrc":"411:42:31","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:31","nodeType":"YulIdentifier","src":"400:3:31"},"nativeSrc":"400:54:31","nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:31","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:31","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:31","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nativeSrc":"511:51:31","nodeType":"YulBlock","src":"511:51:31","statements":[{"nativeSrc":"521:35:31","nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nativeSrc":"550:5:31","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:31","nodeType":"YulIdentifier","src":"532:17:31"},"nativeSrc":"532:24:31","nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:31","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:31","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:31","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nativeSrc":"611:79:31","nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nativeSrc":"668:16:31","nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:31","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:31","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:31","nodeType":"YulIdentifier","src":"670:6:31"},"nativeSrc":"670:12:31","nodeType":"YulFunctionCall","src":"670:12:31"},"nativeSrc":"670:12:31","nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:31","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nativeSrc":"659:5:31","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:31","nodeType":"YulIdentifier","src":"641:17:31"},"nativeSrc":"641:24:31","nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nativeSrc":"631:2:31","nodeType":"YulIdentifier","src":"631:2:31"},"nativeSrc":"631:35:31","nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nativeSrc":"624:6:31","nodeType":"YulIdentifier","src":"624:6:31"},"nativeSrc":"624:43:31","nodeType":"YulFunctionCall","src":"624:43:31"},"nativeSrc":"621:63:31","nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:31","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nativeSrc":"748:87:31","nodeType":"YulBlock","src":"748:87:31","statements":[{"nativeSrc":"758:29:31","nodeType":"YulAssignment","src":"758:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:31","nodeType":"YulIdentifier","src":"780:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:31","nodeType":"YulIdentifier","src":"767:12:31"},"nativeSrc":"767:20:31","nodeType":"YulFunctionCall","src":"767:20:31"},"variableNames":[{"name":"value","nativeSrc":"758:5:31","nodeType":"YulIdentifier","src":"758:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:31","nodeType":"YulIdentifier","src":"823:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:31","nodeType":"YulIdentifier","src":"796:26:31"},"nativeSrc":"796:33:31","nodeType":"YulFunctionCall","src":"796:33:31"},"nativeSrc":"796:33:31","nodeType":"YulExpressionStatement","src":"796:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:31","nodeType":"YulTypedName","src":"726:6:31","type":""},{"name":"end","nativeSrc":"734:3:31","nodeType":"YulTypedName","src":"734:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:31","nodeType":"YulTypedName","src":"742:5:31","type":""}],"src":"696:139:31"},{"body":{"nativeSrc":"886:32:31","nodeType":"YulBlock","src":"886:32:31","statements":[{"nativeSrc":"896:16:31","nodeType":"YulAssignment","src":"896:16:31","value":{"name":"value","nativeSrc":"907:5:31","nodeType":"YulIdentifier","src":"907:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:31","nodeType":"YulIdentifier","src":"896:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:31","nodeType":"YulTypedName","src":"868:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:31","nodeType":"YulTypedName","src":"878:7:31","type":""}],"src":"841:77:31"},{"body":{"nativeSrc":"967:79:31","nodeType":"YulBlock","src":"967:79:31","statements":[{"body":{"nativeSrc":"1024:16:31","nodeType":"YulBlock","src":"1024:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:31","nodeType":"YulLiteral","src":"1033:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:31","nodeType":"YulLiteral","src":"1036:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:31","nodeType":"YulIdentifier","src":"1026:6:31"},"nativeSrc":"1026:12:31","nodeType":"YulFunctionCall","src":"1026:12:31"},"nativeSrc":"1026:12:31","nodeType":"YulExpressionStatement","src":"1026:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:31","nodeType":"YulIdentifier","src":"990:5:31"},{"arguments":[{"name":"value","nativeSrc":"1015:5:31","nodeType":"YulIdentifier","src":"1015:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:31","nodeType":"YulIdentifier","src":"997:17:31"},"nativeSrc":"997:24:31","nodeType":"YulFunctionCall","src":"997:24:31"}],"functionName":{"name":"eq","nativeSrc":"987:2:31","nodeType":"YulIdentifier","src":"987:2:31"},"nativeSrc":"987:35:31","nodeType":"YulFunctionCall","src":"987:35:31"}],"functionName":{"name":"iszero","nativeSrc":"980:6:31","nodeType":"YulIdentifier","src":"980:6:31"},"nativeSrc":"980:43:31","nodeType":"YulFunctionCall","src":"980:43:31"},"nativeSrc":"977:63:31","nodeType":"YulIf","src":"977:63:31"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:31","nodeType":"YulTypedName","src":"960:5:31","type":""}],"src":"924:122:31"},{"body":{"nativeSrc":"1104:87:31","nodeType":"YulBlock","src":"1104:87:31","statements":[{"nativeSrc":"1114:29:31","nodeType":"YulAssignment","src":"1114:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:31","nodeType":"YulIdentifier","src":"1136:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:31","nodeType":"YulIdentifier","src":"1123:12:31"},"nativeSrc":"1123:20:31","nodeType":"YulFunctionCall","src":"1123:20:31"},"variableNames":[{"name":"value","nativeSrc":"1114:5:31","nodeType":"YulIdentifier","src":"1114:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:31","nodeType":"YulIdentifier","src":"1179:5:31"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:31","nodeType":"YulIdentifier","src":"1152:26:31"},"nativeSrc":"1152:33:31","nodeType":"YulFunctionCall","src":"1152:33:31"},"nativeSrc":"1152:33:31","nodeType":"YulExpressionStatement","src":"1152:33:31"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:31","nodeType":"YulTypedName","src":"1082:6:31","type":""},{"name":"end","nativeSrc":"1090:3:31","nodeType":"YulTypedName","src":"1090:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:31","nodeType":"YulTypedName","src":"1098:5:31","type":""}],"src":"1052:139:31"},{"body":{"nativeSrc":"1280:391:31","nodeType":"YulBlock","src":"1280:391:31","statements":[{"body":{"nativeSrc":"1326:83:31","nodeType":"YulBlock","src":"1326:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:31","nodeType":"YulIdentifier","src":"1328:77:31"},"nativeSrc":"1328:79:31","nodeType":"YulFunctionCall","src":"1328:79:31"},"nativeSrc":"1328:79:31","nodeType":"YulExpressionStatement","src":"1328:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:31","nodeType":"YulIdentifier","src":"1301:7:31"},{"name":"headStart","nativeSrc":"1310:9:31","nodeType":"YulIdentifier","src":"1310:9:31"}],"functionName":{"name":"sub","nativeSrc":"1297:3:31","nodeType":"YulIdentifier","src":"1297:3:31"},"nativeSrc":"1297:23:31","nodeType":"YulFunctionCall","src":"1297:23:31"},{"kind":"number","nativeSrc":"1322:2:31","nodeType":"YulLiteral","src":"1322:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:31","nodeType":"YulIdentifier","src":"1293:3:31"},"nativeSrc":"1293:32:31","nodeType":"YulFunctionCall","src":"1293:32:31"},"nativeSrc":"1290:119:31","nodeType":"YulIf","src":"1290:119:31"},{"nativeSrc":"1419:117:31","nodeType":"YulBlock","src":"1419:117:31","statements":[{"nativeSrc":"1434:15:31","nodeType":"YulVariableDeclaration","src":"1434:15:31","value":{"kind":"number","nativeSrc":"1448:1:31","nodeType":"YulLiteral","src":"1448:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:31","nodeType":"YulTypedName","src":"1438:6:31","type":""}]},{"nativeSrc":"1463:63:31","nodeType":"YulAssignment","src":"1463:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:31","nodeType":"YulIdentifier","src":"1498:9:31"},{"name":"offset","nativeSrc":"1509:6:31","nodeType":"YulIdentifier","src":"1509:6:31"}],"functionName":{"name":"add","nativeSrc":"1494:3:31","nodeType":"YulIdentifier","src":"1494:3:31"},"nativeSrc":"1494:22:31","nodeType":"YulFunctionCall","src":"1494:22:31"},{"name":"dataEnd","nativeSrc":"1518:7:31","nodeType":"YulIdentifier","src":"1518:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1473:20:31","nodeType":"YulIdentifier","src":"1473:20:31"},"nativeSrc":"1473:53:31","nodeType":"YulFunctionCall","src":"1473:53:31"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:31","nodeType":"YulIdentifier","src":"1463:6:31"}]}]},{"nativeSrc":"1546:118:31","nodeType":"YulBlock","src":"1546:118:31","statements":[{"nativeSrc":"1561:16:31","nodeType":"YulVariableDeclaration","src":"1561:16:31","value":{"kind":"number","nativeSrc":"1575:2:31","nodeType":"YulLiteral","src":"1575:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:31","nodeType":"YulTypedName","src":"1565:6:31","type":""}]},{"nativeSrc":"1591:63:31","nodeType":"YulAssignment","src":"1591:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:31","nodeType":"YulIdentifier","src":"1626:9:31"},{"name":"offset","nativeSrc":"1637:6:31","nodeType":"YulIdentifier","src":"1637:6:31"}],"functionName":{"name":"add","nativeSrc":"1622:3:31","nodeType":"YulIdentifier","src":"1622:3:31"},"nativeSrc":"1622:22:31","nodeType":"YulFunctionCall","src":"1622:22:31"},{"name":"dataEnd","nativeSrc":"1646:7:31","nodeType":"YulIdentifier","src":"1646:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1601:20:31","nodeType":"YulIdentifier","src":"1601:20:31"},"nativeSrc":"1601:53:31","nodeType":"YulFunctionCall","src":"1601:53:31"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:31","nodeType":"YulIdentifier","src":"1591:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1197:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:31","nodeType":"YulTypedName","src":"1242:9:31","type":""},{"name":"dataEnd","nativeSrc":"1253:7:31","nodeType":"YulTypedName","src":"1253:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:31","nodeType":"YulTypedName","src":"1265:6:31","type":""},{"name":"value1","nativeSrc":"1273:6:31","nodeType":"YulTypedName","src":"1273:6:31","type":""}],"src":"1197:474:31"},{"body":{"nativeSrc":"1742:53:31","nodeType":"YulBlock","src":"1742:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1759:3:31","nodeType":"YulIdentifier","src":"1759:3:31"},{"arguments":[{"name":"value","nativeSrc":"1782:5:31","nodeType":"YulIdentifier","src":"1782:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1764:17:31","nodeType":"YulIdentifier","src":"1764:17:31"},"nativeSrc":"1764:24:31","nodeType":"YulFunctionCall","src":"1764:24:31"}],"functionName":{"name":"mstore","nativeSrc":"1752:6:31","nodeType":"YulIdentifier","src":"1752:6:31"},"nativeSrc":"1752:37:31","nodeType":"YulFunctionCall","src":"1752:37:31"},"nativeSrc":"1752:37:31","nodeType":"YulExpressionStatement","src":"1752:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1677:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1730:5:31","nodeType":"YulTypedName","src":"1730:5:31","type":""},{"name":"pos","nativeSrc":"1737:3:31","nodeType":"YulTypedName","src":"1737:3:31","type":""}],"src":"1677:118:31"},{"body":{"nativeSrc":"1899:124:31","nodeType":"YulBlock","src":"1899:124:31","statements":[{"nativeSrc":"1909:26:31","nodeType":"YulAssignment","src":"1909:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"1921:9:31","nodeType":"YulIdentifier","src":"1921:9:31"},{"kind":"number","nativeSrc":"1932:2:31","nodeType":"YulLiteral","src":"1932:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1917:3:31","nodeType":"YulIdentifier","src":"1917:3:31"},"nativeSrc":"1917:18:31","nodeType":"YulFunctionCall","src":"1917:18:31"},"variableNames":[{"name":"tail","nativeSrc":"1909:4:31","nodeType":"YulIdentifier","src":"1909:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1989:6:31","nodeType":"YulIdentifier","src":"1989:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"2002:9:31","nodeType":"YulIdentifier","src":"2002:9:31"},{"kind":"number","nativeSrc":"2013:1:31","nodeType":"YulLiteral","src":"2013:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1998:3:31","nodeType":"YulIdentifier","src":"1998:3:31"},"nativeSrc":"1998:17:31","nodeType":"YulFunctionCall","src":"1998:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1945:43:31","nodeType":"YulIdentifier","src":"1945:43:31"},"nativeSrc":"1945:71:31","nodeType":"YulFunctionCall","src":"1945:71:31"},"nativeSrc":"1945:71:31","nodeType":"YulExpressionStatement","src":"1945:71:31"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1801:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1871:9:31","nodeType":"YulTypedName","src":"1871:9:31","type":""},{"name":"value0","nativeSrc":"1883:6:31","nodeType":"YulTypedName","src":"1883:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1894:4:31","nodeType":"YulTypedName","src":"1894:4:31","type":""}],"src":"1801:222:31"},{"body":{"nativeSrc":"2073:105:31","nodeType":"YulBlock","src":"2073:105:31","statements":[{"nativeSrc":"2083:89:31","nodeType":"YulAssignment","src":"2083:89:31","value":{"arguments":[{"name":"value","nativeSrc":"2098:5:31","nodeType":"YulIdentifier","src":"2098:5:31"},{"kind":"number","nativeSrc":"2105:66:31","nodeType":"YulLiteral","src":"2105:66:31","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"2094:3:31","nodeType":"YulIdentifier","src":"2094:3:31"},"nativeSrc":"2094:78:31","nodeType":"YulFunctionCall","src":"2094:78:31"},"variableNames":[{"name":"cleaned","nativeSrc":"2083:7:31","nodeType":"YulIdentifier","src":"2083:7:31"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"2029:149:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2055:5:31","nodeType":"YulTypedName","src":"2055:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2065:7:31","nodeType":"YulTypedName","src":"2065:7:31","type":""}],"src":"2029:149:31"},{"body":{"nativeSrc":"2226:78:31","nodeType":"YulBlock","src":"2226:78:31","statements":[{"body":{"nativeSrc":"2282:16:31","nodeType":"YulBlock","src":"2282:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2291:1:31","nodeType":"YulLiteral","src":"2291:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"2294:1:31","nodeType":"YulLiteral","src":"2294:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2284:6:31","nodeType":"YulIdentifier","src":"2284:6:31"},"nativeSrc":"2284:12:31","nodeType":"YulFunctionCall","src":"2284:12:31"},"nativeSrc":"2284:12:31","nodeType":"YulExpressionStatement","src":"2284:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2249:5:31","nodeType":"YulIdentifier","src":"2249:5:31"},{"arguments":[{"name":"value","nativeSrc":"2273:5:31","nodeType":"YulIdentifier","src":"2273:5:31"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"2256:16:31","nodeType":"YulIdentifier","src":"2256:16:31"},"nativeSrc":"2256:23:31","nodeType":"YulFunctionCall","src":"2256:23:31"}],"functionName":{"name":"eq","nativeSrc":"2246:2:31","nodeType":"YulIdentifier","src":"2246:2:31"},"nativeSrc":"2246:34:31","nodeType":"YulFunctionCall","src":"2246:34:31"}],"functionName":{"name":"iszero","nativeSrc":"2239:6:31","nodeType":"YulIdentifier","src":"2239:6:31"},"nativeSrc":"2239:42:31","nodeType":"YulFunctionCall","src":"2239:42:31"},"nativeSrc":"2236:62:31","nodeType":"YulIf","src":"2236:62:31"}]},"name":"validator_revert_t_bytes4","nativeSrc":"2184:120:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2219:5:31","nodeType":"YulTypedName","src":"2219:5:31","type":""}],"src":"2184:120:31"},{"body":{"nativeSrc":"2361:86:31","nodeType":"YulBlock","src":"2361:86:31","statements":[{"nativeSrc":"2371:29:31","nodeType":"YulAssignment","src":"2371:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"2393:6:31","nodeType":"YulIdentifier","src":"2393:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"2380:12:31","nodeType":"YulIdentifier","src":"2380:12:31"},"nativeSrc":"2380:20:31","nodeType":"YulFunctionCall","src":"2380:20:31"},"variableNames":[{"name":"value","nativeSrc":"2371:5:31","nodeType":"YulIdentifier","src":"2371:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2435:5:31","nodeType":"YulIdentifier","src":"2435:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"2409:25:31","nodeType":"YulIdentifier","src":"2409:25:31"},"nativeSrc":"2409:32:31","nodeType":"YulFunctionCall","src":"2409:32:31"},"nativeSrc":"2409:32:31","nodeType":"YulExpressionStatement","src":"2409:32:31"}]},"name":"abi_decode_t_bytes4","nativeSrc":"2310:137:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2339:6:31","nodeType":"YulTypedName","src":"2339:6:31","type":""},{"name":"end","nativeSrc":"2347:3:31","nodeType":"YulTypedName","src":"2347:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2355:5:31","nodeType":"YulTypedName","src":"2355:5:31","type":""}],"src":"2310:137:31"},{"body":{"nativeSrc":"2518:262:31","nodeType":"YulBlock","src":"2518:262:31","statements":[{"body":{"nativeSrc":"2564:83:31","nodeType":"YulBlock","src":"2564:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2566:77:31","nodeType":"YulIdentifier","src":"2566:77:31"},"nativeSrc":"2566:79:31","nodeType":"YulFunctionCall","src":"2566:79:31"},"nativeSrc":"2566:79:31","nodeType":"YulExpressionStatement","src":"2566:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2539:7:31","nodeType":"YulIdentifier","src":"2539:7:31"},{"name":"headStart","nativeSrc":"2548:9:31","nodeType":"YulIdentifier","src":"2548:9:31"}],"functionName":{"name":"sub","nativeSrc":"2535:3:31","nodeType":"YulIdentifier","src":"2535:3:31"},"nativeSrc":"2535:23:31","nodeType":"YulFunctionCall","src":"2535:23:31"},{"kind":"number","nativeSrc":"2560:2:31","nodeType":"YulLiteral","src":"2560:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2531:3:31","nodeType":"YulIdentifier","src":"2531:3:31"},"nativeSrc":"2531:32:31","nodeType":"YulFunctionCall","src":"2531:32:31"},"nativeSrc":"2528:119:31","nodeType":"YulIf","src":"2528:119:31"},{"nativeSrc":"2657:116:31","nodeType":"YulBlock","src":"2657:116:31","statements":[{"nativeSrc":"2672:15:31","nodeType":"YulVariableDeclaration","src":"2672:15:31","value":{"kind":"number","nativeSrc":"2686:1:31","nodeType":"YulLiteral","src":"2686:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2676:6:31","nodeType":"YulTypedName","src":"2676:6:31","type":""}]},{"nativeSrc":"2701:62:31","nodeType":"YulAssignment","src":"2701:62:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2735:9:31","nodeType":"YulIdentifier","src":"2735:9:31"},{"name":"offset","nativeSrc":"2746:6:31","nodeType":"YulIdentifier","src":"2746:6:31"}],"functionName":{"name":"add","nativeSrc":"2731:3:31","nodeType":"YulIdentifier","src":"2731:3:31"},"nativeSrc":"2731:22:31","nodeType":"YulFunctionCall","src":"2731:22:31"},{"name":"dataEnd","nativeSrc":"2755:7:31","nodeType":"YulIdentifier","src":"2755:7:31"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"2711:19:31","nodeType":"YulIdentifier","src":"2711:19:31"},"nativeSrc":"2711:52:31","nodeType":"YulFunctionCall","src":"2711:52:31"},"variableNames":[{"name":"value0","nativeSrc":"2701:6:31","nodeType":"YulIdentifier","src":"2701:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"2453:327:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2488:9:31","nodeType":"YulTypedName","src":"2488:9:31","type":""},{"name":"dataEnd","nativeSrc":"2499:7:31","nodeType":"YulTypedName","src":"2499:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2511:6:31","nodeType":"YulTypedName","src":"2511:6:31","type":""}],"src":"2453:327:31"},{"body":{"nativeSrc":"2828:48:31","nodeType":"YulBlock","src":"2828:48:31","statements":[{"nativeSrc":"2838:32:31","nodeType":"YulAssignment","src":"2838:32:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2863:5:31","nodeType":"YulIdentifier","src":"2863:5:31"}],"functionName":{"name":"iszero","nativeSrc":"2856:6:31","nodeType":"YulIdentifier","src":"2856:6:31"},"nativeSrc":"2856:13:31","nodeType":"YulFunctionCall","src":"2856:13:31"}],"functionName":{"name":"iszero","nativeSrc":"2849:6:31","nodeType":"YulIdentifier","src":"2849:6:31"},"nativeSrc":"2849:21:31","nodeType":"YulFunctionCall","src":"2849:21:31"},"variableNames":[{"name":"cleaned","nativeSrc":"2838:7:31","nodeType":"YulIdentifier","src":"2838:7:31"}]}]},"name":"cleanup_t_bool","nativeSrc":"2786:90:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2810:5:31","nodeType":"YulTypedName","src":"2810:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2820:7:31","nodeType":"YulTypedName","src":"2820:7:31","type":""}],"src":"2786:90:31"},{"body":{"nativeSrc":"2941:50:31","nodeType":"YulBlock","src":"2941:50:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2958:3:31","nodeType":"YulIdentifier","src":"2958:3:31"},{"arguments":[{"name":"value","nativeSrc":"2978:5:31","nodeType":"YulIdentifier","src":"2978:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"2963:14:31","nodeType":"YulIdentifier","src":"2963:14:31"},"nativeSrc":"2963:21:31","nodeType":"YulFunctionCall","src":"2963:21:31"}],"functionName":{"name":"mstore","nativeSrc":"2951:6:31","nodeType":"YulIdentifier","src":"2951:6:31"},"nativeSrc":"2951:34:31","nodeType":"YulFunctionCall","src":"2951:34:31"},"nativeSrc":"2951:34:31","nodeType":"YulExpressionStatement","src":"2951:34:31"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"2882:109:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2929:5:31","nodeType":"YulTypedName","src":"2929:5:31","type":""},{"name":"pos","nativeSrc":"2936:3:31","nodeType":"YulTypedName","src":"2936:3:31","type":""}],"src":"2882:109:31"},{"body":{"nativeSrc":"3089:118:31","nodeType":"YulBlock","src":"3089:118:31","statements":[{"nativeSrc":"3099:26:31","nodeType":"YulAssignment","src":"3099:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"3111:9:31","nodeType":"YulIdentifier","src":"3111:9:31"},{"kind":"number","nativeSrc":"3122:2:31","nodeType":"YulLiteral","src":"3122:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3107:3:31","nodeType":"YulIdentifier","src":"3107:3:31"},"nativeSrc":"3107:18:31","nodeType":"YulFunctionCall","src":"3107:18:31"},"variableNames":[{"name":"tail","nativeSrc":"3099:4:31","nodeType":"YulIdentifier","src":"3099:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3173:6:31","nodeType":"YulIdentifier","src":"3173:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"3186:9:31","nodeType":"YulIdentifier","src":"3186:9:31"},{"kind":"number","nativeSrc":"3197:1:31","nodeType":"YulLiteral","src":"3197:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3182:3:31","nodeType":"YulIdentifier","src":"3182:3:31"},"nativeSrc":"3182:17:31","nodeType":"YulFunctionCall","src":"3182:17:31"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3135:37:31","nodeType":"YulIdentifier","src":"3135:37:31"},"nativeSrc":"3135:65:31","nodeType":"YulFunctionCall","src":"3135:65:31"},"nativeSrc":"3135:65:31","nodeType":"YulExpressionStatement","src":"3135:65:31"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"2997:210:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3061:9:31","nodeType":"YulTypedName","src":"3061:9:31","type":""},{"name":"value0","nativeSrc":"3073:6:31","nodeType":"YulTypedName","src":"3073:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3084:4:31","nodeType":"YulTypedName","src":"3084:4:31","type":""}],"src":"2997:210:31"},{"body":{"nativeSrc":"3279:263:31","nodeType":"YulBlock","src":"3279:263:31","statements":[{"body":{"nativeSrc":"3325:83:31","nodeType":"YulBlock","src":"3325:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3327:77:31","nodeType":"YulIdentifier","src":"3327:77:31"},"nativeSrc":"3327:79:31","nodeType":"YulFunctionCall","src":"3327:79:31"},"nativeSrc":"3327:79:31","nodeType":"YulExpressionStatement","src":"3327:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3300:7:31","nodeType":"YulIdentifier","src":"3300:7:31"},{"name":"headStart","nativeSrc":"3309:9:31","nodeType":"YulIdentifier","src":"3309:9:31"}],"functionName":{"name":"sub","nativeSrc":"3296:3:31","nodeType":"YulIdentifier","src":"3296:3:31"},"nativeSrc":"3296:23:31","nodeType":"YulFunctionCall","src":"3296:23:31"},{"kind":"number","nativeSrc":"3321:2:31","nodeType":"YulLiteral","src":"3321:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3292:3:31","nodeType":"YulIdentifier","src":"3292:3:31"},"nativeSrc":"3292:32:31","nodeType":"YulFunctionCall","src":"3292:32:31"},"nativeSrc":"3289:119:31","nodeType":"YulIf","src":"3289:119:31"},{"nativeSrc":"3418:117:31","nodeType":"YulBlock","src":"3418:117:31","statements":[{"nativeSrc":"3433:15:31","nodeType":"YulVariableDeclaration","src":"3433:15:31","value":{"kind":"number","nativeSrc":"3447:1:31","nodeType":"YulLiteral","src":"3447:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3437:6:31","nodeType":"YulTypedName","src":"3437:6:31","type":""}]},{"nativeSrc":"3462:63:31","nodeType":"YulAssignment","src":"3462:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3497:9:31","nodeType":"YulIdentifier","src":"3497:9:31"},{"name":"offset","nativeSrc":"3508:6:31","nodeType":"YulIdentifier","src":"3508:6:31"}],"functionName":{"name":"add","nativeSrc":"3493:3:31","nodeType":"YulIdentifier","src":"3493:3:31"},"nativeSrc":"3493:22:31","nodeType":"YulFunctionCall","src":"3493:22:31"},{"name":"dataEnd","nativeSrc":"3517:7:31","nodeType":"YulIdentifier","src":"3517:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3472:20:31","nodeType":"YulIdentifier","src":"3472:20:31"},"nativeSrc":"3472:53:31","nodeType":"YulFunctionCall","src":"3472:53:31"},"variableNames":[{"name":"value0","nativeSrc":"3462:6:31","nodeType":"YulIdentifier","src":"3462:6:31"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3213:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3249:9:31","nodeType":"YulTypedName","src":"3249:9:31","type":""},{"name":"dataEnd","nativeSrc":"3260:7:31","nodeType":"YulTypedName","src":"3260:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3272:6:31","nodeType":"YulTypedName","src":"3272:6:31","type":""}],"src":"3213:329:31"},{"body":{"nativeSrc":"3607:40:31","nodeType":"YulBlock","src":"3607:40:31","statements":[{"nativeSrc":"3618:22:31","nodeType":"YulAssignment","src":"3618:22:31","value":{"arguments":[{"name":"value","nativeSrc":"3634:5:31","nodeType":"YulIdentifier","src":"3634:5:31"}],"functionName":{"name":"mload","nativeSrc":"3628:5:31","nodeType":"YulIdentifier","src":"3628:5:31"},"nativeSrc":"3628:12:31","nodeType":"YulFunctionCall","src":"3628:12:31"},"variableNames":[{"name":"length","nativeSrc":"3618:6:31","nodeType":"YulIdentifier","src":"3618:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"3548:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3590:5:31","nodeType":"YulTypedName","src":"3590:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3600:6:31","nodeType":"YulTypedName","src":"3600:6:31","type":""}],"src":"3548:99:31"},{"body":{"nativeSrc":"3749:73:31","nodeType":"YulBlock","src":"3749:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3766:3:31","nodeType":"YulIdentifier","src":"3766:3:31"},{"name":"length","nativeSrc":"3771:6:31","nodeType":"YulIdentifier","src":"3771:6:31"}],"functionName":{"name":"mstore","nativeSrc":"3759:6:31","nodeType":"YulIdentifier","src":"3759:6:31"},"nativeSrc":"3759:19:31","nodeType":"YulFunctionCall","src":"3759:19:31"},"nativeSrc":"3759:19:31","nodeType":"YulExpressionStatement","src":"3759:19:31"},{"nativeSrc":"3787:29:31","nodeType":"YulAssignment","src":"3787:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"3806:3:31","nodeType":"YulIdentifier","src":"3806:3:31"},{"kind":"number","nativeSrc":"3811:4:31","nodeType":"YulLiteral","src":"3811:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3802:3:31","nodeType":"YulIdentifier","src":"3802:3:31"},"nativeSrc":"3802:14:31","nodeType":"YulFunctionCall","src":"3802:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"3787:11:31","nodeType":"YulIdentifier","src":"3787:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3653:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3721:3:31","nodeType":"YulTypedName","src":"3721:3:31","type":""},{"name":"length","nativeSrc":"3726:6:31","nodeType":"YulTypedName","src":"3726:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3737:11:31","nodeType":"YulTypedName","src":"3737:11:31","type":""}],"src":"3653:169:31"},{"body":{"nativeSrc":"3890:184:31","nodeType":"YulBlock","src":"3890:184:31","statements":[{"nativeSrc":"3900:10:31","nodeType":"YulVariableDeclaration","src":"3900:10:31","value":{"kind":"number","nativeSrc":"3909:1:31","nodeType":"YulLiteral","src":"3909:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3904:1:31","nodeType":"YulTypedName","src":"3904:1:31","type":""}]},{"body":{"nativeSrc":"3969:63:31","nodeType":"YulBlock","src":"3969:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3994:3:31","nodeType":"YulIdentifier","src":"3994:3:31"},{"name":"i","nativeSrc":"3999:1:31","nodeType":"YulIdentifier","src":"3999:1:31"}],"functionName":{"name":"add","nativeSrc":"3990:3:31","nodeType":"YulIdentifier","src":"3990:3:31"},"nativeSrc":"3990:11:31","nodeType":"YulFunctionCall","src":"3990:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4013:3:31","nodeType":"YulIdentifier","src":"4013:3:31"},{"name":"i","nativeSrc":"4018:1:31","nodeType":"YulIdentifier","src":"4018:1:31"}],"functionName":{"name":"add","nativeSrc":"4009:3:31","nodeType":"YulIdentifier","src":"4009:3:31"},"nativeSrc":"4009:11:31","nodeType":"YulFunctionCall","src":"4009:11:31"}],"functionName":{"name":"mload","nativeSrc":"4003:5:31","nodeType":"YulIdentifier","src":"4003:5:31"},"nativeSrc":"4003:18:31","nodeType":"YulFunctionCall","src":"4003:18:31"}],"functionName":{"name":"mstore","nativeSrc":"3983:6:31","nodeType":"YulIdentifier","src":"3983:6:31"},"nativeSrc":"3983:39:31","nodeType":"YulFunctionCall","src":"3983:39:31"},"nativeSrc":"3983:39:31","nodeType":"YulExpressionStatement","src":"3983:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3930:1:31","nodeType":"YulIdentifier","src":"3930:1:31"},{"name":"length","nativeSrc":"3933:6:31","nodeType":"YulIdentifier","src":"3933:6:31"}],"functionName":{"name":"lt","nativeSrc":"3927:2:31","nodeType":"YulIdentifier","src":"3927:2:31"},"nativeSrc":"3927:13:31","nodeType":"YulFunctionCall","src":"3927:13:31"},"nativeSrc":"3919:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"3941:19:31","nodeType":"YulBlock","src":"3941:19:31","statements":[{"nativeSrc":"3943:15:31","nodeType":"YulAssignment","src":"3943:15:31","value":{"arguments":[{"name":"i","nativeSrc":"3952:1:31","nodeType":"YulIdentifier","src":"3952:1:31"},{"kind":"number","nativeSrc":"3955:2:31","nodeType":"YulLiteral","src":"3955:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3948:3:31","nodeType":"YulIdentifier","src":"3948:3:31"},"nativeSrc":"3948:10:31","nodeType":"YulFunctionCall","src":"3948:10:31"},"variableNames":[{"name":"i","nativeSrc":"3943:1:31","nodeType":"YulIdentifier","src":"3943:1:31"}]}]},"pre":{"nativeSrc":"3923:3:31","nodeType":"YulBlock","src":"3923:3:31","statements":[]},"src":"3919:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"4052:3:31","nodeType":"YulIdentifier","src":"4052:3:31"},{"name":"length","nativeSrc":"4057:6:31","nodeType":"YulIdentifier","src":"4057:6:31"}],"functionName":{"name":"add","nativeSrc":"4048:3:31","nodeType":"YulIdentifier","src":"4048:3:31"},"nativeSrc":"4048:16:31","nodeType":"YulFunctionCall","src":"4048:16:31"},{"kind":"number","nativeSrc":"4066:1:31","nodeType":"YulLiteral","src":"4066:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"4041:6:31","nodeType":"YulIdentifier","src":"4041:6:31"},"nativeSrc":"4041:27:31","nodeType":"YulFunctionCall","src":"4041:27:31"},"nativeSrc":"4041:27:31","nodeType":"YulExpressionStatement","src":"4041:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3828:246:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3872:3:31","nodeType":"YulTypedName","src":"3872:3:31","type":""},{"name":"dst","nativeSrc":"3877:3:31","nodeType":"YulTypedName","src":"3877:3:31","type":""},{"name":"length","nativeSrc":"3882:6:31","nodeType":"YulTypedName","src":"3882:6:31","type":""}],"src":"3828:246:31"},{"body":{"nativeSrc":"4128:54:31","nodeType":"YulBlock","src":"4128:54:31","statements":[{"nativeSrc":"4138:38:31","nodeType":"YulAssignment","src":"4138:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4156:5:31","nodeType":"YulIdentifier","src":"4156:5:31"},{"kind":"number","nativeSrc":"4163:2:31","nodeType":"YulLiteral","src":"4163:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"4152:3:31","nodeType":"YulIdentifier","src":"4152:3:31"},"nativeSrc":"4152:14:31","nodeType":"YulFunctionCall","src":"4152:14:31"},{"arguments":[{"kind":"number","nativeSrc":"4172:2:31","nodeType":"YulLiteral","src":"4172:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"4168:3:31","nodeType":"YulIdentifier","src":"4168:3:31"},"nativeSrc":"4168:7:31","nodeType":"YulFunctionCall","src":"4168:7:31"}],"functionName":{"name":"and","nativeSrc":"4148:3:31","nodeType":"YulIdentifier","src":"4148:3:31"},"nativeSrc":"4148:28:31","nodeType":"YulFunctionCall","src":"4148:28:31"},"variableNames":[{"name":"result","nativeSrc":"4138:6:31","nodeType":"YulIdentifier","src":"4138:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"4080:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4111:5:31","nodeType":"YulTypedName","src":"4111:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"4121:6:31","nodeType":"YulTypedName","src":"4121:6:31","type":""}],"src":"4080:102:31"},{"body":{"nativeSrc":"4280:285:31","nodeType":"YulBlock","src":"4280:285:31","statements":[{"nativeSrc":"4290:53:31","nodeType":"YulVariableDeclaration","src":"4290:53:31","value":{"arguments":[{"name":"value","nativeSrc":"4337:5:31","nodeType":"YulIdentifier","src":"4337:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"4304:32:31","nodeType":"YulIdentifier","src":"4304:32:31"},"nativeSrc":"4304:39:31","nodeType":"YulFunctionCall","src":"4304:39:31"},"variables":[{"name":"length","nativeSrc":"4294:6:31","nodeType":"YulTypedName","src":"4294:6:31","type":""}]},{"nativeSrc":"4352:78:31","nodeType":"YulAssignment","src":"4352:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"4418:3:31","nodeType":"YulIdentifier","src":"4418:3:31"},{"name":"length","nativeSrc":"4423:6:31","nodeType":"YulIdentifier","src":"4423:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4359:58:31","nodeType":"YulIdentifier","src":"4359:58:31"},"nativeSrc":"4359:71:31","nodeType":"YulFunctionCall","src":"4359:71:31"},"variableNames":[{"name":"pos","nativeSrc":"4352:3:31","nodeType":"YulIdentifier","src":"4352:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4478:5:31","nodeType":"YulIdentifier","src":"4478:5:31"},{"kind":"number","nativeSrc":"4485:4:31","nodeType":"YulLiteral","src":"4485:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4474:3:31","nodeType":"YulIdentifier","src":"4474:3:31"},"nativeSrc":"4474:16:31","nodeType":"YulFunctionCall","src":"4474:16:31"},{"name":"pos","nativeSrc":"4492:3:31","nodeType":"YulIdentifier","src":"4492:3:31"},{"name":"length","nativeSrc":"4497:6:31","nodeType":"YulIdentifier","src":"4497:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"4439:34:31","nodeType":"YulIdentifier","src":"4439:34:31"},"nativeSrc":"4439:65:31","nodeType":"YulFunctionCall","src":"4439:65:31"},"nativeSrc":"4439:65:31","nodeType":"YulExpressionStatement","src":"4439:65:31"},{"nativeSrc":"4513:46:31","nodeType":"YulAssignment","src":"4513:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"4524:3:31","nodeType":"YulIdentifier","src":"4524:3:31"},{"arguments":[{"name":"length","nativeSrc":"4551:6:31","nodeType":"YulIdentifier","src":"4551:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"4529:21:31","nodeType":"YulIdentifier","src":"4529:21:31"},"nativeSrc":"4529:29:31","nodeType":"YulFunctionCall","src":"4529:29:31"}],"functionName":{"name":"add","nativeSrc":"4520:3:31","nodeType":"YulIdentifier","src":"4520:3:31"},"nativeSrc":"4520:39:31","nodeType":"YulFunctionCall","src":"4520:39:31"},"variableNames":[{"name":"end","nativeSrc":"4513:3:31","nodeType":"YulIdentifier","src":"4513:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"4188:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4261:5:31","nodeType":"YulTypedName","src":"4261:5:31","type":""},{"name":"pos","nativeSrc":"4268:3:31","nodeType":"YulTypedName","src":"4268:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"4276:3:31","nodeType":"YulTypedName","src":"4276:3:31","type":""}],"src":"4188:377:31"},{"body":{"nativeSrc":"4689:195:31","nodeType":"YulBlock","src":"4689:195:31","statements":[{"nativeSrc":"4699:26:31","nodeType":"YulAssignment","src":"4699:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"4711:9:31","nodeType":"YulIdentifier","src":"4711:9:31"},{"kind":"number","nativeSrc":"4722:2:31","nodeType":"YulLiteral","src":"4722:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4707:3:31","nodeType":"YulIdentifier","src":"4707:3:31"},"nativeSrc":"4707:18:31","nodeType":"YulFunctionCall","src":"4707:18:31"},"variableNames":[{"name":"tail","nativeSrc":"4699:4:31","nodeType":"YulIdentifier","src":"4699:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4746:9:31","nodeType":"YulIdentifier","src":"4746:9:31"},{"kind":"number","nativeSrc":"4757:1:31","nodeType":"YulLiteral","src":"4757:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4742:3:31","nodeType":"YulIdentifier","src":"4742:3:31"},"nativeSrc":"4742:17:31","nodeType":"YulFunctionCall","src":"4742:17:31"},{"arguments":[{"name":"tail","nativeSrc":"4765:4:31","nodeType":"YulIdentifier","src":"4765:4:31"},{"name":"headStart","nativeSrc":"4771:9:31","nodeType":"YulIdentifier","src":"4771:9:31"}],"functionName":{"name":"sub","nativeSrc":"4761:3:31","nodeType":"YulIdentifier","src":"4761:3:31"},"nativeSrc":"4761:20:31","nodeType":"YulFunctionCall","src":"4761:20:31"}],"functionName":{"name":"mstore","nativeSrc":"4735:6:31","nodeType":"YulIdentifier","src":"4735:6:31"},"nativeSrc":"4735:47:31","nodeType":"YulFunctionCall","src":"4735:47:31"},"nativeSrc":"4735:47:31","nodeType":"YulExpressionStatement","src":"4735:47:31"},{"nativeSrc":"4791:86:31","nodeType":"YulAssignment","src":"4791:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"4863:6:31","nodeType":"YulIdentifier","src":"4863:6:31"},{"name":"tail","nativeSrc":"4872:4:31","nodeType":"YulIdentifier","src":"4872:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"4799:63:31","nodeType":"YulIdentifier","src":"4799:63:31"},"nativeSrc":"4799:78:31","nodeType":"YulFunctionCall","src":"4799:78:31"},"variableNames":[{"name":"tail","nativeSrc":"4791:4:31","nodeType":"YulIdentifier","src":"4791:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4571:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4661:9:31","nodeType":"YulTypedName","src":"4661:9:31","type":""},{"name":"value0","nativeSrc":"4673:6:31","nodeType":"YulTypedName","src":"4673:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4684:4:31","nodeType":"YulTypedName","src":"4684:4:31","type":""}],"src":"4571:313:31"},{"body":{"nativeSrc":"4979:28:31","nodeType":"YulBlock","src":"4979:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4996:1:31","nodeType":"YulLiteral","src":"4996:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"4999:1:31","nodeType":"YulLiteral","src":"4999:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4989:6:31","nodeType":"YulIdentifier","src":"4989:6:31"},"nativeSrc":"4989:12:31","nodeType":"YulFunctionCall","src":"4989:12:31"},"nativeSrc":"4989:12:31","nodeType":"YulExpressionStatement","src":"4989:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"4890:117:31","nodeType":"YulFunctionDefinition","src":"4890:117:31"},{"body":{"nativeSrc":"5041:152:31","nodeType":"YulBlock","src":"5041:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5058:1:31","nodeType":"YulLiteral","src":"5058:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5061:77:31","nodeType":"YulLiteral","src":"5061:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5051:6:31","nodeType":"YulIdentifier","src":"5051:6:31"},"nativeSrc":"5051:88:31","nodeType":"YulFunctionCall","src":"5051:88:31"},"nativeSrc":"5051:88:31","nodeType":"YulExpressionStatement","src":"5051:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5155:1:31","nodeType":"YulLiteral","src":"5155:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"5158:4:31","nodeType":"YulLiteral","src":"5158:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"5148:6:31","nodeType":"YulIdentifier","src":"5148:6:31"},"nativeSrc":"5148:15:31","nodeType":"YulFunctionCall","src":"5148:15:31"},"nativeSrc":"5148:15:31","nodeType":"YulExpressionStatement","src":"5148:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5179:1:31","nodeType":"YulLiteral","src":"5179:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"5182:4:31","nodeType":"YulLiteral","src":"5182:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5172:6:31","nodeType":"YulIdentifier","src":"5172:6:31"},"nativeSrc":"5172:15:31","nodeType":"YulFunctionCall","src":"5172:15:31"},"nativeSrc":"5172:15:31","nodeType":"YulExpressionStatement","src":"5172:15:31"}]},"name":"panic_error_0x41","nativeSrc":"5013:180:31","nodeType":"YulFunctionDefinition","src":"5013:180:31"},{"body":{"nativeSrc":"5242:238:31","nodeType":"YulBlock","src":"5242:238:31","statements":[{"nativeSrc":"5252:58:31","nodeType":"YulVariableDeclaration","src":"5252:58:31","value":{"arguments":[{"name":"memPtr","nativeSrc":"5274:6:31","nodeType":"YulIdentifier","src":"5274:6:31"},{"arguments":[{"name":"size","nativeSrc":"5304:4:31","nodeType":"YulIdentifier","src":"5304:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"5282:21:31","nodeType":"YulIdentifier","src":"5282:21:31"},"nativeSrc":"5282:27:31","nodeType":"YulFunctionCall","src":"5282:27:31"}],"functionName":{"name":"add","nativeSrc":"5270:3:31","nodeType":"YulIdentifier","src":"5270:3:31"},"nativeSrc":"5270:40:31","nodeType":"YulFunctionCall","src":"5270:40:31"},"variables":[{"name":"newFreePtr","nativeSrc":"5256:10:31","nodeType":"YulTypedName","src":"5256:10:31","type":""}]},{"body":{"nativeSrc":"5421:22:31","nodeType":"YulBlock","src":"5421:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5423:16:31","nodeType":"YulIdentifier","src":"5423:16:31"},"nativeSrc":"5423:18:31","nodeType":"YulFunctionCall","src":"5423:18:31"},"nativeSrc":"5423:18:31","nodeType":"YulExpressionStatement","src":"5423:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"5364:10:31","nodeType":"YulIdentifier","src":"5364:10:31"},{"kind":"number","nativeSrc":"5376:18:31","nodeType":"YulLiteral","src":"5376:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5361:2:31","nodeType":"YulIdentifier","src":"5361:2:31"},"nativeSrc":"5361:34:31","nodeType":"YulFunctionCall","src":"5361:34:31"},{"arguments":[{"name":"newFreePtr","nativeSrc":"5400:10:31","nodeType":"YulIdentifier","src":"5400:10:31"},{"name":"memPtr","nativeSrc":"5412:6:31","nodeType":"YulIdentifier","src":"5412:6:31"}],"functionName":{"name":"lt","nativeSrc":"5397:2:31","nodeType":"YulIdentifier","src":"5397:2:31"},"nativeSrc":"5397:22:31","nodeType":"YulFunctionCall","src":"5397:22:31"}],"functionName":{"name":"or","nativeSrc":"5358:2:31","nodeType":"YulIdentifier","src":"5358:2:31"},"nativeSrc":"5358:62:31","nodeType":"YulFunctionCall","src":"5358:62:31"},"nativeSrc":"5355:88:31","nodeType":"YulIf","src":"5355:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5459:2:31","nodeType":"YulLiteral","src":"5459:2:31","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"5463:10:31","nodeType":"YulIdentifier","src":"5463:10:31"}],"functionName":{"name":"mstore","nativeSrc":"5452:6:31","nodeType":"YulIdentifier","src":"5452:6:31"},"nativeSrc":"5452:22:31","nodeType":"YulFunctionCall","src":"5452:22:31"},"nativeSrc":"5452:22:31","nodeType":"YulExpressionStatement","src":"5452:22:31"}]},"name":"finalize_allocation","nativeSrc":"5199:281:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5228:6:31","nodeType":"YulTypedName","src":"5228:6:31","type":""},{"name":"size","nativeSrc":"5236:4:31","nodeType":"YulTypedName","src":"5236:4:31","type":""}],"src":"5199:281:31"},{"body":{"nativeSrc":"5527:88:31","nodeType":"YulBlock","src":"5527:88:31","statements":[{"nativeSrc":"5537:30:31","nodeType":"YulAssignment","src":"5537:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"5547:18:31","nodeType":"YulIdentifier","src":"5547:18:31"},"nativeSrc":"5547:20:31","nodeType":"YulFunctionCall","src":"5547:20:31"},"variableNames":[{"name":"memPtr","nativeSrc":"5537:6:31","nodeType":"YulIdentifier","src":"5537:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"5596:6:31","nodeType":"YulIdentifier","src":"5596:6:31"},{"name":"size","nativeSrc":"5604:4:31","nodeType":"YulIdentifier","src":"5604:4:31"}],"functionName":{"name":"finalize_allocation","nativeSrc":"5576:19:31","nodeType":"YulIdentifier","src":"5576:19:31"},"nativeSrc":"5576:33:31","nodeType":"YulFunctionCall","src":"5576:33:31"},"nativeSrc":"5576:33:31","nodeType":"YulExpressionStatement","src":"5576:33:31"}]},"name":"allocate_memory","nativeSrc":"5486:129:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"5511:4:31","nodeType":"YulTypedName","src":"5511:4:31","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"5520:6:31","nodeType":"YulTypedName","src":"5520:6:31","type":""}],"src":"5486:129:31"},{"body":{"nativeSrc":"5703:229:31","nodeType":"YulBlock","src":"5703:229:31","statements":[{"body":{"nativeSrc":"5808:22:31","nodeType":"YulBlock","src":"5808:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"5810:16:31","nodeType":"YulIdentifier","src":"5810:16:31"},"nativeSrc":"5810:18:31","nodeType":"YulFunctionCall","src":"5810:18:31"},"nativeSrc":"5810:18:31","nodeType":"YulExpressionStatement","src":"5810:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5780:6:31","nodeType":"YulIdentifier","src":"5780:6:31"},{"kind":"number","nativeSrc":"5788:18:31","nodeType":"YulLiteral","src":"5788:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5777:2:31","nodeType":"YulIdentifier","src":"5777:2:31"},"nativeSrc":"5777:30:31","nodeType":"YulFunctionCall","src":"5777:30:31"},"nativeSrc":"5774:56:31","nodeType":"YulIf","src":"5774:56:31"},{"nativeSrc":"5840:25:31","nodeType":"YulAssignment","src":"5840:25:31","value":{"arguments":[{"name":"length","nativeSrc":"5852:6:31","nodeType":"YulIdentifier","src":"5852:6:31"},{"kind":"number","nativeSrc":"5860:4:31","nodeType":"YulLiteral","src":"5860:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"5848:3:31","nodeType":"YulIdentifier","src":"5848:3:31"},"nativeSrc":"5848:17:31","nodeType":"YulFunctionCall","src":"5848:17:31"},"variableNames":[{"name":"size","nativeSrc":"5840:4:31","nodeType":"YulIdentifier","src":"5840:4:31"}]},{"nativeSrc":"5902:23:31","nodeType":"YulAssignment","src":"5902:23:31","value":{"arguments":[{"name":"size","nativeSrc":"5914:4:31","nodeType":"YulIdentifier","src":"5914:4:31"},{"kind":"number","nativeSrc":"5920:4:31","nodeType":"YulLiteral","src":"5920:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5910:3:31","nodeType":"YulIdentifier","src":"5910:3:31"},"nativeSrc":"5910:15:31","nodeType":"YulFunctionCall","src":"5910:15:31"},"variableNames":[{"name":"size","nativeSrc":"5902:4:31","nodeType":"YulIdentifier","src":"5902:4:31"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"5621:311:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"5687:6:31","nodeType":"YulTypedName","src":"5687:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"5698:4:31","nodeType":"YulTypedName","src":"5698:4:31","type":""}],"src":"5621:311:31"},{"body":{"nativeSrc":"6027:28:31","nodeType":"YulBlock","src":"6027:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6044:1:31","nodeType":"YulLiteral","src":"6044:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"6047:1:31","nodeType":"YulLiteral","src":"6047:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6037:6:31","nodeType":"YulIdentifier","src":"6037:6:31"},"nativeSrc":"6037:12:31","nodeType":"YulFunctionCall","src":"6037:12:31"},"nativeSrc":"6037:12:31","nodeType":"YulExpressionStatement","src":"6037:12:31"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5938:117:31","nodeType":"YulFunctionDefinition","src":"5938:117:31"},{"body":{"nativeSrc":"6180:608:31","nodeType":"YulBlock","src":"6180:608:31","statements":[{"nativeSrc":"6190:90:31","nodeType":"YulAssignment","src":"6190:90:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"6272:6:31","nodeType":"YulIdentifier","src":"6272:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6215:56:31","nodeType":"YulIdentifier","src":"6215:56:31"},"nativeSrc":"6215:64:31","nodeType":"YulFunctionCall","src":"6215:64:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"6199:15:31","nodeType":"YulIdentifier","src":"6199:15:31"},"nativeSrc":"6199:81:31","nodeType":"YulFunctionCall","src":"6199:81:31"},"variableNames":[{"name":"array","nativeSrc":"6190:5:31","nodeType":"YulIdentifier","src":"6190:5:31"}]},{"nativeSrc":"6289:16:31","nodeType":"YulVariableDeclaration","src":"6289:16:31","value":{"name":"array","nativeSrc":"6300:5:31","nodeType":"YulIdentifier","src":"6300:5:31"},"variables":[{"name":"dst","nativeSrc":"6293:3:31","nodeType":"YulTypedName","src":"6293:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"6322:5:31","nodeType":"YulIdentifier","src":"6322:5:31"},{"name":"length","nativeSrc":"6329:6:31","nodeType":"YulIdentifier","src":"6329:6:31"}],"functionName":{"name":"mstore","nativeSrc":"6315:6:31","nodeType":"YulIdentifier","src":"6315:6:31"},"nativeSrc":"6315:21:31","nodeType":"YulFunctionCall","src":"6315:21:31"},"nativeSrc":"6315:21:31","nodeType":"YulExpressionStatement","src":"6315:21:31"},{"nativeSrc":"6345:23:31","nodeType":"YulAssignment","src":"6345:23:31","value":{"arguments":[{"name":"array","nativeSrc":"6356:5:31","nodeType":"YulIdentifier","src":"6356:5:31"},{"kind":"number","nativeSrc":"6363:4:31","nodeType":"YulLiteral","src":"6363:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6352:3:31","nodeType":"YulIdentifier","src":"6352:3:31"},"nativeSrc":"6352:16:31","nodeType":"YulFunctionCall","src":"6352:16:31"},"variableNames":[{"name":"dst","nativeSrc":"6345:3:31","nodeType":"YulIdentifier","src":"6345:3:31"}]},{"nativeSrc":"6378:44:31","nodeType":"YulVariableDeclaration","src":"6378:44:31","value":{"arguments":[{"name":"offset","nativeSrc":"6396:6:31","nodeType":"YulIdentifier","src":"6396:6:31"},{"arguments":[{"name":"length","nativeSrc":"6408:6:31","nodeType":"YulIdentifier","src":"6408:6:31"},{"kind":"number","nativeSrc":"6416:4:31","nodeType":"YulLiteral","src":"6416:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"6404:3:31","nodeType":"YulIdentifier","src":"6404:3:31"},"nativeSrc":"6404:17:31","nodeType":"YulFunctionCall","src":"6404:17:31"}],"functionName":{"name":"add","nativeSrc":"6392:3:31","nodeType":"YulIdentifier","src":"6392:3:31"},"nativeSrc":"6392:30:31","nodeType":"YulFunctionCall","src":"6392:30:31"},"variables":[{"name":"srcEnd","nativeSrc":"6382:6:31","nodeType":"YulTypedName","src":"6382:6:31","type":""}]},{"body":{"nativeSrc":"6450:103:31","nodeType":"YulBlock","src":"6450:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"6464:77:31","nodeType":"YulIdentifier","src":"6464:77:31"},"nativeSrc":"6464:79:31","nodeType":"YulFunctionCall","src":"6464:79:31"},"nativeSrc":"6464:79:31","nodeType":"YulExpressionStatement","src":"6464:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"6437:6:31","nodeType":"YulIdentifier","src":"6437:6:31"},{"name":"end","nativeSrc":"6445:3:31","nodeType":"YulIdentifier","src":"6445:3:31"}],"functionName":{"name":"gt","nativeSrc":"6434:2:31","nodeType":"YulIdentifier","src":"6434:2:31"},"nativeSrc":"6434:15:31","nodeType":"YulFunctionCall","src":"6434:15:31"},"nativeSrc":"6431:122:31","nodeType":"YulIf","src":"6431:122:31"},{"body":{"nativeSrc":"6638:144:31","nodeType":"YulBlock","src":"6638:144:31","statements":[{"nativeSrc":"6653:21:31","nodeType":"YulVariableDeclaration","src":"6653:21:31","value":{"name":"src","nativeSrc":"6671:3:31","nodeType":"YulIdentifier","src":"6671:3:31"},"variables":[{"name":"elementPos","nativeSrc":"6657:10:31","nodeType":"YulTypedName","src":"6657:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"6695:3:31","nodeType":"YulIdentifier","src":"6695:3:31"},{"arguments":[{"name":"elementPos","nativeSrc":"6721:10:31","nodeType":"YulIdentifier","src":"6721:10:31"},{"name":"end","nativeSrc":"6733:3:31","nodeType":"YulIdentifier","src":"6733:3:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6700:20:31","nodeType":"YulIdentifier","src":"6700:20:31"},"nativeSrc":"6700:37:31","nodeType":"YulFunctionCall","src":"6700:37:31"}],"functionName":{"name":"mstore","nativeSrc":"6688:6:31","nodeType":"YulIdentifier","src":"6688:6:31"},"nativeSrc":"6688:50:31","nodeType":"YulFunctionCall","src":"6688:50:31"},"nativeSrc":"6688:50:31","nodeType":"YulExpressionStatement","src":"6688:50:31"},{"nativeSrc":"6751:21:31","nodeType":"YulAssignment","src":"6751:21:31","value":{"arguments":[{"name":"dst","nativeSrc":"6762:3:31","nodeType":"YulIdentifier","src":"6762:3:31"},{"kind":"number","nativeSrc":"6767:4:31","nodeType":"YulLiteral","src":"6767:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6758:3:31","nodeType":"YulIdentifier","src":"6758:3:31"},"nativeSrc":"6758:14:31","nodeType":"YulFunctionCall","src":"6758:14:31"},"variableNames":[{"name":"dst","nativeSrc":"6751:3:31","nodeType":"YulIdentifier","src":"6751:3:31"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"6591:3:31","nodeType":"YulIdentifier","src":"6591:3:31"},{"name":"srcEnd","nativeSrc":"6596:6:31","nodeType":"YulIdentifier","src":"6596:6:31"}],"functionName":{"name":"lt","nativeSrc":"6588:2:31","nodeType":"YulIdentifier","src":"6588:2:31"},"nativeSrc":"6588:15:31","nodeType":"YulFunctionCall","src":"6588:15:31"},"nativeSrc":"6562:220:31","nodeType":"YulForLoop","post":{"nativeSrc":"6604:25:31","nodeType":"YulBlock","src":"6604:25:31","statements":[{"nativeSrc":"6606:21:31","nodeType":"YulAssignment","src":"6606:21:31","value":{"arguments":[{"name":"src","nativeSrc":"6617:3:31","nodeType":"YulIdentifier","src":"6617:3:31"},{"kind":"number","nativeSrc":"6622:4:31","nodeType":"YulLiteral","src":"6622:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6613:3:31","nodeType":"YulIdentifier","src":"6613:3:31"},"nativeSrc":"6613:14:31","nodeType":"YulFunctionCall","src":"6613:14:31"},"variableNames":[{"name":"src","nativeSrc":"6606:3:31","nodeType":"YulIdentifier","src":"6606:3:31"}]}]},"pre":{"nativeSrc":"6566:21:31","nodeType":"YulBlock","src":"6566:21:31","statements":[{"nativeSrc":"6568:17:31","nodeType":"YulVariableDeclaration","src":"6568:17:31","value":{"name":"offset","nativeSrc":"6579:6:31","nodeType":"YulIdentifier","src":"6579:6:31"},"variables":[{"name":"src","nativeSrc":"6572:3:31","nodeType":"YulTypedName","src":"6572:3:31","type":""}]}]},"src":"6562:220:31"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6078:710:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6150:6:31","nodeType":"YulTypedName","src":"6150:6:31","type":""},{"name":"length","nativeSrc":"6158:6:31","nodeType":"YulTypedName","src":"6158:6:31","type":""},{"name":"end","nativeSrc":"6166:3:31","nodeType":"YulTypedName","src":"6166:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6174:5:31","nodeType":"YulTypedName","src":"6174:5:31","type":""}],"src":"6078:710:31"},{"body":{"nativeSrc":"6888:293:31","nodeType":"YulBlock","src":"6888:293:31","statements":[{"body":{"nativeSrc":"6937:83:31","nodeType":"YulBlock","src":"6937:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6939:77:31","nodeType":"YulIdentifier","src":"6939:77:31"},"nativeSrc":"6939:79:31","nodeType":"YulFunctionCall","src":"6939:79:31"},"nativeSrc":"6939:79:31","nodeType":"YulExpressionStatement","src":"6939:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"6916:6:31","nodeType":"YulIdentifier","src":"6916:6:31"},{"kind":"number","nativeSrc":"6924:4:31","nodeType":"YulLiteral","src":"6924:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"6912:3:31","nodeType":"YulIdentifier","src":"6912:3:31"},"nativeSrc":"6912:17:31","nodeType":"YulFunctionCall","src":"6912:17:31"},{"name":"end","nativeSrc":"6931:3:31","nodeType":"YulIdentifier","src":"6931:3:31"}],"functionName":{"name":"slt","nativeSrc":"6908:3:31","nodeType":"YulIdentifier","src":"6908:3:31"},"nativeSrc":"6908:27:31","nodeType":"YulFunctionCall","src":"6908:27:31"}],"functionName":{"name":"iszero","nativeSrc":"6901:6:31","nodeType":"YulIdentifier","src":"6901:6:31"},"nativeSrc":"6901:35:31","nodeType":"YulFunctionCall","src":"6901:35:31"},"nativeSrc":"6898:122:31","nodeType":"YulIf","src":"6898:122:31"},{"nativeSrc":"7029:34:31","nodeType":"YulVariableDeclaration","src":"7029:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"7056:6:31","nodeType":"YulIdentifier","src":"7056:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"7043:12:31","nodeType":"YulIdentifier","src":"7043:12:31"},"nativeSrc":"7043:20:31","nodeType":"YulFunctionCall","src":"7043:20:31"},"variables":[{"name":"length","nativeSrc":"7033:6:31","nodeType":"YulTypedName","src":"7033:6:31","type":""}]},{"nativeSrc":"7072:103:31","nodeType":"YulAssignment","src":"7072:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"7148:6:31","nodeType":"YulIdentifier","src":"7148:6:31"},{"kind":"number","nativeSrc":"7156:4:31","nodeType":"YulLiteral","src":"7156:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7144:3:31","nodeType":"YulIdentifier","src":"7144:3:31"},"nativeSrc":"7144:17:31","nodeType":"YulFunctionCall","src":"7144:17:31"},{"name":"length","nativeSrc":"7163:6:31","nodeType":"YulIdentifier","src":"7163:6:31"},{"name":"end","nativeSrc":"7171:3:31","nodeType":"YulIdentifier","src":"7171:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7081:62:31","nodeType":"YulIdentifier","src":"7081:62:31"},"nativeSrc":"7081:94:31","nodeType":"YulFunctionCall","src":"7081:94:31"},"variableNames":[{"name":"array","nativeSrc":"7072:5:31","nodeType":"YulIdentifier","src":"7072:5:31"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6811:370:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6866:6:31","nodeType":"YulTypedName","src":"6866:6:31","type":""},{"name":"end","nativeSrc":"6874:3:31","nodeType":"YulTypedName","src":"6874:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"6882:5:31","nodeType":"YulTypedName","src":"6882:5:31","type":""}],"src":"6811:370:31"},{"body":{"nativeSrc":"7276:28:31","nodeType":"YulBlock","src":"7276:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7293:1:31","nodeType":"YulLiteral","src":"7293:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"7296:1:31","nodeType":"YulLiteral","src":"7296:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7286:6:31","nodeType":"YulIdentifier","src":"7286:6:31"},"nativeSrc":"7286:12:31","nodeType":"YulFunctionCall","src":"7286:12:31"},"nativeSrc":"7286:12:31","nodeType":"YulExpressionStatement","src":"7286:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7187:117:31","nodeType":"YulFunctionDefinition","src":"7187:117:31"},{"body":{"nativeSrc":"7376:241:31","nodeType":"YulBlock","src":"7376:241:31","statements":[{"body":{"nativeSrc":"7481:22:31","nodeType":"YulBlock","src":"7481:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7483:16:31","nodeType":"YulIdentifier","src":"7483:16:31"},"nativeSrc":"7483:18:31","nodeType":"YulFunctionCall","src":"7483:18:31"},"nativeSrc":"7483:18:31","nodeType":"YulExpressionStatement","src":"7483:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7453:6:31","nodeType":"YulIdentifier","src":"7453:6:31"},{"kind":"number","nativeSrc":"7461:18:31","nodeType":"YulLiteral","src":"7461:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7450:2:31","nodeType":"YulIdentifier","src":"7450:2:31"},"nativeSrc":"7450:30:31","nodeType":"YulFunctionCall","src":"7450:30:31"},"nativeSrc":"7447:56:31","nodeType":"YulIf","src":"7447:56:31"},{"nativeSrc":"7513:37:31","nodeType":"YulAssignment","src":"7513:37:31","value":{"arguments":[{"name":"length","nativeSrc":"7543:6:31","nodeType":"YulIdentifier","src":"7543:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7521:21:31","nodeType":"YulIdentifier","src":"7521:21:31"},"nativeSrc":"7521:29:31","nodeType":"YulFunctionCall","src":"7521:29:31"},"variableNames":[{"name":"size","nativeSrc":"7513:4:31","nodeType":"YulIdentifier","src":"7513:4:31"}]},{"nativeSrc":"7587:23:31","nodeType":"YulAssignment","src":"7587:23:31","value":{"arguments":[{"name":"size","nativeSrc":"7599:4:31","nodeType":"YulIdentifier","src":"7599:4:31"},{"kind":"number","nativeSrc":"7605:4:31","nodeType":"YulLiteral","src":"7605:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7595:3:31","nodeType":"YulIdentifier","src":"7595:3:31"},"nativeSrc":"7595:15:31","nodeType":"YulFunctionCall","src":"7595:15:31"},"variableNames":[{"name":"size","nativeSrc":"7587:4:31","nodeType":"YulIdentifier","src":"7587:4:31"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7310:307:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7360:6:31","nodeType":"YulTypedName","src":"7360:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7371:4:31","nodeType":"YulTypedName","src":"7371:4:31","type":""}],"src":"7310:307:31"},{"body":{"nativeSrc":"7687:82:31","nodeType":"YulBlock","src":"7687:82:31","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"7710:3:31","nodeType":"YulIdentifier","src":"7710:3:31"},{"name":"src","nativeSrc":"7715:3:31","nodeType":"YulIdentifier","src":"7715:3:31"},{"name":"length","nativeSrc":"7720:6:31","nodeType":"YulIdentifier","src":"7720:6:31"}],"functionName":{"name":"calldatacopy","nativeSrc":"7697:12:31","nodeType":"YulIdentifier","src":"7697:12:31"},"nativeSrc":"7697:30:31","nodeType":"YulFunctionCall","src":"7697:30:31"},"nativeSrc":"7697:30:31","nodeType":"YulExpressionStatement","src":"7697:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7747:3:31","nodeType":"YulIdentifier","src":"7747:3:31"},{"name":"length","nativeSrc":"7752:6:31","nodeType":"YulIdentifier","src":"7752:6:31"}],"functionName":{"name":"add","nativeSrc":"7743:3:31","nodeType":"YulIdentifier","src":"7743:3:31"},"nativeSrc":"7743:16:31","nodeType":"YulFunctionCall","src":"7743:16:31"},{"kind":"number","nativeSrc":"7761:1:31","nodeType":"YulLiteral","src":"7761:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7736:6:31","nodeType":"YulIdentifier","src":"7736:6:31"},"nativeSrc":"7736:27:31","nodeType":"YulFunctionCall","src":"7736:27:31"},"nativeSrc":"7736:27:31","nodeType":"YulExpressionStatement","src":"7736:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7623:146:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7669:3:31","nodeType":"YulTypedName","src":"7669:3:31","type":""},{"name":"dst","nativeSrc":"7674:3:31","nodeType":"YulTypedName","src":"7674:3:31","type":""},{"name":"length","nativeSrc":"7679:6:31","nodeType":"YulTypedName","src":"7679:6:31","type":""}],"src":"7623:146:31"},{"body":{"nativeSrc":"7858:340:31","nodeType":"YulBlock","src":"7858:340:31","statements":[{"nativeSrc":"7868:74:31","nodeType":"YulAssignment","src":"7868:74:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7934:6:31","nodeType":"YulIdentifier","src":"7934:6:31"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7893:40:31","nodeType":"YulIdentifier","src":"7893:40:31"},"nativeSrc":"7893:48:31","nodeType":"YulFunctionCall","src":"7893:48:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"7877:15:31","nodeType":"YulIdentifier","src":"7877:15:31"},"nativeSrc":"7877:65:31","nodeType":"YulFunctionCall","src":"7877:65:31"},"variableNames":[{"name":"array","nativeSrc":"7868:5:31","nodeType":"YulIdentifier","src":"7868:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7958:5:31","nodeType":"YulIdentifier","src":"7958:5:31"},{"name":"length","nativeSrc":"7965:6:31","nodeType":"YulIdentifier","src":"7965:6:31"}],"functionName":{"name":"mstore","nativeSrc":"7951:6:31","nodeType":"YulIdentifier","src":"7951:6:31"},"nativeSrc":"7951:21:31","nodeType":"YulFunctionCall","src":"7951:21:31"},"nativeSrc":"7951:21:31","nodeType":"YulExpressionStatement","src":"7951:21:31"},{"nativeSrc":"7981:27:31","nodeType":"YulVariableDeclaration","src":"7981:27:31","value":{"arguments":[{"name":"array","nativeSrc":"7996:5:31","nodeType":"YulIdentifier","src":"7996:5:31"},{"kind":"number","nativeSrc":"8003:4:31","nodeType":"YulLiteral","src":"8003:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7992:3:31","nodeType":"YulIdentifier","src":"7992:3:31"},"nativeSrc":"7992:16:31","nodeType":"YulFunctionCall","src":"7992:16:31"},"variables":[{"name":"dst","nativeSrc":"7985:3:31","nodeType":"YulTypedName","src":"7985:3:31","type":""}]},{"body":{"nativeSrc":"8046:83:31","nodeType":"YulBlock","src":"8046:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8048:77:31","nodeType":"YulIdentifier","src":"8048:77:31"},"nativeSrc":"8048:79:31","nodeType":"YulFunctionCall","src":"8048:79:31"},"nativeSrc":"8048:79:31","nodeType":"YulExpressionStatement","src":"8048:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8027:3:31","nodeType":"YulIdentifier","src":"8027:3:31"},{"name":"length","nativeSrc":"8032:6:31","nodeType":"YulIdentifier","src":"8032:6:31"}],"functionName":{"name":"add","nativeSrc":"8023:3:31","nodeType":"YulIdentifier","src":"8023:3:31"},"nativeSrc":"8023:16:31","nodeType":"YulFunctionCall","src":"8023:16:31"},{"name":"end","nativeSrc":"8041:3:31","nodeType":"YulIdentifier","src":"8041:3:31"}],"functionName":{"name":"gt","nativeSrc":"8020:2:31","nodeType":"YulIdentifier","src":"8020:2:31"},"nativeSrc":"8020:25:31","nodeType":"YulFunctionCall","src":"8020:25:31"},"nativeSrc":"8017:112:31","nodeType":"YulIf","src":"8017:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"8175:3:31","nodeType":"YulIdentifier","src":"8175:3:31"},{"name":"dst","nativeSrc":"8180:3:31","nodeType":"YulIdentifier","src":"8180:3:31"},{"name":"length","nativeSrc":"8185:6:31","nodeType":"YulIdentifier","src":"8185:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8138:36:31","nodeType":"YulIdentifier","src":"8138:36:31"},"nativeSrc":"8138:54:31","nodeType":"YulFunctionCall","src":"8138:54:31"},"nativeSrc":"8138:54:31","nodeType":"YulExpressionStatement","src":"8138:54:31"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7775:423:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7831:3:31","nodeType":"YulTypedName","src":"7831:3:31","type":""},{"name":"length","nativeSrc":"7836:6:31","nodeType":"YulTypedName","src":"7836:6:31","type":""},{"name":"end","nativeSrc":"7844:3:31","nodeType":"YulTypedName","src":"7844:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7852:5:31","nodeType":"YulTypedName","src":"7852:5:31","type":""}],"src":"7775:423:31"},{"body":{"nativeSrc":"8278:277:31","nodeType":"YulBlock","src":"8278:277:31","statements":[{"body":{"nativeSrc":"8327:83:31","nodeType":"YulBlock","src":"8327:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8329:77:31","nodeType":"YulIdentifier","src":"8329:77:31"},"nativeSrc":"8329:79:31","nodeType":"YulFunctionCall","src":"8329:79:31"},"nativeSrc":"8329:79:31","nodeType":"YulExpressionStatement","src":"8329:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8306:6:31","nodeType":"YulIdentifier","src":"8306:6:31"},{"kind":"number","nativeSrc":"8314:4:31","nodeType":"YulLiteral","src":"8314:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8302:3:31","nodeType":"YulIdentifier","src":"8302:3:31"},"nativeSrc":"8302:17:31","nodeType":"YulFunctionCall","src":"8302:17:31"},{"name":"end","nativeSrc":"8321:3:31","nodeType":"YulIdentifier","src":"8321:3:31"}],"functionName":{"name":"slt","nativeSrc":"8298:3:31","nodeType":"YulIdentifier","src":"8298:3:31"},"nativeSrc":"8298:27:31","nodeType":"YulFunctionCall","src":"8298:27:31"}],"functionName":{"name":"iszero","nativeSrc":"8291:6:31","nodeType":"YulIdentifier","src":"8291:6:31"},"nativeSrc":"8291:35:31","nodeType":"YulFunctionCall","src":"8291:35:31"},"nativeSrc":"8288:122:31","nodeType":"YulIf","src":"8288:122:31"},{"nativeSrc":"8419:34:31","nodeType":"YulVariableDeclaration","src":"8419:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"8446:6:31","nodeType":"YulIdentifier","src":"8446:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"8433:12:31","nodeType":"YulIdentifier","src":"8433:12:31"},"nativeSrc":"8433:20:31","nodeType":"YulFunctionCall","src":"8433:20:31"},"variables":[{"name":"length","nativeSrc":"8423:6:31","nodeType":"YulTypedName","src":"8423:6:31","type":""}]},{"nativeSrc":"8462:87:31","nodeType":"YulAssignment","src":"8462:87:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8522:6:31","nodeType":"YulIdentifier","src":"8522:6:31"},{"kind":"number","nativeSrc":"8530:4:31","nodeType":"YulLiteral","src":"8530:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8518:3:31","nodeType":"YulIdentifier","src":"8518:3:31"},"nativeSrc":"8518:17:31","nodeType":"YulFunctionCall","src":"8518:17:31"},{"name":"length","nativeSrc":"8537:6:31","nodeType":"YulIdentifier","src":"8537:6:31"},{"name":"end","nativeSrc":"8545:3:31","nodeType":"YulIdentifier","src":"8545:3:31"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8471:46:31","nodeType":"YulIdentifier","src":"8471:46:31"},"nativeSrc":"8471:78:31","nodeType":"YulFunctionCall","src":"8471:78:31"},"variableNames":[{"name":"array","nativeSrc":"8462:5:31","nodeType":"YulIdentifier","src":"8462:5:31"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8217:338:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8256:6:31","nodeType":"YulTypedName","src":"8256:6:31","type":""},{"name":"end","nativeSrc":"8264:3:31","nodeType":"YulTypedName","src":"8264:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8272:5:31","nodeType":"YulTypedName","src":"8272:5:31","type":""}],"src":"8217:338:31"},{"body":{"nativeSrc":"8754:1316:31","nodeType":"YulBlock","src":"8754:1316:31","statements":[{"body":{"nativeSrc":"8801:83:31","nodeType":"YulBlock","src":"8801:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8803:77:31","nodeType":"YulIdentifier","src":"8803:77:31"},"nativeSrc":"8803:79:31","nodeType":"YulFunctionCall","src":"8803:79:31"},"nativeSrc":"8803:79:31","nodeType":"YulExpressionStatement","src":"8803:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8775:7:31","nodeType":"YulIdentifier","src":"8775:7:31"},{"name":"headStart","nativeSrc":"8784:9:31","nodeType":"YulIdentifier","src":"8784:9:31"}],"functionName":{"name":"sub","nativeSrc":"8771:3:31","nodeType":"YulIdentifier","src":"8771:3:31"},"nativeSrc":"8771:23:31","nodeType":"YulFunctionCall","src":"8771:23:31"},{"kind":"number","nativeSrc":"8796:3:31","nodeType":"YulLiteral","src":"8796:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"8767:3:31","nodeType":"YulIdentifier","src":"8767:3:31"},"nativeSrc":"8767:33:31","nodeType":"YulFunctionCall","src":"8767:33:31"},"nativeSrc":"8764:120:31","nodeType":"YulIf","src":"8764:120:31"},{"nativeSrc":"8894:117:31","nodeType":"YulBlock","src":"8894:117:31","statements":[{"nativeSrc":"8909:15:31","nodeType":"YulVariableDeclaration","src":"8909:15:31","value":{"kind":"number","nativeSrc":"8923:1:31","nodeType":"YulLiteral","src":"8923:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8913:6:31","nodeType":"YulTypedName","src":"8913:6:31","type":""}]},{"nativeSrc":"8938:63:31","nodeType":"YulAssignment","src":"8938:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8973:9:31","nodeType":"YulIdentifier","src":"8973:9:31"},{"name":"offset","nativeSrc":"8984:6:31","nodeType":"YulIdentifier","src":"8984:6:31"}],"functionName":{"name":"add","nativeSrc":"8969:3:31","nodeType":"YulIdentifier","src":"8969:3:31"},"nativeSrc":"8969:22:31","nodeType":"YulFunctionCall","src":"8969:22:31"},{"name":"dataEnd","nativeSrc":"8993:7:31","nodeType":"YulIdentifier","src":"8993:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8948:20:31","nodeType":"YulIdentifier","src":"8948:20:31"},"nativeSrc":"8948:53:31","nodeType":"YulFunctionCall","src":"8948:53:31"},"variableNames":[{"name":"value0","nativeSrc":"8938:6:31","nodeType":"YulIdentifier","src":"8938:6:31"}]}]},{"nativeSrc":"9021:118:31","nodeType":"YulBlock","src":"9021:118:31","statements":[{"nativeSrc":"9036:16:31","nodeType":"YulVariableDeclaration","src":"9036:16:31","value":{"kind":"number","nativeSrc":"9050:2:31","nodeType":"YulLiteral","src":"9050:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"9040:6:31","nodeType":"YulTypedName","src":"9040:6:31","type":""}]},{"nativeSrc":"9066:63:31","nodeType":"YulAssignment","src":"9066:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9101:9:31","nodeType":"YulIdentifier","src":"9101:9:31"},{"name":"offset","nativeSrc":"9112:6:31","nodeType":"YulIdentifier","src":"9112:6:31"}],"functionName":{"name":"add","nativeSrc":"9097:3:31","nodeType":"YulIdentifier","src":"9097:3:31"},"nativeSrc":"9097:22:31","nodeType":"YulFunctionCall","src":"9097:22:31"},{"name":"dataEnd","nativeSrc":"9121:7:31","nodeType":"YulIdentifier","src":"9121:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"9076:20:31","nodeType":"YulIdentifier","src":"9076:20:31"},"nativeSrc":"9076:53:31","nodeType":"YulFunctionCall","src":"9076:53:31"},"variableNames":[{"name":"value1","nativeSrc":"9066:6:31","nodeType":"YulIdentifier","src":"9066:6:31"}]}]},{"nativeSrc":"9149:303:31","nodeType":"YulBlock","src":"9149:303:31","statements":[{"nativeSrc":"9164:46:31","nodeType":"YulVariableDeclaration","src":"9164:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9195:9:31","nodeType":"YulIdentifier","src":"9195:9:31"},{"kind":"number","nativeSrc":"9206:2:31","nodeType":"YulLiteral","src":"9206:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9191:3:31","nodeType":"YulIdentifier","src":"9191:3:31"},"nativeSrc":"9191:18:31","nodeType":"YulFunctionCall","src":"9191:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"9178:12:31","nodeType":"YulIdentifier","src":"9178:12:31"},"nativeSrc":"9178:32:31","nodeType":"YulFunctionCall","src":"9178:32:31"},"variables":[{"name":"offset","nativeSrc":"9168:6:31","nodeType":"YulTypedName","src":"9168:6:31","type":""}]},{"body":{"nativeSrc":"9257:83:31","nodeType":"YulBlock","src":"9257:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9259:77:31","nodeType":"YulIdentifier","src":"9259:77:31"},"nativeSrc":"9259:79:31","nodeType":"YulFunctionCall","src":"9259:79:31"},"nativeSrc":"9259:79:31","nodeType":"YulExpressionStatement","src":"9259:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9229:6:31","nodeType":"YulIdentifier","src":"9229:6:31"},{"kind":"number","nativeSrc":"9237:18:31","nodeType":"YulLiteral","src":"9237:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9226:2:31","nodeType":"YulIdentifier","src":"9226:2:31"},"nativeSrc":"9226:30:31","nodeType":"YulFunctionCall","src":"9226:30:31"},"nativeSrc":"9223:117:31","nodeType":"YulIf","src":"9223:117:31"},{"nativeSrc":"9354:88:31","nodeType":"YulAssignment","src":"9354:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9414:9:31","nodeType":"YulIdentifier","src":"9414:9:31"},{"name":"offset","nativeSrc":"9425:6:31","nodeType":"YulIdentifier","src":"9425:6:31"}],"functionName":{"name":"add","nativeSrc":"9410:3:31","nodeType":"YulIdentifier","src":"9410:3:31"},"nativeSrc":"9410:22:31","nodeType":"YulFunctionCall","src":"9410:22:31"},{"name":"dataEnd","nativeSrc":"9434:7:31","nodeType":"YulIdentifier","src":"9434:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9364:45:31","nodeType":"YulIdentifier","src":"9364:45:31"},"nativeSrc":"9364:78:31","nodeType":"YulFunctionCall","src":"9364:78:31"},"variableNames":[{"name":"value2","nativeSrc":"9354:6:31","nodeType":"YulIdentifier","src":"9354:6:31"}]}]},{"nativeSrc":"9462:303:31","nodeType":"YulBlock","src":"9462:303:31","statements":[{"nativeSrc":"9477:46:31","nodeType":"YulVariableDeclaration","src":"9477:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9508:9:31","nodeType":"YulIdentifier","src":"9508:9:31"},{"kind":"number","nativeSrc":"9519:2:31","nodeType":"YulLiteral","src":"9519:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9504:3:31","nodeType":"YulIdentifier","src":"9504:3:31"},"nativeSrc":"9504:18:31","nodeType":"YulFunctionCall","src":"9504:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"9491:12:31","nodeType":"YulIdentifier","src":"9491:12:31"},"nativeSrc":"9491:32:31","nodeType":"YulFunctionCall","src":"9491:32:31"},"variables":[{"name":"offset","nativeSrc":"9481:6:31","nodeType":"YulTypedName","src":"9481:6:31","type":""}]},{"body":{"nativeSrc":"9570:83:31","nodeType":"YulBlock","src":"9570:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9572:77:31","nodeType":"YulIdentifier","src":"9572:77:31"},"nativeSrc":"9572:79:31","nodeType":"YulFunctionCall","src":"9572:79:31"},"nativeSrc":"9572:79:31","nodeType":"YulExpressionStatement","src":"9572:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9542:6:31","nodeType":"YulIdentifier","src":"9542:6:31"},{"kind":"number","nativeSrc":"9550:18:31","nodeType":"YulLiteral","src":"9550:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9539:2:31","nodeType":"YulIdentifier","src":"9539:2:31"},"nativeSrc":"9539:30:31","nodeType":"YulFunctionCall","src":"9539:30:31"},"nativeSrc":"9536:117:31","nodeType":"YulIf","src":"9536:117:31"},{"nativeSrc":"9667:88:31","nodeType":"YulAssignment","src":"9667:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9727:9:31","nodeType":"YulIdentifier","src":"9727:9:31"},{"name":"offset","nativeSrc":"9738:6:31","nodeType":"YulIdentifier","src":"9738:6:31"}],"functionName":{"name":"add","nativeSrc":"9723:3:31","nodeType":"YulIdentifier","src":"9723:3:31"},"nativeSrc":"9723:22:31","nodeType":"YulFunctionCall","src":"9723:22:31"},{"name":"dataEnd","nativeSrc":"9747:7:31","nodeType":"YulIdentifier","src":"9747:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"9677:45:31","nodeType":"YulIdentifier","src":"9677:45:31"},"nativeSrc":"9677:78:31","nodeType":"YulFunctionCall","src":"9677:78:31"},"variableNames":[{"name":"value3","nativeSrc":"9667:6:31","nodeType":"YulIdentifier","src":"9667:6:31"}]}]},{"nativeSrc":"9775:288:31","nodeType":"YulBlock","src":"9775:288:31","statements":[{"nativeSrc":"9790:47:31","nodeType":"YulVariableDeclaration","src":"9790:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9821:9:31","nodeType":"YulIdentifier","src":"9821:9:31"},{"kind":"number","nativeSrc":"9832:3:31","nodeType":"YulLiteral","src":"9832:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9817:3:31","nodeType":"YulIdentifier","src":"9817:3:31"},"nativeSrc":"9817:19:31","nodeType":"YulFunctionCall","src":"9817:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"9804:12:31","nodeType":"YulIdentifier","src":"9804:12:31"},"nativeSrc":"9804:33:31","nodeType":"YulFunctionCall","src":"9804:33:31"},"variables":[{"name":"offset","nativeSrc":"9794:6:31","nodeType":"YulTypedName","src":"9794:6:31","type":""}]},{"body":{"nativeSrc":"9884:83:31","nodeType":"YulBlock","src":"9884:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9886:77:31","nodeType":"YulIdentifier","src":"9886:77:31"},"nativeSrc":"9886:79:31","nodeType":"YulFunctionCall","src":"9886:79:31"},"nativeSrc":"9886:79:31","nodeType":"YulExpressionStatement","src":"9886:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9856:6:31","nodeType":"YulIdentifier","src":"9856:6:31"},{"kind":"number","nativeSrc":"9864:18:31","nodeType":"YulLiteral","src":"9864:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9853:2:31","nodeType":"YulIdentifier","src":"9853:2:31"},"nativeSrc":"9853:30:31","nodeType":"YulFunctionCall","src":"9853:30:31"},"nativeSrc":"9850:117:31","nodeType":"YulIf","src":"9850:117:31"},{"nativeSrc":"9981:72:31","nodeType":"YulAssignment","src":"9981:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10025:9:31","nodeType":"YulIdentifier","src":"10025:9:31"},{"name":"offset","nativeSrc":"10036:6:31","nodeType":"YulIdentifier","src":"10036:6:31"}],"functionName":{"name":"add","nativeSrc":"10021:3:31","nodeType":"YulIdentifier","src":"10021:3:31"},"nativeSrc":"10021:22:31","nodeType":"YulFunctionCall","src":"10021:22:31"},{"name":"dataEnd","nativeSrc":"10045:7:31","nodeType":"YulIdentifier","src":"10045:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"9991:29:31","nodeType":"YulIdentifier","src":"9991:29:31"},"nativeSrc":"9991:62:31","nodeType":"YulFunctionCall","src":"9991:62:31"},"variableNames":[{"name":"value4","nativeSrc":"9981:6:31","nodeType":"YulIdentifier","src":"9981:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nativeSrc":"8561:1509:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8692:9:31","nodeType":"YulTypedName","src":"8692:9:31","type":""},{"name":"dataEnd","nativeSrc":"8703:7:31","nodeType":"YulTypedName","src":"8703:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8715:6:31","nodeType":"YulTypedName","src":"8715:6:31","type":""},{"name":"value1","nativeSrc":"8723:6:31","nodeType":"YulTypedName","src":"8723:6:31","type":""},{"name":"value2","nativeSrc":"8731:6:31","nodeType":"YulTypedName","src":"8731:6:31","type":""},{"name":"value3","nativeSrc":"8739:6:31","nodeType":"YulTypedName","src":"8739:6:31","type":""},{"name":"value4","nativeSrc":"8747:6:31","nodeType":"YulTypedName","src":"8747:6:31","type":""}],"src":"8561:1509:31"},{"body":{"nativeSrc":"10158:229:31","nodeType":"YulBlock","src":"10158:229:31","statements":[{"body":{"nativeSrc":"10263:22:31","nodeType":"YulBlock","src":"10263:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10265:16:31","nodeType":"YulIdentifier","src":"10265:16:31"},"nativeSrc":"10265:18:31","nodeType":"YulFunctionCall","src":"10265:18:31"},"nativeSrc":"10265:18:31","nodeType":"YulExpressionStatement","src":"10265:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"10235:6:31","nodeType":"YulIdentifier","src":"10235:6:31"},{"kind":"number","nativeSrc":"10243:18:31","nodeType":"YulLiteral","src":"10243:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10232:2:31","nodeType":"YulIdentifier","src":"10232:2:31"},"nativeSrc":"10232:30:31","nodeType":"YulFunctionCall","src":"10232:30:31"},"nativeSrc":"10229:56:31","nodeType":"YulIf","src":"10229:56:31"},{"nativeSrc":"10295:25:31","nodeType":"YulAssignment","src":"10295:25:31","value":{"arguments":[{"name":"length","nativeSrc":"10307:6:31","nodeType":"YulIdentifier","src":"10307:6:31"},{"kind":"number","nativeSrc":"10315:4:31","nodeType":"YulLiteral","src":"10315:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"10303:3:31","nodeType":"YulIdentifier","src":"10303:3:31"},"nativeSrc":"10303:17:31","nodeType":"YulFunctionCall","src":"10303:17:31"},"variableNames":[{"name":"size","nativeSrc":"10295:4:31","nodeType":"YulIdentifier","src":"10295:4:31"}]},{"nativeSrc":"10357:23:31","nodeType":"YulAssignment","src":"10357:23:31","value":{"arguments":[{"name":"size","nativeSrc":"10369:4:31","nodeType":"YulIdentifier","src":"10369:4:31"},{"kind":"number","nativeSrc":"10375:4:31","nodeType":"YulLiteral","src":"10375:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10365:3:31","nodeType":"YulIdentifier","src":"10365:3:31"},"nativeSrc":"10365:15:31","nodeType":"YulFunctionCall","src":"10365:15:31"},"variableNames":[{"name":"size","nativeSrc":"10357:4:31","nodeType":"YulIdentifier","src":"10357:4:31"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"10076:311:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"10142:6:31","nodeType":"YulTypedName","src":"10142:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"10153:4:31","nodeType":"YulTypedName","src":"10153:4:31","type":""}],"src":"10076:311:31"},{"body":{"nativeSrc":"10512:608:31","nodeType":"YulBlock","src":"10512:608:31","statements":[{"nativeSrc":"10522:90:31","nodeType":"YulAssignment","src":"10522:90:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"10604:6:31","nodeType":"YulIdentifier","src":"10604:6:31"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"10547:56:31","nodeType":"YulIdentifier","src":"10547:56:31"},"nativeSrc":"10547:64:31","nodeType":"YulFunctionCall","src":"10547:64:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"10531:15:31","nodeType":"YulIdentifier","src":"10531:15:31"},"nativeSrc":"10531:81:31","nodeType":"YulFunctionCall","src":"10531:81:31"},"variableNames":[{"name":"array","nativeSrc":"10522:5:31","nodeType":"YulIdentifier","src":"10522:5:31"}]},{"nativeSrc":"10621:16:31","nodeType":"YulVariableDeclaration","src":"10621:16:31","value":{"name":"array","nativeSrc":"10632:5:31","nodeType":"YulIdentifier","src":"10632:5:31"},"variables":[{"name":"dst","nativeSrc":"10625:3:31","nodeType":"YulTypedName","src":"10625:3:31","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"10654:5:31","nodeType":"YulIdentifier","src":"10654:5:31"},{"name":"length","nativeSrc":"10661:6:31","nodeType":"YulIdentifier","src":"10661:6:31"}],"functionName":{"name":"mstore","nativeSrc":"10647:6:31","nodeType":"YulIdentifier","src":"10647:6:31"},"nativeSrc":"10647:21:31","nodeType":"YulFunctionCall","src":"10647:21:31"},"nativeSrc":"10647:21:31","nodeType":"YulExpressionStatement","src":"10647:21:31"},{"nativeSrc":"10677:23:31","nodeType":"YulAssignment","src":"10677:23:31","value":{"arguments":[{"name":"array","nativeSrc":"10688:5:31","nodeType":"YulIdentifier","src":"10688:5:31"},{"kind":"number","nativeSrc":"10695:4:31","nodeType":"YulLiteral","src":"10695:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10684:3:31","nodeType":"YulIdentifier","src":"10684:3:31"},"nativeSrc":"10684:16:31","nodeType":"YulFunctionCall","src":"10684:16:31"},"variableNames":[{"name":"dst","nativeSrc":"10677:3:31","nodeType":"YulIdentifier","src":"10677:3:31"}]},{"nativeSrc":"10710:44:31","nodeType":"YulVariableDeclaration","src":"10710:44:31","value":{"arguments":[{"name":"offset","nativeSrc":"10728:6:31","nodeType":"YulIdentifier","src":"10728:6:31"},{"arguments":[{"name":"length","nativeSrc":"10740:6:31","nodeType":"YulIdentifier","src":"10740:6:31"},{"kind":"number","nativeSrc":"10748:4:31","nodeType":"YulLiteral","src":"10748:4:31","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"10736:3:31","nodeType":"YulIdentifier","src":"10736:3:31"},"nativeSrc":"10736:17:31","nodeType":"YulFunctionCall","src":"10736:17:31"}],"functionName":{"name":"add","nativeSrc":"10724:3:31","nodeType":"YulIdentifier","src":"10724:3:31"},"nativeSrc":"10724:30:31","nodeType":"YulFunctionCall","src":"10724:30:31"},"variables":[{"name":"srcEnd","nativeSrc":"10714:6:31","nodeType":"YulTypedName","src":"10714:6:31","type":""}]},{"body":{"nativeSrc":"10782:103:31","nodeType":"YulBlock","src":"10782:103:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"10796:77:31","nodeType":"YulIdentifier","src":"10796:77:31"},"nativeSrc":"10796:79:31","nodeType":"YulFunctionCall","src":"10796:79:31"},"nativeSrc":"10796:79:31","nodeType":"YulExpressionStatement","src":"10796:79:31"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"10769:6:31","nodeType":"YulIdentifier","src":"10769:6:31"},{"name":"end","nativeSrc":"10777:3:31","nodeType":"YulIdentifier","src":"10777:3:31"}],"functionName":{"name":"gt","nativeSrc":"10766:2:31","nodeType":"YulIdentifier","src":"10766:2:31"},"nativeSrc":"10766:15:31","nodeType":"YulFunctionCall","src":"10766:15:31"},"nativeSrc":"10763:122:31","nodeType":"YulIf","src":"10763:122:31"},{"body":{"nativeSrc":"10970:144:31","nodeType":"YulBlock","src":"10970:144:31","statements":[{"nativeSrc":"10985:21:31","nodeType":"YulVariableDeclaration","src":"10985:21:31","value":{"name":"src","nativeSrc":"11003:3:31","nodeType":"YulIdentifier","src":"11003:3:31"},"variables":[{"name":"elementPos","nativeSrc":"10989:10:31","nodeType":"YulTypedName","src":"10989:10:31","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"11027:3:31","nodeType":"YulIdentifier","src":"11027:3:31"},{"arguments":[{"name":"elementPos","nativeSrc":"11053:10:31","nodeType":"YulIdentifier","src":"11053:10:31"},{"name":"end","nativeSrc":"11065:3:31","nodeType":"YulIdentifier","src":"11065:3:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11032:20:31","nodeType":"YulIdentifier","src":"11032:20:31"},"nativeSrc":"11032:37:31","nodeType":"YulFunctionCall","src":"11032:37:31"}],"functionName":{"name":"mstore","nativeSrc":"11020:6:31","nodeType":"YulIdentifier","src":"11020:6:31"},"nativeSrc":"11020:50:31","nodeType":"YulFunctionCall","src":"11020:50:31"},"nativeSrc":"11020:50:31","nodeType":"YulExpressionStatement","src":"11020:50:31"},{"nativeSrc":"11083:21:31","nodeType":"YulAssignment","src":"11083:21:31","value":{"arguments":[{"name":"dst","nativeSrc":"11094:3:31","nodeType":"YulIdentifier","src":"11094:3:31"},{"kind":"number","nativeSrc":"11099:4:31","nodeType":"YulLiteral","src":"11099:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11090:3:31","nodeType":"YulIdentifier","src":"11090:3:31"},"nativeSrc":"11090:14:31","nodeType":"YulFunctionCall","src":"11090:14:31"},"variableNames":[{"name":"dst","nativeSrc":"11083:3:31","nodeType":"YulIdentifier","src":"11083:3:31"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"10923:3:31","nodeType":"YulIdentifier","src":"10923:3:31"},{"name":"srcEnd","nativeSrc":"10928:6:31","nodeType":"YulIdentifier","src":"10928:6:31"}],"functionName":{"name":"lt","nativeSrc":"10920:2:31","nodeType":"YulIdentifier","src":"10920:2:31"},"nativeSrc":"10920:15:31","nodeType":"YulFunctionCall","src":"10920:15:31"},"nativeSrc":"10894:220:31","nodeType":"YulForLoop","post":{"nativeSrc":"10936:25:31","nodeType":"YulBlock","src":"10936:25:31","statements":[{"nativeSrc":"10938:21:31","nodeType":"YulAssignment","src":"10938:21:31","value":{"arguments":[{"name":"src","nativeSrc":"10949:3:31","nodeType":"YulIdentifier","src":"10949:3:31"},{"kind":"number","nativeSrc":"10954:4:31","nodeType":"YulLiteral","src":"10954:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10945:3:31","nodeType":"YulIdentifier","src":"10945:3:31"},"nativeSrc":"10945:14:31","nodeType":"YulFunctionCall","src":"10945:14:31"},"variableNames":[{"name":"src","nativeSrc":"10938:3:31","nodeType":"YulIdentifier","src":"10938:3:31"}]}]},"pre":{"nativeSrc":"10898:21:31","nodeType":"YulBlock","src":"10898:21:31","statements":[{"nativeSrc":"10900:17:31","nodeType":"YulVariableDeclaration","src":"10900:17:31","value":{"name":"offset","nativeSrc":"10911:6:31","nodeType":"YulIdentifier","src":"10911:6:31"},"variables":[{"name":"src","nativeSrc":"10904:3:31","nodeType":"YulTypedName","src":"10904:3:31","type":""}]}]},"src":"10894:220:31"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"10410:710:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10482:6:31","nodeType":"YulTypedName","src":"10482:6:31","type":""},{"name":"length","nativeSrc":"10490:6:31","nodeType":"YulTypedName","src":"10490:6:31","type":""},{"name":"end","nativeSrc":"10498:3:31","nodeType":"YulTypedName","src":"10498:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10506:5:31","nodeType":"YulTypedName","src":"10506:5:31","type":""}],"src":"10410:710:31"},{"body":{"nativeSrc":"11220:293:31","nodeType":"YulBlock","src":"11220:293:31","statements":[{"body":{"nativeSrc":"11269:83:31","nodeType":"YulBlock","src":"11269:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"11271:77:31","nodeType":"YulIdentifier","src":"11271:77:31"},"nativeSrc":"11271:79:31","nodeType":"YulFunctionCall","src":"11271:79:31"},"nativeSrc":"11271:79:31","nodeType":"YulExpressionStatement","src":"11271:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11248:6:31","nodeType":"YulIdentifier","src":"11248:6:31"},{"kind":"number","nativeSrc":"11256:4:31","nodeType":"YulLiteral","src":"11256:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"11244:3:31","nodeType":"YulIdentifier","src":"11244:3:31"},"nativeSrc":"11244:17:31","nodeType":"YulFunctionCall","src":"11244:17:31"},{"name":"end","nativeSrc":"11263:3:31","nodeType":"YulIdentifier","src":"11263:3:31"}],"functionName":{"name":"slt","nativeSrc":"11240:3:31","nodeType":"YulIdentifier","src":"11240:3:31"},"nativeSrc":"11240:27:31","nodeType":"YulFunctionCall","src":"11240:27:31"}],"functionName":{"name":"iszero","nativeSrc":"11233:6:31","nodeType":"YulIdentifier","src":"11233:6:31"},"nativeSrc":"11233:35:31","nodeType":"YulFunctionCall","src":"11233:35:31"},"nativeSrc":"11230:122:31","nodeType":"YulIf","src":"11230:122:31"},{"nativeSrc":"11361:34:31","nodeType":"YulVariableDeclaration","src":"11361:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"11388:6:31","nodeType":"YulIdentifier","src":"11388:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"11375:12:31","nodeType":"YulIdentifier","src":"11375:12:31"},"nativeSrc":"11375:20:31","nodeType":"YulFunctionCall","src":"11375:20:31"},"variables":[{"name":"length","nativeSrc":"11365:6:31","nodeType":"YulTypedName","src":"11365:6:31","type":""}]},{"nativeSrc":"11404:103:31","nodeType":"YulAssignment","src":"11404:103:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"11480:6:31","nodeType":"YulIdentifier","src":"11480:6:31"},{"kind":"number","nativeSrc":"11488:4:31","nodeType":"YulLiteral","src":"11488:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11476:3:31","nodeType":"YulIdentifier","src":"11476:3:31"},"nativeSrc":"11476:17:31","nodeType":"YulFunctionCall","src":"11476:17:31"},{"name":"length","nativeSrc":"11495:6:31","nodeType":"YulIdentifier","src":"11495:6:31"},{"name":"end","nativeSrc":"11503:3:31","nodeType":"YulIdentifier","src":"11503:3:31"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"11413:62:31","nodeType":"YulIdentifier","src":"11413:62:31"},"nativeSrc":"11413:94:31","nodeType":"YulFunctionCall","src":"11413:94:31"},"variableNames":[{"name":"array","nativeSrc":"11404:5:31","nodeType":"YulIdentifier","src":"11404:5:31"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"11143:370:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11198:6:31","nodeType":"YulTypedName","src":"11198:6:31","type":""},{"name":"end","nativeSrc":"11206:3:31","nodeType":"YulTypedName","src":"11206:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"11214:5:31","nodeType":"YulTypedName","src":"11214:5:31","type":""}],"src":"11143:370:31"},{"body":{"nativeSrc":"11652:761:31","nodeType":"YulBlock","src":"11652:761:31","statements":[{"body":{"nativeSrc":"11698:83:31","nodeType":"YulBlock","src":"11698:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11700:77:31","nodeType":"YulIdentifier","src":"11700:77:31"},"nativeSrc":"11700:79:31","nodeType":"YulFunctionCall","src":"11700:79:31"},"nativeSrc":"11700:79:31","nodeType":"YulExpressionStatement","src":"11700:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11673:7:31","nodeType":"YulIdentifier","src":"11673:7:31"},{"name":"headStart","nativeSrc":"11682:9:31","nodeType":"YulIdentifier","src":"11682:9:31"}],"functionName":{"name":"sub","nativeSrc":"11669:3:31","nodeType":"YulIdentifier","src":"11669:3:31"},"nativeSrc":"11669:23:31","nodeType":"YulFunctionCall","src":"11669:23:31"},{"kind":"number","nativeSrc":"11694:2:31","nodeType":"YulLiteral","src":"11694:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11665:3:31","nodeType":"YulIdentifier","src":"11665:3:31"},"nativeSrc":"11665:32:31","nodeType":"YulFunctionCall","src":"11665:32:31"},"nativeSrc":"11662:119:31","nodeType":"YulIf","src":"11662:119:31"},{"nativeSrc":"11791:302:31","nodeType":"YulBlock","src":"11791:302:31","statements":[{"nativeSrc":"11806:45:31","nodeType":"YulVariableDeclaration","src":"11806:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11837:9:31","nodeType":"YulIdentifier","src":"11837:9:31"},{"kind":"number","nativeSrc":"11848:1:31","nodeType":"YulLiteral","src":"11848:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11833:3:31","nodeType":"YulIdentifier","src":"11833:3:31"},"nativeSrc":"11833:17:31","nodeType":"YulFunctionCall","src":"11833:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"11820:12:31","nodeType":"YulIdentifier","src":"11820:12:31"},"nativeSrc":"11820:31:31","nodeType":"YulFunctionCall","src":"11820:31:31"},"variables":[{"name":"offset","nativeSrc":"11810:6:31","nodeType":"YulTypedName","src":"11810:6:31","type":""}]},{"body":{"nativeSrc":"11898:83:31","nodeType":"YulBlock","src":"11898:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11900:77:31","nodeType":"YulIdentifier","src":"11900:77:31"},"nativeSrc":"11900:79:31","nodeType":"YulFunctionCall","src":"11900:79:31"},"nativeSrc":"11900:79:31","nodeType":"YulExpressionStatement","src":"11900:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11870:6:31","nodeType":"YulIdentifier","src":"11870:6:31"},{"kind":"number","nativeSrc":"11878:18:31","nodeType":"YulLiteral","src":"11878:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11867:2:31","nodeType":"YulIdentifier","src":"11867:2:31"},"nativeSrc":"11867:30:31","nodeType":"YulFunctionCall","src":"11867:30:31"},"nativeSrc":"11864:117:31","nodeType":"YulIf","src":"11864:117:31"},{"nativeSrc":"11995:88:31","nodeType":"YulAssignment","src":"11995:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12055:9:31","nodeType":"YulIdentifier","src":"12055:9:31"},{"name":"offset","nativeSrc":"12066:6:31","nodeType":"YulIdentifier","src":"12066:6:31"}],"functionName":{"name":"add","nativeSrc":"12051:3:31","nodeType":"YulIdentifier","src":"12051:3:31"},"nativeSrc":"12051:22:31","nodeType":"YulFunctionCall","src":"12051:22:31"},{"name":"dataEnd","nativeSrc":"12075:7:31","nodeType":"YulIdentifier","src":"12075:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"12005:45:31","nodeType":"YulIdentifier","src":"12005:45:31"},"nativeSrc":"12005:78:31","nodeType":"YulFunctionCall","src":"12005:78:31"},"variableNames":[{"name":"value0","nativeSrc":"11995:6:31","nodeType":"YulIdentifier","src":"11995:6:31"}]}]},{"nativeSrc":"12103:303:31","nodeType":"YulBlock","src":"12103:303:31","statements":[{"nativeSrc":"12118:46:31","nodeType":"YulVariableDeclaration","src":"12118:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12149:9:31","nodeType":"YulIdentifier","src":"12149:9:31"},{"kind":"number","nativeSrc":"12160:2:31","nodeType":"YulLiteral","src":"12160:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12145:3:31","nodeType":"YulIdentifier","src":"12145:3:31"},"nativeSrc":"12145:18:31","nodeType":"YulFunctionCall","src":"12145:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"12132:12:31","nodeType":"YulIdentifier","src":"12132:12:31"},"nativeSrc":"12132:32:31","nodeType":"YulFunctionCall","src":"12132:32:31"},"variables":[{"name":"offset","nativeSrc":"12122:6:31","nodeType":"YulTypedName","src":"12122:6:31","type":""}]},{"body":{"nativeSrc":"12211:83:31","nodeType":"YulBlock","src":"12211:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"12213:77:31","nodeType":"YulIdentifier","src":"12213:77:31"},"nativeSrc":"12213:79:31","nodeType":"YulFunctionCall","src":"12213:79:31"},"nativeSrc":"12213:79:31","nodeType":"YulExpressionStatement","src":"12213:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"12183:6:31","nodeType":"YulIdentifier","src":"12183:6:31"},{"kind":"number","nativeSrc":"12191:18:31","nodeType":"YulLiteral","src":"12191:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"12180:2:31","nodeType":"YulIdentifier","src":"12180:2:31"},"nativeSrc":"12180:30:31","nodeType":"YulFunctionCall","src":"12180:30:31"},"nativeSrc":"12177:117:31","nodeType":"YulIf","src":"12177:117:31"},{"nativeSrc":"12308:88:31","nodeType":"YulAssignment","src":"12308:88:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12368:9:31","nodeType":"YulIdentifier","src":"12368:9:31"},{"name":"offset","nativeSrc":"12379:6:31","nodeType":"YulIdentifier","src":"12379:6:31"}],"functionName":{"name":"add","nativeSrc":"12364:3:31","nodeType":"YulIdentifier","src":"12364:3:31"},"nativeSrc":"12364:22:31","nodeType":"YulFunctionCall","src":"12364:22:31"},{"name":"dataEnd","nativeSrc":"12388:7:31","nodeType":"YulIdentifier","src":"12388:7:31"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"12318:45:31","nodeType":"YulIdentifier","src":"12318:45:31"},"nativeSrc":"12318:78:31","nodeType":"YulFunctionCall","src":"12318:78:31"},"variableNames":[{"name":"value1","nativeSrc":"12308:6:31","nodeType":"YulIdentifier","src":"12308:6:31"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"11519:894:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11614:9:31","nodeType":"YulTypedName","src":"11614:9:31","type":""},{"name":"dataEnd","nativeSrc":"11625:7:31","nodeType":"YulTypedName","src":"11625:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11637:6:31","nodeType":"YulTypedName","src":"11637:6:31","type":""},{"name":"value1","nativeSrc":"11645:6:31","nodeType":"YulTypedName","src":"11645:6:31","type":""}],"src":"11519:894:31"},{"body":{"nativeSrc":"12493:40:31","nodeType":"YulBlock","src":"12493:40:31","statements":[{"nativeSrc":"12504:22:31","nodeType":"YulAssignment","src":"12504:22:31","value":{"arguments":[{"name":"value","nativeSrc":"12520:5:31","nodeType":"YulIdentifier","src":"12520:5:31"}],"functionName":{"name":"mload","nativeSrc":"12514:5:31","nodeType":"YulIdentifier","src":"12514:5:31"},"nativeSrc":"12514:12:31","nodeType":"YulFunctionCall","src":"12514:12:31"},"variableNames":[{"name":"length","nativeSrc":"12504:6:31","nodeType":"YulIdentifier","src":"12504:6:31"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"12419:114:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12476:5:31","nodeType":"YulTypedName","src":"12476:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12486:6:31","nodeType":"YulTypedName","src":"12486:6:31","type":""}],"src":"12419:114:31"},{"body":{"nativeSrc":"12650:73:31","nodeType":"YulBlock","src":"12650:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12667:3:31","nodeType":"YulIdentifier","src":"12667:3:31"},{"name":"length","nativeSrc":"12672:6:31","nodeType":"YulIdentifier","src":"12672:6:31"}],"functionName":{"name":"mstore","nativeSrc":"12660:6:31","nodeType":"YulIdentifier","src":"12660:6:31"},"nativeSrc":"12660:19:31","nodeType":"YulFunctionCall","src":"12660:19:31"},"nativeSrc":"12660:19:31","nodeType":"YulExpressionStatement","src":"12660:19:31"},{"nativeSrc":"12688:29:31","nodeType":"YulAssignment","src":"12688:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"12707:3:31","nodeType":"YulIdentifier","src":"12707:3:31"},{"kind":"number","nativeSrc":"12712:4:31","nodeType":"YulLiteral","src":"12712:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12703:3:31","nodeType":"YulIdentifier","src":"12703:3:31"},"nativeSrc":"12703:14:31","nodeType":"YulFunctionCall","src":"12703:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"12688:11:31","nodeType":"YulIdentifier","src":"12688:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"12539:184:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12622:3:31","nodeType":"YulTypedName","src":"12622:3:31","type":""},{"name":"length","nativeSrc":"12627:6:31","nodeType":"YulTypedName","src":"12627:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"12638:11:31","nodeType":"YulTypedName","src":"12638:11:31","type":""}],"src":"12539:184:31"},{"body":{"nativeSrc":"12801:60:31","nodeType":"YulBlock","src":"12801:60:31","statements":[{"nativeSrc":"12811:11:31","nodeType":"YulAssignment","src":"12811:11:31","value":{"name":"ptr","nativeSrc":"12819:3:31","nodeType":"YulIdentifier","src":"12819:3:31"},"variableNames":[{"name":"data","nativeSrc":"12811:4:31","nodeType":"YulIdentifier","src":"12811:4:31"}]},{"nativeSrc":"12832:22:31","nodeType":"YulAssignment","src":"12832:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"12844:3:31","nodeType":"YulIdentifier","src":"12844:3:31"},{"kind":"number","nativeSrc":"12849:4:31","nodeType":"YulLiteral","src":"12849:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12840:3:31","nodeType":"YulIdentifier","src":"12840:3:31"},"nativeSrc":"12840:14:31","nodeType":"YulFunctionCall","src":"12840:14:31"},"variableNames":[{"name":"data","nativeSrc":"12832:4:31","nodeType":"YulIdentifier","src":"12832:4:31"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"12729:132:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12788:3:31","nodeType":"YulTypedName","src":"12788:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"12796:4:31","nodeType":"YulTypedName","src":"12796:4:31","type":""}],"src":"12729:132:31"},{"body":{"nativeSrc":"12922:53:31","nodeType":"YulBlock","src":"12922:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12939:3:31","nodeType":"YulIdentifier","src":"12939:3:31"},{"arguments":[{"name":"value","nativeSrc":"12962:5:31","nodeType":"YulIdentifier","src":"12962:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"12944:17:31","nodeType":"YulIdentifier","src":"12944:17:31"},"nativeSrc":"12944:24:31","nodeType":"YulFunctionCall","src":"12944:24:31"}],"functionName":{"name":"mstore","nativeSrc":"12932:6:31","nodeType":"YulIdentifier","src":"12932:6:31"},"nativeSrc":"12932:37:31","nodeType":"YulFunctionCall","src":"12932:37:31"},"nativeSrc":"12932:37:31","nodeType":"YulExpressionStatement","src":"12932:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"12867:108:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12910:5:31","nodeType":"YulTypedName","src":"12910:5:31","type":""},{"name":"pos","nativeSrc":"12917:3:31","nodeType":"YulTypedName","src":"12917:3:31","type":""}],"src":"12867:108:31"},{"body":{"nativeSrc":"13061:99:31","nodeType":"YulBlock","src":"13061:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"13105:6:31","nodeType":"YulIdentifier","src":"13105:6:31"},{"name":"pos","nativeSrc":"13113:3:31","nodeType":"YulIdentifier","src":"13113:3:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"13071:33:31","nodeType":"YulIdentifier","src":"13071:33:31"},"nativeSrc":"13071:46:31","nodeType":"YulFunctionCall","src":"13071:46:31"},"nativeSrc":"13071:46:31","nodeType":"YulExpressionStatement","src":"13071:46:31"},{"nativeSrc":"13126:28:31","nodeType":"YulAssignment","src":"13126:28:31","value":{"arguments":[{"name":"pos","nativeSrc":"13144:3:31","nodeType":"YulIdentifier","src":"13144:3:31"},{"kind":"number","nativeSrc":"13149:4:31","nodeType":"YulLiteral","src":"13149:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13140:3:31","nodeType":"YulIdentifier","src":"13140:3:31"},"nativeSrc":"13140:14:31","nodeType":"YulFunctionCall","src":"13140:14:31"},"variableNames":[{"name":"updatedPos","nativeSrc":"13126:10:31","nodeType":"YulIdentifier","src":"13126:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"12981:179:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"13034:6:31","nodeType":"YulTypedName","src":"13034:6:31","type":""},{"name":"pos","nativeSrc":"13042:3:31","nodeType":"YulTypedName","src":"13042:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"13050:10:31","nodeType":"YulTypedName","src":"13050:10:31","type":""}],"src":"12981:179:31"},{"body":{"nativeSrc":"13241:38:31","nodeType":"YulBlock","src":"13241:38:31","statements":[{"nativeSrc":"13251:22:31","nodeType":"YulAssignment","src":"13251:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"13263:3:31","nodeType":"YulIdentifier","src":"13263:3:31"},{"kind":"number","nativeSrc":"13268:4:31","nodeType":"YulLiteral","src":"13268:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13259:3:31","nodeType":"YulIdentifier","src":"13259:3:31"},"nativeSrc":"13259:14:31","nodeType":"YulFunctionCall","src":"13259:14:31"},"variableNames":[{"name":"next","nativeSrc":"13251:4:31","nodeType":"YulIdentifier","src":"13251:4:31"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13166:113:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"13228:3:31","nodeType":"YulTypedName","src":"13228:3:31","type":""}],"returnVariables":[{"name":"next","nativeSrc":"13236:4:31","nodeType":"YulTypedName","src":"13236:4:31","type":""}],"src":"13166:113:31"},{"body":{"nativeSrc":"13439:608:31","nodeType":"YulBlock","src":"13439:608:31","statements":[{"nativeSrc":"13449:68:31","nodeType":"YulVariableDeclaration","src":"13449:68:31","value":{"arguments":[{"name":"value","nativeSrc":"13511:5:31","nodeType":"YulIdentifier","src":"13511:5:31"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13463:47:31","nodeType":"YulIdentifier","src":"13463:47:31"},"nativeSrc":"13463:54:31","nodeType":"YulFunctionCall","src":"13463:54:31"},"variables":[{"name":"length","nativeSrc":"13453:6:31","nodeType":"YulTypedName","src":"13453:6:31","type":""}]},{"nativeSrc":"13526:93:31","nodeType":"YulAssignment","src":"13526:93:31","value":{"arguments":[{"name":"pos","nativeSrc":"13607:3:31","nodeType":"YulIdentifier","src":"13607:3:31"},{"name":"length","nativeSrc":"13612:6:31","nodeType":"YulIdentifier","src":"13612:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"13533:73:31","nodeType":"YulIdentifier","src":"13533:73:31"},"nativeSrc":"13533:86:31","nodeType":"YulFunctionCall","src":"13533:86:31"},"variableNames":[{"name":"pos","nativeSrc":"13526:3:31","nodeType":"YulIdentifier","src":"13526:3:31"}]},{"nativeSrc":"13628:71:31","nodeType":"YulVariableDeclaration","src":"13628:71:31","value":{"arguments":[{"name":"value","nativeSrc":"13693:5:31","nodeType":"YulIdentifier","src":"13693:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13643:49:31","nodeType":"YulIdentifier","src":"13643:49:31"},"nativeSrc":"13643:56:31","nodeType":"YulFunctionCall","src":"13643:56:31"},"variables":[{"name":"baseRef","nativeSrc":"13632:7:31","nodeType":"YulTypedName","src":"13632:7:31","type":""}]},{"nativeSrc":"13708:21:31","nodeType":"YulVariableDeclaration","src":"13708:21:31","value":{"name":"baseRef","nativeSrc":"13722:7:31","nodeType":"YulIdentifier","src":"13722:7:31"},"variables":[{"name":"srcPtr","nativeSrc":"13712:6:31","nodeType":"YulTypedName","src":"13712:6:31","type":""}]},{"body":{"nativeSrc":"13798:224:31","nodeType":"YulBlock","src":"13798:224:31","statements":[{"nativeSrc":"13812:34:31","nodeType":"YulVariableDeclaration","src":"13812:34:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"13839:6:31","nodeType":"YulIdentifier","src":"13839:6:31"}],"functionName":{"name":"mload","nativeSrc":"13833:5:31","nodeType":"YulIdentifier","src":"13833:5:31"},"nativeSrc":"13833:13:31","nodeType":"YulFunctionCall","src":"13833:13:31"},"variables":[{"name":"elementValue0","nativeSrc":"13816:13:31","nodeType":"YulTypedName","src":"13816:13:31","type":""}]},{"nativeSrc":"13859:70:31","nodeType":"YulAssignment","src":"13859:70:31","value":{"arguments":[{"name":"elementValue0","nativeSrc":"13910:13:31","nodeType":"YulIdentifier","src":"13910:13:31"},{"name":"pos","nativeSrc":"13925:3:31","nodeType":"YulIdentifier","src":"13925:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"13866:43:31","nodeType":"YulIdentifier","src":"13866:43:31"},"nativeSrc":"13866:63:31","nodeType":"YulFunctionCall","src":"13866:63:31"},"variableNames":[{"name":"pos","nativeSrc":"13859:3:31","nodeType":"YulIdentifier","src":"13859:3:31"}]},{"nativeSrc":"13942:70:31","nodeType":"YulAssignment","src":"13942:70:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"14005:6:31","nodeType":"YulIdentifier","src":"14005:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"13952:52:31","nodeType":"YulIdentifier","src":"13952:52:31"},"nativeSrc":"13952:60:31","nodeType":"YulFunctionCall","src":"13952:60:31"},"variableNames":[{"name":"srcPtr","nativeSrc":"13942:6:31","nodeType":"YulIdentifier","src":"13942:6:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"13760:1:31","nodeType":"YulIdentifier","src":"13760:1:31"},{"name":"length","nativeSrc":"13763:6:31","nodeType":"YulIdentifier","src":"13763:6:31"}],"functionName":{"name":"lt","nativeSrc":"13757:2:31","nodeType":"YulIdentifier","src":"13757:2:31"},"nativeSrc":"13757:13:31","nodeType":"YulFunctionCall","src":"13757:13:31"},"nativeSrc":"13738:284:31","nodeType":"YulForLoop","post":{"nativeSrc":"13771:18:31","nodeType":"YulBlock","src":"13771:18:31","statements":[{"nativeSrc":"13773:14:31","nodeType":"YulAssignment","src":"13773:14:31","value":{"arguments":[{"name":"i","nativeSrc":"13782:1:31","nodeType":"YulIdentifier","src":"13782:1:31"},{"kind":"number","nativeSrc":"13785:1:31","nodeType":"YulLiteral","src":"13785:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"13778:3:31","nodeType":"YulIdentifier","src":"13778:3:31"},"nativeSrc":"13778:9:31","nodeType":"YulFunctionCall","src":"13778:9:31"},"variableNames":[{"name":"i","nativeSrc":"13773:1:31","nodeType":"YulIdentifier","src":"13773:1:31"}]}]},"pre":{"nativeSrc":"13742:14:31","nodeType":"YulBlock","src":"13742:14:31","statements":[{"nativeSrc":"13744:10:31","nodeType":"YulVariableDeclaration","src":"13744:10:31","value":{"kind":"number","nativeSrc":"13753:1:31","nodeType":"YulLiteral","src":"13753:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"13748:1:31","nodeType":"YulTypedName","src":"13748:1:31","type":""}]}]},"src":"13738:284:31"},{"nativeSrc":"14031:10:31","nodeType":"YulAssignment","src":"14031:10:31","value":{"name":"pos","nativeSrc":"14038:3:31","nodeType":"YulIdentifier","src":"14038:3:31"},"variableNames":[{"name":"end","nativeSrc":"14031:3:31","nodeType":"YulIdentifier","src":"14031:3:31"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"13315:732:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13418:5:31","nodeType":"YulTypedName","src":"13418:5:31","type":""},{"name":"pos","nativeSrc":"13425:3:31","nodeType":"YulTypedName","src":"13425:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13434:3:31","nodeType":"YulTypedName","src":"13434:3:31","type":""}],"src":"13315:732:31"},{"body":{"nativeSrc":"14201:225:31","nodeType":"YulBlock","src":"14201:225:31","statements":[{"nativeSrc":"14211:26:31","nodeType":"YulAssignment","src":"14211:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"14223:9:31","nodeType":"YulIdentifier","src":"14223:9:31"},{"kind":"number","nativeSrc":"14234:2:31","nodeType":"YulLiteral","src":"14234:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14219:3:31","nodeType":"YulIdentifier","src":"14219:3:31"},"nativeSrc":"14219:18:31","nodeType":"YulFunctionCall","src":"14219:18:31"},"variableNames":[{"name":"tail","nativeSrc":"14211:4:31","nodeType":"YulIdentifier","src":"14211:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14258:9:31","nodeType":"YulIdentifier","src":"14258:9:31"},{"kind":"number","nativeSrc":"14269:1:31","nodeType":"YulLiteral","src":"14269:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14254:3:31","nodeType":"YulIdentifier","src":"14254:3:31"},"nativeSrc":"14254:17:31","nodeType":"YulFunctionCall","src":"14254:17:31"},{"arguments":[{"name":"tail","nativeSrc":"14277:4:31","nodeType":"YulIdentifier","src":"14277:4:31"},{"name":"headStart","nativeSrc":"14283:9:31","nodeType":"YulIdentifier","src":"14283:9:31"}],"functionName":{"name":"sub","nativeSrc":"14273:3:31","nodeType":"YulIdentifier","src":"14273:3:31"},"nativeSrc":"14273:20:31","nodeType":"YulFunctionCall","src":"14273:20:31"}],"functionName":{"name":"mstore","nativeSrc":"14247:6:31","nodeType":"YulIdentifier","src":"14247:6:31"},"nativeSrc":"14247:47:31","nodeType":"YulFunctionCall","src":"14247:47:31"},"nativeSrc":"14247:47:31","nodeType":"YulExpressionStatement","src":"14247:47:31"},{"nativeSrc":"14303:116:31","nodeType":"YulAssignment","src":"14303:116:31","value":{"arguments":[{"name":"value0","nativeSrc":"14405:6:31","nodeType":"YulIdentifier","src":"14405:6:31"},{"name":"tail","nativeSrc":"14414:4:31","nodeType":"YulIdentifier","src":"14414:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"14311:93:31","nodeType":"YulIdentifier","src":"14311:93:31"},"nativeSrc":"14311:108:31","nodeType":"YulFunctionCall","src":"14311:108:31"},"variableNames":[{"name":"tail","nativeSrc":"14303:4:31","nodeType":"YulIdentifier","src":"14303:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"14053:373:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14173:9:31","nodeType":"YulTypedName","src":"14173:9:31","type":""},{"name":"value0","nativeSrc":"14185:6:31","nodeType":"YulTypedName","src":"14185:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14196:4:31","nodeType":"YulTypedName","src":"14196:4:31","type":""}],"src":"14053:373:31"},{"body":{"nativeSrc":"14499:241:31","nodeType":"YulBlock","src":"14499:241:31","statements":[{"body":{"nativeSrc":"14604:22:31","nodeType":"YulBlock","src":"14604:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"14606:16:31","nodeType":"YulIdentifier","src":"14606:16:31"},"nativeSrc":"14606:18:31","nodeType":"YulFunctionCall","src":"14606:18:31"},"nativeSrc":"14606:18:31","nodeType":"YulExpressionStatement","src":"14606:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"14576:6:31","nodeType":"YulIdentifier","src":"14576:6:31"},{"kind":"number","nativeSrc":"14584:18:31","nodeType":"YulLiteral","src":"14584:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14573:2:31","nodeType":"YulIdentifier","src":"14573:2:31"},"nativeSrc":"14573:30:31","nodeType":"YulFunctionCall","src":"14573:30:31"},"nativeSrc":"14570:56:31","nodeType":"YulIf","src":"14570:56:31"},{"nativeSrc":"14636:37:31","nodeType":"YulAssignment","src":"14636:37:31","value":{"arguments":[{"name":"length","nativeSrc":"14666:6:31","nodeType":"YulIdentifier","src":"14666:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"14644:21:31","nodeType":"YulIdentifier","src":"14644:21:31"},"nativeSrc":"14644:29:31","nodeType":"YulFunctionCall","src":"14644:29:31"},"variableNames":[{"name":"size","nativeSrc":"14636:4:31","nodeType":"YulIdentifier","src":"14636:4:31"}]},{"nativeSrc":"14710:23:31","nodeType":"YulAssignment","src":"14710:23:31","value":{"arguments":[{"name":"size","nativeSrc":"14722:4:31","nodeType":"YulIdentifier","src":"14722:4:31"},{"kind":"number","nativeSrc":"14728:4:31","nodeType":"YulLiteral","src":"14728:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14718:3:31","nodeType":"YulIdentifier","src":"14718:3:31"},"nativeSrc":"14718:15:31","nodeType":"YulFunctionCall","src":"14718:15:31"},"variableNames":[{"name":"size","nativeSrc":"14710:4:31","nodeType":"YulIdentifier","src":"14710:4:31"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"14432:308:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"14483:6:31","nodeType":"YulTypedName","src":"14483:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"14494:4:31","nodeType":"YulTypedName","src":"14494:4:31","type":""}],"src":"14432:308:31"},{"body":{"nativeSrc":"14830:341:31","nodeType":"YulBlock","src":"14830:341:31","statements":[{"nativeSrc":"14840:75:31","nodeType":"YulAssignment","src":"14840:75:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"14907:6:31","nodeType":"YulIdentifier","src":"14907:6:31"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"14865:41:31","nodeType":"YulIdentifier","src":"14865:41:31"},"nativeSrc":"14865:49:31","nodeType":"YulFunctionCall","src":"14865:49:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"14849:15:31","nodeType":"YulIdentifier","src":"14849:15:31"},"nativeSrc":"14849:66:31","nodeType":"YulFunctionCall","src":"14849:66:31"},"variableNames":[{"name":"array","nativeSrc":"14840:5:31","nodeType":"YulIdentifier","src":"14840:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"14931:5:31","nodeType":"YulIdentifier","src":"14931:5:31"},{"name":"length","nativeSrc":"14938:6:31","nodeType":"YulIdentifier","src":"14938:6:31"}],"functionName":{"name":"mstore","nativeSrc":"14924:6:31","nodeType":"YulIdentifier","src":"14924:6:31"},"nativeSrc":"14924:21:31","nodeType":"YulFunctionCall","src":"14924:21:31"},"nativeSrc":"14924:21:31","nodeType":"YulExpressionStatement","src":"14924:21:31"},{"nativeSrc":"14954:27:31","nodeType":"YulVariableDeclaration","src":"14954:27:31","value":{"arguments":[{"name":"array","nativeSrc":"14969:5:31","nodeType":"YulIdentifier","src":"14969:5:31"},{"kind":"number","nativeSrc":"14976:4:31","nodeType":"YulLiteral","src":"14976:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14965:3:31","nodeType":"YulIdentifier","src":"14965:3:31"},"nativeSrc":"14965:16:31","nodeType":"YulFunctionCall","src":"14965:16:31"},"variables":[{"name":"dst","nativeSrc":"14958:3:31","nodeType":"YulTypedName","src":"14958:3:31","type":""}]},{"body":{"nativeSrc":"15019:83:31","nodeType":"YulBlock","src":"15019:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"15021:77:31","nodeType":"YulIdentifier","src":"15021:77:31"},"nativeSrc":"15021:79:31","nodeType":"YulFunctionCall","src":"15021:79:31"},"nativeSrc":"15021:79:31","nodeType":"YulExpressionStatement","src":"15021:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"15000:3:31","nodeType":"YulIdentifier","src":"15000:3:31"},{"name":"length","nativeSrc":"15005:6:31","nodeType":"YulIdentifier","src":"15005:6:31"}],"functionName":{"name":"add","nativeSrc":"14996:3:31","nodeType":"YulIdentifier","src":"14996:3:31"},"nativeSrc":"14996:16:31","nodeType":"YulFunctionCall","src":"14996:16:31"},{"name":"end","nativeSrc":"15014:3:31","nodeType":"YulIdentifier","src":"15014:3:31"}],"functionName":{"name":"gt","nativeSrc":"14993:2:31","nodeType":"YulIdentifier","src":"14993:2:31"},"nativeSrc":"14993:25:31","nodeType":"YulFunctionCall","src":"14993:25:31"},"nativeSrc":"14990:112:31","nodeType":"YulIf","src":"14990:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"15148:3:31","nodeType":"YulIdentifier","src":"15148:3:31"},{"name":"dst","nativeSrc":"15153:3:31","nodeType":"YulIdentifier","src":"15153:3:31"},{"name":"length","nativeSrc":"15158:6:31","nodeType":"YulIdentifier","src":"15158:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"15111:36:31","nodeType":"YulIdentifier","src":"15111:36:31"},"nativeSrc":"15111:54:31","nodeType":"YulFunctionCall","src":"15111:54:31"},"nativeSrc":"15111:54:31","nodeType":"YulExpressionStatement","src":"15111:54:31"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"14746:425:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"14803:3:31","nodeType":"YulTypedName","src":"14803:3:31","type":""},{"name":"length","nativeSrc":"14808:6:31","nodeType":"YulTypedName","src":"14808:6:31","type":""},{"name":"end","nativeSrc":"14816:3:31","nodeType":"YulTypedName","src":"14816:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"14824:5:31","nodeType":"YulTypedName","src":"14824:5:31","type":""}],"src":"14746:425:31"},{"body":{"nativeSrc":"15253:278:31","nodeType":"YulBlock","src":"15253:278:31","statements":[{"body":{"nativeSrc":"15302:83:31","nodeType":"YulBlock","src":"15302:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"15304:77:31","nodeType":"YulIdentifier","src":"15304:77:31"},"nativeSrc":"15304:79:31","nodeType":"YulFunctionCall","src":"15304:79:31"},"nativeSrc":"15304:79:31","nodeType":"YulExpressionStatement","src":"15304:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"15281:6:31","nodeType":"YulIdentifier","src":"15281:6:31"},{"kind":"number","nativeSrc":"15289:4:31","nodeType":"YulLiteral","src":"15289:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"15277:3:31","nodeType":"YulIdentifier","src":"15277:3:31"},"nativeSrc":"15277:17:31","nodeType":"YulFunctionCall","src":"15277:17:31"},{"name":"end","nativeSrc":"15296:3:31","nodeType":"YulIdentifier","src":"15296:3:31"}],"functionName":{"name":"slt","nativeSrc":"15273:3:31","nodeType":"YulIdentifier","src":"15273:3:31"},"nativeSrc":"15273:27:31","nodeType":"YulFunctionCall","src":"15273:27:31"}],"functionName":{"name":"iszero","nativeSrc":"15266:6:31","nodeType":"YulIdentifier","src":"15266:6:31"},"nativeSrc":"15266:35:31","nodeType":"YulFunctionCall","src":"15266:35:31"},"nativeSrc":"15263:122:31","nodeType":"YulIf","src":"15263:122:31"},{"nativeSrc":"15394:34:31","nodeType":"YulVariableDeclaration","src":"15394:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"15421:6:31","nodeType":"YulIdentifier","src":"15421:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"15408:12:31","nodeType":"YulIdentifier","src":"15408:12:31"},"nativeSrc":"15408:20:31","nodeType":"YulFunctionCall","src":"15408:20:31"},"variables":[{"name":"length","nativeSrc":"15398:6:31","nodeType":"YulTypedName","src":"15398:6:31","type":""}]},{"nativeSrc":"15437:88:31","nodeType":"YulAssignment","src":"15437:88:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"15498:6:31","nodeType":"YulIdentifier","src":"15498:6:31"},{"kind":"number","nativeSrc":"15506:4:31","nodeType":"YulLiteral","src":"15506:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15494:3:31","nodeType":"YulIdentifier","src":"15494:3:31"},"nativeSrc":"15494:17:31","nodeType":"YulFunctionCall","src":"15494:17:31"},{"name":"length","nativeSrc":"15513:6:31","nodeType":"YulIdentifier","src":"15513:6:31"},{"name":"end","nativeSrc":"15521:3:31","nodeType":"YulIdentifier","src":"15521:3:31"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"15446:47:31","nodeType":"YulIdentifier","src":"15446:47:31"},"nativeSrc":"15446:79:31","nodeType":"YulFunctionCall","src":"15446:79:31"},"variableNames":[{"name":"array","nativeSrc":"15437:5:31","nodeType":"YulIdentifier","src":"15437:5:31"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"15191:340:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15231:6:31","nodeType":"YulTypedName","src":"15231:6:31","type":""},{"name":"end","nativeSrc":"15239:3:31","nodeType":"YulTypedName","src":"15239:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"15247:5:31","nodeType":"YulTypedName","src":"15247:5:31","type":""}],"src":"15191:340:31"},{"body":{"nativeSrc":"15630:561:31","nodeType":"YulBlock","src":"15630:561:31","statements":[{"body":{"nativeSrc":"15676:83:31","nodeType":"YulBlock","src":"15676:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15678:77:31","nodeType":"YulIdentifier","src":"15678:77:31"},"nativeSrc":"15678:79:31","nodeType":"YulFunctionCall","src":"15678:79:31"},"nativeSrc":"15678:79:31","nodeType":"YulExpressionStatement","src":"15678:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15651:7:31","nodeType":"YulIdentifier","src":"15651:7:31"},{"name":"headStart","nativeSrc":"15660:9:31","nodeType":"YulIdentifier","src":"15660:9:31"}],"functionName":{"name":"sub","nativeSrc":"15647:3:31","nodeType":"YulIdentifier","src":"15647:3:31"},"nativeSrc":"15647:23:31","nodeType":"YulFunctionCall","src":"15647:23:31"},{"kind":"number","nativeSrc":"15672:2:31","nodeType":"YulLiteral","src":"15672:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"15643:3:31","nodeType":"YulIdentifier","src":"15643:3:31"},"nativeSrc":"15643:32:31","nodeType":"YulFunctionCall","src":"15643:32:31"},"nativeSrc":"15640:119:31","nodeType":"YulIf","src":"15640:119:31"},{"nativeSrc":"15769:287:31","nodeType":"YulBlock","src":"15769:287:31","statements":[{"nativeSrc":"15784:45:31","nodeType":"YulVariableDeclaration","src":"15784:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15815:9:31","nodeType":"YulIdentifier","src":"15815:9:31"},{"kind":"number","nativeSrc":"15826:1:31","nodeType":"YulLiteral","src":"15826:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15811:3:31","nodeType":"YulIdentifier","src":"15811:3:31"},"nativeSrc":"15811:17:31","nodeType":"YulFunctionCall","src":"15811:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"15798:12:31","nodeType":"YulIdentifier","src":"15798:12:31"},"nativeSrc":"15798:31:31","nodeType":"YulFunctionCall","src":"15798:31:31"},"variables":[{"name":"offset","nativeSrc":"15788:6:31","nodeType":"YulTypedName","src":"15788:6:31","type":""}]},{"body":{"nativeSrc":"15876:83:31","nodeType":"YulBlock","src":"15876:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"15878:77:31","nodeType":"YulIdentifier","src":"15878:77:31"},"nativeSrc":"15878:79:31","nodeType":"YulFunctionCall","src":"15878:79:31"},"nativeSrc":"15878:79:31","nodeType":"YulExpressionStatement","src":"15878:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"15848:6:31","nodeType":"YulIdentifier","src":"15848:6:31"},{"kind":"number","nativeSrc":"15856:18:31","nodeType":"YulLiteral","src":"15856:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"15845:2:31","nodeType":"YulIdentifier","src":"15845:2:31"},"nativeSrc":"15845:30:31","nodeType":"YulFunctionCall","src":"15845:30:31"},"nativeSrc":"15842:117:31","nodeType":"YulIf","src":"15842:117:31"},{"nativeSrc":"15973:73:31","nodeType":"YulAssignment","src":"15973:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16018:9:31","nodeType":"YulIdentifier","src":"16018:9:31"},{"name":"offset","nativeSrc":"16029:6:31","nodeType":"YulIdentifier","src":"16029:6:31"}],"functionName":{"name":"add","nativeSrc":"16014:3:31","nodeType":"YulIdentifier","src":"16014:3:31"},"nativeSrc":"16014:22:31","nodeType":"YulFunctionCall","src":"16014:22:31"},{"name":"dataEnd","nativeSrc":"16038:7:31","nodeType":"YulIdentifier","src":"16038:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"15983:30:31","nodeType":"YulIdentifier","src":"15983:30:31"},"nativeSrc":"15983:63:31","nodeType":"YulFunctionCall","src":"15983:63:31"},"variableNames":[{"name":"value0","nativeSrc":"15973:6:31","nodeType":"YulIdentifier","src":"15973:6:31"}]}]},{"nativeSrc":"16066:118:31","nodeType":"YulBlock","src":"16066:118:31","statements":[{"nativeSrc":"16081:16:31","nodeType":"YulVariableDeclaration","src":"16081:16:31","value":{"kind":"number","nativeSrc":"16095:2:31","nodeType":"YulLiteral","src":"16095:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"16085:6:31","nodeType":"YulTypedName","src":"16085:6:31","type":""}]},{"nativeSrc":"16111:63:31","nodeType":"YulAssignment","src":"16111:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16146:9:31","nodeType":"YulIdentifier","src":"16146:9:31"},{"name":"offset","nativeSrc":"16157:6:31","nodeType":"YulIdentifier","src":"16157:6:31"}],"functionName":{"name":"add","nativeSrc":"16142:3:31","nodeType":"YulIdentifier","src":"16142:3:31"},"nativeSrc":"16142:22:31","nodeType":"YulFunctionCall","src":"16142:22:31"},{"name":"dataEnd","nativeSrc":"16166:7:31","nodeType":"YulIdentifier","src":"16166:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"16121:20:31","nodeType":"YulIdentifier","src":"16121:20:31"},"nativeSrc":"16121:53:31","nodeType":"YulFunctionCall","src":"16121:53:31"},"variableNames":[{"name":"value1","nativeSrc":"16111:6:31","nodeType":"YulIdentifier","src":"16111:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nativeSrc":"15537:654:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15592:9:31","nodeType":"YulTypedName","src":"15592:9:31","type":""},{"name":"dataEnd","nativeSrc":"15603:7:31","nodeType":"YulTypedName","src":"15603:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15615:6:31","nodeType":"YulTypedName","src":"15615:6:31","type":""},{"name":"value1","nativeSrc":"15623:6:31","nodeType":"YulTypedName","src":"15623:6:31","type":""}],"src":"15537:654:31"},{"body":{"nativeSrc":"16262:53:31","nodeType":"YulBlock","src":"16262:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16279:3:31","nodeType":"YulIdentifier","src":"16279:3:31"},{"arguments":[{"name":"value","nativeSrc":"16302:5:31","nodeType":"YulIdentifier","src":"16302:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"16284:17:31","nodeType":"YulIdentifier","src":"16284:17:31"},"nativeSrc":"16284:24:31","nodeType":"YulFunctionCall","src":"16284:24:31"}],"functionName":{"name":"mstore","nativeSrc":"16272:6:31","nodeType":"YulIdentifier","src":"16272:6:31"},"nativeSrc":"16272:37:31","nodeType":"YulFunctionCall","src":"16272:37:31"},"nativeSrc":"16272:37:31","nodeType":"YulExpressionStatement","src":"16272:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16197:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16250:5:31","nodeType":"YulTypedName","src":"16250:5:31","type":""},{"name":"pos","nativeSrc":"16257:3:31","nodeType":"YulTypedName","src":"16257:3:31","type":""}],"src":"16197:118:31"},{"body":{"nativeSrc":"16419:124:31","nodeType":"YulBlock","src":"16419:124:31","statements":[{"nativeSrc":"16429:26:31","nodeType":"YulAssignment","src":"16429:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"16441:9:31","nodeType":"YulIdentifier","src":"16441:9:31"},{"kind":"number","nativeSrc":"16452:2:31","nodeType":"YulLiteral","src":"16452:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16437:3:31","nodeType":"YulIdentifier","src":"16437:3:31"},"nativeSrc":"16437:18:31","nodeType":"YulFunctionCall","src":"16437:18:31"},"variableNames":[{"name":"tail","nativeSrc":"16429:4:31","nodeType":"YulIdentifier","src":"16429:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16509:6:31","nodeType":"YulIdentifier","src":"16509:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"16522:9:31","nodeType":"YulIdentifier","src":"16522:9:31"},{"kind":"number","nativeSrc":"16533:1:31","nodeType":"YulLiteral","src":"16533:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16518:3:31","nodeType":"YulIdentifier","src":"16518:3:31"},"nativeSrc":"16518:17:31","nodeType":"YulFunctionCall","src":"16518:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16465:43:31","nodeType":"YulIdentifier","src":"16465:43:31"},"nativeSrc":"16465:71:31","nodeType":"YulFunctionCall","src":"16465:71:31"},"nativeSrc":"16465:71:31","nodeType":"YulExpressionStatement","src":"16465:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"16321:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16391:9:31","nodeType":"YulTypedName","src":"16391:9:31","type":""},{"name":"value0","nativeSrc":"16403:6:31","nodeType":"YulTypedName","src":"16403:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16414:4:31","nodeType":"YulTypedName","src":"16414:4:31","type":""}],"src":"16321:222:31"},{"body":{"nativeSrc":"16589:76:31","nodeType":"YulBlock","src":"16589:76:31","statements":[{"body":{"nativeSrc":"16643:16:31","nodeType":"YulBlock","src":"16643:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16652:1:31","nodeType":"YulLiteral","src":"16652:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"16655:1:31","nodeType":"YulLiteral","src":"16655:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16645:6:31","nodeType":"YulIdentifier","src":"16645:6:31"},"nativeSrc":"16645:12:31","nodeType":"YulFunctionCall","src":"16645:12:31"},"nativeSrc":"16645:12:31","nodeType":"YulExpressionStatement","src":"16645:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16612:5:31","nodeType":"YulIdentifier","src":"16612:5:31"},{"arguments":[{"name":"value","nativeSrc":"16634:5:31","nodeType":"YulIdentifier","src":"16634:5:31"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"16619:14:31","nodeType":"YulIdentifier","src":"16619:14:31"},"nativeSrc":"16619:21:31","nodeType":"YulFunctionCall","src":"16619:21:31"}],"functionName":{"name":"eq","nativeSrc":"16609:2:31","nodeType":"YulIdentifier","src":"16609:2:31"},"nativeSrc":"16609:32:31","nodeType":"YulFunctionCall","src":"16609:32:31"}],"functionName":{"name":"iszero","nativeSrc":"16602:6:31","nodeType":"YulIdentifier","src":"16602:6:31"},"nativeSrc":"16602:40:31","nodeType":"YulFunctionCall","src":"16602:40:31"},"nativeSrc":"16599:60:31","nodeType":"YulIf","src":"16599:60:31"}]},"name":"validator_revert_t_bool","nativeSrc":"16549:116:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16582:5:31","nodeType":"YulTypedName","src":"16582:5:31","type":""}],"src":"16549:116:31"},{"body":{"nativeSrc":"16720:84:31","nodeType":"YulBlock","src":"16720:84:31","statements":[{"nativeSrc":"16730:29:31","nodeType":"YulAssignment","src":"16730:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"16752:6:31","nodeType":"YulIdentifier","src":"16752:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"16739:12:31","nodeType":"YulIdentifier","src":"16739:12:31"},"nativeSrc":"16739:20:31","nodeType":"YulFunctionCall","src":"16739:20:31"},"variableNames":[{"name":"value","nativeSrc":"16730:5:31","nodeType":"YulIdentifier","src":"16730:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16792:5:31","nodeType":"YulIdentifier","src":"16792:5:31"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"16768:23:31","nodeType":"YulIdentifier","src":"16768:23:31"},"nativeSrc":"16768:30:31","nodeType":"YulFunctionCall","src":"16768:30:31"},"nativeSrc":"16768:30:31","nodeType":"YulExpressionStatement","src":"16768:30:31"}]},"name":"abi_decode_t_bool","nativeSrc":"16671:133:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16698:6:31","nodeType":"YulTypedName","src":"16698:6:31","type":""},{"name":"end","nativeSrc":"16706:3:31","nodeType":"YulTypedName","src":"16706:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16714:5:31","nodeType":"YulTypedName","src":"16714:5:31","type":""}],"src":"16671:133:31"},{"body":{"nativeSrc":"16890:388:31","nodeType":"YulBlock","src":"16890:388:31","statements":[{"body":{"nativeSrc":"16936:83:31","nodeType":"YulBlock","src":"16936:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16938:77:31","nodeType":"YulIdentifier","src":"16938:77:31"},"nativeSrc":"16938:79:31","nodeType":"YulFunctionCall","src":"16938:79:31"},"nativeSrc":"16938:79:31","nodeType":"YulExpressionStatement","src":"16938:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16911:7:31","nodeType":"YulIdentifier","src":"16911:7:31"},{"name":"headStart","nativeSrc":"16920:9:31","nodeType":"YulIdentifier","src":"16920:9:31"}],"functionName":{"name":"sub","nativeSrc":"16907:3:31","nodeType":"YulIdentifier","src":"16907:3:31"},"nativeSrc":"16907:23:31","nodeType":"YulFunctionCall","src":"16907:23:31"},{"kind":"number","nativeSrc":"16932:2:31","nodeType":"YulLiteral","src":"16932:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"16903:3:31","nodeType":"YulIdentifier","src":"16903:3:31"},"nativeSrc":"16903:32:31","nodeType":"YulFunctionCall","src":"16903:32:31"},"nativeSrc":"16900:119:31","nodeType":"YulIf","src":"16900:119:31"},{"nativeSrc":"17029:117:31","nodeType":"YulBlock","src":"17029:117:31","statements":[{"nativeSrc":"17044:15:31","nodeType":"YulVariableDeclaration","src":"17044:15:31","value":{"kind":"number","nativeSrc":"17058:1:31","nodeType":"YulLiteral","src":"17058:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17048:6:31","nodeType":"YulTypedName","src":"17048:6:31","type":""}]},{"nativeSrc":"17073:63:31","nodeType":"YulAssignment","src":"17073:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17108:9:31","nodeType":"YulIdentifier","src":"17108:9:31"},{"name":"offset","nativeSrc":"17119:6:31","nodeType":"YulIdentifier","src":"17119:6:31"}],"functionName":{"name":"add","nativeSrc":"17104:3:31","nodeType":"YulIdentifier","src":"17104:3:31"},"nativeSrc":"17104:22:31","nodeType":"YulFunctionCall","src":"17104:22:31"},{"name":"dataEnd","nativeSrc":"17128:7:31","nodeType":"YulIdentifier","src":"17128:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17083:20:31","nodeType":"YulIdentifier","src":"17083:20:31"},"nativeSrc":"17083:53:31","nodeType":"YulFunctionCall","src":"17083:53:31"},"variableNames":[{"name":"value0","nativeSrc":"17073:6:31","nodeType":"YulIdentifier","src":"17073:6:31"}]}]},{"nativeSrc":"17156:115:31","nodeType":"YulBlock","src":"17156:115:31","statements":[{"nativeSrc":"17171:16:31","nodeType":"YulVariableDeclaration","src":"17171:16:31","value":{"kind":"number","nativeSrc":"17185:2:31","nodeType":"YulLiteral","src":"17185:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17175:6:31","nodeType":"YulTypedName","src":"17175:6:31","type":""}]},{"nativeSrc":"17201:60:31","nodeType":"YulAssignment","src":"17201:60:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17233:9:31","nodeType":"YulIdentifier","src":"17233:9:31"},{"name":"offset","nativeSrc":"17244:6:31","nodeType":"YulIdentifier","src":"17244:6:31"}],"functionName":{"name":"add","nativeSrc":"17229:3:31","nodeType":"YulIdentifier","src":"17229:3:31"},"nativeSrc":"17229:22:31","nodeType":"YulFunctionCall","src":"17229:22:31"},{"name":"dataEnd","nativeSrc":"17253:7:31","nodeType":"YulIdentifier","src":"17253:7:31"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"17211:17:31","nodeType":"YulIdentifier","src":"17211:17:31"},"nativeSrc":"17211:50:31","nodeType":"YulFunctionCall","src":"17211:50:31"},"variableNames":[{"name":"value1","nativeSrc":"17201:6:31","nodeType":"YulIdentifier","src":"17201:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"16810:468:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16852:9:31","nodeType":"YulTypedName","src":"16852:9:31","type":""},{"name":"dataEnd","nativeSrc":"16863:7:31","nodeType":"YulTypedName","src":"16863:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16875:6:31","nodeType":"YulTypedName","src":"16875:6:31","type":""},{"name":"value1","nativeSrc":"16883:6:31","nodeType":"YulTypedName","src":"16883:6:31","type":""}],"src":"16810:468:31"},{"body":{"nativeSrc":"17367:391:31","nodeType":"YulBlock","src":"17367:391:31","statements":[{"body":{"nativeSrc":"17413:83:31","nodeType":"YulBlock","src":"17413:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17415:77:31","nodeType":"YulIdentifier","src":"17415:77:31"},"nativeSrc":"17415:79:31","nodeType":"YulFunctionCall","src":"17415:79:31"},"nativeSrc":"17415:79:31","nodeType":"YulExpressionStatement","src":"17415:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17388:7:31","nodeType":"YulIdentifier","src":"17388:7:31"},{"name":"headStart","nativeSrc":"17397:9:31","nodeType":"YulIdentifier","src":"17397:9:31"}],"functionName":{"name":"sub","nativeSrc":"17384:3:31","nodeType":"YulIdentifier","src":"17384:3:31"},"nativeSrc":"17384:23:31","nodeType":"YulFunctionCall","src":"17384:23:31"},{"kind":"number","nativeSrc":"17409:2:31","nodeType":"YulLiteral","src":"17409:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"17380:3:31","nodeType":"YulIdentifier","src":"17380:3:31"},"nativeSrc":"17380:32:31","nodeType":"YulFunctionCall","src":"17380:32:31"},"nativeSrc":"17377:119:31","nodeType":"YulIf","src":"17377:119:31"},{"nativeSrc":"17506:117:31","nodeType":"YulBlock","src":"17506:117:31","statements":[{"nativeSrc":"17521:15:31","nodeType":"YulVariableDeclaration","src":"17521:15:31","value":{"kind":"number","nativeSrc":"17535:1:31","nodeType":"YulLiteral","src":"17535:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17525:6:31","nodeType":"YulTypedName","src":"17525:6:31","type":""}]},{"nativeSrc":"17550:63:31","nodeType":"YulAssignment","src":"17550:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17585:9:31","nodeType":"YulIdentifier","src":"17585:9:31"},{"name":"offset","nativeSrc":"17596:6:31","nodeType":"YulIdentifier","src":"17596:6:31"}],"functionName":{"name":"add","nativeSrc":"17581:3:31","nodeType":"YulIdentifier","src":"17581:3:31"},"nativeSrc":"17581:22:31","nodeType":"YulFunctionCall","src":"17581:22:31"},{"name":"dataEnd","nativeSrc":"17605:7:31","nodeType":"YulIdentifier","src":"17605:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17560:20:31","nodeType":"YulIdentifier","src":"17560:20:31"},"nativeSrc":"17560:53:31","nodeType":"YulFunctionCall","src":"17560:53:31"},"variableNames":[{"name":"value0","nativeSrc":"17550:6:31","nodeType":"YulIdentifier","src":"17550:6:31"}]}]},{"nativeSrc":"17633:118:31","nodeType":"YulBlock","src":"17633:118:31","statements":[{"nativeSrc":"17648:16:31","nodeType":"YulVariableDeclaration","src":"17648:16:31","value":{"kind":"number","nativeSrc":"17662:2:31","nodeType":"YulLiteral","src":"17662:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17652:6:31","nodeType":"YulTypedName","src":"17652:6:31","type":""}]},{"nativeSrc":"17678:63:31","nodeType":"YulAssignment","src":"17678:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17713:9:31","nodeType":"YulIdentifier","src":"17713:9:31"},{"name":"offset","nativeSrc":"17724:6:31","nodeType":"YulIdentifier","src":"17724:6:31"}],"functionName":{"name":"add","nativeSrc":"17709:3:31","nodeType":"YulIdentifier","src":"17709:3:31"},"nativeSrc":"17709:22:31","nodeType":"YulFunctionCall","src":"17709:22:31"},{"name":"dataEnd","nativeSrc":"17733:7:31","nodeType":"YulIdentifier","src":"17733:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17688:20:31","nodeType":"YulIdentifier","src":"17688:20:31"},"nativeSrc":"17688:53:31","nodeType":"YulFunctionCall","src":"17688:53:31"},"variableNames":[{"name":"value1","nativeSrc":"17678:6:31","nodeType":"YulIdentifier","src":"17678:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"17284:474:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17329:9:31","nodeType":"YulTypedName","src":"17329:9:31","type":""},{"name":"dataEnd","nativeSrc":"17340:7:31","nodeType":"YulTypedName","src":"17340:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17352:6:31","nodeType":"YulTypedName","src":"17352:6:31","type":""},{"name":"value1","nativeSrc":"17360:6:31","nodeType":"YulTypedName","src":"17360:6:31","type":""}],"src":"17284:474:31"},{"body":{"nativeSrc":"17907:946:31","nodeType":"YulBlock","src":"17907:946:31","statements":[{"body":{"nativeSrc":"17954:83:31","nodeType":"YulBlock","src":"17954:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17956:77:31","nodeType":"YulIdentifier","src":"17956:77:31"},"nativeSrc":"17956:79:31","nodeType":"YulFunctionCall","src":"17956:79:31"},"nativeSrc":"17956:79:31","nodeType":"YulExpressionStatement","src":"17956:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17928:7:31","nodeType":"YulIdentifier","src":"17928:7:31"},{"name":"headStart","nativeSrc":"17937:9:31","nodeType":"YulIdentifier","src":"17937:9:31"}],"functionName":{"name":"sub","nativeSrc":"17924:3:31","nodeType":"YulIdentifier","src":"17924:3:31"},"nativeSrc":"17924:23:31","nodeType":"YulFunctionCall","src":"17924:23:31"},{"kind":"number","nativeSrc":"17949:3:31","nodeType":"YulLiteral","src":"17949:3:31","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"17920:3:31","nodeType":"YulIdentifier","src":"17920:3:31"},"nativeSrc":"17920:33:31","nodeType":"YulFunctionCall","src":"17920:33:31"},"nativeSrc":"17917:120:31","nodeType":"YulIf","src":"17917:120:31"},{"nativeSrc":"18047:117:31","nodeType":"YulBlock","src":"18047:117:31","statements":[{"nativeSrc":"18062:15:31","nodeType":"YulVariableDeclaration","src":"18062:15:31","value":{"kind":"number","nativeSrc":"18076:1:31","nodeType":"YulLiteral","src":"18076:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18066:6:31","nodeType":"YulTypedName","src":"18066:6:31","type":""}]},{"nativeSrc":"18091:63:31","nodeType":"YulAssignment","src":"18091:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18126:9:31","nodeType":"YulIdentifier","src":"18126:9:31"},{"name":"offset","nativeSrc":"18137:6:31","nodeType":"YulIdentifier","src":"18137:6:31"}],"functionName":{"name":"add","nativeSrc":"18122:3:31","nodeType":"YulIdentifier","src":"18122:3:31"},"nativeSrc":"18122:22:31","nodeType":"YulFunctionCall","src":"18122:22:31"},{"name":"dataEnd","nativeSrc":"18146:7:31","nodeType":"YulIdentifier","src":"18146:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"18101:20:31","nodeType":"YulIdentifier","src":"18101:20:31"},"nativeSrc":"18101:53:31","nodeType":"YulFunctionCall","src":"18101:53:31"},"variableNames":[{"name":"value0","nativeSrc":"18091:6:31","nodeType":"YulIdentifier","src":"18091:6:31"}]}]},{"nativeSrc":"18174:118:31","nodeType":"YulBlock","src":"18174:118:31","statements":[{"nativeSrc":"18189:16:31","nodeType":"YulVariableDeclaration","src":"18189:16:31","value":{"kind":"number","nativeSrc":"18203:2:31","nodeType":"YulLiteral","src":"18203:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"18193:6:31","nodeType":"YulTypedName","src":"18193:6:31","type":""}]},{"nativeSrc":"18219:63:31","nodeType":"YulAssignment","src":"18219:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18254:9:31","nodeType":"YulIdentifier","src":"18254:9:31"},{"name":"offset","nativeSrc":"18265:6:31","nodeType":"YulIdentifier","src":"18265:6:31"}],"functionName":{"name":"add","nativeSrc":"18250:3:31","nodeType":"YulIdentifier","src":"18250:3:31"},"nativeSrc":"18250:22:31","nodeType":"YulFunctionCall","src":"18250:22:31"},{"name":"dataEnd","nativeSrc":"18274:7:31","nodeType":"YulIdentifier","src":"18274:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"18229:20:31","nodeType":"YulIdentifier","src":"18229:20:31"},"nativeSrc":"18229:53:31","nodeType":"YulFunctionCall","src":"18229:53:31"},"variableNames":[{"name":"value1","nativeSrc":"18219:6:31","nodeType":"YulIdentifier","src":"18219:6:31"}]}]},{"nativeSrc":"18302:118:31","nodeType":"YulBlock","src":"18302:118:31","statements":[{"nativeSrc":"18317:16:31","nodeType":"YulVariableDeclaration","src":"18317:16:31","value":{"kind":"number","nativeSrc":"18331:2:31","nodeType":"YulLiteral","src":"18331:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"18321:6:31","nodeType":"YulTypedName","src":"18321:6:31","type":""}]},{"nativeSrc":"18347:63:31","nodeType":"YulAssignment","src":"18347:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18382:9:31","nodeType":"YulIdentifier","src":"18382:9:31"},{"name":"offset","nativeSrc":"18393:6:31","nodeType":"YulIdentifier","src":"18393:6:31"}],"functionName":{"name":"add","nativeSrc":"18378:3:31","nodeType":"YulIdentifier","src":"18378:3:31"},"nativeSrc":"18378:22:31","nodeType":"YulFunctionCall","src":"18378:22:31"},{"name":"dataEnd","nativeSrc":"18402:7:31","nodeType":"YulIdentifier","src":"18402:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18357:20:31","nodeType":"YulIdentifier","src":"18357:20:31"},"nativeSrc":"18357:53:31","nodeType":"YulFunctionCall","src":"18357:53:31"},"variableNames":[{"name":"value2","nativeSrc":"18347:6:31","nodeType":"YulIdentifier","src":"18347:6:31"}]}]},{"nativeSrc":"18430:118:31","nodeType":"YulBlock","src":"18430:118:31","statements":[{"nativeSrc":"18445:16:31","nodeType":"YulVariableDeclaration","src":"18445:16:31","value":{"kind":"number","nativeSrc":"18459:2:31","nodeType":"YulLiteral","src":"18459:2:31","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"18449:6:31","nodeType":"YulTypedName","src":"18449:6:31","type":""}]},{"nativeSrc":"18475:63:31","nodeType":"YulAssignment","src":"18475:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18510:9:31","nodeType":"YulIdentifier","src":"18510:9:31"},{"name":"offset","nativeSrc":"18521:6:31","nodeType":"YulIdentifier","src":"18521:6:31"}],"functionName":{"name":"add","nativeSrc":"18506:3:31","nodeType":"YulIdentifier","src":"18506:3:31"},"nativeSrc":"18506:22:31","nodeType":"YulFunctionCall","src":"18506:22:31"},{"name":"dataEnd","nativeSrc":"18530:7:31","nodeType":"YulIdentifier","src":"18530:7:31"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18485:20:31","nodeType":"YulIdentifier","src":"18485:20:31"},"nativeSrc":"18485:53:31","nodeType":"YulFunctionCall","src":"18485:53:31"},"variableNames":[{"name":"value3","nativeSrc":"18475:6:31","nodeType":"YulIdentifier","src":"18475:6:31"}]}]},{"nativeSrc":"18558:288:31","nodeType":"YulBlock","src":"18558:288:31","statements":[{"nativeSrc":"18573:47:31","nodeType":"YulVariableDeclaration","src":"18573:47:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18604:9:31","nodeType":"YulIdentifier","src":"18604:9:31"},{"kind":"number","nativeSrc":"18615:3:31","nodeType":"YulLiteral","src":"18615:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"18600:3:31","nodeType":"YulIdentifier","src":"18600:3:31"},"nativeSrc":"18600:19:31","nodeType":"YulFunctionCall","src":"18600:19:31"}],"functionName":{"name":"calldataload","nativeSrc":"18587:12:31","nodeType":"YulIdentifier","src":"18587:12:31"},"nativeSrc":"18587:33:31","nodeType":"YulFunctionCall","src":"18587:33:31"},"variables":[{"name":"offset","nativeSrc":"18577:6:31","nodeType":"YulTypedName","src":"18577:6:31","type":""}]},{"body":{"nativeSrc":"18667:83:31","nodeType":"YulBlock","src":"18667:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"18669:77:31","nodeType":"YulIdentifier","src":"18669:77:31"},"nativeSrc":"18669:79:31","nodeType":"YulFunctionCall","src":"18669:79:31"},"nativeSrc":"18669:79:31","nodeType":"YulExpressionStatement","src":"18669:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"18639:6:31","nodeType":"YulIdentifier","src":"18639:6:31"},{"kind":"number","nativeSrc":"18647:18:31","nodeType":"YulLiteral","src":"18647:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"18636:2:31","nodeType":"YulIdentifier","src":"18636:2:31"},"nativeSrc":"18636:30:31","nodeType":"YulFunctionCall","src":"18636:30:31"},"nativeSrc":"18633:117:31","nodeType":"YulIf","src":"18633:117:31"},{"nativeSrc":"18764:72:31","nodeType":"YulAssignment","src":"18764:72:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18808:9:31","nodeType":"YulIdentifier","src":"18808:9:31"},{"name":"offset","nativeSrc":"18819:6:31","nodeType":"YulIdentifier","src":"18819:6:31"}],"functionName":{"name":"add","nativeSrc":"18804:3:31","nodeType":"YulIdentifier","src":"18804:3:31"},"nativeSrc":"18804:22:31","nodeType":"YulFunctionCall","src":"18804:22:31"},{"name":"dataEnd","nativeSrc":"18828:7:31","nodeType":"YulIdentifier","src":"18828:7:31"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"18774:29:31","nodeType":"YulIdentifier","src":"18774:29:31"},"nativeSrc":"18774:62:31","nodeType":"YulFunctionCall","src":"18774:62:31"},"variableNames":[{"name":"value4","nativeSrc":"18764:6:31","nodeType":"YulIdentifier","src":"18764:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nativeSrc":"17764:1089:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17845:9:31","nodeType":"YulTypedName","src":"17845:9:31","type":""},{"name":"dataEnd","nativeSrc":"17856:7:31","nodeType":"YulTypedName","src":"17856:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17868:6:31","nodeType":"YulTypedName","src":"17868:6:31","type":""},{"name":"value1","nativeSrc":"17876:6:31","nodeType":"YulTypedName","src":"17876:6:31","type":""},{"name":"value2","nativeSrc":"17884:6:31","nodeType":"YulTypedName","src":"17884:6:31","type":""},{"name":"value3","nativeSrc":"17892:6:31","nodeType":"YulTypedName","src":"17892:6:31","type":""},{"name":"value4","nativeSrc":"17900:6:31","nodeType":"YulTypedName","src":"17900:6:31","type":""}],"src":"17764:1089:31"},{"body":{"nativeSrc":"18925:263:31","nodeType":"YulBlock","src":"18925:263:31","statements":[{"body":{"nativeSrc":"18971:83:31","nodeType":"YulBlock","src":"18971:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18973:77:31","nodeType":"YulIdentifier","src":"18973:77:31"},"nativeSrc":"18973:79:31","nodeType":"YulFunctionCall","src":"18973:79:31"},"nativeSrc":"18973:79:31","nodeType":"YulExpressionStatement","src":"18973:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18946:7:31","nodeType":"YulIdentifier","src":"18946:7:31"},{"name":"headStart","nativeSrc":"18955:9:31","nodeType":"YulIdentifier","src":"18955:9:31"}],"functionName":{"name":"sub","nativeSrc":"18942:3:31","nodeType":"YulIdentifier","src":"18942:3:31"},"nativeSrc":"18942:23:31","nodeType":"YulFunctionCall","src":"18942:23:31"},{"kind":"number","nativeSrc":"18967:2:31","nodeType":"YulLiteral","src":"18967:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18938:3:31","nodeType":"YulIdentifier","src":"18938:3:31"},"nativeSrc":"18938:32:31","nodeType":"YulFunctionCall","src":"18938:32:31"},"nativeSrc":"18935:119:31","nodeType":"YulIf","src":"18935:119:31"},{"nativeSrc":"19064:117:31","nodeType":"YulBlock","src":"19064:117:31","statements":[{"nativeSrc":"19079:15:31","nodeType":"YulVariableDeclaration","src":"19079:15:31","value":{"kind":"number","nativeSrc":"19093:1:31","nodeType":"YulLiteral","src":"19093:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19083:6:31","nodeType":"YulTypedName","src":"19083:6:31","type":""}]},{"nativeSrc":"19108:63:31","nodeType":"YulAssignment","src":"19108:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19143:9:31","nodeType":"YulIdentifier","src":"19143:9:31"},{"name":"offset","nativeSrc":"19154:6:31","nodeType":"YulIdentifier","src":"19154:6:31"}],"functionName":{"name":"add","nativeSrc":"19139:3:31","nodeType":"YulIdentifier","src":"19139:3:31"},"nativeSrc":"19139:22:31","nodeType":"YulFunctionCall","src":"19139:22:31"},{"name":"dataEnd","nativeSrc":"19163:7:31","nodeType":"YulIdentifier","src":"19163:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19118:20:31","nodeType":"YulIdentifier","src":"19118:20:31"},"nativeSrc":"19118:53:31","nodeType":"YulFunctionCall","src":"19118:53:31"},"variableNames":[{"name":"value0","nativeSrc":"19108:6:31","nodeType":"YulIdentifier","src":"19108:6:31"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"18859:329:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18895:9:31","nodeType":"YulTypedName","src":"18895:9:31","type":""},{"name":"dataEnd","nativeSrc":"18906:7:31","nodeType":"YulTypedName","src":"18906:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18918:6:31","nodeType":"YulTypedName","src":"18918:6:31","type":""}],"src":"18859:329:31"},{"body":{"nativeSrc":"19222:152:31","nodeType":"YulBlock","src":"19222:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19239:1:31","nodeType":"YulLiteral","src":"19239:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"19242:77:31","nodeType":"YulLiteral","src":"19242:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"19232:6:31","nodeType":"YulIdentifier","src":"19232:6:31"},"nativeSrc":"19232:88:31","nodeType":"YulFunctionCall","src":"19232:88:31"},"nativeSrc":"19232:88:31","nodeType":"YulExpressionStatement","src":"19232:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19336:1:31","nodeType":"YulLiteral","src":"19336:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"19339:4:31","nodeType":"YulLiteral","src":"19339:4:31","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"19329:6:31","nodeType":"YulIdentifier","src":"19329:6:31"},"nativeSrc":"19329:15:31","nodeType":"YulFunctionCall","src":"19329:15:31"},"nativeSrc":"19329:15:31","nodeType":"YulExpressionStatement","src":"19329:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19360:1:31","nodeType":"YulLiteral","src":"19360:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"19363:4:31","nodeType":"YulLiteral","src":"19363:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"19353:6:31","nodeType":"YulIdentifier","src":"19353:6:31"},"nativeSrc":"19353:15:31","nodeType":"YulFunctionCall","src":"19353:15:31"},"nativeSrc":"19353:15:31","nodeType":"YulExpressionStatement","src":"19353:15:31"}]},"name":"panic_error_0x22","nativeSrc":"19194:180:31","nodeType":"YulFunctionDefinition","src":"19194:180:31"},{"body":{"nativeSrc":"19431:269:31","nodeType":"YulBlock","src":"19431:269:31","statements":[{"nativeSrc":"19441:22:31","nodeType":"YulAssignment","src":"19441:22:31","value":{"arguments":[{"name":"data","nativeSrc":"19455:4:31","nodeType":"YulIdentifier","src":"19455:4:31"},{"kind":"number","nativeSrc":"19461:1:31","nodeType":"YulLiteral","src":"19461:1:31","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"19451:3:31","nodeType":"YulIdentifier","src":"19451:3:31"},"nativeSrc":"19451:12:31","nodeType":"YulFunctionCall","src":"19451:12:31"},"variableNames":[{"name":"length","nativeSrc":"19441:6:31","nodeType":"YulIdentifier","src":"19441:6:31"}]},{"nativeSrc":"19472:38:31","nodeType":"YulVariableDeclaration","src":"19472:38:31","value":{"arguments":[{"name":"data","nativeSrc":"19502:4:31","nodeType":"YulIdentifier","src":"19502:4:31"},{"kind":"number","nativeSrc":"19508:1:31","nodeType":"YulLiteral","src":"19508:1:31","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"19498:3:31","nodeType":"YulIdentifier","src":"19498:3:31"},"nativeSrc":"19498:12:31","nodeType":"YulFunctionCall","src":"19498:12:31"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"19476:18:31","nodeType":"YulTypedName","src":"19476:18:31","type":""}]},{"body":{"nativeSrc":"19549:51:31","nodeType":"YulBlock","src":"19549:51:31","statements":[{"nativeSrc":"19563:27:31","nodeType":"YulAssignment","src":"19563:27:31","value":{"arguments":[{"name":"length","nativeSrc":"19577:6:31","nodeType":"YulIdentifier","src":"19577:6:31"},{"kind":"number","nativeSrc":"19585:4:31","nodeType":"YulLiteral","src":"19585:4:31","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"19573:3:31","nodeType":"YulIdentifier","src":"19573:3:31"},"nativeSrc":"19573:17:31","nodeType":"YulFunctionCall","src":"19573:17:31"},"variableNames":[{"name":"length","nativeSrc":"19563:6:31","nodeType":"YulIdentifier","src":"19563:6:31"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"19529:18:31","nodeType":"YulIdentifier","src":"19529:18:31"}],"functionName":{"name":"iszero","nativeSrc":"19522:6:31","nodeType":"YulIdentifier","src":"19522:6:31"},"nativeSrc":"19522:26:31","nodeType":"YulFunctionCall","src":"19522:26:31"},"nativeSrc":"19519:81:31","nodeType":"YulIf","src":"19519:81:31"},{"body":{"nativeSrc":"19652:42:31","nodeType":"YulBlock","src":"19652:42:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"19666:16:31","nodeType":"YulIdentifier","src":"19666:16:31"},"nativeSrc":"19666:18:31","nodeType":"YulFunctionCall","src":"19666:18:31"},"nativeSrc":"19666:18:31","nodeType":"YulExpressionStatement","src":"19666:18:31"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"19616:18:31","nodeType":"YulIdentifier","src":"19616:18:31"},{"arguments":[{"name":"length","nativeSrc":"19639:6:31","nodeType":"YulIdentifier","src":"19639:6:31"},{"kind":"number","nativeSrc":"19647:2:31","nodeType":"YulLiteral","src":"19647:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"19636:2:31","nodeType":"YulIdentifier","src":"19636:2:31"},"nativeSrc":"19636:14:31","nodeType":"YulFunctionCall","src":"19636:14:31"}],"functionName":{"name":"eq","nativeSrc":"19613:2:31","nodeType":"YulIdentifier","src":"19613:2:31"},"nativeSrc":"19613:38:31","nodeType":"YulFunctionCall","src":"19613:38:31"},"nativeSrc":"19610:84:31","nodeType":"YulIf","src":"19610:84:31"}]},"name":"extract_byte_array_length","nativeSrc":"19380:320:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"19415:4:31","nodeType":"YulTypedName","src":"19415:4:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"19424:6:31","nodeType":"YulTypedName","src":"19424:6:31","type":""}],"src":"19380:320:31"},{"body":{"nativeSrc":"19832:206:31","nodeType":"YulBlock","src":"19832:206:31","statements":[{"nativeSrc":"19842:26:31","nodeType":"YulAssignment","src":"19842:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"19854:9:31","nodeType":"YulIdentifier","src":"19854:9:31"},{"kind":"number","nativeSrc":"19865:2:31","nodeType":"YulLiteral","src":"19865:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"19850:3:31","nodeType":"YulIdentifier","src":"19850:3:31"},"nativeSrc":"19850:18:31","nodeType":"YulFunctionCall","src":"19850:18:31"},"variableNames":[{"name":"tail","nativeSrc":"19842:4:31","nodeType":"YulIdentifier","src":"19842:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19922:6:31","nodeType":"YulIdentifier","src":"19922:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"19935:9:31","nodeType":"YulIdentifier","src":"19935:9:31"},{"kind":"number","nativeSrc":"19946:1:31","nodeType":"YulLiteral","src":"19946:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19931:3:31","nodeType":"YulIdentifier","src":"19931:3:31"},"nativeSrc":"19931:17:31","nodeType":"YulFunctionCall","src":"19931:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19878:43:31","nodeType":"YulIdentifier","src":"19878:43:31"},"nativeSrc":"19878:71:31","nodeType":"YulFunctionCall","src":"19878:71:31"},"nativeSrc":"19878:71:31","nodeType":"YulExpressionStatement","src":"19878:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20003:6:31","nodeType":"YulIdentifier","src":"20003:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"20016:9:31","nodeType":"YulIdentifier","src":"20016:9:31"},{"kind":"number","nativeSrc":"20027:2:31","nodeType":"YulLiteral","src":"20027:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20012:3:31","nodeType":"YulIdentifier","src":"20012:3:31"},"nativeSrc":"20012:18:31","nodeType":"YulFunctionCall","src":"20012:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19959:43:31","nodeType":"YulIdentifier","src":"19959:43:31"},"nativeSrc":"19959:72:31","nodeType":"YulFunctionCall","src":"19959:72:31"},"nativeSrc":"19959:72:31","nodeType":"YulExpressionStatement","src":"19959:72:31"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"19706:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19796:9:31","nodeType":"YulTypedName","src":"19796:9:31","type":""},{"name":"value1","nativeSrc":"19808:6:31","nodeType":"YulTypedName","src":"19808:6:31","type":""},{"name":"value0","nativeSrc":"19816:6:31","nodeType":"YulTypedName","src":"19816:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19827:4:31","nodeType":"YulTypedName","src":"19827:4:31","type":""}],"src":"19706:332:31"},{"body":{"nativeSrc":"20072:152:31","nodeType":"YulBlock","src":"20072:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20089:1:31","nodeType":"YulLiteral","src":"20089:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"20092:77:31","nodeType":"YulLiteral","src":"20092:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20082:6:31","nodeType":"YulIdentifier","src":"20082:6:31"},"nativeSrc":"20082:88:31","nodeType":"YulFunctionCall","src":"20082:88:31"},"nativeSrc":"20082:88:31","nodeType":"YulExpressionStatement","src":"20082:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20186:1:31","nodeType":"YulLiteral","src":"20186:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"20189:4:31","nodeType":"YulLiteral","src":"20189:4:31","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"20179:6:31","nodeType":"YulIdentifier","src":"20179:6:31"},"nativeSrc":"20179:15:31","nodeType":"YulFunctionCall","src":"20179:15:31"},"nativeSrc":"20179:15:31","nodeType":"YulExpressionStatement","src":"20179:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20210:1:31","nodeType":"YulLiteral","src":"20210:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"20213:4:31","nodeType":"YulLiteral","src":"20213:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20203:6:31","nodeType":"YulIdentifier","src":"20203:6:31"},"nativeSrc":"20203:15:31","nodeType":"YulFunctionCall","src":"20203:15:31"},"nativeSrc":"20203:15:31","nodeType":"YulExpressionStatement","src":"20203:15:31"}]},"name":"panic_error_0x11","nativeSrc":"20044:180:31","nodeType":"YulFunctionDefinition","src":"20044:180:31"},{"body":{"nativeSrc":"20273:190:31","nodeType":"YulBlock","src":"20273:190:31","statements":[{"nativeSrc":"20283:33:31","nodeType":"YulAssignment","src":"20283:33:31","value":{"arguments":[{"name":"value","nativeSrc":"20310:5:31","nodeType":"YulIdentifier","src":"20310:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20292:17:31","nodeType":"YulIdentifier","src":"20292:17:31"},"nativeSrc":"20292:24:31","nodeType":"YulFunctionCall","src":"20292:24:31"},"variableNames":[{"name":"value","nativeSrc":"20283:5:31","nodeType":"YulIdentifier","src":"20283:5:31"}]},{"body":{"nativeSrc":"20406:22:31","nodeType":"YulBlock","src":"20406:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"20408:16:31","nodeType":"YulIdentifier","src":"20408:16:31"},"nativeSrc":"20408:18:31","nodeType":"YulFunctionCall","src":"20408:18:31"},"nativeSrc":"20408:18:31","nodeType":"YulExpressionStatement","src":"20408:18:31"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"20331:5:31","nodeType":"YulIdentifier","src":"20331:5:31"},{"kind":"number","nativeSrc":"20338:66:31","nodeType":"YulLiteral","src":"20338:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"20328:2:31","nodeType":"YulIdentifier","src":"20328:2:31"},"nativeSrc":"20328:77:31","nodeType":"YulFunctionCall","src":"20328:77:31"},"nativeSrc":"20325:103:31","nodeType":"YulIf","src":"20325:103:31"},{"nativeSrc":"20437:20:31","nodeType":"YulAssignment","src":"20437:20:31","value":{"arguments":[{"name":"value","nativeSrc":"20448:5:31","nodeType":"YulIdentifier","src":"20448:5:31"},{"kind":"number","nativeSrc":"20455:1:31","nodeType":"YulLiteral","src":"20455:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"20444:3:31","nodeType":"YulIdentifier","src":"20444:3:31"},"nativeSrc":"20444:13:31","nodeType":"YulFunctionCall","src":"20444:13:31"},"variableNames":[{"name":"ret","nativeSrc":"20437:3:31","nodeType":"YulIdentifier","src":"20437:3:31"}]}]},"name":"increment_t_uint256","nativeSrc":"20230:233:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20259:5:31","nodeType":"YulTypedName","src":"20259:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"20269:3:31","nodeType":"YulTypedName","src":"20269:3:31","type":""}],"src":"20230:233:31"},{"body":{"nativeSrc":"20595:206:31","nodeType":"YulBlock","src":"20595:206:31","statements":[{"nativeSrc":"20605:26:31","nodeType":"YulAssignment","src":"20605:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"20617:9:31","nodeType":"YulIdentifier","src":"20617:9:31"},{"kind":"number","nativeSrc":"20628:2:31","nodeType":"YulLiteral","src":"20628:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"20613:3:31","nodeType":"YulIdentifier","src":"20613:3:31"},"nativeSrc":"20613:18:31","nodeType":"YulFunctionCall","src":"20613:18:31"},"variableNames":[{"name":"tail","nativeSrc":"20605:4:31","nodeType":"YulIdentifier","src":"20605:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20685:6:31","nodeType":"YulIdentifier","src":"20685:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"20698:9:31","nodeType":"YulIdentifier","src":"20698:9:31"},{"kind":"number","nativeSrc":"20709:1:31","nodeType":"YulLiteral","src":"20709:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20694:3:31","nodeType":"YulIdentifier","src":"20694:3:31"},"nativeSrc":"20694:17:31","nodeType":"YulFunctionCall","src":"20694:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20641:43:31","nodeType":"YulIdentifier","src":"20641:43:31"},"nativeSrc":"20641:71:31","nodeType":"YulFunctionCall","src":"20641:71:31"},"nativeSrc":"20641:71:31","nodeType":"YulExpressionStatement","src":"20641:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"20766:6:31","nodeType":"YulIdentifier","src":"20766:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"20779:9:31","nodeType":"YulIdentifier","src":"20779:9:31"},{"kind":"number","nativeSrc":"20790:2:31","nodeType":"YulLiteral","src":"20790:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20775:3:31","nodeType":"YulIdentifier","src":"20775:3:31"},"nativeSrc":"20775:18:31","nodeType":"YulFunctionCall","src":"20775:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"20722:43:31","nodeType":"YulIdentifier","src":"20722:43:31"},"nativeSrc":"20722:72:31","nodeType":"YulFunctionCall","src":"20722:72:31"},"nativeSrc":"20722:72:31","nodeType":"YulExpressionStatement","src":"20722:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"20469:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20559:9:31","nodeType":"YulTypedName","src":"20559:9:31","type":""},{"name":"value1","nativeSrc":"20571:6:31","nodeType":"YulTypedName","src":"20571:6:31","type":""},{"name":"value0","nativeSrc":"20579:6:31","nodeType":"YulTypedName","src":"20579:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20590:4:31","nodeType":"YulTypedName","src":"20590:4:31","type":""}],"src":"20469:332:31"},{"body":{"nativeSrc":"20835:152:31","nodeType":"YulBlock","src":"20835:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"20852:1:31","nodeType":"YulLiteral","src":"20852:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"20855:77:31","nodeType":"YulLiteral","src":"20855:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"20845:6:31","nodeType":"YulIdentifier","src":"20845:6:31"},"nativeSrc":"20845:88:31","nodeType":"YulFunctionCall","src":"20845:88:31"},"nativeSrc":"20845:88:31","nodeType":"YulExpressionStatement","src":"20845:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20949:1:31","nodeType":"YulLiteral","src":"20949:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"20952:4:31","nodeType":"YulLiteral","src":"20952:4:31","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"20942:6:31","nodeType":"YulIdentifier","src":"20942:6:31"},"nativeSrc":"20942:15:31","nodeType":"YulFunctionCall","src":"20942:15:31"},"nativeSrc":"20942:15:31","nodeType":"YulExpressionStatement","src":"20942:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"20973:1:31","nodeType":"YulLiteral","src":"20973:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"20976:4:31","nodeType":"YulLiteral","src":"20976:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"20966:6:31","nodeType":"YulIdentifier","src":"20966:6:31"},"nativeSrc":"20966:15:31","nodeType":"YulFunctionCall","src":"20966:15:31"},"nativeSrc":"20966:15:31","nodeType":"YulExpressionStatement","src":"20966:15:31"}]},"name":"panic_error_0x32","nativeSrc":"20807:180:31","nodeType":"YulFunctionDefinition","src":"20807:180:31"},{"body":{"nativeSrc":"21046:32:31","nodeType":"YulBlock","src":"21046:32:31","statements":[{"nativeSrc":"21056:16:31","nodeType":"YulAssignment","src":"21056:16:31","value":{"name":"value","nativeSrc":"21067:5:31","nodeType":"YulIdentifier","src":"21067:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"21056:7:31","nodeType":"YulIdentifier","src":"21056:7:31"}]}]},"name":"cleanup_t_rational_1_by_1","nativeSrc":"20993:85:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21028:5:31","nodeType":"YulTypedName","src":"21028:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"21038:7:31","nodeType":"YulTypedName","src":"21038:7:31","type":""}],"src":"20993:85:31"},{"body":{"nativeSrc":"21128:57:31","nodeType":"YulBlock","src":"21128:57:31","statements":[{"nativeSrc":"21138:41:31","nodeType":"YulAssignment","src":"21138:41:31","value":{"arguments":[{"name":"value","nativeSrc":"21153:5:31","nodeType":"YulIdentifier","src":"21153:5:31"},{"kind":"number","nativeSrc":"21160:18:31","nodeType":"YulLiteral","src":"21160:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"21149:3:31","nodeType":"YulIdentifier","src":"21149:3:31"},"nativeSrc":"21149:30:31","nodeType":"YulFunctionCall","src":"21149:30:31"},"variableNames":[{"name":"cleaned","nativeSrc":"21138:7:31","nodeType":"YulIdentifier","src":"21138:7:31"}]}]},"name":"cleanup_t_uint64","nativeSrc":"21084:101:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21110:5:31","nodeType":"YulTypedName","src":"21110:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"21120:7:31","nodeType":"YulTypedName","src":"21120:7:31","type":""}],"src":"21084:101:31"},{"body":{"nativeSrc":"21223:28:31","nodeType":"YulBlock","src":"21223:28:31","statements":[{"nativeSrc":"21233:12:31","nodeType":"YulAssignment","src":"21233:12:31","value":{"name":"value","nativeSrc":"21240:5:31","nodeType":"YulIdentifier","src":"21240:5:31"},"variableNames":[{"name":"ret","nativeSrc":"21233:3:31","nodeType":"YulIdentifier","src":"21233:3:31"}]}]},"name":"identity","nativeSrc":"21191:60:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21209:5:31","nodeType":"YulTypedName","src":"21209:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"21219:3:31","nodeType":"YulTypedName","src":"21219:3:31","type":""}],"src":"21191:60:31"},{"body":{"nativeSrc":"21324:89:31","nodeType":"YulBlock","src":"21324:89:31","statements":[{"nativeSrc":"21334:73:31","nodeType":"YulAssignment","src":"21334:73:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"21399:5:31","nodeType":"YulIdentifier","src":"21399:5:31"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nativeSrc":"21373:25:31","nodeType":"YulIdentifier","src":"21373:25:31"},"nativeSrc":"21373:32:31","nodeType":"YulFunctionCall","src":"21373:32:31"}],"functionName":{"name":"identity","nativeSrc":"21364:8:31","nodeType":"YulIdentifier","src":"21364:8:31"},"nativeSrc":"21364:42:31","nodeType":"YulFunctionCall","src":"21364:42:31"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"21347:16:31","nodeType":"YulIdentifier","src":"21347:16:31"},"nativeSrc":"21347:60:31","nodeType":"YulFunctionCall","src":"21347:60:31"},"variableNames":[{"name":"converted","nativeSrc":"21334:9:31","nodeType":"YulIdentifier","src":"21334:9:31"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"21257:156:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21304:5:31","nodeType":"YulTypedName","src":"21304:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"21314:9:31","nodeType":"YulTypedName","src":"21314:9:31","type":""}],"src":"21257:156:31"},{"body":{"nativeSrc":"21491:73:31","nodeType":"YulBlock","src":"21491:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"21508:3:31","nodeType":"YulIdentifier","src":"21508:3:31"},{"arguments":[{"name":"value","nativeSrc":"21551:5:31","nodeType":"YulIdentifier","src":"21551:5:31"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint64","nativeSrc":"21513:37:31","nodeType":"YulIdentifier","src":"21513:37:31"},"nativeSrc":"21513:44:31","nodeType":"YulFunctionCall","src":"21513:44:31"}],"functionName":{"name":"mstore","nativeSrc":"21501:6:31","nodeType":"YulIdentifier","src":"21501:6:31"},"nativeSrc":"21501:57:31","nodeType":"YulFunctionCall","src":"21501:57:31"},"nativeSrc":"21501:57:31","nodeType":"YulExpressionStatement","src":"21501:57:31"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"21419:145:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21479:5:31","nodeType":"YulTypedName","src":"21479:5:31","type":""},{"name":"pos","nativeSrc":"21486:3:31","nodeType":"YulTypedName","src":"21486:3:31","type":""}],"src":"21419:145:31"},{"body":{"nativeSrc":"21675:131:31","nodeType":"YulBlock","src":"21675:131:31","statements":[{"nativeSrc":"21685:26:31","nodeType":"YulAssignment","src":"21685:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"21697:9:31","nodeType":"YulIdentifier","src":"21697:9:31"},{"kind":"number","nativeSrc":"21708:2:31","nodeType":"YulLiteral","src":"21708:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"21693:3:31","nodeType":"YulIdentifier","src":"21693:3:31"},"nativeSrc":"21693:18:31","nodeType":"YulFunctionCall","src":"21693:18:31"},"variableNames":[{"name":"tail","nativeSrc":"21685:4:31","nodeType":"YulIdentifier","src":"21685:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"21772:6:31","nodeType":"YulIdentifier","src":"21772:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"21785:9:31","nodeType":"YulIdentifier","src":"21785:9:31"},{"kind":"number","nativeSrc":"21796:1:31","nodeType":"YulLiteral","src":"21796:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"21781:3:31","nodeType":"YulIdentifier","src":"21781:3:31"},"nativeSrc":"21781:17:31","nodeType":"YulFunctionCall","src":"21781:17:31"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack","nativeSrc":"21721:50:31","nodeType":"YulIdentifier","src":"21721:50:31"},"nativeSrc":"21721:78:31","nodeType":"YulFunctionCall","src":"21721:78:31"},"nativeSrc":"21721:78:31","nodeType":"YulExpressionStatement","src":"21721:78:31"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"21570:236:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21647:9:31","nodeType":"YulTypedName","src":"21647:9:31","type":""},{"name":"value0","nativeSrc":"21659:6:31","nodeType":"YulTypedName","src":"21659:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21670:4:31","nodeType":"YulTypedName","src":"21670:4:31","type":""}],"src":"21570:236:31"},{"body":{"nativeSrc":"21994:371:31","nodeType":"YulBlock","src":"21994:371:31","statements":[{"nativeSrc":"22004:27:31","nodeType":"YulAssignment","src":"22004:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"22016:9:31","nodeType":"YulIdentifier","src":"22016:9:31"},{"kind":"number","nativeSrc":"22027:3:31","nodeType":"YulLiteral","src":"22027:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22012:3:31","nodeType":"YulIdentifier","src":"22012:3:31"},"nativeSrc":"22012:19:31","nodeType":"YulFunctionCall","src":"22012:19:31"},"variableNames":[{"name":"tail","nativeSrc":"22004:4:31","nodeType":"YulIdentifier","src":"22004:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22085:6:31","nodeType":"YulIdentifier","src":"22085:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22098:9:31","nodeType":"YulIdentifier","src":"22098:9:31"},{"kind":"number","nativeSrc":"22109:1:31","nodeType":"YulLiteral","src":"22109:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22094:3:31","nodeType":"YulIdentifier","src":"22094:3:31"},"nativeSrc":"22094:17:31","nodeType":"YulFunctionCall","src":"22094:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22041:43:31","nodeType":"YulIdentifier","src":"22041:43:31"},"nativeSrc":"22041:71:31","nodeType":"YulFunctionCall","src":"22041:71:31"},"nativeSrc":"22041:71:31","nodeType":"YulExpressionStatement","src":"22041:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22166:6:31","nodeType":"YulIdentifier","src":"22166:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22179:9:31","nodeType":"YulIdentifier","src":"22179:9:31"},{"kind":"number","nativeSrc":"22190:2:31","nodeType":"YulLiteral","src":"22190:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22175:3:31","nodeType":"YulIdentifier","src":"22175:3:31"},"nativeSrc":"22175:18:31","nodeType":"YulFunctionCall","src":"22175:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22122:43:31","nodeType":"YulIdentifier","src":"22122:43:31"},"nativeSrc":"22122:72:31","nodeType":"YulFunctionCall","src":"22122:72:31"},"nativeSrc":"22122:72:31","nodeType":"YulExpressionStatement","src":"22122:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22248:6:31","nodeType":"YulIdentifier","src":"22248:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22261:9:31","nodeType":"YulIdentifier","src":"22261:9:31"},{"kind":"number","nativeSrc":"22272:2:31","nodeType":"YulLiteral","src":"22272:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22257:3:31","nodeType":"YulIdentifier","src":"22257:3:31"},"nativeSrc":"22257:18:31","nodeType":"YulFunctionCall","src":"22257:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22204:43:31","nodeType":"YulIdentifier","src":"22204:43:31"},"nativeSrc":"22204:72:31","nodeType":"YulFunctionCall","src":"22204:72:31"},"nativeSrc":"22204:72:31","nodeType":"YulExpressionStatement","src":"22204:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"22330:6:31","nodeType":"YulIdentifier","src":"22330:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"22343:9:31","nodeType":"YulIdentifier","src":"22343:9:31"},{"kind":"number","nativeSrc":"22354:2:31","nodeType":"YulLiteral","src":"22354:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22339:3:31","nodeType":"YulIdentifier","src":"22339:3:31"},"nativeSrc":"22339:18:31","nodeType":"YulFunctionCall","src":"22339:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"22286:43:31","nodeType":"YulIdentifier","src":"22286:43:31"},"nativeSrc":"22286:72:31","nodeType":"YulFunctionCall","src":"22286:72:31"},"nativeSrc":"22286:72:31","nodeType":"YulExpressionStatement","src":"22286:72:31"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"21812:553:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"21942:9:31","nodeType":"YulTypedName","src":"21942:9:31","type":""},{"name":"value3","nativeSrc":"21954:6:31","nodeType":"YulTypedName","src":"21954:6:31","type":""},{"name":"value2","nativeSrc":"21962:6:31","nodeType":"YulTypedName","src":"21962:6:31","type":""},{"name":"value1","nativeSrc":"21970:6:31","nodeType":"YulTypedName","src":"21970:6:31","type":""},{"name":"value0","nativeSrc":"21978:6:31","nodeType":"YulTypedName","src":"21978:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"21989:4:31","nodeType":"YulTypedName","src":"21989:4:31","type":""}],"src":"21812:553:31"},{"body":{"nativeSrc":"22415:147:31","nodeType":"YulBlock","src":"22415:147:31","statements":[{"nativeSrc":"22425:25:31","nodeType":"YulAssignment","src":"22425:25:31","value":{"arguments":[{"name":"x","nativeSrc":"22448:1:31","nodeType":"YulIdentifier","src":"22448:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22430:17:31","nodeType":"YulIdentifier","src":"22430:17:31"},"nativeSrc":"22430:20:31","nodeType":"YulFunctionCall","src":"22430:20:31"},"variableNames":[{"name":"x","nativeSrc":"22425:1:31","nodeType":"YulIdentifier","src":"22425:1:31"}]},{"nativeSrc":"22459:25:31","nodeType":"YulAssignment","src":"22459:25:31","value":{"arguments":[{"name":"y","nativeSrc":"22482:1:31","nodeType":"YulIdentifier","src":"22482:1:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"22464:17:31","nodeType":"YulIdentifier","src":"22464:17:31"},"nativeSrc":"22464:20:31","nodeType":"YulFunctionCall","src":"22464:20:31"},"variableNames":[{"name":"y","nativeSrc":"22459:1:31","nodeType":"YulIdentifier","src":"22459:1:31"}]},{"nativeSrc":"22493:16:31","nodeType":"YulAssignment","src":"22493:16:31","value":{"arguments":[{"name":"x","nativeSrc":"22504:1:31","nodeType":"YulIdentifier","src":"22504:1:31"},{"name":"y","nativeSrc":"22507:1:31","nodeType":"YulIdentifier","src":"22507:1:31"}],"functionName":{"name":"add","nativeSrc":"22500:3:31","nodeType":"YulIdentifier","src":"22500:3:31"},"nativeSrc":"22500:9:31","nodeType":"YulFunctionCall","src":"22500:9:31"},"variableNames":[{"name":"sum","nativeSrc":"22493:3:31","nodeType":"YulIdentifier","src":"22493:3:31"}]},{"body":{"nativeSrc":"22533:22:31","nodeType":"YulBlock","src":"22533:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"22535:16:31","nodeType":"YulIdentifier","src":"22535:16:31"},"nativeSrc":"22535:18:31","nodeType":"YulFunctionCall","src":"22535:18:31"},"nativeSrc":"22535:18:31","nodeType":"YulExpressionStatement","src":"22535:18:31"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"22525:1:31","nodeType":"YulIdentifier","src":"22525:1:31"},{"name":"sum","nativeSrc":"22528:3:31","nodeType":"YulIdentifier","src":"22528:3:31"}],"functionName":{"name":"gt","nativeSrc":"22522:2:31","nodeType":"YulIdentifier","src":"22522:2:31"},"nativeSrc":"22522:10:31","nodeType":"YulFunctionCall","src":"22522:10:31"},"nativeSrc":"22519:36:31","nodeType":"YulIf","src":"22519:36:31"}]},"name":"checked_add_t_uint256","nativeSrc":"22371:191:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"22402:1:31","nodeType":"YulTypedName","src":"22402:1:31","type":""},{"name":"y","nativeSrc":"22405:1:31","nodeType":"YulTypedName","src":"22405:1:31","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"22411:3:31","nodeType":"YulTypedName","src":"22411:3:31","type":""}],"src":"22371:191:31"},{"body":{"nativeSrc":"22794:408:31","nodeType":"YulBlock","src":"22794:408:31","statements":[{"nativeSrc":"22804:26:31","nodeType":"YulAssignment","src":"22804:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"22816:9:31","nodeType":"YulIdentifier","src":"22816:9:31"},{"kind":"number","nativeSrc":"22827:2:31","nodeType":"YulLiteral","src":"22827:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22812:3:31","nodeType":"YulIdentifier","src":"22812:3:31"},"nativeSrc":"22812:18:31","nodeType":"YulFunctionCall","src":"22812:18:31"},"variableNames":[{"name":"tail","nativeSrc":"22804:4:31","nodeType":"YulIdentifier","src":"22804:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22851:9:31","nodeType":"YulIdentifier","src":"22851:9:31"},{"kind":"number","nativeSrc":"22862:1:31","nodeType":"YulLiteral","src":"22862:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22847:3:31","nodeType":"YulIdentifier","src":"22847:3:31"},"nativeSrc":"22847:17:31","nodeType":"YulFunctionCall","src":"22847:17:31"},{"arguments":[{"name":"tail","nativeSrc":"22870:4:31","nodeType":"YulIdentifier","src":"22870:4:31"},{"name":"headStart","nativeSrc":"22876:9:31","nodeType":"YulIdentifier","src":"22876:9:31"}],"functionName":{"name":"sub","nativeSrc":"22866:3:31","nodeType":"YulIdentifier","src":"22866:3:31"},"nativeSrc":"22866:20:31","nodeType":"YulFunctionCall","src":"22866:20:31"}],"functionName":{"name":"mstore","nativeSrc":"22840:6:31","nodeType":"YulIdentifier","src":"22840:6:31"},"nativeSrc":"22840:47:31","nodeType":"YulFunctionCall","src":"22840:47:31"},"nativeSrc":"22840:47:31","nodeType":"YulExpressionStatement","src":"22840:47:31"},{"nativeSrc":"22896:116:31","nodeType":"YulAssignment","src":"22896:116:31","value":{"arguments":[{"name":"value0","nativeSrc":"22998:6:31","nodeType":"YulIdentifier","src":"22998:6:31"},{"name":"tail","nativeSrc":"23007:4:31","nodeType":"YulIdentifier","src":"23007:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"22904:93:31","nodeType":"YulIdentifier","src":"22904:93:31"},"nativeSrc":"22904:108:31","nodeType":"YulFunctionCall","src":"22904:108:31"},"variableNames":[{"name":"tail","nativeSrc":"22896:4:31","nodeType":"YulIdentifier","src":"22896:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23033:9:31","nodeType":"YulIdentifier","src":"23033:9:31"},{"kind":"number","nativeSrc":"23044:2:31","nodeType":"YulLiteral","src":"23044:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23029:3:31","nodeType":"YulIdentifier","src":"23029:3:31"},"nativeSrc":"23029:18:31","nodeType":"YulFunctionCall","src":"23029:18:31"},{"arguments":[{"name":"tail","nativeSrc":"23053:4:31","nodeType":"YulIdentifier","src":"23053:4:31"},{"name":"headStart","nativeSrc":"23059:9:31","nodeType":"YulIdentifier","src":"23059:9:31"}],"functionName":{"name":"sub","nativeSrc":"23049:3:31","nodeType":"YulIdentifier","src":"23049:3:31"},"nativeSrc":"23049:20:31","nodeType":"YulFunctionCall","src":"23049:20:31"}],"functionName":{"name":"mstore","nativeSrc":"23022:6:31","nodeType":"YulIdentifier","src":"23022:6:31"},"nativeSrc":"23022:48:31","nodeType":"YulFunctionCall","src":"23022:48:31"},"nativeSrc":"23022:48:31","nodeType":"YulExpressionStatement","src":"23022:48:31"},{"nativeSrc":"23079:116:31","nodeType":"YulAssignment","src":"23079:116:31","value":{"arguments":[{"name":"value1","nativeSrc":"23181:6:31","nodeType":"YulIdentifier","src":"23181:6:31"},{"name":"tail","nativeSrc":"23190:4:31","nodeType":"YulIdentifier","src":"23190:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"23087:93:31","nodeType":"YulIdentifier","src":"23087:93:31"},"nativeSrc":"23087:108:31","nodeType":"YulFunctionCall","src":"23087:108:31"},"variableNames":[{"name":"tail","nativeSrc":"23079:4:31","nodeType":"YulIdentifier","src":"23079:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"22568:634:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22758:9:31","nodeType":"YulTypedName","src":"22758:9:31","type":""},{"name":"value1","nativeSrc":"22770:6:31","nodeType":"YulTypedName","src":"22770:6:31","type":""},{"name":"value0","nativeSrc":"22778:6:31","nodeType":"YulTypedName","src":"22778:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22789:4:31","nodeType":"YulTypedName","src":"22789:4:31","type":""}],"src":"22568:634:31"},{"body":{"nativeSrc":"23266:40:31","nodeType":"YulBlock","src":"23266:40:31","statements":[{"nativeSrc":"23277:22:31","nodeType":"YulAssignment","src":"23277:22:31","value":{"arguments":[{"name":"value","nativeSrc":"23293:5:31","nodeType":"YulIdentifier","src":"23293:5:31"}],"functionName":{"name":"mload","nativeSrc":"23287:5:31","nodeType":"YulIdentifier","src":"23287:5:31"},"nativeSrc":"23287:12:31","nodeType":"YulFunctionCall","src":"23287:12:31"},"variableNames":[{"name":"length","nativeSrc":"23277:6:31","nodeType":"YulIdentifier","src":"23277:6:31"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"23208:98:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23249:5:31","nodeType":"YulTypedName","src":"23249:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"23259:6:31","nodeType":"YulTypedName","src":"23259:6:31","type":""}],"src":"23208:98:31"},{"body":{"nativeSrc":"23407:73:31","nodeType":"YulBlock","src":"23407:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"23424:3:31","nodeType":"YulIdentifier","src":"23424:3:31"},{"name":"length","nativeSrc":"23429:6:31","nodeType":"YulIdentifier","src":"23429:6:31"}],"functionName":{"name":"mstore","nativeSrc":"23417:6:31","nodeType":"YulIdentifier","src":"23417:6:31"},"nativeSrc":"23417:19:31","nodeType":"YulFunctionCall","src":"23417:19:31"},"nativeSrc":"23417:19:31","nodeType":"YulExpressionStatement","src":"23417:19:31"},{"nativeSrc":"23445:29:31","nodeType":"YulAssignment","src":"23445:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"23464:3:31","nodeType":"YulIdentifier","src":"23464:3:31"},{"kind":"number","nativeSrc":"23469:4:31","nodeType":"YulLiteral","src":"23469:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23460:3:31","nodeType":"YulIdentifier","src":"23460:3:31"},"nativeSrc":"23460:14:31","nodeType":"YulFunctionCall","src":"23460:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"23445:11:31","nodeType":"YulIdentifier","src":"23445:11:31"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"23312:168:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"23379:3:31","nodeType":"YulTypedName","src":"23379:3:31","type":""},{"name":"length","nativeSrc":"23384:6:31","nodeType":"YulTypedName","src":"23384:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"23395:11:31","nodeType":"YulTypedName","src":"23395:11:31","type":""}],"src":"23312:168:31"},{"body":{"nativeSrc":"23576:283:31","nodeType":"YulBlock","src":"23576:283:31","statements":[{"nativeSrc":"23586:52:31","nodeType":"YulVariableDeclaration","src":"23586:52:31","value":{"arguments":[{"name":"value","nativeSrc":"23632:5:31","nodeType":"YulIdentifier","src":"23632:5:31"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"23600:31:31","nodeType":"YulIdentifier","src":"23600:31:31"},"nativeSrc":"23600:38:31","nodeType":"YulFunctionCall","src":"23600:38:31"},"variables":[{"name":"length","nativeSrc":"23590:6:31","nodeType":"YulTypedName","src":"23590:6:31","type":""}]},{"nativeSrc":"23647:77:31","nodeType":"YulAssignment","src":"23647:77:31","value":{"arguments":[{"name":"pos","nativeSrc":"23712:3:31","nodeType":"YulIdentifier","src":"23712:3:31"},{"name":"length","nativeSrc":"23717:6:31","nodeType":"YulIdentifier","src":"23717:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"23654:57:31","nodeType":"YulIdentifier","src":"23654:57:31"},"nativeSrc":"23654:70:31","nodeType":"YulFunctionCall","src":"23654:70:31"},"variableNames":[{"name":"pos","nativeSrc":"23647:3:31","nodeType":"YulIdentifier","src":"23647:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"23772:5:31","nodeType":"YulIdentifier","src":"23772:5:31"},{"kind":"number","nativeSrc":"23779:4:31","nodeType":"YulLiteral","src":"23779:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23768:3:31","nodeType":"YulIdentifier","src":"23768:3:31"},"nativeSrc":"23768:16:31","nodeType":"YulFunctionCall","src":"23768:16:31"},{"name":"pos","nativeSrc":"23786:3:31","nodeType":"YulIdentifier","src":"23786:3:31"},{"name":"length","nativeSrc":"23791:6:31","nodeType":"YulIdentifier","src":"23791:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"23733:34:31","nodeType":"YulIdentifier","src":"23733:34:31"},"nativeSrc":"23733:65:31","nodeType":"YulFunctionCall","src":"23733:65:31"},"nativeSrc":"23733:65:31","nodeType":"YulExpressionStatement","src":"23733:65:31"},{"nativeSrc":"23807:46:31","nodeType":"YulAssignment","src":"23807:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"23818:3:31","nodeType":"YulIdentifier","src":"23818:3:31"},{"arguments":[{"name":"length","nativeSrc":"23845:6:31","nodeType":"YulIdentifier","src":"23845:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"23823:21:31","nodeType":"YulIdentifier","src":"23823:21:31"},"nativeSrc":"23823:29:31","nodeType":"YulFunctionCall","src":"23823:29:31"}],"functionName":{"name":"add","nativeSrc":"23814:3:31","nodeType":"YulIdentifier","src":"23814:3:31"},"nativeSrc":"23814:39:31","nodeType":"YulFunctionCall","src":"23814:39:31"},"variableNames":[{"name":"end","nativeSrc":"23807:3:31","nodeType":"YulIdentifier","src":"23807:3:31"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"23486:373:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"23557:5:31","nodeType":"YulTypedName","src":"23557:5:31","type":""},{"name":"pos","nativeSrc":"23564:3:31","nodeType":"YulTypedName","src":"23564:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"23572:3:31","nodeType":"YulTypedName","src":"23572:3:31","type":""}],"src":"23486:373:31"},{"body":{"nativeSrc":"24093:523:31","nodeType":"YulBlock","src":"24093:523:31","statements":[{"nativeSrc":"24103:27:31","nodeType":"YulAssignment","src":"24103:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"24115:9:31","nodeType":"YulIdentifier","src":"24115:9:31"},{"kind":"number","nativeSrc":"24126:3:31","nodeType":"YulLiteral","src":"24126:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"24111:3:31","nodeType":"YulIdentifier","src":"24111:3:31"},"nativeSrc":"24111:19:31","nodeType":"YulFunctionCall","src":"24111:19:31"},"variableNames":[{"name":"tail","nativeSrc":"24103:4:31","nodeType":"YulIdentifier","src":"24103:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"24184:6:31","nodeType":"YulIdentifier","src":"24184:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24197:9:31","nodeType":"YulIdentifier","src":"24197:9:31"},{"kind":"number","nativeSrc":"24208:1:31","nodeType":"YulLiteral","src":"24208:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24193:3:31","nodeType":"YulIdentifier","src":"24193:3:31"},"nativeSrc":"24193:17:31","nodeType":"YulFunctionCall","src":"24193:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24140:43:31","nodeType":"YulIdentifier","src":"24140:43:31"},"nativeSrc":"24140:71:31","nodeType":"YulFunctionCall","src":"24140:71:31"},"nativeSrc":"24140:71:31","nodeType":"YulExpressionStatement","src":"24140:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"24265:6:31","nodeType":"YulIdentifier","src":"24265:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24278:9:31","nodeType":"YulIdentifier","src":"24278:9:31"},{"kind":"number","nativeSrc":"24289:2:31","nodeType":"YulLiteral","src":"24289:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24274:3:31","nodeType":"YulIdentifier","src":"24274:3:31"},"nativeSrc":"24274:18:31","nodeType":"YulFunctionCall","src":"24274:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"24221:43:31","nodeType":"YulIdentifier","src":"24221:43:31"},"nativeSrc":"24221:72:31","nodeType":"YulFunctionCall","src":"24221:72:31"},"nativeSrc":"24221:72:31","nodeType":"YulExpressionStatement","src":"24221:72:31"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"24347:6:31","nodeType":"YulIdentifier","src":"24347:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24360:9:31","nodeType":"YulIdentifier","src":"24360:9:31"},{"kind":"number","nativeSrc":"24371:2:31","nodeType":"YulLiteral","src":"24371:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24356:3:31","nodeType":"YulIdentifier","src":"24356:3:31"},"nativeSrc":"24356:18:31","nodeType":"YulFunctionCall","src":"24356:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24303:43:31","nodeType":"YulIdentifier","src":"24303:43:31"},"nativeSrc":"24303:72:31","nodeType":"YulFunctionCall","src":"24303:72:31"},"nativeSrc":"24303:72:31","nodeType":"YulExpressionStatement","src":"24303:72:31"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"24429:6:31","nodeType":"YulIdentifier","src":"24429:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"24442:9:31","nodeType":"YulIdentifier","src":"24442:9:31"},{"kind":"number","nativeSrc":"24453:2:31","nodeType":"YulLiteral","src":"24453:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"24438:3:31","nodeType":"YulIdentifier","src":"24438:3:31"},"nativeSrc":"24438:18:31","nodeType":"YulFunctionCall","src":"24438:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"24385:43:31","nodeType":"YulIdentifier","src":"24385:43:31"},"nativeSrc":"24385:72:31","nodeType":"YulFunctionCall","src":"24385:72:31"},"nativeSrc":"24385:72:31","nodeType":"YulExpressionStatement","src":"24385:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24478:9:31","nodeType":"YulIdentifier","src":"24478:9:31"},{"kind":"number","nativeSrc":"24489:3:31","nodeType":"YulLiteral","src":"24489:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"24474:3:31","nodeType":"YulIdentifier","src":"24474:3:31"},"nativeSrc":"24474:19:31","nodeType":"YulFunctionCall","src":"24474:19:31"},{"arguments":[{"name":"tail","nativeSrc":"24499:4:31","nodeType":"YulIdentifier","src":"24499:4:31"},{"name":"headStart","nativeSrc":"24505:9:31","nodeType":"YulIdentifier","src":"24505:9:31"}],"functionName":{"name":"sub","nativeSrc":"24495:3:31","nodeType":"YulIdentifier","src":"24495:3:31"},"nativeSrc":"24495:20:31","nodeType":"YulFunctionCall","src":"24495:20:31"}],"functionName":{"name":"mstore","nativeSrc":"24467:6:31","nodeType":"YulIdentifier","src":"24467:6:31"},"nativeSrc":"24467:49:31","nodeType":"YulFunctionCall","src":"24467:49:31"},"nativeSrc":"24467:49:31","nodeType":"YulExpressionStatement","src":"24467:49:31"},{"nativeSrc":"24525:84:31","nodeType":"YulAssignment","src":"24525:84:31","value":{"arguments":[{"name":"value4","nativeSrc":"24595:6:31","nodeType":"YulIdentifier","src":"24595:6:31"},{"name":"tail","nativeSrc":"24604:4:31","nodeType":"YulIdentifier","src":"24604:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"24533:61:31","nodeType":"YulIdentifier","src":"24533:61:31"},"nativeSrc":"24533:76:31","nodeType":"YulFunctionCall","src":"24533:76:31"},"variableNames":[{"name":"tail","nativeSrc":"24525:4:31","nodeType":"YulIdentifier","src":"24525:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"23865:751:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24033:9:31","nodeType":"YulTypedName","src":"24033:9:31","type":""},{"name":"value4","nativeSrc":"24045:6:31","nodeType":"YulTypedName","src":"24045:6:31","type":""},{"name":"value3","nativeSrc":"24053:6:31","nodeType":"YulTypedName","src":"24053:6:31","type":""},{"name":"value2","nativeSrc":"24061:6:31","nodeType":"YulTypedName","src":"24061:6:31","type":""},{"name":"value1","nativeSrc":"24069:6:31","nodeType":"YulTypedName","src":"24069:6:31","type":""},{"name":"value0","nativeSrc":"24077:6:31","nodeType":"YulTypedName","src":"24077:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24088:4:31","nodeType":"YulTypedName","src":"24088:4:31","type":""}],"src":"23865:751:31"},{"body":{"nativeSrc":"24684:79:31","nodeType":"YulBlock","src":"24684:79:31","statements":[{"nativeSrc":"24694:22:31","nodeType":"YulAssignment","src":"24694:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"24709:6:31","nodeType":"YulIdentifier","src":"24709:6:31"}],"functionName":{"name":"mload","nativeSrc":"24703:5:31","nodeType":"YulIdentifier","src":"24703:5:31"},"nativeSrc":"24703:13:31","nodeType":"YulFunctionCall","src":"24703:13:31"},"variableNames":[{"name":"value","nativeSrc":"24694:5:31","nodeType":"YulIdentifier","src":"24694:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"24751:5:31","nodeType":"YulIdentifier","src":"24751:5:31"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"24725:25:31","nodeType":"YulIdentifier","src":"24725:25:31"},"nativeSrc":"24725:32:31","nodeType":"YulFunctionCall","src":"24725:32:31"},"nativeSrc":"24725:32:31","nodeType":"YulExpressionStatement","src":"24725:32:31"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"24622:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"24662:6:31","nodeType":"YulTypedName","src":"24662:6:31","type":""},{"name":"end","nativeSrc":"24670:3:31","nodeType":"YulTypedName","src":"24670:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"24678:5:31","nodeType":"YulTypedName","src":"24678:5:31","type":""}],"src":"24622:141:31"},{"body":{"nativeSrc":"24845:273:31","nodeType":"YulBlock","src":"24845:273:31","statements":[{"body":{"nativeSrc":"24891:83:31","nodeType":"YulBlock","src":"24891:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"24893:77:31","nodeType":"YulIdentifier","src":"24893:77:31"},"nativeSrc":"24893:79:31","nodeType":"YulFunctionCall","src":"24893:79:31"},"nativeSrc":"24893:79:31","nodeType":"YulExpressionStatement","src":"24893:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"24866:7:31","nodeType":"YulIdentifier","src":"24866:7:31"},{"name":"headStart","nativeSrc":"24875:9:31","nodeType":"YulIdentifier","src":"24875:9:31"}],"functionName":{"name":"sub","nativeSrc":"24862:3:31","nodeType":"YulIdentifier","src":"24862:3:31"},"nativeSrc":"24862:23:31","nodeType":"YulFunctionCall","src":"24862:23:31"},{"kind":"number","nativeSrc":"24887:2:31","nodeType":"YulLiteral","src":"24887:2:31","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"24858:3:31","nodeType":"YulIdentifier","src":"24858:3:31"},"nativeSrc":"24858:32:31","nodeType":"YulFunctionCall","src":"24858:32:31"},"nativeSrc":"24855:119:31","nodeType":"YulIf","src":"24855:119:31"},{"nativeSrc":"24984:127:31","nodeType":"YulBlock","src":"24984:127:31","statements":[{"nativeSrc":"24999:15:31","nodeType":"YulVariableDeclaration","src":"24999:15:31","value":{"kind":"number","nativeSrc":"25013:1:31","nodeType":"YulLiteral","src":"25013:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"25003:6:31","nodeType":"YulTypedName","src":"25003:6:31","type":""}]},{"nativeSrc":"25028:73:31","nodeType":"YulAssignment","src":"25028:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25073:9:31","nodeType":"YulIdentifier","src":"25073:9:31"},{"name":"offset","nativeSrc":"25084:6:31","nodeType":"YulIdentifier","src":"25084:6:31"}],"functionName":{"name":"add","nativeSrc":"25069:3:31","nodeType":"YulIdentifier","src":"25069:3:31"},"nativeSrc":"25069:22:31","nodeType":"YulFunctionCall","src":"25069:22:31"},{"name":"dataEnd","nativeSrc":"25093:7:31","nodeType":"YulIdentifier","src":"25093:7:31"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"25038:30:31","nodeType":"YulIdentifier","src":"25038:30:31"},"nativeSrc":"25038:63:31","nodeType":"YulFunctionCall","src":"25038:63:31"},"variableNames":[{"name":"value0","nativeSrc":"25028:6:31","nodeType":"YulIdentifier","src":"25028:6:31"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"24769:349:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24815:9:31","nodeType":"YulTypedName","src":"24815:9:31","type":""},{"name":"dataEnd","nativeSrc":"24826:7:31","nodeType":"YulTypedName","src":"24826:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"24838:6:31","nodeType":"YulTypedName","src":"24838:6:31","type":""}],"src":"24769:349:31"},{"body":{"nativeSrc":"25452:725:31","nodeType":"YulBlock","src":"25452:725:31","statements":[{"nativeSrc":"25462:27:31","nodeType":"YulAssignment","src":"25462:27:31","value":{"arguments":[{"name":"headStart","nativeSrc":"25474:9:31","nodeType":"YulIdentifier","src":"25474:9:31"},{"kind":"number","nativeSrc":"25485:3:31","nodeType":"YulLiteral","src":"25485:3:31","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"25470:3:31","nodeType":"YulIdentifier","src":"25470:3:31"},"nativeSrc":"25470:19:31","nodeType":"YulFunctionCall","src":"25470:19:31"},"variableNames":[{"name":"tail","nativeSrc":"25462:4:31","nodeType":"YulIdentifier","src":"25462:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25543:6:31","nodeType":"YulIdentifier","src":"25543:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"25556:9:31","nodeType":"YulIdentifier","src":"25556:9:31"},{"kind":"number","nativeSrc":"25567:1:31","nodeType":"YulLiteral","src":"25567:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25552:3:31","nodeType":"YulIdentifier","src":"25552:3:31"},"nativeSrc":"25552:17:31","nodeType":"YulFunctionCall","src":"25552:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"25499:43:31","nodeType":"YulIdentifier","src":"25499:43:31"},"nativeSrc":"25499:71:31","nodeType":"YulFunctionCall","src":"25499:71:31"},"nativeSrc":"25499:71:31","nodeType":"YulExpressionStatement","src":"25499:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"25624:6:31","nodeType":"YulIdentifier","src":"25624:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"25637:9:31","nodeType":"YulIdentifier","src":"25637:9:31"},{"kind":"number","nativeSrc":"25648:2:31","nodeType":"YulLiteral","src":"25648:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25633:3:31","nodeType":"YulIdentifier","src":"25633:3:31"},"nativeSrc":"25633:18:31","nodeType":"YulFunctionCall","src":"25633:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"25580:43:31","nodeType":"YulIdentifier","src":"25580:43:31"},"nativeSrc":"25580:72:31","nodeType":"YulFunctionCall","src":"25580:72:31"},"nativeSrc":"25580:72:31","nodeType":"YulExpressionStatement","src":"25580:72:31"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25673:9:31","nodeType":"YulIdentifier","src":"25673:9:31"},{"kind":"number","nativeSrc":"25684:2:31","nodeType":"YulLiteral","src":"25684:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"25669:3:31","nodeType":"YulIdentifier","src":"25669:3:31"},"nativeSrc":"25669:18:31","nodeType":"YulFunctionCall","src":"25669:18:31"},{"arguments":[{"name":"tail","nativeSrc":"25693:4:31","nodeType":"YulIdentifier","src":"25693:4:31"},{"name":"headStart","nativeSrc":"25699:9:31","nodeType":"YulIdentifier","src":"25699:9:31"}],"functionName":{"name":"sub","nativeSrc":"25689:3:31","nodeType":"YulIdentifier","src":"25689:3:31"},"nativeSrc":"25689:20:31","nodeType":"YulFunctionCall","src":"25689:20:31"}],"functionName":{"name":"mstore","nativeSrc":"25662:6:31","nodeType":"YulIdentifier","src":"25662:6:31"},"nativeSrc":"25662:48:31","nodeType":"YulFunctionCall","src":"25662:48:31"},"nativeSrc":"25662:48:31","nodeType":"YulExpressionStatement","src":"25662:48:31"},{"nativeSrc":"25719:116:31","nodeType":"YulAssignment","src":"25719:116:31","value":{"arguments":[{"name":"value2","nativeSrc":"25821:6:31","nodeType":"YulIdentifier","src":"25821:6:31"},{"name":"tail","nativeSrc":"25830:4:31","nodeType":"YulIdentifier","src":"25830:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"25727:93:31","nodeType":"YulIdentifier","src":"25727:93:31"},"nativeSrc":"25727:108:31","nodeType":"YulFunctionCall","src":"25727:108:31"},"variableNames":[{"name":"tail","nativeSrc":"25719:4:31","nodeType":"YulIdentifier","src":"25719:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25856:9:31","nodeType":"YulIdentifier","src":"25856:9:31"},{"kind":"number","nativeSrc":"25867:2:31","nodeType":"YulLiteral","src":"25867:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"25852:3:31","nodeType":"YulIdentifier","src":"25852:3:31"},"nativeSrc":"25852:18:31","nodeType":"YulFunctionCall","src":"25852:18:31"},{"arguments":[{"name":"tail","nativeSrc":"25876:4:31","nodeType":"YulIdentifier","src":"25876:4:31"},{"name":"headStart","nativeSrc":"25882:9:31","nodeType":"YulIdentifier","src":"25882:9:31"}],"functionName":{"name":"sub","nativeSrc":"25872:3:31","nodeType":"YulIdentifier","src":"25872:3:31"},"nativeSrc":"25872:20:31","nodeType":"YulFunctionCall","src":"25872:20:31"}],"functionName":{"name":"mstore","nativeSrc":"25845:6:31","nodeType":"YulIdentifier","src":"25845:6:31"},"nativeSrc":"25845:48:31","nodeType":"YulFunctionCall","src":"25845:48:31"},"nativeSrc":"25845:48:31","nodeType":"YulExpressionStatement","src":"25845:48:31"},{"nativeSrc":"25902:116:31","nodeType":"YulAssignment","src":"25902:116:31","value":{"arguments":[{"name":"value3","nativeSrc":"26004:6:31","nodeType":"YulIdentifier","src":"26004:6:31"},{"name":"tail","nativeSrc":"26013:4:31","nodeType":"YulIdentifier","src":"26013:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"25910:93:31","nodeType":"YulIdentifier","src":"25910:93:31"},"nativeSrc":"25910:108:31","nodeType":"YulFunctionCall","src":"25910:108:31"},"variableNames":[{"name":"tail","nativeSrc":"25902:4:31","nodeType":"YulIdentifier","src":"25902:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26039:9:31","nodeType":"YulIdentifier","src":"26039:9:31"},{"kind":"number","nativeSrc":"26050:3:31","nodeType":"YulLiteral","src":"26050:3:31","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"26035:3:31","nodeType":"YulIdentifier","src":"26035:3:31"},"nativeSrc":"26035:19:31","nodeType":"YulFunctionCall","src":"26035:19:31"},{"arguments":[{"name":"tail","nativeSrc":"26060:4:31","nodeType":"YulIdentifier","src":"26060:4:31"},{"name":"headStart","nativeSrc":"26066:9:31","nodeType":"YulIdentifier","src":"26066:9:31"}],"functionName":{"name":"sub","nativeSrc":"26056:3:31","nodeType":"YulIdentifier","src":"26056:3:31"},"nativeSrc":"26056:20:31","nodeType":"YulFunctionCall","src":"26056:20:31"}],"functionName":{"name":"mstore","nativeSrc":"26028:6:31","nodeType":"YulIdentifier","src":"26028:6:31"},"nativeSrc":"26028:49:31","nodeType":"YulFunctionCall","src":"26028:49:31"},"nativeSrc":"26028:49:31","nodeType":"YulExpressionStatement","src":"26028:49:31"},{"nativeSrc":"26086:84:31","nodeType":"YulAssignment","src":"26086:84:31","value":{"arguments":[{"name":"value4","nativeSrc":"26156:6:31","nodeType":"YulIdentifier","src":"26156:6:31"},{"name":"tail","nativeSrc":"26165:4:31","nodeType":"YulIdentifier","src":"26165:4:31"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"26094:61:31","nodeType":"YulIdentifier","src":"26094:61:31"},"nativeSrc":"26094:76:31","nodeType":"YulFunctionCall","src":"26094:76:31"},"variableNames":[{"name":"tail","nativeSrc":"26086:4:31","nodeType":"YulIdentifier","src":"26086:4:31"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"25124:1053:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25392:9:31","nodeType":"YulTypedName","src":"25392:9:31","type":""},{"name":"value4","nativeSrc":"25404:6:31","nodeType":"YulTypedName","src":"25404:6:31","type":""},{"name":"value3","nativeSrc":"25412:6:31","nodeType":"YulTypedName","src":"25412:6:31","type":""},{"name":"value2","nativeSrc":"25420:6:31","nodeType":"YulTypedName","src":"25420:6:31","type":""},{"name":"value1","nativeSrc":"25428:6:31","nodeType":"YulTypedName","src":"25428:6:31","type":""},{"name":"value0","nativeSrc":"25436:6:31","nodeType":"YulTypedName","src":"25436:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25447:4:31","nodeType":"YulTypedName","src":"25447:4:31","type":""}],"src":"25124:1053:31"},{"body":{"nativeSrc":"26237:87:31","nodeType":"YulBlock","src":"26237:87:31","statements":[{"nativeSrc":"26247:11:31","nodeType":"YulAssignment","src":"26247:11:31","value":{"name":"ptr","nativeSrc":"26255:3:31","nodeType":"YulIdentifier","src":"26255:3:31"},"variableNames":[{"name":"data","nativeSrc":"26247:4:31","nodeType":"YulIdentifier","src":"26247:4:31"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"26275:1:31","nodeType":"YulLiteral","src":"26275:1:31","type":"","value":"0"},{"name":"ptr","nativeSrc":"26278:3:31","nodeType":"YulIdentifier","src":"26278:3:31"}],"functionName":{"name":"mstore","nativeSrc":"26268:6:31","nodeType":"YulIdentifier","src":"26268:6:31"},"nativeSrc":"26268:14:31","nodeType":"YulFunctionCall","src":"26268:14:31"},"nativeSrc":"26268:14:31","nodeType":"YulExpressionStatement","src":"26268:14:31"},{"nativeSrc":"26291:26:31","nodeType":"YulAssignment","src":"26291:26:31","value":{"arguments":[{"kind":"number","nativeSrc":"26309:1:31","nodeType":"YulLiteral","src":"26309:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"26312:4:31","nodeType":"YulLiteral","src":"26312:4:31","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"26299:9:31","nodeType":"YulIdentifier","src":"26299:9:31"},"nativeSrc":"26299:18:31","nodeType":"YulFunctionCall","src":"26299:18:31"},"variableNames":[{"name":"data","nativeSrc":"26291:4:31","nodeType":"YulIdentifier","src":"26291:4:31"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"26183:141:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"26224:3:31","nodeType":"YulTypedName","src":"26224:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"26232:4:31","nodeType":"YulTypedName","src":"26232:4:31","type":""}],"src":"26183:141:31"},{"body":{"nativeSrc":"26374:49:31","nodeType":"YulBlock","src":"26374:49:31","statements":[{"nativeSrc":"26384:33:31","nodeType":"YulAssignment","src":"26384:33:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26402:5:31","nodeType":"YulIdentifier","src":"26402:5:31"},{"kind":"number","nativeSrc":"26409:2:31","nodeType":"YulLiteral","src":"26409:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"26398:3:31","nodeType":"YulIdentifier","src":"26398:3:31"},"nativeSrc":"26398:14:31","nodeType":"YulFunctionCall","src":"26398:14:31"},{"kind":"number","nativeSrc":"26414:2:31","nodeType":"YulLiteral","src":"26414:2:31","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"26394:3:31","nodeType":"YulIdentifier","src":"26394:3:31"},"nativeSrc":"26394:23:31","nodeType":"YulFunctionCall","src":"26394:23:31"},"variableNames":[{"name":"result","nativeSrc":"26384:6:31","nodeType":"YulIdentifier","src":"26384:6:31"}]}]},"name":"divide_by_32_ceil","nativeSrc":"26330:93:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26357:5:31","nodeType":"YulTypedName","src":"26357:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"26367:6:31","nodeType":"YulTypedName","src":"26367:6:31","type":""}],"src":"26330:93:31"},{"body":{"nativeSrc":"26482:54:31","nodeType":"YulBlock","src":"26482:54:31","statements":[{"nativeSrc":"26492:37:31","nodeType":"YulAssignment","src":"26492:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"26517:4:31","nodeType":"YulIdentifier","src":"26517:4:31"},{"name":"value","nativeSrc":"26523:5:31","nodeType":"YulIdentifier","src":"26523:5:31"}],"functionName":{"name":"shl","nativeSrc":"26513:3:31","nodeType":"YulIdentifier","src":"26513:3:31"},"nativeSrc":"26513:16:31","nodeType":"YulFunctionCall","src":"26513:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"26492:8:31","nodeType":"YulIdentifier","src":"26492:8:31"}]}]},"name":"shift_left_dynamic","nativeSrc":"26429:107:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"26457:4:31","nodeType":"YulTypedName","src":"26457:4:31","type":""},{"name":"value","nativeSrc":"26463:5:31","nodeType":"YulTypedName","src":"26463:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"26473:8:31","nodeType":"YulTypedName","src":"26473:8:31","type":""}],"src":"26429:107:31"},{"body":{"nativeSrc":"26618:317:31","nodeType":"YulBlock","src":"26618:317:31","statements":[{"nativeSrc":"26628:35:31","nodeType":"YulVariableDeclaration","src":"26628:35:31","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"26649:10:31","nodeType":"YulIdentifier","src":"26649:10:31"},{"kind":"number","nativeSrc":"26661:1:31","nodeType":"YulLiteral","src":"26661:1:31","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"26645:3:31","nodeType":"YulIdentifier","src":"26645:3:31"},"nativeSrc":"26645:18:31","nodeType":"YulFunctionCall","src":"26645:18:31"},"variables":[{"name":"shiftBits","nativeSrc":"26632:9:31","nodeType":"YulTypedName","src":"26632:9:31","type":""}]},{"nativeSrc":"26672:109:31","nodeType":"YulVariableDeclaration","src":"26672:109:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"26703:9:31","nodeType":"YulIdentifier","src":"26703:9:31"},{"kind":"number","nativeSrc":"26714:66:31","nodeType":"YulLiteral","src":"26714:66:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"26684:18:31","nodeType":"YulIdentifier","src":"26684:18:31"},"nativeSrc":"26684:97:31","nodeType":"YulFunctionCall","src":"26684:97:31"},"variables":[{"name":"mask","nativeSrc":"26676:4:31","nodeType":"YulTypedName","src":"26676:4:31","type":""}]},{"nativeSrc":"26790:51:31","nodeType":"YulAssignment","src":"26790:51:31","value":{"arguments":[{"name":"shiftBits","nativeSrc":"26821:9:31","nodeType":"YulIdentifier","src":"26821:9:31"},{"name":"toInsert","nativeSrc":"26832:8:31","nodeType":"YulIdentifier","src":"26832:8:31"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"26802:18:31","nodeType":"YulIdentifier","src":"26802:18:31"},"nativeSrc":"26802:39:31","nodeType":"YulFunctionCall","src":"26802:39:31"},"variableNames":[{"name":"toInsert","nativeSrc":"26790:8:31","nodeType":"YulIdentifier","src":"26790:8:31"}]},{"nativeSrc":"26850:30:31","nodeType":"YulAssignment","src":"26850:30:31","value":{"arguments":[{"name":"value","nativeSrc":"26863:5:31","nodeType":"YulIdentifier","src":"26863:5:31"},{"arguments":[{"name":"mask","nativeSrc":"26874:4:31","nodeType":"YulIdentifier","src":"26874:4:31"}],"functionName":{"name":"not","nativeSrc":"26870:3:31","nodeType":"YulIdentifier","src":"26870:3:31"},"nativeSrc":"26870:9:31","nodeType":"YulFunctionCall","src":"26870:9:31"}],"functionName":{"name":"and","nativeSrc":"26859:3:31","nodeType":"YulIdentifier","src":"26859:3:31"},"nativeSrc":"26859:21:31","nodeType":"YulFunctionCall","src":"26859:21:31"},"variableNames":[{"name":"value","nativeSrc":"26850:5:31","nodeType":"YulIdentifier","src":"26850:5:31"}]},{"nativeSrc":"26889:40:31","nodeType":"YulAssignment","src":"26889:40:31","value":{"arguments":[{"name":"value","nativeSrc":"26902:5:31","nodeType":"YulIdentifier","src":"26902:5:31"},{"arguments":[{"name":"toInsert","nativeSrc":"26913:8:31","nodeType":"YulIdentifier","src":"26913:8:31"},{"name":"mask","nativeSrc":"26923:4:31","nodeType":"YulIdentifier","src":"26923:4:31"}],"functionName":{"name":"and","nativeSrc":"26909:3:31","nodeType":"YulIdentifier","src":"26909:3:31"},"nativeSrc":"26909:19:31","nodeType":"YulFunctionCall","src":"26909:19:31"}],"functionName":{"name":"or","nativeSrc":"26899:2:31","nodeType":"YulIdentifier","src":"26899:2:31"},"nativeSrc":"26899:30:31","nodeType":"YulFunctionCall","src":"26899:30:31"},"variableNames":[{"name":"result","nativeSrc":"26889:6:31","nodeType":"YulIdentifier","src":"26889:6:31"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"26542:393:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26579:5:31","nodeType":"YulTypedName","src":"26579:5:31","type":""},{"name":"shiftBytes","nativeSrc":"26586:10:31","nodeType":"YulTypedName","src":"26586:10:31","type":""},{"name":"toInsert","nativeSrc":"26598:8:31","nodeType":"YulTypedName","src":"26598:8:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"26611:6:31","nodeType":"YulTypedName","src":"26611:6:31","type":""}],"src":"26542:393:31"},{"body":{"nativeSrc":"27001:82:31","nodeType":"YulBlock","src":"27001:82:31","statements":[{"nativeSrc":"27011:66:31","nodeType":"YulAssignment","src":"27011:66:31","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27069:5:31","nodeType":"YulIdentifier","src":"27069:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27051:17:31","nodeType":"YulIdentifier","src":"27051:17:31"},"nativeSrc":"27051:24:31","nodeType":"YulFunctionCall","src":"27051:24:31"}],"functionName":{"name":"identity","nativeSrc":"27042:8:31","nodeType":"YulIdentifier","src":"27042:8:31"},"nativeSrc":"27042:34:31","nodeType":"YulFunctionCall","src":"27042:34:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"27024:17:31","nodeType":"YulIdentifier","src":"27024:17:31"},"nativeSrc":"27024:53:31","nodeType":"YulFunctionCall","src":"27024:53:31"},"variableNames":[{"name":"converted","nativeSrc":"27011:9:31","nodeType":"YulIdentifier","src":"27011:9:31"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"26941:142:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"26981:5:31","nodeType":"YulTypedName","src":"26981:5:31","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"26991:9:31","nodeType":"YulTypedName","src":"26991:9:31","type":""}],"src":"26941:142:31"},{"body":{"nativeSrc":"27136:28:31","nodeType":"YulBlock","src":"27136:28:31","statements":[{"nativeSrc":"27146:12:31","nodeType":"YulAssignment","src":"27146:12:31","value":{"name":"value","nativeSrc":"27153:5:31","nodeType":"YulIdentifier","src":"27153:5:31"},"variableNames":[{"name":"ret","nativeSrc":"27146:3:31","nodeType":"YulIdentifier","src":"27146:3:31"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"27089:75:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"27122:5:31","nodeType":"YulTypedName","src":"27122:5:31","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"27132:3:31","nodeType":"YulTypedName","src":"27132:3:31","type":""}],"src":"27089:75:31"},{"body":{"nativeSrc":"27246:193:31","nodeType":"YulBlock","src":"27246:193:31","statements":[{"nativeSrc":"27256:63:31","nodeType":"YulVariableDeclaration","src":"27256:63:31","value":{"arguments":[{"name":"value_0","nativeSrc":"27311:7:31","nodeType":"YulIdentifier","src":"27311:7:31"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"27280:30:31","nodeType":"YulIdentifier","src":"27280:30:31"},"nativeSrc":"27280:39:31","nodeType":"YulFunctionCall","src":"27280:39:31"},"variables":[{"name":"convertedValue_0","nativeSrc":"27260:16:31","nodeType":"YulTypedName","src":"27260:16:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27335:4:31","nodeType":"YulIdentifier","src":"27335:4:31"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"27375:4:31","nodeType":"YulIdentifier","src":"27375:4:31"}],"functionName":{"name":"sload","nativeSrc":"27369:5:31","nodeType":"YulIdentifier","src":"27369:5:31"},"nativeSrc":"27369:11:31","nodeType":"YulFunctionCall","src":"27369:11:31"},{"name":"offset","nativeSrc":"27382:6:31","nodeType":"YulIdentifier","src":"27382:6:31"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"27414:16:31","nodeType":"YulIdentifier","src":"27414:16:31"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"27390:23:31","nodeType":"YulIdentifier","src":"27390:23:31"},"nativeSrc":"27390:41:31","nodeType":"YulFunctionCall","src":"27390:41:31"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"27341:27:31","nodeType":"YulIdentifier","src":"27341:27:31"},"nativeSrc":"27341:91:31","nodeType":"YulFunctionCall","src":"27341:91:31"}],"functionName":{"name":"sstore","nativeSrc":"27328:6:31","nodeType":"YulIdentifier","src":"27328:6:31"},"nativeSrc":"27328:105:31","nodeType":"YulFunctionCall","src":"27328:105:31"},"nativeSrc":"27328:105:31","nodeType":"YulExpressionStatement","src":"27328:105:31"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"27170:269:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"27223:4:31","nodeType":"YulTypedName","src":"27223:4:31","type":""},{"name":"offset","nativeSrc":"27229:6:31","nodeType":"YulTypedName","src":"27229:6:31","type":""},{"name":"value_0","nativeSrc":"27237:7:31","nodeType":"YulTypedName","src":"27237:7:31","type":""}],"src":"27170:269:31"},{"body":{"nativeSrc":"27494:24:31","nodeType":"YulBlock","src":"27494:24:31","statements":[{"nativeSrc":"27504:8:31","nodeType":"YulAssignment","src":"27504:8:31","value":{"kind":"number","nativeSrc":"27511:1:31","nodeType":"YulLiteral","src":"27511:1:31","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"27504:3:31","nodeType":"YulIdentifier","src":"27504:3:31"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"27445:73:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"27490:3:31","nodeType":"YulTypedName","src":"27490:3:31","type":""}],"src":"27445:73:31"},{"body":{"nativeSrc":"27577:136:31","nodeType":"YulBlock","src":"27577:136:31","statements":[{"nativeSrc":"27587:46:31","nodeType":"YulVariableDeclaration","src":"27587:46:31","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"27601:30:31","nodeType":"YulIdentifier","src":"27601:30:31"},"nativeSrc":"27601:32:31","nodeType":"YulFunctionCall","src":"27601:32:31"},"variables":[{"name":"zero_0","nativeSrc":"27591:6:31","nodeType":"YulTypedName","src":"27591:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"27686:4:31","nodeType":"YulIdentifier","src":"27686:4:31"},{"name":"offset","nativeSrc":"27692:6:31","nodeType":"YulIdentifier","src":"27692:6:31"},{"name":"zero_0","nativeSrc":"27700:6:31","nodeType":"YulIdentifier","src":"27700:6:31"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"27642:43:31","nodeType":"YulIdentifier","src":"27642:43:31"},"nativeSrc":"27642:65:31","nodeType":"YulFunctionCall","src":"27642:65:31"},"nativeSrc":"27642:65:31","nodeType":"YulExpressionStatement","src":"27642:65:31"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"27524:189:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"27563:4:31","nodeType":"YulTypedName","src":"27563:4:31","type":""},{"name":"offset","nativeSrc":"27569:6:31","nodeType":"YulTypedName","src":"27569:6:31","type":""}],"src":"27524:189:31"},{"body":{"nativeSrc":"27769:136:31","nodeType":"YulBlock","src":"27769:136:31","statements":[{"body":{"nativeSrc":"27836:63:31","nodeType":"YulBlock","src":"27836:63:31","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"27880:5:31","nodeType":"YulIdentifier","src":"27880:5:31"},{"kind":"number","nativeSrc":"27887:1:31","nodeType":"YulLiteral","src":"27887:1:31","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"27850:29:31","nodeType":"YulIdentifier","src":"27850:29:31"},"nativeSrc":"27850:39:31","nodeType":"YulFunctionCall","src":"27850:39:31"},"nativeSrc":"27850:39:31","nodeType":"YulExpressionStatement","src":"27850:39:31"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"27789:5:31","nodeType":"YulIdentifier","src":"27789:5:31"},{"name":"end","nativeSrc":"27796:3:31","nodeType":"YulIdentifier","src":"27796:3:31"}],"functionName":{"name":"lt","nativeSrc":"27786:2:31","nodeType":"YulIdentifier","src":"27786:2:31"},"nativeSrc":"27786:14:31","nodeType":"YulFunctionCall","src":"27786:14:31"},"nativeSrc":"27779:120:31","nodeType":"YulForLoop","post":{"nativeSrc":"27801:26:31","nodeType":"YulBlock","src":"27801:26:31","statements":[{"nativeSrc":"27803:22:31","nodeType":"YulAssignment","src":"27803:22:31","value":{"arguments":[{"name":"start","nativeSrc":"27816:5:31","nodeType":"YulIdentifier","src":"27816:5:31"},{"kind":"number","nativeSrc":"27823:1:31","nodeType":"YulLiteral","src":"27823:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"27812:3:31","nodeType":"YulIdentifier","src":"27812:3:31"},"nativeSrc":"27812:13:31","nodeType":"YulFunctionCall","src":"27812:13:31"},"variableNames":[{"name":"start","nativeSrc":"27803:5:31","nodeType":"YulIdentifier","src":"27803:5:31"}]}]},"pre":{"nativeSrc":"27783:2:31","nodeType":"YulBlock","src":"27783:2:31","statements":[]},"src":"27779:120:31"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"27719:186:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"27757:5:31","nodeType":"YulTypedName","src":"27757:5:31","type":""},{"name":"end","nativeSrc":"27764:3:31","nodeType":"YulTypedName","src":"27764:3:31","type":""}],"src":"27719:186:31"},{"body":{"nativeSrc":"27990:464:31","nodeType":"YulBlock","src":"27990:464:31","statements":[{"body":{"nativeSrc":"28016:431:31","nodeType":"YulBlock","src":"28016:431:31","statements":[{"nativeSrc":"28030:54:31","nodeType":"YulVariableDeclaration","src":"28030:54:31","value":{"arguments":[{"name":"array","nativeSrc":"28078:5:31","nodeType":"YulIdentifier","src":"28078:5:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"28046:31:31","nodeType":"YulIdentifier","src":"28046:31:31"},"nativeSrc":"28046:38:31","nodeType":"YulFunctionCall","src":"28046:38:31"},"variables":[{"name":"dataArea","nativeSrc":"28034:8:31","nodeType":"YulTypedName","src":"28034:8:31","type":""}]},{"nativeSrc":"28097:63:31","nodeType":"YulVariableDeclaration","src":"28097:63:31","value":{"arguments":[{"name":"dataArea","nativeSrc":"28120:8:31","nodeType":"YulIdentifier","src":"28120:8:31"},{"arguments":[{"name":"startIndex","nativeSrc":"28148:10:31","nodeType":"YulIdentifier","src":"28148:10:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"28130:17:31","nodeType":"YulIdentifier","src":"28130:17:31"},"nativeSrc":"28130:29:31","nodeType":"YulFunctionCall","src":"28130:29:31"}],"functionName":{"name":"add","nativeSrc":"28116:3:31","nodeType":"YulIdentifier","src":"28116:3:31"},"nativeSrc":"28116:44:31","nodeType":"YulFunctionCall","src":"28116:44:31"},"variables":[{"name":"deleteStart","nativeSrc":"28101:11:31","nodeType":"YulTypedName","src":"28101:11:31","type":""}]},{"body":{"nativeSrc":"28317:27:31","nodeType":"YulBlock","src":"28317:27:31","statements":[{"nativeSrc":"28319:23:31","nodeType":"YulAssignment","src":"28319:23:31","value":{"name":"dataArea","nativeSrc":"28334:8:31","nodeType":"YulIdentifier","src":"28334:8:31"},"variableNames":[{"name":"deleteStart","nativeSrc":"28319:11:31","nodeType":"YulIdentifier","src":"28319:11:31"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"28301:10:31","nodeType":"YulIdentifier","src":"28301:10:31"},{"kind":"number","nativeSrc":"28313:2:31","nodeType":"YulLiteral","src":"28313:2:31","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"28298:2:31","nodeType":"YulIdentifier","src":"28298:2:31"},"nativeSrc":"28298:18:31","nodeType":"YulFunctionCall","src":"28298:18:31"},"nativeSrc":"28295:49:31","nodeType":"YulIf","src":"28295:49:31"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"28386:11:31","nodeType":"YulIdentifier","src":"28386:11:31"},{"arguments":[{"name":"dataArea","nativeSrc":"28403:8:31","nodeType":"YulIdentifier","src":"28403:8:31"},{"arguments":[{"name":"len","nativeSrc":"28431:3:31","nodeType":"YulIdentifier","src":"28431:3:31"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"28413:17:31","nodeType":"YulIdentifier","src":"28413:17:31"},"nativeSrc":"28413:22:31","nodeType":"YulFunctionCall","src":"28413:22:31"}],"functionName":{"name":"add","nativeSrc":"28399:3:31","nodeType":"YulIdentifier","src":"28399:3:31"},"nativeSrc":"28399:37:31","nodeType":"YulFunctionCall","src":"28399:37:31"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"28357:28:31","nodeType":"YulIdentifier","src":"28357:28:31"},"nativeSrc":"28357:80:31","nodeType":"YulFunctionCall","src":"28357:80:31"},"nativeSrc":"28357:80:31","nodeType":"YulExpressionStatement","src":"28357:80:31"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"28007:3:31","nodeType":"YulIdentifier","src":"28007:3:31"},{"kind":"number","nativeSrc":"28012:2:31","nodeType":"YulLiteral","src":"28012:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"28004:2:31","nodeType":"YulIdentifier","src":"28004:2:31"},"nativeSrc":"28004:11:31","nodeType":"YulFunctionCall","src":"28004:11:31"},"nativeSrc":"28001:446:31","nodeType":"YulIf","src":"28001:446:31"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"27911:543:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"27966:5:31","nodeType":"YulTypedName","src":"27966:5:31","type":""},{"name":"len","nativeSrc":"27973:3:31","nodeType":"YulTypedName","src":"27973:3:31","type":""},{"name":"startIndex","nativeSrc":"27978:10:31","nodeType":"YulTypedName","src":"27978:10:31","type":""}],"src":"27911:543:31"},{"body":{"nativeSrc":"28523:54:31","nodeType":"YulBlock","src":"28523:54:31","statements":[{"nativeSrc":"28533:37:31","nodeType":"YulAssignment","src":"28533:37:31","value":{"arguments":[{"name":"bits","nativeSrc":"28558:4:31","nodeType":"YulIdentifier","src":"28558:4:31"},{"name":"value","nativeSrc":"28564:5:31","nodeType":"YulIdentifier","src":"28564:5:31"}],"functionName":{"name":"shr","nativeSrc":"28554:3:31","nodeType":"YulIdentifier","src":"28554:3:31"},"nativeSrc":"28554:16:31","nodeType":"YulFunctionCall","src":"28554:16:31"},"variableNames":[{"name":"newValue","nativeSrc":"28533:8:31","nodeType":"YulIdentifier","src":"28533:8:31"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"28460:117:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"28498:4:31","nodeType":"YulTypedName","src":"28498:4:31","type":""},{"name":"value","nativeSrc":"28504:5:31","nodeType":"YulTypedName","src":"28504:5:31","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"28514:8:31","nodeType":"YulTypedName","src":"28514:8:31","type":""}],"src":"28460:117:31"},{"body":{"nativeSrc":"28634:118:31","nodeType":"YulBlock","src":"28634:118:31","statements":[{"nativeSrc":"28644:68:31","nodeType":"YulVariableDeclaration","src":"28644:68:31","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"28693:1:31","nodeType":"YulLiteral","src":"28693:1:31","type":"","value":"8"},{"name":"bytes","nativeSrc":"28696:5:31","nodeType":"YulIdentifier","src":"28696:5:31"}],"functionName":{"name":"mul","nativeSrc":"28689:3:31","nodeType":"YulIdentifier","src":"28689:3:31"},"nativeSrc":"28689:13:31","nodeType":"YulFunctionCall","src":"28689:13:31"},{"arguments":[{"kind":"number","nativeSrc":"28708:1:31","nodeType":"YulLiteral","src":"28708:1:31","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"28704:3:31","nodeType":"YulIdentifier","src":"28704:3:31"},"nativeSrc":"28704:6:31","nodeType":"YulFunctionCall","src":"28704:6:31"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"28660:28:31","nodeType":"YulIdentifier","src":"28660:28:31"},"nativeSrc":"28660:51:31","nodeType":"YulFunctionCall","src":"28660:51:31"}],"functionName":{"name":"not","nativeSrc":"28656:3:31","nodeType":"YulIdentifier","src":"28656:3:31"},"nativeSrc":"28656:56:31","nodeType":"YulFunctionCall","src":"28656:56:31"},"variables":[{"name":"mask","nativeSrc":"28648:4:31","nodeType":"YulTypedName","src":"28648:4:31","type":""}]},{"nativeSrc":"28721:25:31","nodeType":"YulAssignment","src":"28721:25:31","value":{"arguments":[{"name":"data","nativeSrc":"28735:4:31","nodeType":"YulIdentifier","src":"28735:4:31"},{"name":"mask","nativeSrc":"28741:4:31","nodeType":"YulIdentifier","src":"28741:4:31"}],"functionName":{"name":"and","nativeSrc":"28731:3:31","nodeType":"YulIdentifier","src":"28731:3:31"},"nativeSrc":"28731:15:31","nodeType":"YulFunctionCall","src":"28731:15:31"},"variableNames":[{"name":"result","nativeSrc":"28721:6:31","nodeType":"YulIdentifier","src":"28721:6:31"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"28583:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"28611:4:31","nodeType":"YulTypedName","src":"28611:4:31","type":""},{"name":"bytes","nativeSrc":"28617:5:31","nodeType":"YulTypedName","src":"28617:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"28627:6:31","nodeType":"YulTypedName","src":"28627:6:31","type":""}],"src":"28583:169:31"},{"body":{"nativeSrc":"28838:214:31","nodeType":"YulBlock","src":"28838:214:31","statements":[{"nativeSrc":"28971:37:31","nodeType":"YulAssignment","src":"28971:37:31","value":{"arguments":[{"name":"data","nativeSrc":"28998:4:31","nodeType":"YulIdentifier","src":"28998:4:31"},{"name":"len","nativeSrc":"29004:3:31","nodeType":"YulIdentifier","src":"29004:3:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"28979:18:31","nodeType":"YulIdentifier","src":"28979:18:31"},"nativeSrc":"28979:29:31","nodeType":"YulFunctionCall","src":"28979:29:31"},"variableNames":[{"name":"data","nativeSrc":"28971:4:31","nodeType":"YulIdentifier","src":"28971:4:31"}]},{"nativeSrc":"29017:29:31","nodeType":"YulAssignment","src":"29017:29:31","value":{"arguments":[{"name":"data","nativeSrc":"29028:4:31","nodeType":"YulIdentifier","src":"29028:4:31"},{"arguments":[{"kind":"number","nativeSrc":"29038:1:31","nodeType":"YulLiteral","src":"29038:1:31","type":"","value":"2"},{"name":"len","nativeSrc":"29041:3:31","nodeType":"YulIdentifier","src":"29041:3:31"}],"functionName":{"name":"mul","nativeSrc":"29034:3:31","nodeType":"YulIdentifier","src":"29034:3:31"},"nativeSrc":"29034:11:31","nodeType":"YulFunctionCall","src":"29034:11:31"}],"functionName":{"name":"or","nativeSrc":"29025:2:31","nodeType":"YulIdentifier","src":"29025:2:31"},"nativeSrc":"29025:21:31","nodeType":"YulFunctionCall","src":"29025:21:31"},"variableNames":[{"name":"used","nativeSrc":"29017:4:31","nodeType":"YulIdentifier","src":"29017:4:31"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"28757:295:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"28819:4:31","nodeType":"YulTypedName","src":"28819:4:31","type":""},{"name":"len","nativeSrc":"28825:3:31","nodeType":"YulTypedName","src":"28825:3:31","type":""}],"returnVariables":[{"name":"used","nativeSrc":"28833:4:31","nodeType":"YulTypedName","src":"28833:4:31","type":""}],"src":"28757:295:31"},{"body":{"nativeSrc":"29149:1303:31","nodeType":"YulBlock","src":"29149:1303:31","statements":[{"nativeSrc":"29160:51:31","nodeType":"YulVariableDeclaration","src":"29160:51:31","value":{"arguments":[{"name":"src","nativeSrc":"29207:3:31","nodeType":"YulIdentifier","src":"29207:3:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"29174:32:31","nodeType":"YulIdentifier","src":"29174:32:31"},"nativeSrc":"29174:37:31","nodeType":"YulFunctionCall","src":"29174:37:31"},"variables":[{"name":"newLen","nativeSrc":"29164:6:31","nodeType":"YulTypedName","src":"29164:6:31","type":""}]},{"body":{"nativeSrc":"29296:22:31","nodeType":"YulBlock","src":"29296:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"29298:16:31","nodeType":"YulIdentifier","src":"29298:16:31"},"nativeSrc":"29298:18:31","nodeType":"YulFunctionCall","src":"29298:18:31"},"nativeSrc":"29298:18:31","nodeType":"YulExpressionStatement","src":"29298:18:31"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"29268:6:31","nodeType":"YulIdentifier","src":"29268:6:31"},{"kind":"number","nativeSrc":"29276:18:31","nodeType":"YulLiteral","src":"29276:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"29265:2:31","nodeType":"YulIdentifier","src":"29265:2:31"},"nativeSrc":"29265:30:31","nodeType":"YulFunctionCall","src":"29265:30:31"},"nativeSrc":"29262:56:31","nodeType":"YulIf","src":"29262:56:31"},{"nativeSrc":"29328:52:31","nodeType":"YulVariableDeclaration","src":"29328:52:31","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"29374:4:31","nodeType":"YulIdentifier","src":"29374:4:31"}],"functionName":{"name":"sload","nativeSrc":"29368:5:31","nodeType":"YulIdentifier","src":"29368:5:31"},"nativeSrc":"29368:11:31","nodeType":"YulFunctionCall","src":"29368:11:31"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"29342:25:31","nodeType":"YulIdentifier","src":"29342:25:31"},"nativeSrc":"29342:38:31","nodeType":"YulFunctionCall","src":"29342:38:31"},"variables":[{"name":"oldLen","nativeSrc":"29332:6:31","nodeType":"YulTypedName","src":"29332:6:31","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"29473:4:31","nodeType":"YulIdentifier","src":"29473:4:31"},{"name":"oldLen","nativeSrc":"29479:6:31","nodeType":"YulIdentifier","src":"29479:6:31"},{"name":"newLen","nativeSrc":"29487:6:31","nodeType":"YulIdentifier","src":"29487:6:31"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"29427:45:31","nodeType":"YulIdentifier","src":"29427:45:31"},"nativeSrc":"29427:67:31","nodeType":"YulFunctionCall","src":"29427:67:31"},"nativeSrc":"29427:67:31","nodeType":"YulExpressionStatement","src":"29427:67:31"},{"nativeSrc":"29504:18:31","nodeType":"YulVariableDeclaration","src":"29504:18:31","value":{"kind":"number","nativeSrc":"29521:1:31","nodeType":"YulLiteral","src":"29521:1:31","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"29508:9:31","nodeType":"YulTypedName","src":"29508:9:31","type":""}]},{"nativeSrc":"29532:17:31","nodeType":"YulAssignment","src":"29532:17:31","value":{"kind":"number","nativeSrc":"29545:4:31","nodeType":"YulLiteral","src":"29545:4:31","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"29532:9:31","nodeType":"YulIdentifier","src":"29532:9:31"}]},{"cases":[{"body":{"nativeSrc":"29596:611:31","nodeType":"YulBlock","src":"29596:611:31","statements":[{"nativeSrc":"29610:37:31","nodeType":"YulVariableDeclaration","src":"29610:37:31","value":{"arguments":[{"name":"newLen","nativeSrc":"29629:6:31","nodeType":"YulIdentifier","src":"29629:6:31"},{"arguments":[{"kind":"number","nativeSrc":"29641:4:31","nodeType":"YulLiteral","src":"29641:4:31","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"29637:3:31","nodeType":"YulIdentifier","src":"29637:3:31"},"nativeSrc":"29637:9:31","nodeType":"YulFunctionCall","src":"29637:9:31"}],"functionName":{"name":"and","nativeSrc":"29625:3:31","nodeType":"YulIdentifier","src":"29625:3:31"},"nativeSrc":"29625:22:31","nodeType":"YulFunctionCall","src":"29625:22:31"},"variables":[{"name":"loopEnd","nativeSrc":"29614:7:31","nodeType":"YulTypedName","src":"29614:7:31","type":""}]},{"nativeSrc":"29661:51:31","nodeType":"YulVariableDeclaration","src":"29661:51:31","value":{"arguments":[{"name":"slot","nativeSrc":"29707:4:31","nodeType":"YulIdentifier","src":"29707:4:31"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"29675:31:31","nodeType":"YulIdentifier","src":"29675:31:31"},"nativeSrc":"29675:37:31","nodeType":"YulFunctionCall","src":"29675:37:31"},"variables":[{"name":"dstPtr","nativeSrc":"29665:6:31","nodeType":"YulTypedName","src":"29665:6:31","type":""}]},{"nativeSrc":"29725:10:31","nodeType":"YulVariableDeclaration","src":"29725:10:31","value":{"kind":"number","nativeSrc":"29734:1:31","nodeType":"YulLiteral","src":"29734:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"29729:1:31","nodeType":"YulTypedName","src":"29729:1:31","type":""}]},{"body":{"nativeSrc":"29793:163:31","nodeType":"YulBlock","src":"29793:163:31","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"29818:6:31","nodeType":"YulIdentifier","src":"29818:6:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"29836:3:31","nodeType":"YulIdentifier","src":"29836:3:31"},{"name":"srcOffset","nativeSrc":"29841:9:31","nodeType":"YulIdentifier","src":"29841:9:31"}],"functionName":{"name":"add","nativeSrc":"29832:3:31","nodeType":"YulIdentifier","src":"29832:3:31"},"nativeSrc":"29832:19:31","nodeType":"YulFunctionCall","src":"29832:19:31"}],"functionName":{"name":"mload","nativeSrc":"29826:5:31","nodeType":"YulIdentifier","src":"29826:5:31"},"nativeSrc":"29826:26:31","nodeType":"YulFunctionCall","src":"29826:26:31"}],"functionName":{"name":"sstore","nativeSrc":"29811:6:31","nodeType":"YulIdentifier","src":"29811:6:31"},"nativeSrc":"29811:42:31","nodeType":"YulFunctionCall","src":"29811:42:31"},"nativeSrc":"29811:42:31","nodeType":"YulExpressionStatement","src":"29811:42:31"},{"nativeSrc":"29870:24:31","nodeType":"YulAssignment","src":"29870:24:31","value":{"arguments":[{"name":"dstPtr","nativeSrc":"29884:6:31","nodeType":"YulIdentifier","src":"29884:6:31"},{"kind":"number","nativeSrc":"29892:1:31","nodeType":"YulLiteral","src":"29892:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"29880:3:31","nodeType":"YulIdentifier","src":"29880:3:31"},"nativeSrc":"29880:14:31","nodeType":"YulFunctionCall","src":"29880:14:31"},"variableNames":[{"name":"dstPtr","nativeSrc":"29870:6:31","nodeType":"YulIdentifier","src":"29870:6:31"}]},{"nativeSrc":"29911:31:31","nodeType":"YulAssignment","src":"29911:31:31","value":{"arguments":[{"name":"srcOffset","nativeSrc":"29928:9:31","nodeType":"YulIdentifier","src":"29928:9:31"},{"kind":"number","nativeSrc":"29939:2:31","nodeType":"YulLiteral","src":"29939:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"29924:3:31","nodeType":"YulIdentifier","src":"29924:3:31"},"nativeSrc":"29924:18:31","nodeType":"YulFunctionCall","src":"29924:18:31"},"variableNames":[{"name":"srcOffset","nativeSrc":"29911:9:31","nodeType":"YulIdentifier","src":"29911:9:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"29759:1:31","nodeType":"YulIdentifier","src":"29759:1:31"},{"name":"loopEnd","nativeSrc":"29762:7:31","nodeType":"YulIdentifier","src":"29762:7:31"}],"functionName":{"name":"lt","nativeSrc":"29756:2:31","nodeType":"YulIdentifier","src":"29756:2:31"},"nativeSrc":"29756:14:31","nodeType":"YulFunctionCall","src":"29756:14:31"},"nativeSrc":"29748:208:31","nodeType":"YulForLoop","post":{"nativeSrc":"29771:21:31","nodeType":"YulBlock","src":"29771:21:31","statements":[{"nativeSrc":"29773:17:31","nodeType":"YulAssignment","src":"29773:17:31","value":{"arguments":[{"name":"i","nativeSrc":"29782:1:31","nodeType":"YulIdentifier","src":"29782:1:31"},{"kind":"number","nativeSrc":"29785:4:31","nodeType":"YulLiteral","src":"29785:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"29778:3:31","nodeType":"YulIdentifier","src":"29778:3:31"},"nativeSrc":"29778:12:31","nodeType":"YulFunctionCall","src":"29778:12:31"},"variableNames":[{"name":"i","nativeSrc":"29773:1:31","nodeType":"YulIdentifier","src":"29773:1:31"}]}]},"pre":{"nativeSrc":"29752:3:31","nodeType":"YulBlock","src":"29752:3:31","statements":[]},"src":"29748:208:31"},{"body":{"nativeSrc":"29992:156:31","nodeType":"YulBlock","src":"29992:156:31","statements":[{"nativeSrc":"30010:43:31","nodeType":"YulVariableDeclaration","src":"30010:43:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"30037:3:31","nodeType":"YulIdentifier","src":"30037:3:31"},{"name":"srcOffset","nativeSrc":"30042:9:31","nodeType":"YulIdentifier","src":"30042:9:31"}],"functionName":{"name":"add","nativeSrc":"30033:3:31","nodeType":"YulIdentifier","src":"30033:3:31"},"nativeSrc":"30033:19:31","nodeType":"YulFunctionCall","src":"30033:19:31"}],"functionName":{"name":"mload","nativeSrc":"30027:5:31","nodeType":"YulIdentifier","src":"30027:5:31"},"nativeSrc":"30027:26:31","nodeType":"YulFunctionCall","src":"30027:26:31"},"variables":[{"name":"lastValue","nativeSrc":"30014:9:31","nodeType":"YulTypedName","src":"30014:9:31","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"30077:6:31","nodeType":"YulIdentifier","src":"30077:6:31"},{"arguments":[{"name":"lastValue","nativeSrc":"30104:9:31","nodeType":"YulIdentifier","src":"30104:9:31"},{"arguments":[{"name":"newLen","nativeSrc":"30119:6:31","nodeType":"YulIdentifier","src":"30119:6:31"},{"kind":"number","nativeSrc":"30127:4:31","nodeType":"YulLiteral","src":"30127:4:31","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"30115:3:31","nodeType":"YulIdentifier","src":"30115:3:31"},"nativeSrc":"30115:17:31","nodeType":"YulFunctionCall","src":"30115:17:31"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"30085:18:31","nodeType":"YulIdentifier","src":"30085:18:31"},"nativeSrc":"30085:48:31","nodeType":"YulFunctionCall","src":"30085:48:31"}],"functionName":{"name":"sstore","nativeSrc":"30070:6:31","nodeType":"YulIdentifier","src":"30070:6:31"},"nativeSrc":"30070:64:31","nodeType":"YulFunctionCall","src":"30070:64:31"},"nativeSrc":"30070:64:31","nodeType":"YulExpressionStatement","src":"30070:64:31"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"29975:7:31","nodeType":"YulIdentifier","src":"29975:7:31"},{"name":"newLen","nativeSrc":"29984:6:31","nodeType":"YulIdentifier","src":"29984:6:31"}],"functionName":{"name":"lt","nativeSrc":"29972:2:31","nodeType":"YulIdentifier","src":"29972:2:31"},"nativeSrc":"29972:19:31","nodeType":"YulFunctionCall","src":"29972:19:31"},"nativeSrc":"29969:179:31","nodeType":"YulIf","src":"29969:179:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30168:4:31","nodeType":"YulIdentifier","src":"30168:4:31"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"30182:6:31","nodeType":"YulIdentifier","src":"30182:6:31"},{"kind":"number","nativeSrc":"30190:1:31","nodeType":"YulLiteral","src":"30190:1:31","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"30178:3:31","nodeType":"YulIdentifier","src":"30178:3:31"},"nativeSrc":"30178:14:31","nodeType":"YulFunctionCall","src":"30178:14:31"},{"kind":"number","nativeSrc":"30194:1:31","nodeType":"YulLiteral","src":"30194:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"30174:3:31","nodeType":"YulIdentifier","src":"30174:3:31"},"nativeSrc":"30174:22:31","nodeType":"YulFunctionCall","src":"30174:22:31"}],"functionName":{"name":"sstore","nativeSrc":"30161:6:31","nodeType":"YulIdentifier","src":"30161:6:31"},"nativeSrc":"30161:36:31","nodeType":"YulFunctionCall","src":"30161:36:31"},"nativeSrc":"30161:36:31","nodeType":"YulExpressionStatement","src":"30161:36:31"}]},"nativeSrc":"29589:618:31","nodeType":"YulCase","src":"29589:618:31","value":{"kind":"number","nativeSrc":"29594:1:31","nodeType":"YulLiteral","src":"29594:1:31","type":"","value":"1"}},{"body":{"nativeSrc":"30224:222:31","nodeType":"YulBlock","src":"30224:222:31","statements":[{"nativeSrc":"30238:14:31","nodeType":"YulVariableDeclaration","src":"30238:14:31","value":{"kind":"number","nativeSrc":"30251:1:31","nodeType":"YulLiteral","src":"30251:1:31","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"30242:5:31","nodeType":"YulTypedName","src":"30242:5:31","type":""}]},{"body":{"nativeSrc":"30275:67:31","nodeType":"YulBlock","src":"30275:67:31","statements":[{"nativeSrc":"30293:35:31","nodeType":"YulAssignment","src":"30293:35:31","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"30312:3:31","nodeType":"YulIdentifier","src":"30312:3:31"},{"name":"srcOffset","nativeSrc":"30317:9:31","nodeType":"YulIdentifier","src":"30317:9:31"}],"functionName":{"name":"add","nativeSrc":"30308:3:31","nodeType":"YulIdentifier","src":"30308:3:31"},"nativeSrc":"30308:19:31","nodeType":"YulFunctionCall","src":"30308:19:31"}],"functionName":{"name":"mload","nativeSrc":"30302:5:31","nodeType":"YulIdentifier","src":"30302:5:31"},"nativeSrc":"30302:26:31","nodeType":"YulFunctionCall","src":"30302:26:31"},"variableNames":[{"name":"value","nativeSrc":"30293:5:31","nodeType":"YulIdentifier","src":"30293:5:31"}]}]},"condition":{"name":"newLen","nativeSrc":"30268:6:31","nodeType":"YulIdentifier","src":"30268:6:31"},"nativeSrc":"30265:77:31","nodeType":"YulIf","src":"30265:77:31"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"30362:4:31","nodeType":"YulIdentifier","src":"30362:4:31"},{"arguments":[{"name":"value","nativeSrc":"30421:5:31","nodeType":"YulIdentifier","src":"30421:5:31"},{"name":"newLen","nativeSrc":"30428:6:31","nodeType":"YulIdentifier","src":"30428:6:31"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"30368:52:31","nodeType":"YulIdentifier","src":"30368:52:31"},"nativeSrc":"30368:67:31","nodeType":"YulFunctionCall","src":"30368:67:31"}],"functionName":{"name":"sstore","nativeSrc":"30355:6:31","nodeType":"YulIdentifier","src":"30355:6:31"},"nativeSrc":"30355:81:31","nodeType":"YulFunctionCall","src":"30355:81:31"},"nativeSrc":"30355:81:31","nodeType":"YulExpressionStatement","src":"30355:81:31"}]},"nativeSrc":"30216:230:31","nodeType":"YulCase","src":"30216:230:31","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"29569:6:31","nodeType":"YulIdentifier","src":"29569:6:31"},{"kind":"number","nativeSrc":"29577:2:31","nodeType":"YulLiteral","src":"29577:2:31","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"29566:2:31","nodeType":"YulIdentifier","src":"29566:2:31"},"nativeSrc":"29566:14:31","nodeType":"YulFunctionCall","src":"29566:14:31"},"nativeSrc":"29559:887:31","nodeType":"YulSwitch","src":"29559:887:31"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"29057:1395:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"29138:4:31","nodeType":"YulTypedName","src":"29138:4:31","type":""},{"name":"src","nativeSrc":"29144:3:31","nodeType":"YulTypedName","src":"29144:3:31","type":""}],"src":"29057:1395:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ce5760003560e01c8063715018a61161008c578063a22cb46511610066578063a22cb4651461020f578063e985e9c51461022b578063f242432a1461025b578063f2fde38b14610277576100ce565b8063715018a6146101cb5780637ab4339d146101d55780638da5cb5b146101f1576100ce565b8062fdd58e146100d357806301ffc9a7146101035780630e89341c146101335780632eb2c2d61461016357806340c10f191461017f5780634e1273f41461019b575b600080fd5b6100ed60048036038101906100e89190611acd565b610293565b6040516100fa9190611b1c565b60405180910390f35b61011d60048036038101906101189190611b8f565b6102fc565b60405161012a9190611bd7565b60405180910390f35b61014d60048036038101906101489190611bf2565b6103de565b60405161015a9190611caf565b60405180910390f35b61017d60048036038101906101789190611ece565b610481565b005b61019960048036038101906101949190611acd565b610529565b005b6101b560048036038101906101b09190612060565b610563565b6040516101c29190612196565b60405180910390f35b6101d361066c565b005b6101ef60048036038101906101ea9190612259565b610680565b005b6101f9610819565b60405161020691906122c4565b60405180910390f35b6102296004803603810190610224919061230b565b610851565b005b6102456004803603810190610240919061234b565b610867565b6040516102529190611bd7565b60405180910390f35b6102756004803603810190610270919061238b565b610909565b005b610291600480360381019061028c9190612422565b6109b1565b005b60008061029e610a37565b905080600001600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103c757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103d757506103d682610a5f565b5b9050919050565b606060006103ea610a37565b90508060020180546103fb9061247e565b80601f01602080910402602001604051908101604052809291908181526020018280546104279061247e565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050915050919050565b600061048b610ac9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104d057506104ce8682610867565b155b156105145780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161050b9291906124af565b60405180910390fd5b6105218686868686610ad1565b505050505050565b600080600081548092919061053d90612507565b91905055905061055e83828460405180602001604052806000815250610bc9565b505050565b606081518351146105af57815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016105a692919061254f565b60405180910390fd5b6000835167ffffffffffffffff8111156105cc576105cb611cd6565b5b6040519080825280602002602001820160405280156105fa5781602001602082028036833780820191505090505b50905060005b84518110156106615761063761061f8287610c6290919063ffffffff16565b6106328387610c7690919063ffffffff16565b610293565b82828151811061064a57610649612578565b5b602002602001018181525050806001019050610600565b508091505092915050565b610674610c8a565b61067e6000610d11565b565b600061068a610de8565b905060008160000160089054906101000a900460ff1615905060008260000160009054906101000a900467ffffffffffffffff1690506000808267ffffffffffffffff161480156106d85750825b9050600060018367ffffffffffffffff1614801561070d575060003073ffffffffffffffffffffffffffffffffffffffff163b145b90508115801561071b575080155b15610752576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018560000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156107a25760018560000160086101000a81548160ff0219169083151502179055505b6107ab87610dfc565b6107b486610e10565b83156108105760008560000160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516108079190612600565b60405180910390a15b50505050505050565b600080610824610e24565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b61086361085c610ac9565b8383610e4c565b5050565b600080610872610a37565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000610913610ac9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561095857506109568682610867565b155b1561099c5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109939291906124af565b60405180910390fd5b6109a98686868686610fcb565b505050505050565b6109b9610c8a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a2b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a2291906122c4565b60405180910390fd5b610a3481610d11565b50565b60007f88be536d5240c274a3b1d3a1be54482fd9caa294f08c62a7cde569f49a3c4500905090565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b435760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b3a91906122c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610bb55760006040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610bac91906122c4565b60405180910390fd5b610bc285858585856110d6565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c3b5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c3291906122c4565b60405180910390fd5b600080610c488585611188565b91509150610c5a6000878484876110d6565b505050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b610c92610ac9565b73ffffffffffffffffffffffffffffffffffffffff16610cb0610819565b73ffffffffffffffffffffffffffffffffffffffff1614610d0f57610cd3610ac9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d0691906122c4565b60405180910390fd5b565b6000610d1b610e24565b905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050828260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b600080610df36111b8565b90508091505090565b610e046111e3565b610e0d81611223565b50565b610e186111e3565b610e2181611237565b50565b60007f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6000610e56610a37565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eca5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610ec191906122c4565b60405180910390fd5b818160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051610fbd9190611bd7565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361103d5760006040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161103491906122c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036110af5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110a691906122c4565b60405180910390fd5b6000806110bc8585611188565b915091506110cd87878484876110d6565b50505050505050565b6110e2858585856112bd565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611181576000611120610ac9565b90506001845103611170576000611141600086610c7690919063ffffffff16565b90506000611159600086610c7690919063ffffffff16565b905061116983898985858961167b565b505061117f565b61117e81878787878761182f565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b60007ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0060001b905090565b6111eb6119e3565b611221576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61122b6111e3565b61123481611a03565b50565b61123f6111e3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036112b15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112a891906122c4565b60405180910390fd5b6112ba81610d11565b50565b60006112c7610a37565b9050815183511461131357825182516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161130a92919061254f565b60405180910390fd5b600061131d610ac9565b905060005b84518110156115355760006113408287610c7690919063ffffffff16565b905060006113578387610c7690919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff161461148a57600085600001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561142f57898183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611426949392919061261b565b60405180910390fd5b81810386600001600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611528578085600001600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546115209190612660565b925050819055505b5050806001019050611322565b5060018451036115f4576000611555600086610c7690919063ffffffff16565b9050600061156d600086610c7690919063ffffffff16565b90508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516115e592919061254f565b60405180910390a45050611673565b8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161166a929190612694565b60405180910390a45b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611827578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016116dc959493929190612720565b6020604051808303816000875af192505050801561171857506040513d601f19601f82011682018060405250810190611715919061278f565b60015b61179c573d8060008114611748576040519150601f19603f3d011682016040523d82523d6000602084013e61174d565b606091505b50600081510361179457846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161178b91906122c4565b60405180910390fd5b805160208201fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461182557846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161181c91906122c4565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b11156119db578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016118909594939291906127bc565b6020604051808303816000875af19250505080156118cc57506040513d601f19601f820116820180604052508101906118c9919061278f565b60015b611950573d80600081146118fc576040519150601f19603f3d011682016040523d82523d6000602084013e611901565b606091505b50600081510361194857846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161193f91906122c4565b60405180910390fd5b805160208201fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146119d957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016119d091906122c4565b60405180910390fd5b505b505050505050565b60006119ed610de8565b60000160089054906101000a900460ff16905090565b6000611a0d610a37565b905081816002019081611a2091906129c6565b505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611a6482611a39565b9050919050565b611a7481611a59565b8114611a7f57600080fd5b50565b600081359050611a9181611a6b565b92915050565b6000819050919050565b611aaa81611a97565b8114611ab557600080fd5b50565b600081359050611ac781611aa1565b92915050565b60008060408385031215611ae457611ae3611a2f565b5b6000611af285828601611a82565b9250506020611b0385828601611ab8565b9150509250929050565b611b1681611a97565b82525050565b6000602082019050611b316000830184611b0d565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b6c81611b37565b8114611b7757600080fd5b50565b600081359050611b8981611b63565b92915050565b600060208284031215611ba557611ba4611a2f565b5b6000611bb384828501611b7a565b91505092915050565b60008115159050919050565b611bd181611bbc565b82525050565b6000602082019050611bec6000830184611bc8565b92915050565b600060208284031215611c0857611c07611a2f565b5b6000611c1684828501611ab8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c59578082015181840152602081019050611c3e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c8182611c1f565b611c8b8185611c2a565b9350611c9b818560208601611c3b565b611ca481611c65565b840191505092915050565b60006020820190508181036000830152611cc98184611c76565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611d0e82611c65565b810181811067ffffffffffffffff82111715611d2d57611d2c611cd6565b5b80604052505050565b6000611d40611a25565b9050611d4c8282611d05565b919050565b600067ffffffffffffffff821115611d6c57611d6b611cd6565b5b602082029050602081019050919050565b600080fd5b6000611d95611d9084611d51565b611d36565b90508083825260208201905060208402830185811115611db857611db7611d7d565b5b835b81811015611de15780611dcd8882611ab8565b845260208401935050602081019050611dba565b5050509392505050565b600082601f830112611e0057611dff611cd1565b5b8135611e10848260208601611d82565b91505092915050565b600080fd5b600067ffffffffffffffff821115611e3957611e38611cd6565b5b611e4282611c65565b9050602081019050919050565b82818337600083830152505050565b6000611e71611e6c84611e1e565b611d36565b905082815260208101848484011115611e8d57611e8c611e19565b5b611e98848285611e4f565b509392505050565b600082601f830112611eb557611eb4611cd1565b5b8135611ec5848260208601611e5e565b91505092915050565b600080600080600060a08688031215611eea57611ee9611a2f565b5b6000611ef888828901611a82565b9550506020611f0988828901611a82565b945050604086013567ffffffffffffffff811115611f2a57611f29611a34565b5b611f3688828901611deb565b935050606086013567ffffffffffffffff811115611f5757611f56611a34565b5b611f6388828901611deb565b925050608086013567ffffffffffffffff811115611f8457611f83611a34565b5b611f9088828901611ea0565b9150509295509295909350565b600067ffffffffffffffff821115611fb857611fb7611cd6565b5b602082029050602081019050919050565b6000611fdc611fd784611f9d565b611d36565b90508083825260208201905060208402830185811115611fff57611ffe611d7d565b5b835b8181101561202857806120148882611a82565b845260208401935050602081019050612001565b5050509392505050565b600082601f83011261204757612046611cd1565b5b8135612057848260208601611fc9565b91505092915050565b6000806040838503121561207757612076611a2f565b5b600083013567ffffffffffffffff81111561209557612094611a34565b5b6120a185828601612032565b925050602083013567ffffffffffffffff8111156120c2576120c1611a34565b5b6120ce85828601611deb565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61210d81611a97565b82525050565b600061211f8383612104565b60208301905092915050565b6000602082019050919050565b6000612143826120d8565b61214d81856120e3565b9350612158836120f4565b8060005b838110156121895781516121708882612113565b975061217b8361212b565b92505060018101905061215c565b5085935050505092915050565b600060208201905081810360008301526121b08184612138565b905092915050565b600067ffffffffffffffff8211156121d3576121d2611cd6565b5b6121dc82611c65565b9050602081019050919050565b60006121fc6121f7846121b8565b611d36565b90508281526020810184848401111561221857612217611e19565b5b612223848285611e4f565b509392505050565b600082601f8301126122405761223f611cd1565b5b81356122508482602086016121e9565b91505092915050565b600080604083850312156122705761226f611a2f565b5b600083013567ffffffffffffffff81111561228e5761228d611a34565b5b61229a8582860161222b565b92505060206122ab85828601611a82565b9150509250929050565b6122be81611a59565b82525050565b60006020820190506122d960008301846122b5565b92915050565b6122e881611bbc565b81146122f357600080fd5b50565b600081359050612305816122df565b92915050565b6000806040838503121561232257612321611a2f565b5b600061233085828601611a82565b9250506020612341858286016122f6565b9150509250929050565b6000806040838503121561236257612361611a2f565b5b600061237085828601611a82565b925050602061238185828601611a82565b9150509250929050565b600080600080600060a086880312156123a7576123a6611a2f565b5b60006123b588828901611a82565b95505060206123c688828901611a82565b94505060406123d788828901611ab8565b93505060606123e888828901611ab8565b925050608086013567ffffffffffffffff81111561240957612408611a34565b5b61241588828901611ea0565b9150509295509295909350565b60006020828403121561243857612437611a2f565b5b600061244684828501611a82565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061249657607f821691505b6020821081036124a9576124a861244f565b5b50919050565b60006040820190506124c460008301856122b5565b6124d160208301846122b5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061251282611a97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612544576125436124d8565b5b600182019050919050565b60006040820190506125646000830185611b0d565b6125716020830184611b0d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000819050919050565b600067ffffffffffffffff82169050919050565b6000819050919050565b60006125ea6125e56125e0846125a7565b6125c5565b6125b1565b9050919050565b6125fa816125cf565b82525050565b600060208201905061261560008301846125f1565b92915050565b600060808201905061263060008301876122b5565b61263d6020830186611b0d565b61264a6040830185611b0d565b6126576060830184611b0d565b95945050505050565b600061266b82611a97565b915061267683611a97565b925082820190508082111561268e5761268d6124d8565b5b92915050565b600060408201905081810360008301526126ae8185612138565b905081810360208301526126c28184612138565b90509392505050565b600081519050919050565b600082825260208201905092915050565b60006126f2826126cb565b6126fc81856126d6565b935061270c818560208601611c3b565b61271581611c65565b840191505092915050565b600060a08201905061273560008301886122b5565b61274260208301876122b5565b61274f6040830186611b0d565b61275c6060830185611b0d565b818103608083015261276e81846126e7565b90509695505050505050565b60008151905061278981611b63565b92915050565b6000602082840312156127a5576127a4611a2f565b5b60006127b38482850161277a565b91505092915050565b600060a0820190506127d160008301886122b5565b6127de60208301876122b5565b81810360408301526127f08186612138565b905081810360608301526128048185612138565b9050818103608083015261281881846126e7565b90509695505050505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026128867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612849565b6128908683612849565b95508019841693508086168417925050509392505050565b60006128c36128be6128b984611a97565b6125c5565b611a97565b9050919050565b6000819050919050565b6128dd836128a8565b6128f16128e9826128ca565b848454612856565b825550505050565b600090565b6129066128f9565b6129118184846128d4565b505050565b5b818110156129355761292a6000826128fe565b600181019050612917565b5050565b601f82111561297a5761294b81612824565b61295484612839565b81016020851015612963578190505b61297761296f85612839565b830182612916565b50505b505050565b600082821c905092915050565b600061299d6000198460080261297f565b1980831691505092915050565b60006129b6838361298c565b9150826002028217905092915050565b6129cf82611c1f565b67ffffffffffffffff8111156129e8576129e7611cd6565b5b6129f2825461247e565b6129fd828285612939565b600060209050601f831160018114612a305760008415612a1e578287015190505b612a2885826129aa565b865550612a90565b601f198416612a3e86612824565b60005b82811015612a6657848901518255600182019150602085019450602081019050612a41565b86831015612a835784890151612a7f601f89168261298c565b8355505b6001600288020188555050505b50505050505056fea26469706673582212201ef850087e0645e59a8c38e4c28dc16c8b5d28c170a2f25287999c31bfea12df64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x277 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x7AB4339D EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F1 JUMPI PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x19B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x118 SWAP2 SWAP1 PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1BF2 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x481 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1ACD JUMP JUMPDEST PUSH2 0x529 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x2060 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D3 PUSH2 0x66C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x2259 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F9 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x230B JUMP JUMPDEST PUSH2 0x851 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x2422 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29E PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3C7 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3D7 JUMPI POP PUSH2 0x3D6 DUP3 PUSH2 0xA5F JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3EA PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x247E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x247E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48B PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4D0 JUMPI POP PUSH2 0x4CE DUP7 DUP3 PUSH2 0x867 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x514 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x521 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xAD1 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x53D SWAP1 PUSH2 0x2507 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH2 0x55E DUP4 DUP3 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBC9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5AF JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A6 SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5CC JUMPI PUSH2 0x5CB PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5FA JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH2 0x637 PUSH2 0x61F DUP3 DUP8 PUSH2 0xC62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x632 DUP4 DUP8 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64A JUMPI PUSH2 0x649 PUSH2 0x2578 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x600 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x674 PUSH2 0xC8A JUMP JUMPDEST PUSH2 0x67E PUSH1 0x0 PUSH2 0xD11 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A PUSH2 0xDE8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x6D8 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x70D JUMPI POP PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x71B JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x1 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x7AB DUP8 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x7B4 DUP7 PUSH2 0xE10 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x824 PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x863 PUSH2 0x85C PUSH2 0xAC9 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE4C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x872 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x913 PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x958 JUMPI POP PUSH2 0x956 DUP7 DUP3 PUSH2 0x867 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x99C JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x993 SWAP3 SWAP2 SWAP1 PUSH2 0x24AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xFCB JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9B9 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA34 DUP2 PUSH2 0xD11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x88BE536D5240C274A3B1D3A1BE54482FD9CAA294F08C62A7CDE569F49A3C4500 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB43 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBB5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBAC SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBC2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x10D6 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC3B JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC32 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC48 DUP6 DUP6 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC5A PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x10D6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC92 PUSH2 0xAC9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCB0 PUSH2 0x819 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD0F JUMPI PUSH2 0xCD3 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1B PUSH2 0xE24 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDF3 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0xE0D DUP2 PUSH2 0x1223 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xE18 PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0xE21 DUP2 PUSH2 0x1237 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE56 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFBD SWAP2 SWAP1 PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x103D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1034 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10AF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10BC DUP6 DUP6 PUSH2 0x1188 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10CD DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x10D6 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x10E2 DUP6 DUP6 DUP6 DUP6 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1181 JUMPI PUSH1 0x0 PUSH2 0x1120 PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1170 JUMPI PUSH1 0x0 PUSH2 0x1141 PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1159 PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1169 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x167B JUMP JUMPDEST POP POP PUSH2 0x117F JUMP JUMPDEST PUSH2 0x117E DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x182F JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH1 0x0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11EB PUSH2 0x19E3 JUMP JUMPDEST PUSH2 0x1221 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x122B PUSH2 0x11E3 JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x1A03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x123F PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12B1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A8 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12BA DUP2 PUSH2 0xD11 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C7 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1313 JUMPI DUP3 MLOAD DUP3 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130A SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x131D PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1535 JUMPI PUSH1 0x0 PUSH2 0x1340 DUP3 DUP8 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1357 DUP4 DUP8 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148A JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x142F JUMPI DUP10 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1426 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x261B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB DUP7 PUSH1 0x0 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1528 JUMPI DUP1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1520 SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1322 JUMP JUMPDEST POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x15F4 JUMPI PUSH1 0x0 PUSH2 0x1555 PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x156D PUSH1 0x0 DUP7 PUSH2 0xC76 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x15E5 SWAP3 SWAP2 SWAP1 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1673 JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x166A SWAP3 SWAP2 SWAP1 PUSH2 0x2694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1827 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1718 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1715 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x179C JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1748 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x174D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1794 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178B SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1825 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x19DB JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1890 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18CC JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C9 SWAP2 SWAP1 PUSH2 0x278F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1950 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x18FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1901 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1948 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x193F SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x19D9 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19D0 SWAP2 SWAP1 PUSH2 0x22C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19ED PUSH2 0xDE8 JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0D PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1A20 SWAP2 SWAP1 PUSH2 0x29C6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A64 DUP3 PUSH2 0x1A39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1A59 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A91 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AAA DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AC7 DUP2 PUSH2 0x1AA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AE4 JUMPI PUSH2 0x1AE3 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AF2 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B03 DUP6 DUP3 DUP7 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B16 DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B31 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B6C DUP2 PUSH2 0x1B37 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B89 DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BA5 JUMPI PUSH2 0x1BA4 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BB3 DUP5 DUP3 DUP6 ADD PUSH2 0x1B7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD1 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BEC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C07 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C16 DUP5 DUP3 DUP6 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C59 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C3E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 PUSH2 0x1C1F JUMP JUMPDEST PUSH2 0x1C8B DUP2 DUP6 PUSH2 0x1C2A JUMP JUMPDEST SWAP4 POP PUSH2 0x1C9B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x1CA4 DUP2 PUSH2 0x1C65 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CC9 DUP2 DUP5 PUSH2 0x1C76 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1D0E DUP3 PUSH2 0x1C65 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D2D JUMPI PUSH2 0x1D2C PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D40 PUSH2 0x1A25 JUMP JUMPDEST SWAP1 POP PUSH2 0x1D4C DUP3 DUP3 PUSH2 0x1D05 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D6C JUMPI PUSH2 0x1D6B PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D95 PUSH2 0x1D90 DUP5 PUSH2 0x1D51 JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DB8 JUMPI PUSH2 0x1DB7 PUSH2 0x1D7D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1DE1 JUMPI DUP1 PUSH2 0x1DCD DUP9 DUP3 PUSH2 0x1AB8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DBA JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E00 JUMPI PUSH2 0x1DFF PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E10 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E39 JUMPI PUSH2 0x1E38 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH2 0x1E42 DUP3 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 PUSH2 0x1E6C DUP5 PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E8C PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH2 0x1E98 DUP5 DUP3 DUP6 PUSH2 0x1E4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EB5 JUMPI PUSH2 0x1EB4 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EC5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E5E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1EEA JUMPI PUSH2 0x1EE9 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EF8 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1F09 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F2A JUMPI PUSH2 0x1F29 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x1F36 DUP9 DUP3 DUP10 ADD PUSH2 0x1DEB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F57 JUMPI PUSH2 0x1F56 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x1F63 DUP9 DUP3 DUP10 ADD PUSH2 0x1DEB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F84 JUMPI PUSH2 0x1F83 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x1F90 DUP9 DUP3 DUP10 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDC PUSH2 0x1FD7 DUP5 PUSH2 0x1F9D JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1FFF JUMPI PUSH2 0x1FFE PUSH2 0x1D7D JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2028 JUMPI DUP1 PUSH2 0x2014 DUP9 DUP3 PUSH2 0x1A82 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2001 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2047 JUMPI PUSH2 0x2046 PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2057 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2095 JUMPI PUSH2 0x2094 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x20A1 DUP6 DUP3 DUP7 ADD PUSH2 0x2032 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C2 JUMPI PUSH2 0x20C1 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x20CE DUP6 DUP3 DUP7 ADD PUSH2 0x1DEB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210D DUP2 PUSH2 0x1A97 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP4 DUP4 PUSH2 0x2104 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2143 DUP3 PUSH2 0x20D8 JUMP JUMPDEST PUSH2 0x214D DUP2 DUP6 PUSH2 0x20E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x2158 DUP4 PUSH2 0x20F4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2189 JUMPI DUP2 MLOAD PUSH2 0x2170 DUP9 DUP3 PUSH2 0x2113 JUMP JUMPDEST SWAP8 POP PUSH2 0x217B DUP4 PUSH2 0x212B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x215C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21B0 DUP2 DUP5 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21D3 JUMPI PUSH2 0x21D2 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH2 0x21DC DUP3 PUSH2 0x1C65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FC PUSH2 0x21F7 DUP5 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2218 JUMPI PUSH2 0x2217 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH2 0x2223 DUP5 DUP3 DUP6 PUSH2 0x1E4F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2240 JUMPI PUSH2 0x223F PUSH2 0x1CD1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2250 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x21E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2270 JUMPI PUSH2 0x226F PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228E JUMPI PUSH2 0x228D PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x229A DUP6 DUP3 DUP7 ADD PUSH2 0x222B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22AB DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x22BE DUP2 PUSH2 0x1A59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22E8 DUP2 PUSH2 0x1BBC JUMP JUMPDEST DUP2 EQ PUSH2 0x22F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2305 DUP2 PUSH2 0x22DF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2322 JUMPI PUSH2 0x2321 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2330 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2341 DUP6 DUP3 DUP7 ADD PUSH2 0x22F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2362 JUMPI PUSH2 0x2361 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2370 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2381 DUP6 DUP3 DUP7 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x23A7 JUMPI PUSH2 0x23A6 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23B5 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23C6 DUP9 DUP3 DUP10 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23E8 DUP9 DUP3 DUP10 ADD PUSH2 0x1AB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2409 JUMPI PUSH2 0x2408 PUSH2 0x1A34 JUMP JUMPDEST JUMPDEST PUSH2 0x2415 DUP9 DUP3 DUP10 ADD PUSH2 0x1EA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2438 JUMPI PUSH2 0x2437 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2446 DUP5 DUP3 DUP6 ADD PUSH2 0x1A82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2496 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x24A9 JUMPI PUSH2 0x24A8 PUSH2 0x244F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24C4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x24D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2512 DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2544 JUMPI PUSH2 0x2543 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2564 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x2571 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EA PUSH2 0x25E5 PUSH2 0x25E0 DUP5 PUSH2 0x25A7 JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x25B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25FA DUP2 PUSH2 0x25CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2615 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2630 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x263D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x264A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x2657 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B0D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266B DUP3 PUSH2 0x1A97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2676 DUP4 PUSH2 0x1A97 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x268E JUMPI PUSH2 0x268D PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26AE DUP2 DUP6 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x26C2 DUP2 DUP5 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26F2 DUP3 PUSH2 0x26CB JUMP JUMPDEST PUSH2 0x26FC DUP2 DUP6 PUSH2 0x26D6 JUMP JUMPDEST SWAP4 POP PUSH2 0x270C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x2715 DUP2 PUSH2 0x1C65 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2735 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x2742 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x274F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x275C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B0D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x276E DUP2 DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2789 DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27A5 JUMPI PUSH2 0x27A4 PUSH2 0x1A2F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27B3 DUP5 DUP3 DUP6 ADD PUSH2 0x277A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x27D1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x27DE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x22B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x27F0 DUP2 DUP7 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2804 DUP2 DUP6 PUSH2 0x2138 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2818 DUP2 DUP5 PUSH2 0x26E7 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2886 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2849 JUMP JUMPDEST PUSH2 0x2890 DUP7 DUP4 PUSH2 0x2849 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28C3 PUSH2 0x28BE PUSH2 0x28B9 DUP5 PUSH2 0x1A97 JUMP JUMPDEST PUSH2 0x25C5 JUMP JUMPDEST PUSH2 0x1A97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28DD DUP4 PUSH2 0x28A8 JUMP JUMPDEST PUSH2 0x28F1 PUSH2 0x28E9 DUP3 PUSH2 0x28CA JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2856 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2906 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0x2911 DUP2 DUP5 DUP5 PUSH2 0x28D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2935 JUMPI PUSH2 0x292A PUSH1 0x0 DUP3 PUSH2 0x28FE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2917 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x297A JUMPI PUSH2 0x294B DUP2 PUSH2 0x2824 JUMP JUMPDEST PUSH2 0x2954 DUP5 PUSH2 0x2839 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2963 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2977 PUSH2 0x296F DUP6 PUSH2 0x2839 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2916 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299D PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x297F JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B6 DUP4 DUP4 PUSH2 0x298C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29CF DUP3 PUSH2 0x1C1F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29E8 JUMPI PUSH2 0x29E7 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST PUSH2 0x29F2 DUP3 SLOAD PUSH2 0x247E JUMP JUMPDEST PUSH2 0x29FD DUP3 DUP3 DUP6 PUSH2 0x2939 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2A30 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2A1E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2A28 DUP6 DUP3 PUSH2 0x29AA JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2A90 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2A3E DUP7 PUSH2 0x2824 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2A66 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A41 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2A83 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2A7F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x298C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xF8 POP ADDMOD PUSH31 0x645E59A8C38E4C28DC16C8B5D28C170A2F25287999C31BFEA12DF64736F6C PUSH4 0x43000818 STOP CALLER ","sourceMap":"294:553:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:191:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2386:316;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3101:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5049:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;707:138:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3646:552:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;525:176:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4233::2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4412:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4663:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3298:191:2;3375:7;3394:24;3421:20;:18;:20::i;:::-;3394:47;;3458:1;:11;;:15;3470:2;3458:15;;;;;;;;;;;:24;3474:7;3458:24;;;;;;;;;;;;;;;;3451:31;;;3298:191;;;;:::o;2386:316::-;2499:4;2549:26;2534:41;;;:11;:41;;;;:109;;;;2606:37;2591:52;;;:11;:52;;;;2534:109;:161;;;;2659:36;2683:11;2659:23;:36::i;:::-;2534:161;2515:180;;2386:316;;;:::o;3101:162::-;3161:13;3186:24;3213:20;:18;:20::i;:::-;3186:47;;3250:1;:6;;3243:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:162;;;:::o;5049:429::-;5243:14;5260:12;:10;:12::i;:::-;5243:29;;5294:6;5286:14;;:4;:14;;;;:49;;;;;5305:30;5322:4;5328:6;5305:16;:30::i;:::-;5304:31;5286:49;5282:129;;;5387:6;5395:4;5358:42;;;;;;;;;;;;:::i;:::-;;;;;;;;5282:129;5420:51;5443:4;5449:2;5453:3;5458:6;5466:4;5420:22;:51::i;:::-;5233:245;5049:429;;;;;:::o;707:138:29:-;766:15;784:12;;:14;;;;;;;;;:::i;:::-;;;;;766:32;;808:30;814:2;818:7;827:6;808:30;;;;;;;;;;;;:5;:30::i;:::-;756:89;707:138;;:::o;3646:552:2:-;3770:16;3821:3;:10;3802:8;:15;:29;3798:121;;3880:3;:10;3892:8;:15;3854:54;;;;;;;;;;;;:::i;:::-;;;;;;;;3798:121;3929:30;3976:8;:15;3962:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3929:63;;4008:9;4003:158;4027:8;:15;4023:1;:19;4003:158;;;4082:68;4092:30;4120:1;4092:8;:27;;:30;;;;:::i;:::-;4124:25;4147:1;4124:3;:22;;:25;;;;:::i;:::-;4082:9;:68::i;:::-;4063:13;4077:1;4063:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;4044:3;;;;;4003:158;;;;4178:13;4171:20;;;3646:552;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;525:176:29:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;637:19:29::1;652:3;637:14;:19::i;:::-;666:28;681:12;666:14;:28::i;:::-;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;525:176:29;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;4233::2:-;4318:52;4337:12;:10;:12::i;:::-;4351:8;4361;4318:18;:52::i;:::-;4233:144;;:::o;4412:216::-;4502:4;4518:24;4545:20;:18;:20::i;:::-;4518:47;;4582:1;:20;;:29;4603:7;4582:29;;;;;;;;;;;;;;;:39;4612:8;4582:39;;;;;;;;;;;;;;;;;;;;;;;;;4575:46;;;4412:216;;;;:::o;4663:351::-;4786:14;4803:12;:10;:12::i;:::-;4786:29;;4837:6;4829:14;;:4;:14;;;;:49;;;;;4848:30;4865:4;4871:6;4848:16;:30::i;:::-;4847:31;4829:49;4825:129;;;4930:6;4938:4;4901:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4825:129;4963:44;4981:4;4987:2;4991;4995:5;5002:4;4963:17;:44::i;:::-;4776:238;4663:351;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1911:159:2:-;1963:24;2032:22;2022:32;;1911:159;:::o;1002:146:5:-;1078:4;1116:25;1101:40;;;:11;:40;;;;1094:47;;1002:146;;;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;10123:445:2:-;10330:1;10316:16;;:2;:16;;;10312:88;;10386:1;10355:34;;;;;;;;;;;:::i;:::-;;;;;;;;10312:88;10429:1;10413:18;;:4;:18;;;10409:88;;10483:1;10454:32;;;;;;;;;;;:::i;:::-;;;;;;;;10409:88;10506:55;10533:4;10539:2;10543:3;10548:6;10556:4;10506:26;:55::i;:::-;10123:445;;;;;:::o;11913:346::-;12023:1;12009:16;;:2;:16;;;12005:88;;12079:1;12048:34;;;;;;;;;;;:::i;:::-;;;;;;;;12005:88;12103:20;12125:23;12152:29;12171:2;12175:5;12152:18;:29::i;:::-;12102:79;;;;12191:61;12226:1;12230:2;12234:3;12239:6;12247:4;12191:26;:61::i;:::-;11995:264;;11913:346;;;;:::o;17085:197:16:-;17171:11;17259:4;17254:3;17250:14;17243:4;17238:3;17234:14;17230:35;17224:42;17217:49;;17085:197;;;;:::o;17883:::-;17969:11;18057:4;18052:3;18048:14;18041:4;18036:3;18032:14;18028:35;18022:42;18015:49;;17883:197;;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2119:117:2:-;6929:20:1;:18;:20::i;:::-;2199:30:2::1;2224:4;2199:24;:30::i;:::-;2119:117:::0;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;14435:374:2:-;14538:24;14565:20;:18;:20::i;:::-;14538:47;;14619:1;14599:22;;:8;:22;;;14595:94;;14675:1;14644:34;;;;;;;;;;;:::i;:::-;;;;;;;;14595:94;14738:8;14698:1;:20;;:27;14719:5;14698:27;;;;;;;;;;;;;;;:37;14726:8;14698:37;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;14783:8;14761:41;;14776:5;14761:41;;;14793:8;14761:41;;;;;;:::i;:::-;;;;;;;;14528:281;14435:374;;;:::o;9259:463::-;9395:1;9381:16;;:2;:16;;;9377:88;;9451:1;9420:34;;;;;;;;;;;:::i;:::-;;;;;;;;9377:88;9494:1;9478:18;;:4;:18;;;9474:88;;9548:1;9519:32;;;;;;;;;;;:::i;:::-;;;;;;;;9474:88;9572:20;9594:23;9621:29;9640:2;9644:5;9621:18;:29::i;:::-;9571:79;;;;9660:55;9687:4;9693:2;9697:3;9702:6;9710:4;9660:26;:55::i;:::-;9367:355;;9259:463;;;;;:::o;8102:700::-;8303:30;8311:4;8317:2;8321:3;8326:6;8303:7;:30::i;:::-;8361:1;8347:16;;:2;:16;;;8343:453;;8379:16;8398:12;:10;:12::i;:::-;8379:31;;8442:1;8428:3;:10;:15;8424:362;;8463:10;8476:25;8499:1;8476:3;:22;;:25;;;;:::i;:::-;8463:38;;8519:13;8535:28;8561:1;8535:6;:25;;:28;;;;:::i;:::-;8519:44;;8581:72;8617:8;8627:4;8633:2;8637;8641:5;8648:4;8581:35;:72::i;:::-;8445:223;;8424:362;;;8692:79;8733:8;8743:4;8749:2;8753:3;8758:6;8766:4;8692:40;:79::i;:::-;8424:362;8365:431;8343:453;8102:700;;;;;:::o;14925:822::-;15033:23;15058;15192:4;15186:11;15176:21;;15262:1;15254:6;15247:17;15400:8;15393:4;15385:6;15381:17;15374:35;15522:4;15514:6;15510:17;15500:27;;15555:1;15547:6;15540:17;15596:8;15589:4;15581:6;15577:17;15570:35;15725:4;15717:6;15713:17;15707:4;15700:31;14925:822;;;;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2242:110:2:-;6929:20:1;:18;:20::i;:::-;2332:13:2::1;2340:4;2332:7;:13::i;:::-;2242:110:::0;:::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;6179:1344:2:-;6296:24;6323:20;:18;:20::i;:::-;6296:47;;6371:6;:13;6357:3;:10;:27;6353:117;;6433:3;:10;6445:6;:13;6407:52;;;;;;;;;;;;:::i;:::-;;;;;;;;6353:117;6480:16;6499:12;:10;:12::i;:::-;6480:31;;6527:9;6522:697;6546:3;:10;6542:1;:14;6522:697;;;6577:10;6590:25;6613:1;6590:3;:22;;:25;;;;:::i;:::-;6577:38;;6629:13;6645:28;6671:1;6645:6;:25;;:28;;;;:::i;:::-;6629:44;;6708:1;6692:18;;:4;:18;;;6688:424;;6730:19;6752:1;:11;;:15;6764:2;6752:15;;;;;;;;;;;:21;6768:4;6752:21;;;;;;;;;;;;;;;;6730:43;;6809:5;6795:11;:19;6791:129;;;6872:4;6878:11;6891:5;6898:2;6845:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;6791:129;7074:5;7060:11;:19;7036:1;:11;;:15;7048:2;7036:15;;;;;;;;;;;:21;7052:4;7036:21;;;;;;;;;;;;;;;:43;;;;6712:400;6688:424;7144:1;7130:16;;:2;:16;;;7126:83;;7189:5;7166:1;:11;;:15;7178:2;7166:15;;;;;;;;;;;:19;7182:2;7166:19;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;7126:83;6563:656;;6558:3;;;;;6522:697;;;;7247:1;7233:3;:10;:15;7229:288;;7264:10;7277:25;7300:1;7277:3;:22;;:25;;;;:::i;:::-;7264:38;;7316:13;7332:28;7358:1;7332:6;:25;;:28;;;;:::i;:::-;7316:44;;7410:2;7379:45;;7404:4;7379:45;;7394:8;7379:45;;;7414:2;7418:5;7379:45;;;;;;;:::i;:::-;;;;;;;;7250:185;;7229:288;;;7490:2;7460:46;;7484:4;7460:46;;7474:8;7460:46;;;7494:3;7499:6;7460:46;;;;;;;:::i;:::-;;;;;;;;7229:288;6286:1237;;6179:1344;;;;:::o;1006:961:11:-;1222:1;1205:2;:14;;;:18;1201:760;;;1260:2;1243:38;;;1282:8;1292:4;1298:2;1302:5;1309:4;1243:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1239:712;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:1;1613:6;:13;:18;1609:328;;1756:2;1718:41;;;;;;;;;;;:::i;:::-;;;;;;;;1609:328;1889:6;1883:13;1876:4;1868:6;1864:17;1857:40;1239:712;1375:43;;;1363:55;;;:8;:55;;;;1359:189;;1526:2;1488:41;;;;;;;;;;;:::i;:::-;;;;;;;;1359:189;1315:247;1201:760;1006:961;;;;;;:::o;2523:1028::-;2764:1;2747:2;:14;;;:18;2743:802;;;2802:2;2785:43;;;2829:8;2839:4;2845:3;2850:6;2858:4;2785:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2781:754;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:1;3197:6;:13;:18;3193:328;;3340:2;3302:41;;;;;;;;;;;:::i;:::-;;;;;;;;3193:328;3473:6;3467:13;3460:4;3452:6;3448:17;3441:40;2781:754;2954:48;;;2942:60;;;:8;:60;;;;2938:194;;3110:2;3072:41;;;;;;;;;;;:::i;:::-;;;;;;;;2938:194;2864:282;2743:802;2523:1028;;;;;;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;11390:145:2:-;11456:24;11483:20;:18;:20::i;:::-;11456:47;;11522:6;11513:1;:6;;:15;;;;;;:::i;:::-;;11446:89;11390:145;:::o;7:75:31:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1509::-;8715:6;8723;8731;8739;8747;8796:3;8784:9;8775:7;8771:23;8767:33;8764:120;;;8803:79;;:::i;:::-;8764:120;8923:1;8948:53;8993:7;8984:6;8973:9;8969:22;8948:53;:::i;:::-;8938:63;;8894:117;9050:2;9076:53;9121:7;9112:6;9101:9;9097:22;9076:53;:::i;:::-;9066:63;;9021:118;9206:2;9195:9;9191:18;9178:32;9237:18;9229:6;9226:30;9223:117;;;9259:79;;:::i;:::-;9223:117;9364:78;9434:7;9425:6;9414:9;9410:22;9364:78;:::i;:::-;9354:88;;9149:303;9519:2;9508:9;9504:18;9491:32;9550:18;9542:6;9539:30;9536:117;;;9572:79;;:::i;:::-;9536:117;9677:78;9747:7;9738:6;9727:9;9723:22;9677:78;:::i;:::-;9667:88;;9462:303;9832:3;9821:9;9817:19;9804:33;9864:18;9856:6;9853:30;9850:117;;;9886:79;;:::i;:::-;9850:117;9991:62;10045:7;10036:6;10025:9;10021:22;9991:62;:::i;:::-;9981:72;;9775:288;8561:1509;;;;;;;;:::o;10076:311::-;10153:4;10243:18;10235:6;10232:30;10229:56;;;10265:18;;:::i;:::-;10229:56;10315:4;10307:6;10303:17;10295:25;;10375:4;10369;10365:15;10357:23;;10076:311;;;:::o;10410:710::-;10506:5;10531:81;10547:64;10604:6;10547:64;:::i;:::-;10531:81;:::i;:::-;10522:90;;10632:5;10661:6;10654:5;10647:21;10695:4;10688:5;10684:16;10677:23;;10748:4;10740:6;10736:17;10728:6;10724:30;10777:3;10769:6;10766:15;10763:122;;;10796:79;;:::i;:::-;10763:122;10911:6;10894:220;10928:6;10923:3;10920:15;10894:220;;;11003:3;11032:37;11065:3;11053:10;11032:37;:::i;:::-;11027:3;11020:50;11099:4;11094:3;11090:14;11083:21;;10970:144;10954:4;10949:3;10945:14;10938:21;;10894:220;;;10898:21;10512:608;;10410:710;;;;;:::o;11143:370::-;11214:5;11263:3;11256:4;11248:6;11244:17;11240:27;11230:122;;11271:79;;:::i;:::-;11230:122;11388:6;11375:20;11413:94;11503:3;11495:6;11488:4;11480:6;11476:17;11413:94;:::i;:::-;11404:103;;11220:293;11143:370;;;;:::o;11519:894::-;11637:6;11645;11694:2;11682:9;11673:7;11669:23;11665:32;11662:119;;;11700:79;;:::i;:::-;11662:119;11848:1;11837:9;11833:17;11820:31;11878:18;11870:6;11867:30;11864:117;;;11900:79;;:::i;:::-;11864:117;12005:78;12075:7;12066:6;12055:9;12051:22;12005:78;:::i;:::-;11995:88;;11791:302;12160:2;12149:9;12145:18;12132:32;12191:18;12183:6;12180:30;12177:117;;;12213:79;;:::i;:::-;12177:117;12318:78;12388:7;12379:6;12368:9;12364:22;12318:78;:::i;:::-;12308:88;;12103:303;11519:894;;;;;:::o;12419:114::-;12486:6;12520:5;12514:12;12504:22;;12419:114;;;:::o;12539:184::-;12638:11;12672:6;12667:3;12660:19;12712:4;12707:3;12703:14;12688:29;;12539:184;;;;:::o;12729:132::-;12796:4;12819:3;12811:11;;12849:4;12844:3;12840:14;12832:22;;12729:132;;;:::o;12867:108::-;12944:24;12962:5;12944:24;:::i;:::-;12939:3;12932:37;12867:108;;:::o;12981:179::-;13050:10;13071:46;13113:3;13105:6;13071:46;:::i;:::-;13149:4;13144:3;13140:14;13126:28;;12981:179;;;;:::o;13166:113::-;13236:4;13268;13263:3;13259:14;13251:22;;13166:113;;;:::o;13315:732::-;13434:3;13463:54;13511:5;13463:54;:::i;:::-;13533:86;13612:6;13607:3;13533:86;:::i;:::-;13526:93;;13643:56;13693:5;13643:56;:::i;:::-;13722:7;13753:1;13738:284;13763:6;13760:1;13757:13;13738:284;;;13839:6;13833:13;13866:63;13925:3;13910:13;13866:63;:::i;:::-;13859:70;;13952:60;14005:6;13952:60;:::i;:::-;13942:70;;13798:224;13785:1;13782;13778:9;13773:14;;13738:284;;;13742:14;14038:3;14031:10;;13439:608;;;13315:732;;;;:::o;14053:373::-;14196:4;14234:2;14223:9;14219:18;14211:26;;14283:9;14277:4;14273:20;14269:1;14258:9;14254:17;14247:47;14311:108;14414:4;14405:6;14311:108;:::i;:::-;14303:116;;14053:373;;;;:::o;14432:308::-;14494:4;14584:18;14576:6;14573:30;14570:56;;;14606:18;;:::i;:::-;14570:56;14644:29;14666:6;14644:29;:::i;:::-;14636:37;;14728:4;14722;14718:15;14710:23;;14432:308;;;:::o;14746:425::-;14824:5;14849:66;14865:49;14907:6;14865:49;:::i;:::-;14849:66;:::i;:::-;14840:75;;14938:6;14931:5;14924:21;14976:4;14969:5;14965:16;15014:3;15005:6;15000:3;14996:16;14993:25;14990:112;;;15021:79;;:::i;:::-;14990:112;15111:54;15158:6;15153:3;15148;15111:54;:::i;:::-;14830:341;14746:425;;;;;:::o;15191:340::-;15247:5;15296:3;15289:4;15281:6;15277:17;15273:27;15263:122;;15304:79;;:::i;:::-;15263:122;15421:6;15408:20;15446:79;15521:3;15513:6;15506:4;15498:6;15494:17;15446:79;:::i;:::-;15437:88;;15253:278;15191:340;;;;:::o;15537:654::-;15615:6;15623;15672:2;15660:9;15651:7;15647:23;15643:32;15640:119;;;15678:79;;:::i;:::-;15640:119;15826:1;15815:9;15811:17;15798:31;15856:18;15848:6;15845:30;15842:117;;;15878:79;;:::i;:::-;15842:117;15983:63;16038:7;16029:6;16018:9;16014:22;15983:63;:::i;:::-;15973:73;;15769:287;16095:2;16121:53;16166:7;16157:6;16146:9;16142:22;16121:53;:::i;:::-;16111:63;;16066:118;15537:654;;;;;:::o;16197:118::-;16284:24;16302:5;16284:24;:::i;:::-;16279:3;16272:37;16197:118;;:::o;16321:222::-;16414:4;16452:2;16441:9;16437:18;16429:26;;16465:71;16533:1;16522:9;16518:17;16509:6;16465:71;:::i;:::-;16321:222;;;;:::o;16549:116::-;16619:21;16634:5;16619:21;:::i;:::-;16612:5;16609:32;16599:60;;16655:1;16652;16645:12;16599:60;16549:116;:::o;16671:133::-;16714:5;16752:6;16739:20;16730:29;;16768:30;16792:5;16768:30;:::i;:::-;16671:133;;;;:::o;16810:468::-;16875:6;16883;16932:2;16920:9;16911:7;16907:23;16903:32;16900:119;;;16938:79;;:::i;:::-;16900:119;17058:1;17083:53;17128:7;17119:6;17108:9;17104:22;17083:53;:::i;:::-;17073:63;;17029:117;17185:2;17211:50;17253:7;17244:6;17233:9;17229:22;17211:50;:::i;:::-;17201:60;;17156:115;16810:468;;;;;:::o;17284:474::-;17352:6;17360;17409:2;17397:9;17388:7;17384:23;17380:32;17377:119;;;17415:79;;:::i;:::-;17377:119;17535:1;17560:53;17605:7;17596:6;17585:9;17581:22;17560:53;:::i;:::-;17550:63;;17506:117;17662:2;17688:53;17733:7;17724:6;17713:9;17709:22;17688:53;:::i;:::-;17678:63;;17633:118;17284:474;;;;;:::o;17764:1089::-;17868:6;17876;17884;17892;17900;17949:3;17937:9;17928:7;17924:23;17920:33;17917:120;;;17956:79;;:::i;:::-;17917:120;18076:1;18101:53;18146:7;18137:6;18126:9;18122:22;18101:53;:::i;:::-;18091:63;;18047:117;18203:2;18229:53;18274:7;18265:6;18254:9;18250:22;18229:53;:::i;:::-;18219:63;;18174:118;18331:2;18357:53;18402:7;18393:6;18382:9;18378:22;18357:53;:::i;:::-;18347:63;;18302:118;18459:2;18485:53;18530:7;18521:6;18510:9;18506:22;18485:53;:::i;:::-;18475:63;;18430:118;18615:3;18604:9;18600:19;18587:33;18647:18;18639:6;18636:30;18633:117;;;18669:79;;:::i;:::-;18633:117;18774:62;18828:7;18819:6;18808:9;18804:22;18774:62;:::i;:::-;18764:72;;18558:288;17764:1089;;;;;;;;:::o;18859:329::-;18918:6;18967:2;18955:9;18946:7;18942:23;18938:32;18935:119;;;18973:79;;:::i;:::-;18935:119;19093:1;19118:53;19163:7;19154:6;19143:9;19139:22;19118:53;:::i;:::-;19108:63;;19064:117;18859:329;;;;:::o;19194:180::-;19242:77;19239:1;19232:88;19339:4;19336:1;19329:15;19363:4;19360:1;19353:15;19380:320;19424:6;19461:1;19455:4;19451:12;19441:22;;19508:1;19502:4;19498:12;19529:18;19519:81;;19585:4;19577:6;19573:17;19563:27;;19519:81;19647:2;19639:6;19636:14;19616:18;19613:38;19610:84;;19666:18;;:::i;:::-;19610:84;19431:269;19380:320;;;:::o;19706:332::-;19827:4;19865:2;19854:9;19850:18;19842:26;;19878:71;19946:1;19935:9;19931:17;19922:6;19878:71;:::i;:::-;19959:72;20027:2;20016:9;20012:18;20003:6;19959:72;:::i;:::-;19706:332;;;;;:::o;20044:180::-;20092:77;20089:1;20082:88;20189:4;20186:1;20179:15;20213:4;20210:1;20203:15;20230:233;20269:3;20292:24;20310:5;20292:24;:::i;:::-;20283:33;;20338:66;20331:5;20328:77;20325:103;;20408:18;;:::i;:::-;20325:103;20455:1;20448:5;20444:13;20437:20;;20230:233;;;:::o;20469:332::-;20590:4;20628:2;20617:9;20613:18;20605:26;;20641:71;20709:1;20698:9;20694:17;20685:6;20641:71;:::i;:::-;20722:72;20790:2;20779:9;20775:18;20766:6;20722:72;:::i;:::-;20469:332;;;;;:::o;20807:180::-;20855:77;20852:1;20845:88;20952:4;20949:1;20942:15;20976:4;20973:1;20966:15;20993:85;21038:7;21067:5;21056:16;;20993:85;;;:::o;21084:101::-;21120:7;21160:18;21153:5;21149:30;21138:41;;21084:101;;;:::o;21191:60::-;21219:3;21240:5;21233:12;;21191:60;;;:::o;21257:156::-;21314:9;21347:60;21364:42;21373:32;21399:5;21373:32;:::i;:::-;21364:42;:::i;:::-;21347:60;:::i;:::-;21334:73;;21257:156;;;:::o;21419:145::-;21513:44;21551:5;21513:44;:::i;:::-;21508:3;21501:57;21419:145;;:::o;21570:236::-;21670:4;21708:2;21697:9;21693:18;21685:26;;21721:78;21796:1;21785:9;21781:17;21772:6;21721:78;:::i;:::-;21570:236;;;;:::o;21812:553::-;21989:4;22027:3;22016:9;22012:19;22004:27;;22041:71;22109:1;22098:9;22094:17;22085:6;22041:71;:::i;:::-;22122:72;22190:2;22179:9;22175:18;22166:6;22122:72;:::i;:::-;22204;22272:2;22261:9;22257:18;22248:6;22204:72;:::i;:::-;22286;22354:2;22343:9;22339:18;22330:6;22286:72;:::i;:::-;21812:553;;;;;;;:::o;22371:191::-;22411:3;22430:20;22448:1;22430:20;:::i;:::-;22425:25;;22464:20;22482:1;22464:20;:::i;:::-;22459:25;;22507:1;22504;22500:9;22493:16;;22528:3;22525:1;22522:10;22519:36;;;22535:18;;:::i;:::-;22519:36;22371:191;;;;:::o;22568:634::-;22789:4;22827:2;22816:9;22812:18;22804:26;;22876:9;22870:4;22866:20;22862:1;22851:9;22847:17;22840:47;22904:108;23007:4;22998:6;22904:108;:::i;:::-;22896:116;;23059:9;23053:4;23049:20;23044:2;23033:9;23029:18;23022:48;23087:108;23190:4;23181:6;23087:108;:::i;:::-;23079:116;;22568:634;;;;;:::o;23208:98::-;23259:6;23293:5;23287:12;23277:22;;23208:98;;;:::o;23312:168::-;23395:11;23429:6;23424:3;23417:19;23469:4;23464:3;23460:14;23445:29;;23312:168;;;;:::o;23486:373::-;23572:3;23600:38;23632:5;23600:38;:::i;:::-;23654:70;23717:6;23712:3;23654:70;:::i;:::-;23647:77;;23733:65;23791:6;23786:3;23779:4;23772:5;23768:16;23733:65;:::i;:::-;23823:29;23845:6;23823:29;:::i;:::-;23818:3;23814:39;23807:46;;23576:283;23486:373;;;;:::o;23865:751::-;24088:4;24126:3;24115:9;24111:19;24103:27;;24140:71;24208:1;24197:9;24193:17;24184:6;24140:71;:::i;:::-;24221:72;24289:2;24278:9;24274:18;24265:6;24221:72;:::i;:::-;24303;24371:2;24360:9;24356:18;24347:6;24303:72;:::i;:::-;24385;24453:2;24442:9;24438:18;24429:6;24385:72;:::i;:::-;24505:9;24499:4;24495:20;24489:3;24478:9;24474:19;24467:49;24533:76;24604:4;24595:6;24533:76;:::i;:::-;24525:84;;23865:751;;;;;;;;:::o;24622:141::-;24678:5;24709:6;24703:13;24694:22;;24725:32;24751:5;24725:32;:::i;:::-;24622:141;;;;:::o;24769:349::-;24838:6;24887:2;24875:9;24866:7;24862:23;24858:32;24855:119;;;24893:79;;:::i;:::-;24855:119;25013:1;25038:63;25093:7;25084:6;25073:9;25069:22;25038:63;:::i;:::-;25028:73;;24984:127;24769:349;;;;:::o;25124:1053::-;25447:4;25485:3;25474:9;25470:19;25462:27;;25499:71;25567:1;25556:9;25552:17;25543:6;25499:71;:::i;:::-;25580:72;25648:2;25637:9;25633:18;25624:6;25580:72;:::i;:::-;25699:9;25693:4;25689:20;25684:2;25673:9;25669:18;25662:48;25727:108;25830:4;25821:6;25727:108;:::i;:::-;25719:116;;25882:9;25876:4;25872:20;25867:2;25856:9;25852:18;25845:48;25910:108;26013:4;26004:6;25910:108;:::i;:::-;25902:116;;26066:9;26060:4;26056:20;26050:3;26039:9;26035:19;26028:49;26094:76;26165:4;26156:6;26094:76;:::i;:::-;26086:84;;25124:1053;;;;;;;;:::o;26183:141::-;26232:4;26255:3;26247:11;;26278:3;26275:1;26268:14;26312:4;26309:1;26299:18;26291:26;;26183:141;;;:::o;26330:93::-;26367:6;26414:2;26409;26402:5;26398:14;26394:23;26384:33;;26330:93;;;:::o;26429:107::-;26473:8;26523:5;26517:4;26513:16;26492:37;;26429:107;;;;:::o;26542:393::-;26611:6;26661:1;26649:10;26645:18;26684:97;26714:66;26703:9;26684:97;:::i;:::-;26802:39;26832:8;26821:9;26802:39;:::i;:::-;26790:51;;26874:4;26870:9;26863:5;26859:21;26850:30;;26923:4;26913:8;26909:19;26902:5;26899:30;26889:40;;26618:317;;26542:393;;;;;:::o;26941:142::-;26991:9;27024:53;27042:34;27051:24;27069:5;27051:24;:::i;:::-;27042:34;:::i;:::-;27024:53;:::i;:::-;27011:66;;26941:142;;;:::o;27089:75::-;27132:3;27153:5;27146:12;;27089:75;;;:::o;27170:269::-;27280:39;27311:7;27280:39;:::i;:::-;27341:91;27390:41;27414:16;27390:41;:::i;:::-;27382:6;27375:4;27369:11;27341:91;:::i;:::-;27335:4;27328:105;27246:193;27170:269;;;:::o;27445:73::-;27490:3;27445:73;:::o;27524:189::-;27601:32;;:::i;:::-;27642:65;27700:6;27692;27686:4;27642:65;:::i;:::-;27577:136;27524:189;;:::o;27719:186::-;27779:120;27796:3;27789:5;27786:14;27779:120;;;27850:39;27887:1;27880:5;27850:39;:::i;:::-;27823:1;27816:5;27812:13;27803:22;;27779:120;;;27719:186;;:::o;27911:543::-;28012:2;28007:3;28004:11;28001:446;;;28046:38;28078:5;28046:38;:::i;:::-;28130:29;28148:10;28130:29;:::i;:::-;28120:8;28116:44;28313:2;28301:10;28298:18;28295:49;;;28334:8;28319:23;;28295:49;28357:80;28413:22;28431:3;28413:22;:::i;:::-;28403:8;28399:37;28386:11;28357:80;:::i;:::-;28016:431;;28001:446;27911:543;;;:::o;28460:117::-;28514:8;28564:5;28558:4;28554:16;28533:37;;28460:117;;;;:::o;28583:169::-;28627:6;28660:51;28708:1;28704:6;28696:5;28693:1;28689:13;28660:51;:::i;:::-;28656:56;28741:4;28735;28731:15;28721:25;;28634:118;28583:169;;;;:::o;28757:295::-;28833:4;28979:29;29004:3;28998:4;28979:29;:::i;:::-;28971:37;;29041:3;29038:1;29034:11;29028:4;29025:21;29017:29;;28757:295;;;;:::o;29057:1395::-;29174:37;29207:3;29174:37;:::i;:::-;29276:18;29268:6;29265:30;29262:56;;;29298:18;;:::i;:::-;29262:56;29342:38;29374:4;29368:11;29342:38;:::i;:::-;29427:67;29487:6;29479;29473:4;29427:67;:::i;:::-;29521:1;29545:4;29532:17;;29577:2;29569:6;29566:14;29594:1;29589:618;;;;30251:1;30268:6;30265:77;;;30317:9;30312:3;30308:19;30302:26;30293:35;;30265:77;30368:67;30428:6;30421:5;30368:67;:::i;:::-;30362:4;30355:81;30224:222;29559:887;;29589:618;29641:4;29637:9;29629:6;29625:22;29675:37;29707:4;29675:37;:::i;:::-;29734:1;29748:208;29762:7;29759:1;29756:14;29748:208;;;29841:9;29836:3;29832:19;29826:26;29818:6;29811:42;29892:1;29884:6;29880:14;29870:24;;29939:2;29928:9;29924:18;29911:31;;29785:4;29782:1;29778:12;29773:17;;29748:208;;;29984:6;29975:7;29972:19;29969:179;;;30042:9;30037:3;30033:19;30027:26;30085:48;30127:4;30119:6;30115:17;30104:9;30085:48;:::i;:::-;30077:6;30070:64;29992:156;29969:179;30194:1;30190;30182:6;30178:14;30174:22;30168:4;30161:36;29596:611;;;29559:887;;29149:1303;;;29057:1395;;:::o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","initialize(string,address)":"7ab4339d","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256)":"40c10f19","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EditionDrop.sol\":\"EditionDrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/EditionDrop.sol\":{\"keccak256\":\"0x0f60854a39e40faf5aba4d5fd2ba20a77e9e011d83aa763f1606040fc70dc2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7168160471fd0a4f680f044188f6018b57d411a577b548222c33507a066840fd\",\"dweb:/ipfs/QmZXdSpn7ARa5iuXGvrkMHdEhd3x3hzvUceod3jnNDp6xv\"]}},\"version\":1}"}},"contracts/NFTFactory.sol":{"NFTFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_collectionDropImplementation","type":"address"},{"internalType":"address","name":"_editionDropImplementation","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"symbol","type":"string"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"CollectionDropDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"contractAddress","type":"address"},{"indexed":false,"internalType":"string","name":"uri","type":"string"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"EditionDropDeployed","type":"event"},{"inputs":[],"name":"collectionDropImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"owner","type":"address"}],"name":"createCollectionDrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"},{"internalType":"address","name":"owner","type":"address"}],"name":"createEditionDrop","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"editionDropImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCollectionContracts","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEditionContracts","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_10294":{"entryPoint":null,"id":10294,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":260,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":198,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":166,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":161,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":216,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1355:31","nodeType":"YulBlock","src":"0:1355:31","statements":[{"body":{"nativeSrc":"47:35:31","nodeType":"YulBlock","src":"47:35:31","statements":[{"nativeSrc":"57:19:31","nodeType":"YulAssignment","src":"57:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:31","nodeType":"YulLiteral","src":"73:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:31","nodeType":"YulIdentifier","src":"67:5:31"},"nativeSrc":"67:9:31","nodeType":"YulFunctionCall","src":"67:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:31","nodeType":"YulIdentifier","src":"57:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:31","nodeType":"YulTypedName","src":"40:6:31","type":""}],"src":"7:75:31"},{"body":{"nativeSrc":"177:28:31","nodeType":"YulBlock","src":"177:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:31","nodeType":"YulLiteral","src":"194:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:31","nodeType":"YulLiteral","src":"197:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:31","nodeType":"YulIdentifier","src":"187:6:31"},"nativeSrc":"187:12:31","nodeType":"YulFunctionCall","src":"187:12:31"},"nativeSrc":"187:12:31","nodeType":"YulExpressionStatement","src":"187:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:31","nodeType":"YulFunctionDefinition","src":"88:117:31"},{"body":{"nativeSrc":"300:28:31","nodeType":"YulBlock","src":"300:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:31","nodeType":"YulLiteral","src":"317:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:31","nodeType":"YulLiteral","src":"320:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:31","nodeType":"YulIdentifier","src":"310:6:31"},"nativeSrc":"310:12:31","nodeType":"YulFunctionCall","src":"310:12:31"},"nativeSrc":"310:12:31","nodeType":"YulExpressionStatement","src":"310:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:31","nodeType":"YulFunctionDefinition","src":"211:117:31"},{"body":{"nativeSrc":"379:81:31","nodeType":"YulBlock","src":"379:81:31","statements":[{"nativeSrc":"389:65:31","nodeType":"YulAssignment","src":"389:65:31","value":{"arguments":[{"name":"value","nativeSrc":"404:5:31","nodeType":"YulIdentifier","src":"404:5:31"},{"kind":"number","nativeSrc":"411:42:31","nodeType":"YulLiteral","src":"411:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:31","nodeType":"YulIdentifier","src":"400:3:31"},"nativeSrc":"400:54:31","nodeType":"YulFunctionCall","src":"400:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:31","nodeType":"YulIdentifier","src":"389:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:31","nodeType":"YulTypedName","src":"361:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:31","nodeType":"YulTypedName","src":"371:7:31","type":""}],"src":"334:126:31"},{"body":{"nativeSrc":"511:51:31","nodeType":"YulBlock","src":"511:51:31","statements":[{"nativeSrc":"521:35:31","nodeType":"YulAssignment","src":"521:35:31","value":{"arguments":[{"name":"value","nativeSrc":"550:5:31","nodeType":"YulIdentifier","src":"550:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:31","nodeType":"YulIdentifier","src":"532:17:31"},"nativeSrc":"532:24:31","nodeType":"YulFunctionCall","src":"532:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:31","nodeType":"YulIdentifier","src":"521:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:31","nodeType":"YulTypedName","src":"493:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:31","nodeType":"YulTypedName","src":"503:7:31","type":""}],"src":"466:96:31"},{"body":{"nativeSrc":"611:79:31","nodeType":"YulBlock","src":"611:79:31","statements":[{"body":{"nativeSrc":"668:16:31","nodeType":"YulBlock","src":"668:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:31","nodeType":"YulLiteral","src":"677:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:31","nodeType":"YulLiteral","src":"680:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:31","nodeType":"YulIdentifier","src":"670:6:31"},"nativeSrc":"670:12:31","nodeType":"YulFunctionCall","src":"670:12:31"},"nativeSrc":"670:12:31","nodeType":"YulExpressionStatement","src":"670:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:31","nodeType":"YulIdentifier","src":"634:5:31"},{"arguments":[{"name":"value","nativeSrc":"659:5:31","nodeType":"YulIdentifier","src":"659:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:31","nodeType":"YulIdentifier","src":"641:17:31"},"nativeSrc":"641:24:31","nodeType":"YulFunctionCall","src":"641:24:31"}],"functionName":{"name":"eq","nativeSrc":"631:2:31","nodeType":"YulIdentifier","src":"631:2:31"},"nativeSrc":"631:35:31","nodeType":"YulFunctionCall","src":"631:35:31"}],"functionName":{"name":"iszero","nativeSrc":"624:6:31","nodeType":"YulIdentifier","src":"624:6:31"},"nativeSrc":"624:43:31","nodeType":"YulFunctionCall","src":"624:43:31"},"nativeSrc":"621:63:31","nodeType":"YulIf","src":"621:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:31","nodeType":"YulTypedName","src":"604:5:31","type":""}],"src":"568:122:31"},{"body":{"nativeSrc":"759:80:31","nodeType":"YulBlock","src":"759:80:31","statements":[{"nativeSrc":"769:22:31","nodeType":"YulAssignment","src":"769:22:31","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:31","nodeType":"YulIdentifier","src":"784:6:31"}],"functionName":{"name":"mload","nativeSrc":"778:5:31","nodeType":"YulIdentifier","src":"778:5:31"},"nativeSrc":"778:13:31","nodeType":"YulFunctionCall","src":"778:13:31"},"variableNames":[{"name":"value","nativeSrc":"769:5:31","nodeType":"YulIdentifier","src":"769:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:31","nodeType":"YulIdentifier","src":"827:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:31","nodeType":"YulIdentifier","src":"800:26:31"},"nativeSrc":"800:33:31","nodeType":"YulFunctionCall","src":"800:33:31"},"nativeSrc":"800:33:31","nodeType":"YulExpressionStatement","src":"800:33:31"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:31","nodeType":"YulTypedName","src":"737:6:31","type":""},{"name":"end","nativeSrc":"745:3:31","nodeType":"YulTypedName","src":"745:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:31","nodeType":"YulTypedName","src":"753:5:31","type":""}],"src":"696:143:31"},{"body":{"nativeSrc":"939:413:31","nodeType":"YulBlock","src":"939:413:31","statements":[{"body":{"nativeSrc":"985:83:31","nodeType":"YulBlock","src":"985:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:31","nodeType":"YulIdentifier","src":"987:77:31"},"nativeSrc":"987:79:31","nodeType":"YulFunctionCall","src":"987:79:31"},"nativeSrc":"987:79:31","nodeType":"YulExpressionStatement","src":"987:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:31","nodeType":"YulIdentifier","src":"960:7:31"},{"name":"headStart","nativeSrc":"969:9:31","nodeType":"YulIdentifier","src":"969:9:31"}],"functionName":{"name":"sub","nativeSrc":"956:3:31","nodeType":"YulIdentifier","src":"956:3:31"},"nativeSrc":"956:23:31","nodeType":"YulFunctionCall","src":"956:23:31"},{"kind":"number","nativeSrc":"981:2:31","nodeType":"YulLiteral","src":"981:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:31","nodeType":"YulIdentifier","src":"952:3:31"},"nativeSrc":"952:32:31","nodeType":"YulFunctionCall","src":"952:32:31"},"nativeSrc":"949:119:31","nodeType":"YulIf","src":"949:119:31"},{"nativeSrc":"1078:128:31","nodeType":"YulBlock","src":"1078:128:31","statements":[{"nativeSrc":"1093:15:31","nodeType":"YulVariableDeclaration","src":"1093:15:31","value":{"kind":"number","nativeSrc":"1107:1:31","nodeType":"YulLiteral","src":"1107:1:31","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:31","nodeType":"YulTypedName","src":"1097:6:31","type":""}]},{"nativeSrc":"1122:74:31","nodeType":"YulAssignment","src":"1122:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:31","nodeType":"YulIdentifier","src":"1168:9:31"},{"name":"offset","nativeSrc":"1179:6:31","nodeType":"YulIdentifier","src":"1179:6:31"}],"functionName":{"name":"add","nativeSrc":"1164:3:31","nodeType":"YulIdentifier","src":"1164:3:31"},"nativeSrc":"1164:22:31","nodeType":"YulFunctionCall","src":"1164:22:31"},{"name":"dataEnd","nativeSrc":"1188:7:31","nodeType":"YulIdentifier","src":"1188:7:31"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:31","nodeType":"YulIdentifier","src":"1132:31:31"},"nativeSrc":"1132:64:31","nodeType":"YulFunctionCall","src":"1132:64:31"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:31","nodeType":"YulIdentifier","src":"1122:6:31"}]}]},{"nativeSrc":"1216:129:31","nodeType":"YulBlock","src":"1216:129:31","statements":[{"nativeSrc":"1231:16:31","nodeType":"YulVariableDeclaration","src":"1231:16:31","value":{"kind":"number","nativeSrc":"1245:2:31","nodeType":"YulLiteral","src":"1245:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:31","nodeType":"YulTypedName","src":"1235:6:31","type":""}]},{"nativeSrc":"1261:74:31","nodeType":"YulAssignment","src":"1261:74:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:31","nodeType":"YulIdentifier","src":"1307:9:31"},{"name":"offset","nativeSrc":"1318:6:31","nodeType":"YulIdentifier","src":"1318:6:31"}],"functionName":{"name":"add","nativeSrc":"1303:3:31","nodeType":"YulIdentifier","src":"1303:3:31"},"nativeSrc":"1303:22:31","nodeType":"YulFunctionCall","src":"1303:22:31"},{"name":"dataEnd","nativeSrc":"1327:7:31","nodeType":"YulIdentifier","src":"1327:7:31"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:31","nodeType":"YulIdentifier","src":"1271:31:31"},"nativeSrc":"1271:64:31","nodeType":"YulFunctionCall","src":"1271:64:31"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:31","nodeType":"YulIdentifier","src":"1261:6:31"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:31","nodeType":"YulTypedName","src":"901:9:31","type":""},{"name":"dataEnd","nativeSrc":"912:7:31","nodeType":"YulTypedName","src":"912:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:31","nodeType":"YulTypedName","src":"924:6:31","type":""},{"name":"value1","nativeSrc":"932:6:31","nodeType":"YulTypedName","src":"932:6:31","type":""}],"src":"845:507:31"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b50604051610d3f380380610d3f83398181016040528101906100329190610104565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610144565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d1826100a6565b9050919050565b6100e1816100c6565b81146100ec57600080fd5b50565b6000815190506100fe816100d8565b92915050565b6000806040838503121561011b5761011a6100a1565b5b6000610129858286016100ef565b925050602061013a858286016100ef565b9150509250929050565b60805160a051610bc86101776000396000818161014201526102a4015260008181610119015261035b0152610bc86000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633feb0e8d1461006757806342d648e314610085578063dd40bb62146100a1578063e3fa9df8146100bf578063e585bcd5146100dd578063f323b896146100f9575b600080fd5b61006f610117565b60405161007c919061069b565b60405180910390f35b61009f600480360381019061009a919061083c565b61013b565b005b6100a96102a2565b6040516100b6919061069b565b60405180910390f35b6100c76102c6565b6040516100d49190610956565b60405180910390f35b6100f760048036038101906100f29190610978565b610354565b005b6101016104c0565b60405161010e9190610956565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60006101667f000000000000000000000000000000000000000000000000000000000000000061054e565b90508073ffffffffffffffffffffffffffffffffffffffff16637ab4339d84846040518363ffffffff1660e01b81526004016101a3929190610a82565b600060405180830381600087803b1580156101bd57600080fd5b505af11580156101d1573d6000803e3d6000fd5b505050506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f6dc85245364361a3417062b03ad416cbd908d1ac5d9ef4a123faedf2bfcfd055856040516102959190610ab2565b60405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600080548060200260200160405190810160405280929190818152602001828054801561034a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610300575b5050505050905090565b600061037f7f000000000000000000000000000000000000000000000000000000000000000061054e565b90508073ffffffffffffffffffffffffffffffffffffffff1663077f224a8585856040518463ffffffff1660e01b81526004016103be93929190610ad4565b600060405180830381600087803b1580156103d857600080fd5b505af11580156103ec573d6000803e3d6000fd5b505050506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7c8df6f7372bc8af86e2ff1c2b0aceb2f8717cca6a7a996f45f60276f878ab4086866040516104b2929190610b19565b60405180910390a350505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561054457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104fa575b5050505050905090565b600061055b826000610562565b9050919050565b6000814710156105ab5747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016105a2929190610b69565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610654576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106858261065a565b9050919050565b6106958161067a565b82525050565b60006020820190506106b0600083018461068c565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61071d826106d4565b810181811067ffffffffffffffff8211171561073c5761073b6106e5565b5b80604052505050565b600061074f6106b6565b905061075b8282610714565b919050565b600067ffffffffffffffff82111561077b5761077a6106e5565b5b610784826106d4565b9050602081019050919050565b82818337600083830152505050565b60006107b36107ae84610760565b610745565b9050828152602081018484840111156107cf576107ce6106cf565b5b6107da848285610791565b509392505050565b600082601f8301126107f7576107f66106ca565b5b81356108078482602086016107a0565b91505092915050565b6108198161067a565b811461082457600080fd5b50565b60008135905061083681610810565b92915050565b60008060408385031215610853576108526106c0565b5b600083013567ffffffffffffffff811115610871576108706106c5565b5b61087d858286016107e2565b925050602061088e85828601610827565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108cd8161067a565b82525050565b60006108df83836108c4565b60208301905092915050565b6000602082019050919050565b600061090382610898565b61090d81856108a3565b9350610918836108b4565b8060005b8381101561094957815161093088826108d3565b975061093b836108eb565b92505060018101905061091c565b5085935050505092915050565b6000602082019050818103600083015261097081846108f8565b905092915050565b600080600060608486031215610991576109906106c0565b5b600084013567ffffffffffffffff8111156109af576109ae6106c5565b5b6109bb868287016107e2565b935050602084013567ffffffffffffffff8111156109dc576109db6106c5565b5b6109e8868287016107e2565b92505060406109f986828701610827565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a3d578082015181840152602081019050610a22565b60008484015250505050565b6000610a5482610a03565b610a5e8185610a0e565b9350610a6e818560208601610a1f565b610a77816106d4565b840191505092915050565b60006040820190508181036000830152610a9c8185610a49565b9050610aab602083018461068c565b9392505050565b60006020820190508181036000830152610acc8184610a49565b905092915050565b60006060820190508181036000830152610aee8186610a49565b90508181036020830152610b028185610a49565b9050610b11604083018461068c565b949350505050565b60006040820190508181036000830152610b338185610a49565b90508181036020830152610b478184610a49565b90509392505050565b6000819050919050565b610b6381610b50565b82525050565b6000604082019050610b7e6000830185610b5a565b610b8b6020830184610b5a565b939250505056fea2646970667358221220b25fce66a8035e970c0f3d5ebc4d24003ce33b4637d2c9b3d65950d979c7945264736f6c63430008180033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD3F CODESIZE SUB DUP1 PUSH2 0xD3F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x104 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x144 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1 DUP3 PUSH2 0xA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0xC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFE DUP2 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH2 0x11A PUSH2 0xA1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x129 DUP6 DUP3 DUP7 ADD PUSH2 0xEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13A DUP6 DUP3 DUP7 ADD PUSH2 0xEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xBC8 PUSH2 0x177 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x142 ADD MSTORE PUSH2 0x2A4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x119 ADD MSTORE PUSH2 0x35B ADD MSTORE PUSH2 0xBC8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FEB0E8D EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x42D648E3 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xDD40BB62 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xE3FA9DF8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xE585BCD5 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF323B896 EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166 PUSH32 0x0 PUSH2 0x54E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7AB4339D DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3 SWAP3 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6DC85245364361A3417062B03AD416CBD908D1AC5D9EF4A123FAEDF2BFCFD055 DUP6 PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x300 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F PUSH32 0x0 PUSH2 0x54E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x77F224A DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7C8DF6F7372BC8AF86E2FF1C2B0ACEB2F8717CCA6A7A996F45F60276F878AB40 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4FA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH1 0x0 PUSH2 0x562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x5AB JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x685 DUP3 PUSH2 0x65A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x695 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x71D DUP3 PUSH2 0x6D4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x73C JUMPI PUSH2 0x73B PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74F PUSH2 0x6B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x75B DUP3 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST PUSH2 0x784 DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B3 PUSH2 0x7AE DUP5 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7CF JUMPI PUSH2 0x7CE PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH2 0x7DA DUP5 DUP3 DUP6 PUSH2 0x791 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0x6CA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x807 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x836 DUP2 PUSH2 0x810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH2 0x852 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x6C5 JUMP JUMPDEST JUMPDEST PUSH2 0x87D DUP6 DUP3 DUP7 ADD PUSH2 0x7E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x88E DUP6 DUP3 DUP7 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x67A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DF DUP4 DUP4 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x903 DUP3 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x90D DUP2 DUP6 PUSH2 0x8A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x918 DUP4 PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x949 JUMPI DUP2 MLOAD PUSH2 0x930 DUP9 DUP3 PUSH2 0x8D3 JUMP JUMPDEST SWAP8 POP PUSH2 0x93B DUP4 PUSH2 0x8EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x91C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x970 DUP2 DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x991 JUMPI PUSH2 0x990 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AE PUSH2 0x6C5 JUMP JUMPDEST JUMPDEST PUSH2 0x9BB DUP7 DUP3 DUP8 ADD PUSH2 0x7E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x9DB PUSH2 0x6C5 JUMP JUMPDEST JUMPDEST PUSH2 0x9E8 DUP7 DUP3 DUP8 ADD PUSH2 0x7E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9F9 DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA54 DUP3 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0xA5E DUP2 DUP6 PUSH2 0xA0E JUMP JUMPDEST SWAP4 POP PUSH2 0xA6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA1F JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0x6D4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA9C DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP PUSH2 0xAAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACC DUP2 DUP5 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAEE DUP2 DUP7 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB02 DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP PUSH2 0xB11 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB47 DUP2 DUP5 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB63 DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 PUSH0 0xCE PUSH7 0xA8035E970C0F3D MCOPY 0xBC 0x4D 0x24 STOP EXTCODECOPY 0xE3 EXTCODESIZE CHAINID CALLDATACOPY 0xD2 0xC9 0xB3 0xD6 MSIZE POP 0xD9 PUSH26 0xC7945264736F6C63430008180033000000000000000000000000 ","sourceMap":"169:1558:30:-:0;;;615:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;743:29;712:60;;;;;;;;;;810:26;782:54;;;;;;;;;;615:228;;169:1558;;88:117:31;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;169:1558:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@clone_2785":{"entryPoint":1358,"id":2785,"parameterSlots":1,"returnSlots":1},"@clone_2830":{"entryPoint":1378,"id":2830,"parameterSlots":2,"returnSlots":1},"@collectionDropImplementation_10252":{"entryPoint":279,"id":10252,"parameterSlots":0,"returnSlots":0},"@createCollectionDrop_10333":{"entryPoint":852,"id":10333,"parameterSlots":3,"returnSlots":0},"@createEditionDrop_10368":{"entryPoint":315,"id":10368,"parameterSlots":2,"returnSlots":0},"@editionDropImplementation_10254":{"entryPoint":674,"id":10254,"parameterSlots":0,"returnSlots":0},"@getCollectionContracts_10377":{"entryPoint":710,"id":10377,"parameterSlots":0,"returnSlots":1},"@getEditionContracts_10386":{"entryPoint":1216,"id":10386,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":1952,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2087,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":2018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address":{"entryPoint":2108,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address":{"entryPoint":2424,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":2259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":2244,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1676,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":2296,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2633,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2906,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2738,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":2690,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2841,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":2772,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2921,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":1861,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1718,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1888,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2228,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2200,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2563,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":2283,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":2211,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2574,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1658,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1626,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2896,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1937,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2591,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1812,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":1765,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1738,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1743,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1733,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1728,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1748,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":2064,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:10425:31","nodeType":"YulBlock","src":"0:10425:31","statements":[{"body":{"nativeSrc":"52:81:31","nodeType":"YulBlock","src":"52:81:31","statements":[{"nativeSrc":"62:65:31","nodeType":"YulAssignment","src":"62:65:31","value":{"arguments":[{"name":"value","nativeSrc":"77:5:31","nodeType":"YulIdentifier","src":"77:5:31"},{"kind":"number","nativeSrc":"84:42:31","nodeType":"YulLiteral","src":"84:42:31","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:31","nodeType":"YulIdentifier","src":"73:3:31"},"nativeSrc":"73:54:31","nodeType":"YulFunctionCall","src":"73:54:31"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:31","nodeType":"YulIdentifier","src":"62:7:31"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:31","nodeType":"YulTypedName","src":"34:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:31","nodeType":"YulTypedName","src":"44:7:31","type":""}],"src":"7:126:31"},{"body":{"nativeSrc":"184:51:31","nodeType":"YulBlock","src":"184:51:31","statements":[{"nativeSrc":"194:35:31","nodeType":"YulAssignment","src":"194:35:31","value":{"arguments":[{"name":"value","nativeSrc":"223:5:31","nodeType":"YulIdentifier","src":"223:5:31"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:31","nodeType":"YulIdentifier","src":"205:17:31"},"nativeSrc":"205:24:31","nodeType":"YulFunctionCall","src":"205:24:31"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:31","nodeType":"YulIdentifier","src":"194:7:31"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:31","nodeType":"YulTypedName","src":"166:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:31","nodeType":"YulTypedName","src":"176:7:31","type":""}],"src":"139:96:31"},{"body":{"nativeSrc":"306:53:31","nodeType":"YulBlock","src":"306:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:31","nodeType":"YulIdentifier","src":"323:3:31"},{"arguments":[{"name":"value","nativeSrc":"346:5:31","nodeType":"YulIdentifier","src":"346:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:31","nodeType":"YulIdentifier","src":"328:17:31"},"nativeSrc":"328:24:31","nodeType":"YulFunctionCall","src":"328:24:31"}],"functionName":{"name":"mstore","nativeSrc":"316:6:31","nodeType":"YulIdentifier","src":"316:6:31"},"nativeSrc":"316:37:31","nodeType":"YulFunctionCall","src":"316:37:31"},"nativeSrc":"316:37:31","nodeType":"YulExpressionStatement","src":"316:37:31"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:31","nodeType":"YulTypedName","src":"294:5:31","type":""},{"name":"pos","nativeSrc":"301:3:31","nodeType":"YulTypedName","src":"301:3:31","type":""}],"src":"241:118:31"},{"body":{"nativeSrc":"463:124:31","nodeType":"YulBlock","src":"463:124:31","statements":[{"nativeSrc":"473:26:31","nodeType":"YulAssignment","src":"473:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:31","nodeType":"YulIdentifier","src":"485:9:31"},{"kind":"number","nativeSrc":"496:2:31","nodeType":"YulLiteral","src":"496:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:31","nodeType":"YulIdentifier","src":"481:3:31"},"nativeSrc":"481:18:31","nodeType":"YulFunctionCall","src":"481:18:31"},"variableNames":[{"name":"tail","nativeSrc":"473:4:31","nodeType":"YulIdentifier","src":"473:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:31","nodeType":"YulIdentifier","src":"553:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:31","nodeType":"YulIdentifier","src":"566:9:31"},{"kind":"number","nativeSrc":"577:1:31","nodeType":"YulLiteral","src":"577:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:31","nodeType":"YulIdentifier","src":"562:3:31"},"nativeSrc":"562:17:31","nodeType":"YulFunctionCall","src":"562:17:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:31","nodeType":"YulIdentifier","src":"509:43:31"},"nativeSrc":"509:71:31","nodeType":"YulFunctionCall","src":"509:71:31"},"nativeSrc":"509:71:31","nodeType":"YulExpressionStatement","src":"509:71:31"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:31","nodeType":"YulTypedName","src":"435:9:31","type":""},{"name":"value0","nativeSrc":"447:6:31","nodeType":"YulTypedName","src":"447:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:31","nodeType":"YulTypedName","src":"458:4:31","type":""}],"src":"365:222:31"},{"body":{"nativeSrc":"633:35:31","nodeType":"YulBlock","src":"633:35:31","statements":[{"nativeSrc":"643:19:31","nodeType":"YulAssignment","src":"643:19:31","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:31","nodeType":"YulLiteral","src":"659:2:31","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:31","nodeType":"YulIdentifier","src":"653:5:31"},"nativeSrc":"653:9:31","nodeType":"YulFunctionCall","src":"653:9:31"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:31","nodeType":"YulIdentifier","src":"643:6:31"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:31","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:31","nodeType":"YulTypedName","src":"626:6:31","type":""}],"src":"593:75:31"},{"body":{"nativeSrc":"763:28:31","nodeType":"YulBlock","src":"763:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:31","nodeType":"YulLiteral","src":"780:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:31","nodeType":"YulLiteral","src":"783:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:31","nodeType":"YulIdentifier","src":"773:6:31"},"nativeSrc":"773:12:31","nodeType":"YulFunctionCall","src":"773:12:31"},"nativeSrc":"773:12:31","nodeType":"YulExpressionStatement","src":"773:12:31"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:31","nodeType":"YulFunctionDefinition","src":"674:117:31"},{"body":{"nativeSrc":"886:28:31","nodeType":"YulBlock","src":"886:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:31","nodeType":"YulLiteral","src":"903:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:31","nodeType":"YulLiteral","src":"906:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:31","nodeType":"YulIdentifier","src":"896:6:31"},"nativeSrc":"896:12:31","nodeType":"YulFunctionCall","src":"896:12:31"},"nativeSrc":"896:12:31","nodeType":"YulExpressionStatement","src":"896:12:31"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:31","nodeType":"YulFunctionDefinition","src":"797:117:31"},{"body":{"nativeSrc":"1009:28:31","nodeType":"YulBlock","src":"1009:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1026:1:31","nodeType":"YulLiteral","src":"1026:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1029:1:31","nodeType":"YulLiteral","src":"1029:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1019:6:31","nodeType":"YulIdentifier","src":"1019:6:31"},"nativeSrc":"1019:12:31","nodeType":"YulFunctionCall","src":"1019:12:31"},"nativeSrc":"1019:12:31","nodeType":"YulExpressionStatement","src":"1019:12:31"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"920:117:31","nodeType":"YulFunctionDefinition","src":"920:117:31"},{"body":{"nativeSrc":"1132:28:31","nodeType":"YulBlock","src":"1132:28:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1149:1:31","nodeType":"YulLiteral","src":"1149:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1152:1:31","nodeType":"YulLiteral","src":"1152:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1142:6:31","nodeType":"YulIdentifier","src":"1142:6:31"},"nativeSrc":"1142:12:31","nodeType":"YulFunctionCall","src":"1142:12:31"},"nativeSrc":"1142:12:31","nodeType":"YulExpressionStatement","src":"1142:12:31"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"1043:117:31","nodeType":"YulFunctionDefinition","src":"1043:117:31"},{"body":{"nativeSrc":"1214:54:31","nodeType":"YulBlock","src":"1214:54:31","statements":[{"nativeSrc":"1224:38:31","nodeType":"YulAssignment","src":"1224:38:31","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1242:5:31","nodeType":"YulIdentifier","src":"1242:5:31"},{"kind":"number","nativeSrc":"1249:2:31","nodeType":"YulLiteral","src":"1249:2:31","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1238:3:31","nodeType":"YulIdentifier","src":"1238:3:31"},"nativeSrc":"1238:14:31","nodeType":"YulFunctionCall","src":"1238:14:31"},{"arguments":[{"kind":"number","nativeSrc":"1258:2:31","nodeType":"YulLiteral","src":"1258:2:31","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1254:3:31","nodeType":"YulIdentifier","src":"1254:3:31"},"nativeSrc":"1254:7:31","nodeType":"YulFunctionCall","src":"1254:7:31"}],"functionName":{"name":"and","nativeSrc":"1234:3:31","nodeType":"YulIdentifier","src":"1234:3:31"},"nativeSrc":"1234:28:31","nodeType":"YulFunctionCall","src":"1234:28:31"},"variableNames":[{"name":"result","nativeSrc":"1224:6:31","nodeType":"YulIdentifier","src":"1224:6:31"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"1166:102:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1197:5:31","nodeType":"YulTypedName","src":"1197:5:31","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1207:6:31","nodeType":"YulTypedName","src":"1207:6:31","type":""}],"src":"1166:102:31"},{"body":{"nativeSrc":"1302:152:31","nodeType":"YulBlock","src":"1302:152:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1319:1:31","nodeType":"YulLiteral","src":"1319:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1322:77:31","nodeType":"YulLiteral","src":"1322:77:31","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1312:6:31","nodeType":"YulIdentifier","src":"1312:6:31"},"nativeSrc":"1312:88:31","nodeType":"YulFunctionCall","src":"1312:88:31"},"nativeSrc":"1312:88:31","nodeType":"YulExpressionStatement","src":"1312:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1416:1:31","nodeType":"YulLiteral","src":"1416:1:31","type":"","value":"4"},{"kind":"number","nativeSrc":"1419:4:31","nodeType":"YulLiteral","src":"1419:4:31","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"1409:6:31","nodeType":"YulIdentifier","src":"1409:6:31"},"nativeSrc":"1409:15:31","nodeType":"YulFunctionCall","src":"1409:15:31"},"nativeSrc":"1409:15:31","nodeType":"YulExpressionStatement","src":"1409:15:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1440:1:31","nodeType":"YulLiteral","src":"1440:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"1443:4:31","nodeType":"YulLiteral","src":"1443:4:31","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1433:6:31","nodeType":"YulIdentifier","src":"1433:6:31"},"nativeSrc":"1433:15:31","nodeType":"YulFunctionCall","src":"1433:15:31"},"nativeSrc":"1433:15:31","nodeType":"YulExpressionStatement","src":"1433:15:31"}]},"name":"panic_error_0x41","nativeSrc":"1274:180:31","nodeType":"YulFunctionDefinition","src":"1274:180:31"},{"body":{"nativeSrc":"1503:238:31","nodeType":"YulBlock","src":"1503:238:31","statements":[{"nativeSrc":"1513:58:31","nodeType":"YulVariableDeclaration","src":"1513:58:31","value":{"arguments":[{"name":"memPtr","nativeSrc":"1535:6:31","nodeType":"YulIdentifier","src":"1535:6:31"},{"arguments":[{"name":"size","nativeSrc":"1565:4:31","nodeType":"YulIdentifier","src":"1565:4:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1543:21:31","nodeType":"YulIdentifier","src":"1543:21:31"},"nativeSrc":"1543:27:31","nodeType":"YulFunctionCall","src":"1543:27:31"}],"functionName":{"name":"add","nativeSrc":"1531:3:31","nodeType":"YulIdentifier","src":"1531:3:31"},"nativeSrc":"1531:40:31","nodeType":"YulFunctionCall","src":"1531:40:31"},"variables":[{"name":"newFreePtr","nativeSrc":"1517:10:31","nodeType":"YulTypedName","src":"1517:10:31","type":""}]},{"body":{"nativeSrc":"1682:22:31","nodeType":"YulBlock","src":"1682:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1684:16:31","nodeType":"YulIdentifier","src":"1684:16:31"},"nativeSrc":"1684:18:31","nodeType":"YulFunctionCall","src":"1684:18:31"},"nativeSrc":"1684:18:31","nodeType":"YulExpressionStatement","src":"1684:18:31"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1625:10:31","nodeType":"YulIdentifier","src":"1625:10:31"},{"kind":"number","nativeSrc":"1637:18:31","nodeType":"YulLiteral","src":"1637:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1622:2:31","nodeType":"YulIdentifier","src":"1622:2:31"},"nativeSrc":"1622:34:31","nodeType":"YulFunctionCall","src":"1622:34:31"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1661:10:31","nodeType":"YulIdentifier","src":"1661:10:31"},{"name":"memPtr","nativeSrc":"1673:6:31","nodeType":"YulIdentifier","src":"1673:6:31"}],"functionName":{"name":"lt","nativeSrc":"1658:2:31","nodeType":"YulIdentifier","src":"1658:2:31"},"nativeSrc":"1658:22:31","nodeType":"YulFunctionCall","src":"1658:22:31"}],"functionName":{"name":"or","nativeSrc":"1619:2:31","nodeType":"YulIdentifier","src":"1619:2:31"},"nativeSrc":"1619:62:31","nodeType":"YulFunctionCall","src":"1619:62:31"},"nativeSrc":"1616:88:31","nodeType":"YulIf","src":"1616:88:31"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1720:2:31","nodeType":"YulLiteral","src":"1720:2:31","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1724:10:31","nodeType":"YulIdentifier","src":"1724:10:31"}],"functionName":{"name":"mstore","nativeSrc":"1713:6:31","nodeType":"YulIdentifier","src":"1713:6:31"},"nativeSrc":"1713:22:31","nodeType":"YulFunctionCall","src":"1713:22:31"},"nativeSrc":"1713:22:31","nodeType":"YulExpressionStatement","src":"1713:22:31"}]},"name":"finalize_allocation","nativeSrc":"1460:281:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1489:6:31","nodeType":"YulTypedName","src":"1489:6:31","type":""},{"name":"size","nativeSrc":"1497:4:31","nodeType":"YulTypedName","src":"1497:4:31","type":""}],"src":"1460:281:31"},{"body":{"nativeSrc":"1788:88:31","nodeType":"YulBlock","src":"1788:88:31","statements":[{"nativeSrc":"1798:30:31","nodeType":"YulAssignment","src":"1798:30:31","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"1808:18:31","nodeType":"YulIdentifier","src":"1808:18:31"},"nativeSrc":"1808:20:31","nodeType":"YulFunctionCall","src":"1808:20:31"},"variableNames":[{"name":"memPtr","nativeSrc":"1798:6:31","nodeType":"YulIdentifier","src":"1798:6:31"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"1857:6:31","nodeType":"YulIdentifier","src":"1857:6:31"},{"name":"size","nativeSrc":"1865:4:31","nodeType":"YulIdentifier","src":"1865:4:31"}],"functionName":{"name":"finalize_allocation","nativeSrc":"1837:19:31","nodeType":"YulIdentifier","src":"1837:19:31"},"nativeSrc":"1837:33:31","nodeType":"YulFunctionCall","src":"1837:33:31"},"nativeSrc":"1837:33:31","nodeType":"YulExpressionStatement","src":"1837:33:31"}]},"name":"allocate_memory","nativeSrc":"1747:129:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1772:4:31","nodeType":"YulTypedName","src":"1772:4:31","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1781:6:31","nodeType":"YulTypedName","src":"1781:6:31","type":""}],"src":"1747:129:31"},{"body":{"nativeSrc":"1949:241:31","nodeType":"YulBlock","src":"1949:241:31","statements":[{"body":{"nativeSrc":"2054:22:31","nodeType":"YulBlock","src":"2054:22:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2056:16:31","nodeType":"YulIdentifier","src":"2056:16:31"},"nativeSrc":"2056:18:31","nodeType":"YulFunctionCall","src":"2056:18:31"},"nativeSrc":"2056:18:31","nodeType":"YulExpressionStatement","src":"2056:18:31"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2026:6:31","nodeType":"YulIdentifier","src":"2026:6:31"},{"kind":"number","nativeSrc":"2034:18:31","nodeType":"YulLiteral","src":"2034:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2023:2:31","nodeType":"YulIdentifier","src":"2023:2:31"},"nativeSrc":"2023:30:31","nodeType":"YulFunctionCall","src":"2023:30:31"},"nativeSrc":"2020:56:31","nodeType":"YulIf","src":"2020:56:31"},{"nativeSrc":"2086:37:31","nodeType":"YulAssignment","src":"2086:37:31","value":{"arguments":[{"name":"length","nativeSrc":"2116:6:31","nodeType":"YulIdentifier","src":"2116:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2094:21:31","nodeType":"YulIdentifier","src":"2094:21:31"},"nativeSrc":"2094:29:31","nodeType":"YulFunctionCall","src":"2094:29:31"},"variableNames":[{"name":"size","nativeSrc":"2086:4:31","nodeType":"YulIdentifier","src":"2086:4:31"}]},{"nativeSrc":"2160:23:31","nodeType":"YulAssignment","src":"2160:23:31","value":{"arguments":[{"name":"size","nativeSrc":"2172:4:31","nodeType":"YulIdentifier","src":"2172:4:31"},{"kind":"number","nativeSrc":"2178:4:31","nodeType":"YulLiteral","src":"2178:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2168:3:31","nodeType":"YulIdentifier","src":"2168:3:31"},"nativeSrc":"2168:15:31","nodeType":"YulFunctionCall","src":"2168:15:31"},"variableNames":[{"name":"size","nativeSrc":"2160:4:31","nodeType":"YulIdentifier","src":"2160:4:31"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"1882:308:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"1933:6:31","nodeType":"YulTypedName","src":"1933:6:31","type":""}],"returnVariables":[{"name":"size","nativeSrc":"1944:4:31","nodeType":"YulTypedName","src":"1944:4:31","type":""}],"src":"1882:308:31"},{"body":{"nativeSrc":"2260:82:31","nodeType":"YulBlock","src":"2260:82:31","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"2283:3:31","nodeType":"YulIdentifier","src":"2283:3:31"},{"name":"src","nativeSrc":"2288:3:31","nodeType":"YulIdentifier","src":"2288:3:31"},{"name":"length","nativeSrc":"2293:6:31","nodeType":"YulIdentifier","src":"2293:6:31"}],"functionName":{"name":"calldatacopy","nativeSrc":"2270:12:31","nodeType":"YulIdentifier","src":"2270:12:31"},"nativeSrc":"2270:30:31","nodeType":"YulFunctionCall","src":"2270:30:31"},"nativeSrc":"2270:30:31","nodeType":"YulExpressionStatement","src":"2270:30:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2320:3:31","nodeType":"YulIdentifier","src":"2320:3:31"},{"name":"length","nativeSrc":"2325:6:31","nodeType":"YulIdentifier","src":"2325:6:31"}],"functionName":{"name":"add","nativeSrc":"2316:3:31","nodeType":"YulIdentifier","src":"2316:3:31"},"nativeSrc":"2316:16:31","nodeType":"YulFunctionCall","src":"2316:16:31"},{"kind":"number","nativeSrc":"2334:1:31","nodeType":"YulLiteral","src":"2334:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2309:6:31","nodeType":"YulIdentifier","src":"2309:6:31"},"nativeSrc":"2309:27:31","nodeType":"YulFunctionCall","src":"2309:27:31"},"nativeSrc":"2309:27:31","nodeType":"YulExpressionStatement","src":"2309:27:31"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"2196:146:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2242:3:31","nodeType":"YulTypedName","src":"2242:3:31","type":""},{"name":"dst","nativeSrc":"2247:3:31","nodeType":"YulTypedName","src":"2247:3:31","type":""},{"name":"length","nativeSrc":"2252:6:31","nodeType":"YulTypedName","src":"2252:6:31","type":""}],"src":"2196:146:31"},{"body":{"nativeSrc":"2432:341:31","nodeType":"YulBlock","src":"2432:341:31","statements":[{"nativeSrc":"2442:75:31","nodeType":"YulAssignment","src":"2442:75:31","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2509:6:31","nodeType":"YulIdentifier","src":"2509:6:31"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"2467:41:31","nodeType":"YulIdentifier","src":"2467:41:31"},"nativeSrc":"2467:49:31","nodeType":"YulFunctionCall","src":"2467:49:31"}],"functionName":{"name":"allocate_memory","nativeSrc":"2451:15:31","nodeType":"YulIdentifier","src":"2451:15:31"},"nativeSrc":"2451:66:31","nodeType":"YulFunctionCall","src":"2451:66:31"},"variableNames":[{"name":"array","nativeSrc":"2442:5:31","nodeType":"YulIdentifier","src":"2442:5:31"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2533:5:31","nodeType":"YulIdentifier","src":"2533:5:31"},{"name":"length","nativeSrc":"2540:6:31","nodeType":"YulIdentifier","src":"2540:6:31"}],"functionName":{"name":"mstore","nativeSrc":"2526:6:31","nodeType":"YulIdentifier","src":"2526:6:31"},"nativeSrc":"2526:21:31","nodeType":"YulFunctionCall","src":"2526:21:31"},"nativeSrc":"2526:21:31","nodeType":"YulExpressionStatement","src":"2526:21:31"},{"nativeSrc":"2556:27:31","nodeType":"YulVariableDeclaration","src":"2556:27:31","value":{"arguments":[{"name":"array","nativeSrc":"2571:5:31","nodeType":"YulIdentifier","src":"2571:5:31"},{"kind":"number","nativeSrc":"2578:4:31","nodeType":"YulLiteral","src":"2578:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2567:3:31","nodeType":"YulIdentifier","src":"2567:3:31"},"nativeSrc":"2567:16:31","nodeType":"YulFunctionCall","src":"2567:16:31"},"variables":[{"name":"dst","nativeSrc":"2560:3:31","nodeType":"YulTypedName","src":"2560:3:31","type":""}]},{"body":{"nativeSrc":"2621:83:31","nodeType":"YulBlock","src":"2621:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"2623:77:31","nodeType":"YulIdentifier","src":"2623:77:31"},"nativeSrc":"2623:79:31","nodeType":"YulFunctionCall","src":"2623:79:31"},"nativeSrc":"2623:79:31","nodeType":"YulExpressionStatement","src":"2623:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2602:3:31","nodeType":"YulIdentifier","src":"2602:3:31"},{"name":"length","nativeSrc":"2607:6:31","nodeType":"YulIdentifier","src":"2607:6:31"}],"functionName":{"name":"add","nativeSrc":"2598:3:31","nodeType":"YulIdentifier","src":"2598:3:31"},"nativeSrc":"2598:16:31","nodeType":"YulFunctionCall","src":"2598:16:31"},{"name":"end","nativeSrc":"2616:3:31","nodeType":"YulIdentifier","src":"2616:3:31"}],"functionName":{"name":"gt","nativeSrc":"2595:2:31","nodeType":"YulIdentifier","src":"2595:2:31"},"nativeSrc":"2595:25:31","nodeType":"YulFunctionCall","src":"2595:25:31"},"nativeSrc":"2592:112:31","nodeType":"YulIf","src":"2592:112:31"},{"expression":{"arguments":[{"name":"src","nativeSrc":"2750:3:31","nodeType":"YulIdentifier","src":"2750:3:31"},{"name":"dst","nativeSrc":"2755:3:31","nodeType":"YulIdentifier","src":"2755:3:31"},{"name":"length","nativeSrc":"2760:6:31","nodeType":"YulIdentifier","src":"2760:6:31"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"2713:36:31","nodeType":"YulIdentifier","src":"2713:36:31"},"nativeSrc":"2713:54:31","nodeType":"YulFunctionCall","src":"2713:54:31"},"nativeSrc":"2713:54:31","nodeType":"YulExpressionStatement","src":"2713:54:31"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"2348:425:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2405:3:31","nodeType":"YulTypedName","src":"2405:3:31","type":""},{"name":"length","nativeSrc":"2410:6:31","nodeType":"YulTypedName","src":"2410:6:31","type":""},{"name":"end","nativeSrc":"2418:3:31","nodeType":"YulTypedName","src":"2418:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2426:5:31","nodeType":"YulTypedName","src":"2426:5:31","type":""}],"src":"2348:425:31"},{"body":{"nativeSrc":"2855:278:31","nodeType":"YulBlock","src":"2855:278:31","statements":[{"body":{"nativeSrc":"2904:83:31","nodeType":"YulBlock","src":"2904:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2906:77:31","nodeType":"YulIdentifier","src":"2906:77:31"},"nativeSrc":"2906:79:31","nodeType":"YulFunctionCall","src":"2906:79:31"},"nativeSrc":"2906:79:31","nodeType":"YulExpressionStatement","src":"2906:79:31"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"2883:6:31","nodeType":"YulIdentifier","src":"2883:6:31"},{"kind":"number","nativeSrc":"2891:4:31","nodeType":"YulLiteral","src":"2891:4:31","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2879:3:31","nodeType":"YulIdentifier","src":"2879:3:31"},"nativeSrc":"2879:17:31","nodeType":"YulFunctionCall","src":"2879:17:31"},{"name":"end","nativeSrc":"2898:3:31","nodeType":"YulIdentifier","src":"2898:3:31"}],"functionName":{"name":"slt","nativeSrc":"2875:3:31","nodeType":"YulIdentifier","src":"2875:3:31"},"nativeSrc":"2875:27:31","nodeType":"YulFunctionCall","src":"2875:27:31"}],"functionName":{"name":"iszero","nativeSrc":"2868:6:31","nodeType":"YulIdentifier","src":"2868:6:31"},"nativeSrc":"2868:35:31","nodeType":"YulFunctionCall","src":"2868:35:31"},"nativeSrc":"2865:122:31","nodeType":"YulIf","src":"2865:122:31"},{"nativeSrc":"2996:34:31","nodeType":"YulVariableDeclaration","src":"2996:34:31","value":{"arguments":[{"name":"offset","nativeSrc":"3023:6:31","nodeType":"YulIdentifier","src":"3023:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"3010:12:31","nodeType":"YulIdentifier","src":"3010:12:31"},"nativeSrc":"3010:20:31","nodeType":"YulFunctionCall","src":"3010:20:31"},"variables":[{"name":"length","nativeSrc":"3000:6:31","nodeType":"YulTypedName","src":"3000:6:31","type":""}]},{"nativeSrc":"3039:88:31","nodeType":"YulAssignment","src":"3039:88:31","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"3100:6:31","nodeType":"YulIdentifier","src":"3100:6:31"},{"kind":"number","nativeSrc":"3108:4:31","nodeType":"YulLiteral","src":"3108:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3096:3:31","nodeType":"YulIdentifier","src":"3096:3:31"},"nativeSrc":"3096:17:31","nodeType":"YulFunctionCall","src":"3096:17:31"},{"name":"length","nativeSrc":"3115:6:31","nodeType":"YulIdentifier","src":"3115:6:31"},{"name":"end","nativeSrc":"3123:3:31","nodeType":"YulIdentifier","src":"3123:3:31"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"3048:47:31","nodeType":"YulIdentifier","src":"3048:47:31"},"nativeSrc":"3048:79:31","nodeType":"YulFunctionCall","src":"3048:79:31"},"variableNames":[{"name":"array","nativeSrc":"3039:5:31","nodeType":"YulIdentifier","src":"3039:5:31"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"2793:340:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2833:6:31","nodeType":"YulTypedName","src":"2833:6:31","type":""},{"name":"end","nativeSrc":"2841:3:31","nodeType":"YulTypedName","src":"2841:3:31","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2849:5:31","nodeType":"YulTypedName","src":"2849:5:31","type":""}],"src":"2793:340:31"},{"body":{"nativeSrc":"3182:79:31","nodeType":"YulBlock","src":"3182:79:31","statements":[{"body":{"nativeSrc":"3239:16:31","nodeType":"YulBlock","src":"3239:16:31","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3248:1:31","nodeType":"YulLiteral","src":"3248:1:31","type":"","value":"0"},{"kind":"number","nativeSrc":"3251:1:31","nodeType":"YulLiteral","src":"3251:1:31","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3241:6:31","nodeType":"YulIdentifier","src":"3241:6:31"},"nativeSrc":"3241:12:31","nodeType":"YulFunctionCall","src":"3241:12:31"},"nativeSrc":"3241:12:31","nodeType":"YulExpressionStatement","src":"3241:12:31"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3205:5:31","nodeType":"YulIdentifier","src":"3205:5:31"},{"arguments":[{"name":"value","nativeSrc":"3230:5:31","nodeType":"YulIdentifier","src":"3230:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3212:17:31","nodeType":"YulIdentifier","src":"3212:17:31"},"nativeSrc":"3212:24:31","nodeType":"YulFunctionCall","src":"3212:24:31"}],"functionName":{"name":"eq","nativeSrc":"3202:2:31","nodeType":"YulIdentifier","src":"3202:2:31"},"nativeSrc":"3202:35:31","nodeType":"YulFunctionCall","src":"3202:35:31"}],"functionName":{"name":"iszero","nativeSrc":"3195:6:31","nodeType":"YulIdentifier","src":"3195:6:31"},"nativeSrc":"3195:43:31","nodeType":"YulFunctionCall","src":"3195:43:31"},"nativeSrc":"3192:63:31","nodeType":"YulIf","src":"3192:63:31"}]},"name":"validator_revert_t_address","nativeSrc":"3139:122:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3175:5:31","nodeType":"YulTypedName","src":"3175:5:31","type":""}],"src":"3139:122:31"},{"body":{"nativeSrc":"3319:87:31","nodeType":"YulBlock","src":"3319:87:31","statements":[{"nativeSrc":"3329:29:31","nodeType":"YulAssignment","src":"3329:29:31","value":{"arguments":[{"name":"offset","nativeSrc":"3351:6:31","nodeType":"YulIdentifier","src":"3351:6:31"}],"functionName":{"name":"calldataload","nativeSrc":"3338:12:31","nodeType":"YulIdentifier","src":"3338:12:31"},"nativeSrc":"3338:20:31","nodeType":"YulFunctionCall","src":"3338:20:31"},"variableNames":[{"name":"value","nativeSrc":"3329:5:31","nodeType":"YulIdentifier","src":"3329:5:31"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3394:5:31","nodeType":"YulIdentifier","src":"3394:5:31"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3367:26:31","nodeType":"YulIdentifier","src":"3367:26:31"},"nativeSrc":"3367:33:31","nodeType":"YulFunctionCall","src":"3367:33:31"},"nativeSrc":"3367:33:31","nodeType":"YulExpressionStatement","src":"3367:33:31"}]},"name":"abi_decode_t_address","nativeSrc":"3267:139:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3297:6:31","nodeType":"YulTypedName","src":"3297:6:31","type":""},{"name":"end","nativeSrc":"3305:3:31","nodeType":"YulTypedName","src":"3305:3:31","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3313:5:31","nodeType":"YulTypedName","src":"3313:5:31","type":""}],"src":"3267:139:31"},{"body":{"nativeSrc":"3505:561:31","nodeType":"YulBlock","src":"3505:561:31","statements":[{"body":{"nativeSrc":"3551:83:31","nodeType":"YulBlock","src":"3551:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3553:77:31","nodeType":"YulIdentifier","src":"3553:77:31"},"nativeSrc":"3553:79:31","nodeType":"YulFunctionCall","src":"3553:79:31"},"nativeSrc":"3553:79:31","nodeType":"YulExpressionStatement","src":"3553:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3526:7:31","nodeType":"YulIdentifier","src":"3526:7:31"},{"name":"headStart","nativeSrc":"3535:9:31","nodeType":"YulIdentifier","src":"3535:9:31"}],"functionName":{"name":"sub","nativeSrc":"3522:3:31","nodeType":"YulIdentifier","src":"3522:3:31"},"nativeSrc":"3522:23:31","nodeType":"YulFunctionCall","src":"3522:23:31"},{"kind":"number","nativeSrc":"3547:2:31","nodeType":"YulLiteral","src":"3547:2:31","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3518:3:31","nodeType":"YulIdentifier","src":"3518:3:31"},"nativeSrc":"3518:32:31","nodeType":"YulFunctionCall","src":"3518:32:31"},"nativeSrc":"3515:119:31","nodeType":"YulIf","src":"3515:119:31"},{"nativeSrc":"3644:287:31","nodeType":"YulBlock","src":"3644:287:31","statements":[{"nativeSrc":"3659:45:31","nodeType":"YulVariableDeclaration","src":"3659:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3690:9:31","nodeType":"YulIdentifier","src":"3690:9:31"},{"kind":"number","nativeSrc":"3701:1:31","nodeType":"YulLiteral","src":"3701:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3686:3:31","nodeType":"YulIdentifier","src":"3686:3:31"},"nativeSrc":"3686:17:31","nodeType":"YulFunctionCall","src":"3686:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"3673:12:31","nodeType":"YulIdentifier","src":"3673:12:31"},"nativeSrc":"3673:31:31","nodeType":"YulFunctionCall","src":"3673:31:31"},"variables":[{"name":"offset","nativeSrc":"3663:6:31","nodeType":"YulTypedName","src":"3663:6:31","type":""}]},{"body":{"nativeSrc":"3751:83:31","nodeType":"YulBlock","src":"3751:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"3753:77:31","nodeType":"YulIdentifier","src":"3753:77:31"},"nativeSrc":"3753:79:31","nodeType":"YulFunctionCall","src":"3753:79:31"},"nativeSrc":"3753:79:31","nodeType":"YulExpressionStatement","src":"3753:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3723:6:31","nodeType":"YulIdentifier","src":"3723:6:31"},{"kind":"number","nativeSrc":"3731:18:31","nodeType":"YulLiteral","src":"3731:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3720:2:31","nodeType":"YulIdentifier","src":"3720:2:31"},"nativeSrc":"3720:30:31","nodeType":"YulFunctionCall","src":"3720:30:31"},"nativeSrc":"3717:117:31","nodeType":"YulIf","src":"3717:117:31"},{"nativeSrc":"3848:73:31","nodeType":"YulAssignment","src":"3848:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3893:9:31","nodeType":"YulIdentifier","src":"3893:9:31"},{"name":"offset","nativeSrc":"3904:6:31","nodeType":"YulIdentifier","src":"3904:6:31"}],"functionName":{"name":"add","nativeSrc":"3889:3:31","nodeType":"YulIdentifier","src":"3889:3:31"},"nativeSrc":"3889:22:31","nodeType":"YulFunctionCall","src":"3889:22:31"},{"name":"dataEnd","nativeSrc":"3913:7:31","nodeType":"YulIdentifier","src":"3913:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"3858:30:31","nodeType":"YulIdentifier","src":"3858:30:31"},"nativeSrc":"3858:63:31","nodeType":"YulFunctionCall","src":"3858:63:31"},"variableNames":[{"name":"value0","nativeSrc":"3848:6:31","nodeType":"YulIdentifier","src":"3848:6:31"}]}]},{"nativeSrc":"3941:118:31","nodeType":"YulBlock","src":"3941:118:31","statements":[{"nativeSrc":"3956:16:31","nodeType":"YulVariableDeclaration","src":"3956:16:31","value":{"kind":"number","nativeSrc":"3970:2:31","nodeType":"YulLiteral","src":"3970:2:31","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3960:6:31","nodeType":"YulTypedName","src":"3960:6:31","type":""}]},{"nativeSrc":"3986:63:31","nodeType":"YulAssignment","src":"3986:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4021:9:31","nodeType":"YulIdentifier","src":"4021:9:31"},{"name":"offset","nativeSrc":"4032:6:31","nodeType":"YulIdentifier","src":"4032:6:31"}],"functionName":{"name":"add","nativeSrc":"4017:3:31","nodeType":"YulIdentifier","src":"4017:3:31"},"nativeSrc":"4017:22:31","nodeType":"YulFunctionCall","src":"4017:22:31"},{"name":"dataEnd","nativeSrc":"4041:7:31","nodeType":"YulIdentifier","src":"4041:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3996:20:31","nodeType":"YulIdentifier","src":"3996:20:31"},"nativeSrc":"3996:53:31","nodeType":"YulFunctionCall","src":"3996:53:31"},"variableNames":[{"name":"value1","nativeSrc":"3986:6:31","nodeType":"YulIdentifier","src":"3986:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nativeSrc":"3412:654:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3467:9:31","nodeType":"YulTypedName","src":"3467:9:31","type":""},{"name":"dataEnd","nativeSrc":"3478:7:31","nodeType":"YulTypedName","src":"3478:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3490:6:31","nodeType":"YulTypedName","src":"3490:6:31","type":""},{"name":"value1","nativeSrc":"3498:6:31","nodeType":"YulTypedName","src":"3498:6:31","type":""}],"src":"3412:654:31"},{"body":{"nativeSrc":"4146:40:31","nodeType":"YulBlock","src":"4146:40:31","statements":[{"nativeSrc":"4157:22:31","nodeType":"YulAssignment","src":"4157:22:31","value":{"arguments":[{"name":"value","nativeSrc":"4173:5:31","nodeType":"YulIdentifier","src":"4173:5:31"}],"functionName":{"name":"mload","nativeSrc":"4167:5:31","nodeType":"YulIdentifier","src":"4167:5:31"},"nativeSrc":"4167:12:31","nodeType":"YulFunctionCall","src":"4167:12:31"},"variableNames":[{"name":"length","nativeSrc":"4157:6:31","nodeType":"YulIdentifier","src":"4157:6:31"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"4072:114:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4129:5:31","nodeType":"YulTypedName","src":"4129:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"4139:6:31","nodeType":"YulTypedName","src":"4139:6:31","type":""}],"src":"4072:114:31"},{"body":{"nativeSrc":"4303:73:31","nodeType":"YulBlock","src":"4303:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4320:3:31","nodeType":"YulIdentifier","src":"4320:3:31"},{"name":"length","nativeSrc":"4325:6:31","nodeType":"YulIdentifier","src":"4325:6:31"}],"functionName":{"name":"mstore","nativeSrc":"4313:6:31","nodeType":"YulIdentifier","src":"4313:6:31"},"nativeSrc":"4313:19:31","nodeType":"YulFunctionCall","src":"4313:19:31"},"nativeSrc":"4313:19:31","nodeType":"YulExpressionStatement","src":"4313:19:31"},{"nativeSrc":"4341:29:31","nodeType":"YulAssignment","src":"4341:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"4360:3:31","nodeType":"YulIdentifier","src":"4360:3:31"},{"kind":"number","nativeSrc":"4365:4:31","nodeType":"YulLiteral","src":"4365:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4356:3:31","nodeType":"YulIdentifier","src":"4356:3:31"},"nativeSrc":"4356:14:31","nodeType":"YulFunctionCall","src":"4356:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"4341:11:31","nodeType":"YulIdentifier","src":"4341:11:31"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"4192:184:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"4275:3:31","nodeType":"YulTypedName","src":"4275:3:31","type":""},{"name":"length","nativeSrc":"4280:6:31","nodeType":"YulTypedName","src":"4280:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"4291:11:31","nodeType":"YulTypedName","src":"4291:11:31","type":""}],"src":"4192:184:31"},{"body":{"nativeSrc":"4454:60:31","nodeType":"YulBlock","src":"4454:60:31","statements":[{"nativeSrc":"4464:11:31","nodeType":"YulAssignment","src":"4464:11:31","value":{"name":"ptr","nativeSrc":"4472:3:31","nodeType":"YulIdentifier","src":"4472:3:31"},"variableNames":[{"name":"data","nativeSrc":"4464:4:31","nodeType":"YulIdentifier","src":"4464:4:31"}]},{"nativeSrc":"4485:22:31","nodeType":"YulAssignment","src":"4485:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"4497:3:31","nodeType":"YulIdentifier","src":"4497:3:31"},{"kind":"number","nativeSrc":"4502:4:31","nodeType":"YulLiteral","src":"4502:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4493:3:31","nodeType":"YulIdentifier","src":"4493:3:31"},"nativeSrc":"4493:14:31","nodeType":"YulFunctionCall","src":"4493:14:31"},"variableNames":[{"name":"data","nativeSrc":"4485:4:31","nodeType":"YulIdentifier","src":"4485:4:31"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"4382:132:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4441:3:31","nodeType":"YulTypedName","src":"4441:3:31","type":""}],"returnVariables":[{"name":"data","nativeSrc":"4449:4:31","nodeType":"YulTypedName","src":"4449:4:31","type":""}],"src":"4382:132:31"},{"body":{"nativeSrc":"4575:53:31","nodeType":"YulBlock","src":"4575:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4592:3:31","nodeType":"YulIdentifier","src":"4592:3:31"},{"arguments":[{"name":"value","nativeSrc":"4615:5:31","nodeType":"YulIdentifier","src":"4615:5:31"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4597:17:31","nodeType":"YulIdentifier","src":"4597:17:31"},"nativeSrc":"4597:24:31","nodeType":"YulFunctionCall","src":"4597:24:31"}],"functionName":{"name":"mstore","nativeSrc":"4585:6:31","nodeType":"YulIdentifier","src":"4585:6:31"},"nativeSrc":"4585:37:31","nodeType":"YulFunctionCall","src":"4585:37:31"},"nativeSrc":"4585:37:31","nodeType":"YulExpressionStatement","src":"4585:37:31"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"4520:108:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4563:5:31","nodeType":"YulTypedName","src":"4563:5:31","type":""},{"name":"pos","nativeSrc":"4570:3:31","nodeType":"YulTypedName","src":"4570:3:31","type":""}],"src":"4520:108:31"},{"body":{"nativeSrc":"4714:99:31","nodeType":"YulBlock","src":"4714:99:31","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"4758:6:31","nodeType":"YulIdentifier","src":"4758:6:31"},{"name":"pos","nativeSrc":"4766:3:31","nodeType":"YulIdentifier","src":"4766:3:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"4724:33:31","nodeType":"YulIdentifier","src":"4724:33:31"},"nativeSrc":"4724:46:31","nodeType":"YulFunctionCall","src":"4724:46:31"},"nativeSrc":"4724:46:31","nodeType":"YulExpressionStatement","src":"4724:46:31"},{"nativeSrc":"4779:28:31","nodeType":"YulAssignment","src":"4779:28:31","value":{"arguments":[{"name":"pos","nativeSrc":"4797:3:31","nodeType":"YulIdentifier","src":"4797:3:31"},{"kind":"number","nativeSrc":"4802:4:31","nodeType":"YulLiteral","src":"4802:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4793:3:31","nodeType":"YulIdentifier","src":"4793:3:31"},"nativeSrc":"4793:14:31","nodeType":"YulFunctionCall","src":"4793:14:31"},"variableNames":[{"name":"updatedPos","nativeSrc":"4779:10:31","nodeType":"YulIdentifier","src":"4779:10:31"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"4634:179:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"4687:6:31","nodeType":"YulTypedName","src":"4687:6:31","type":""},{"name":"pos","nativeSrc":"4695:3:31","nodeType":"YulTypedName","src":"4695:3:31","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"4703:10:31","nodeType":"YulTypedName","src":"4703:10:31","type":""}],"src":"4634:179:31"},{"body":{"nativeSrc":"4894:38:31","nodeType":"YulBlock","src":"4894:38:31","statements":[{"nativeSrc":"4904:22:31","nodeType":"YulAssignment","src":"4904:22:31","value":{"arguments":[{"name":"ptr","nativeSrc":"4916:3:31","nodeType":"YulIdentifier","src":"4916:3:31"},{"kind":"number","nativeSrc":"4921:4:31","nodeType":"YulLiteral","src":"4921:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4912:3:31","nodeType":"YulIdentifier","src":"4912:3:31"},"nativeSrc":"4912:14:31","nodeType":"YulFunctionCall","src":"4912:14:31"},"variableNames":[{"name":"next","nativeSrc":"4904:4:31","nodeType":"YulIdentifier","src":"4904:4:31"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"4819:113:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"4881:3:31","nodeType":"YulTypedName","src":"4881:3:31","type":""}],"returnVariables":[{"name":"next","nativeSrc":"4889:4:31","nodeType":"YulTypedName","src":"4889:4:31","type":""}],"src":"4819:113:31"},{"body":{"nativeSrc":"5092:608:31","nodeType":"YulBlock","src":"5092:608:31","statements":[{"nativeSrc":"5102:68:31","nodeType":"YulVariableDeclaration","src":"5102:68:31","value":{"arguments":[{"name":"value","nativeSrc":"5164:5:31","nodeType":"YulIdentifier","src":"5164:5:31"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"5116:47:31","nodeType":"YulIdentifier","src":"5116:47:31"},"nativeSrc":"5116:54:31","nodeType":"YulFunctionCall","src":"5116:54:31"},"variables":[{"name":"length","nativeSrc":"5106:6:31","nodeType":"YulTypedName","src":"5106:6:31","type":""}]},{"nativeSrc":"5179:93:31","nodeType":"YulAssignment","src":"5179:93:31","value":{"arguments":[{"name":"pos","nativeSrc":"5260:3:31","nodeType":"YulIdentifier","src":"5260:3:31"},{"name":"length","nativeSrc":"5265:6:31","nodeType":"YulIdentifier","src":"5265:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"5186:73:31","nodeType":"YulIdentifier","src":"5186:73:31"},"nativeSrc":"5186:86:31","nodeType":"YulFunctionCall","src":"5186:86:31"},"variableNames":[{"name":"pos","nativeSrc":"5179:3:31","nodeType":"YulIdentifier","src":"5179:3:31"}]},{"nativeSrc":"5281:71:31","nodeType":"YulVariableDeclaration","src":"5281:71:31","value":{"arguments":[{"name":"value","nativeSrc":"5346:5:31","nodeType":"YulIdentifier","src":"5346:5:31"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"5296:49:31","nodeType":"YulIdentifier","src":"5296:49:31"},"nativeSrc":"5296:56:31","nodeType":"YulFunctionCall","src":"5296:56:31"},"variables":[{"name":"baseRef","nativeSrc":"5285:7:31","nodeType":"YulTypedName","src":"5285:7:31","type":""}]},{"nativeSrc":"5361:21:31","nodeType":"YulVariableDeclaration","src":"5361:21:31","value":{"name":"baseRef","nativeSrc":"5375:7:31","nodeType":"YulIdentifier","src":"5375:7:31"},"variables":[{"name":"srcPtr","nativeSrc":"5365:6:31","nodeType":"YulTypedName","src":"5365:6:31","type":""}]},{"body":{"nativeSrc":"5451:224:31","nodeType":"YulBlock","src":"5451:224:31","statements":[{"nativeSrc":"5465:34:31","nodeType":"YulVariableDeclaration","src":"5465:34:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5492:6:31","nodeType":"YulIdentifier","src":"5492:6:31"}],"functionName":{"name":"mload","nativeSrc":"5486:5:31","nodeType":"YulIdentifier","src":"5486:5:31"},"nativeSrc":"5486:13:31","nodeType":"YulFunctionCall","src":"5486:13:31"},"variables":[{"name":"elementValue0","nativeSrc":"5469:13:31","nodeType":"YulTypedName","src":"5469:13:31","type":""}]},{"nativeSrc":"5512:70:31","nodeType":"YulAssignment","src":"5512:70:31","value":{"arguments":[{"name":"elementValue0","nativeSrc":"5563:13:31","nodeType":"YulIdentifier","src":"5563:13:31"},{"name":"pos","nativeSrc":"5578:3:31","nodeType":"YulIdentifier","src":"5578:3:31"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"5519:43:31","nodeType":"YulIdentifier","src":"5519:43:31"},"nativeSrc":"5519:63:31","nodeType":"YulFunctionCall","src":"5519:63:31"},"variableNames":[{"name":"pos","nativeSrc":"5512:3:31","nodeType":"YulIdentifier","src":"5512:3:31"}]},{"nativeSrc":"5595:70:31","nodeType":"YulAssignment","src":"5595:70:31","value":{"arguments":[{"name":"srcPtr","nativeSrc":"5658:6:31","nodeType":"YulIdentifier","src":"5658:6:31"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"5605:52:31","nodeType":"YulIdentifier","src":"5605:52:31"},"nativeSrc":"5605:60:31","nodeType":"YulFunctionCall","src":"5605:60:31"},"variableNames":[{"name":"srcPtr","nativeSrc":"5595:6:31","nodeType":"YulIdentifier","src":"5595:6:31"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"5413:1:31","nodeType":"YulIdentifier","src":"5413:1:31"},{"name":"length","nativeSrc":"5416:6:31","nodeType":"YulIdentifier","src":"5416:6:31"}],"functionName":{"name":"lt","nativeSrc":"5410:2:31","nodeType":"YulIdentifier","src":"5410:2:31"},"nativeSrc":"5410:13:31","nodeType":"YulFunctionCall","src":"5410:13:31"},"nativeSrc":"5391:284:31","nodeType":"YulForLoop","post":{"nativeSrc":"5424:18:31","nodeType":"YulBlock","src":"5424:18:31","statements":[{"nativeSrc":"5426:14:31","nodeType":"YulAssignment","src":"5426:14:31","value":{"arguments":[{"name":"i","nativeSrc":"5435:1:31","nodeType":"YulIdentifier","src":"5435:1:31"},{"kind":"number","nativeSrc":"5438:1:31","nodeType":"YulLiteral","src":"5438:1:31","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5431:3:31","nodeType":"YulIdentifier","src":"5431:3:31"},"nativeSrc":"5431:9:31","nodeType":"YulFunctionCall","src":"5431:9:31"},"variableNames":[{"name":"i","nativeSrc":"5426:1:31","nodeType":"YulIdentifier","src":"5426:1:31"}]}]},"pre":{"nativeSrc":"5395:14:31","nodeType":"YulBlock","src":"5395:14:31","statements":[{"nativeSrc":"5397:10:31","nodeType":"YulVariableDeclaration","src":"5397:10:31","value":{"kind":"number","nativeSrc":"5406:1:31","nodeType":"YulLiteral","src":"5406:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"5401:1:31","nodeType":"YulTypedName","src":"5401:1:31","type":""}]}]},"src":"5391:284:31"},{"nativeSrc":"5684:10:31","nodeType":"YulAssignment","src":"5684:10:31","value":{"name":"pos","nativeSrc":"5691:3:31","nodeType":"YulIdentifier","src":"5691:3:31"},"variableNames":[{"name":"end","nativeSrc":"5684:3:31","nodeType":"YulIdentifier","src":"5684:3:31"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"4968:732:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5071:5:31","nodeType":"YulTypedName","src":"5071:5:31","type":""},{"name":"pos","nativeSrc":"5078:3:31","nodeType":"YulTypedName","src":"5078:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5087:3:31","nodeType":"YulTypedName","src":"5087:3:31","type":""}],"src":"4968:732:31"},{"body":{"nativeSrc":"5854:225:31","nodeType":"YulBlock","src":"5854:225:31","statements":[{"nativeSrc":"5864:26:31","nodeType":"YulAssignment","src":"5864:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"5876:9:31","nodeType":"YulIdentifier","src":"5876:9:31"},{"kind":"number","nativeSrc":"5887:2:31","nodeType":"YulLiteral","src":"5887:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5872:3:31","nodeType":"YulIdentifier","src":"5872:3:31"},"nativeSrc":"5872:18:31","nodeType":"YulFunctionCall","src":"5872:18:31"},"variableNames":[{"name":"tail","nativeSrc":"5864:4:31","nodeType":"YulIdentifier","src":"5864:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5911:9:31","nodeType":"YulIdentifier","src":"5911:9:31"},{"kind":"number","nativeSrc":"5922:1:31","nodeType":"YulLiteral","src":"5922:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5907:3:31","nodeType":"YulIdentifier","src":"5907:3:31"},"nativeSrc":"5907:17:31","nodeType":"YulFunctionCall","src":"5907:17:31"},{"arguments":[{"name":"tail","nativeSrc":"5930:4:31","nodeType":"YulIdentifier","src":"5930:4:31"},{"name":"headStart","nativeSrc":"5936:9:31","nodeType":"YulIdentifier","src":"5936:9:31"}],"functionName":{"name":"sub","nativeSrc":"5926:3:31","nodeType":"YulIdentifier","src":"5926:3:31"},"nativeSrc":"5926:20:31","nodeType":"YulFunctionCall","src":"5926:20:31"}],"functionName":{"name":"mstore","nativeSrc":"5900:6:31","nodeType":"YulIdentifier","src":"5900:6:31"},"nativeSrc":"5900:47:31","nodeType":"YulFunctionCall","src":"5900:47:31"},"nativeSrc":"5900:47:31","nodeType":"YulExpressionStatement","src":"5900:47:31"},{"nativeSrc":"5956:116:31","nodeType":"YulAssignment","src":"5956:116:31","value":{"arguments":[{"name":"value0","nativeSrc":"6058:6:31","nodeType":"YulIdentifier","src":"6058:6:31"},{"name":"tail","nativeSrc":"6067:4:31","nodeType":"YulIdentifier","src":"6067:4:31"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"5964:93:31","nodeType":"YulIdentifier","src":"5964:93:31"},"nativeSrc":"5964:108:31","nodeType":"YulFunctionCall","src":"5964:108:31"},"variableNames":[{"name":"tail","nativeSrc":"5956:4:31","nodeType":"YulIdentifier","src":"5956:4:31"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"5706:373:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5826:9:31","nodeType":"YulTypedName","src":"5826:9:31","type":""},{"name":"value0","nativeSrc":"5838:6:31","nodeType":"YulTypedName","src":"5838:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5849:4:31","nodeType":"YulTypedName","src":"5849:4:31","type":""}],"src":"5706:373:31"},{"body":{"nativeSrc":"6205:859:31","nodeType":"YulBlock","src":"6205:859:31","statements":[{"body":{"nativeSrc":"6251:83:31","nodeType":"YulBlock","src":"6251:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6253:77:31","nodeType":"YulIdentifier","src":"6253:77:31"},"nativeSrc":"6253:79:31","nodeType":"YulFunctionCall","src":"6253:79:31"},"nativeSrc":"6253:79:31","nodeType":"YulExpressionStatement","src":"6253:79:31"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6226:7:31","nodeType":"YulIdentifier","src":"6226:7:31"},{"name":"headStart","nativeSrc":"6235:9:31","nodeType":"YulIdentifier","src":"6235:9:31"}],"functionName":{"name":"sub","nativeSrc":"6222:3:31","nodeType":"YulIdentifier","src":"6222:3:31"},"nativeSrc":"6222:23:31","nodeType":"YulFunctionCall","src":"6222:23:31"},{"kind":"number","nativeSrc":"6247:2:31","nodeType":"YulLiteral","src":"6247:2:31","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"6218:3:31","nodeType":"YulIdentifier","src":"6218:3:31"},"nativeSrc":"6218:32:31","nodeType":"YulFunctionCall","src":"6218:32:31"},"nativeSrc":"6215:119:31","nodeType":"YulIf","src":"6215:119:31"},{"nativeSrc":"6344:287:31","nodeType":"YulBlock","src":"6344:287:31","statements":[{"nativeSrc":"6359:45:31","nodeType":"YulVariableDeclaration","src":"6359:45:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6390:9:31","nodeType":"YulIdentifier","src":"6390:9:31"},{"kind":"number","nativeSrc":"6401:1:31","nodeType":"YulLiteral","src":"6401:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6386:3:31","nodeType":"YulIdentifier","src":"6386:3:31"},"nativeSrc":"6386:17:31","nodeType":"YulFunctionCall","src":"6386:17:31"}],"functionName":{"name":"calldataload","nativeSrc":"6373:12:31","nodeType":"YulIdentifier","src":"6373:12:31"},"nativeSrc":"6373:31:31","nodeType":"YulFunctionCall","src":"6373:31:31"},"variables":[{"name":"offset","nativeSrc":"6363:6:31","nodeType":"YulTypedName","src":"6363:6:31","type":""}]},{"body":{"nativeSrc":"6451:83:31","nodeType":"YulBlock","src":"6451:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6453:77:31","nodeType":"YulIdentifier","src":"6453:77:31"},"nativeSrc":"6453:79:31","nodeType":"YulFunctionCall","src":"6453:79:31"},"nativeSrc":"6453:79:31","nodeType":"YulExpressionStatement","src":"6453:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6423:6:31","nodeType":"YulIdentifier","src":"6423:6:31"},{"kind":"number","nativeSrc":"6431:18:31","nodeType":"YulLiteral","src":"6431:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6420:2:31","nodeType":"YulIdentifier","src":"6420:2:31"},"nativeSrc":"6420:30:31","nodeType":"YulFunctionCall","src":"6420:30:31"},"nativeSrc":"6417:117:31","nodeType":"YulIf","src":"6417:117:31"},{"nativeSrc":"6548:73:31","nodeType":"YulAssignment","src":"6548:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6593:9:31","nodeType":"YulIdentifier","src":"6593:9:31"},{"name":"offset","nativeSrc":"6604:6:31","nodeType":"YulIdentifier","src":"6604:6:31"}],"functionName":{"name":"add","nativeSrc":"6589:3:31","nodeType":"YulIdentifier","src":"6589:3:31"},"nativeSrc":"6589:22:31","nodeType":"YulFunctionCall","src":"6589:22:31"},{"name":"dataEnd","nativeSrc":"6613:7:31","nodeType":"YulIdentifier","src":"6613:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"6558:30:31","nodeType":"YulIdentifier","src":"6558:30:31"},"nativeSrc":"6558:63:31","nodeType":"YulFunctionCall","src":"6558:63:31"},"variableNames":[{"name":"value0","nativeSrc":"6548:6:31","nodeType":"YulIdentifier","src":"6548:6:31"}]}]},{"nativeSrc":"6641:288:31","nodeType":"YulBlock","src":"6641:288:31","statements":[{"nativeSrc":"6656:46:31","nodeType":"YulVariableDeclaration","src":"6656:46:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6687:9:31","nodeType":"YulIdentifier","src":"6687:9:31"},{"kind":"number","nativeSrc":"6698:2:31","nodeType":"YulLiteral","src":"6698:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6683:3:31","nodeType":"YulIdentifier","src":"6683:3:31"},"nativeSrc":"6683:18:31","nodeType":"YulFunctionCall","src":"6683:18:31"}],"functionName":{"name":"calldataload","nativeSrc":"6670:12:31","nodeType":"YulIdentifier","src":"6670:12:31"},"nativeSrc":"6670:32:31","nodeType":"YulFunctionCall","src":"6670:32:31"},"variables":[{"name":"offset","nativeSrc":"6660:6:31","nodeType":"YulTypedName","src":"6660:6:31","type":""}]},{"body":{"nativeSrc":"6749:83:31","nodeType":"YulBlock","src":"6749:83:31","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6751:77:31","nodeType":"YulIdentifier","src":"6751:77:31"},"nativeSrc":"6751:79:31","nodeType":"YulFunctionCall","src":"6751:79:31"},"nativeSrc":"6751:79:31","nodeType":"YulExpressionStatement","src":"6751:79:31"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6721:6:31","nodeType":"YulIdentifier","src":"6721:6:31"},{"kind":"number","nativeSrc":"6729:18:31","nodeType":"YulLiteral","src":"6729:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6718:2:31","nodeType":"YulIdentifier","src":"6718:2:31"},"nativeSrc":"6718:30:31","nodeType":"YulFunctionCall","src":"6718:30:31"},"nativeSrc":"6715:117:31","nodeType":"YulIf","src":"6715:117:31"},{"nativeSrc":"6846:73:31","nodeType":"YulAssignment","src":"6846:73:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6891:9:31","nodeType":"YulIdentifier","src":"6891:9:31"},{"name":"offset","nativeSrc":"6902:6:31","nodeType":"YulIdentifier","src":"6902:6:31"}],"functionName":{"name":"add","nativeSrc":"6887:3:31","nodeType":"YulIdentifier","src":"6887:3:31"},"nativeSrc":"6887:22:31","nodeType":"YulFunctionCall","src":"6887:22:31"},{"name":"dataEnd","nativeSrc":"6911:7:31","nodeType":"YulIdentifier","src":"6911:7:31"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"6856:30:31","nodeType":"YulIdentifier","src":"6856:30:31"},"nativeSrc":"6856:63:31","nodeType":"YulFunctionCall","src":"6856:63:31"},"variableNames":[{"name":"value1","nativeSrc":"6846:6:31","nodeType":"YulIdentifier","src":"6846:6:31"}]}]},{"nativeSrc":"6939:118:31","nodeType":"YulBlock","src":"6939:118:31","statements":[{"nativeSrc":"6954:16:31","nodeType":"YulVariableDeclaration","src":"6954:16:31","value":{"kind":"number","nativeSrc":"6968:2:31","nodeType":"YulLiteral","src":"6968:2:31","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"6958:6:31","nodeType":"YulTypedName","src":"6958:6:31","type":""}]},{"nativeSrc":"6984:63:31","nodeType":"YulAssignment","src":"6984:63:31","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7019:9:31","nodeType":"YulIdentifier","src":"7019:9:31"},{"name":"offset","nativeSrc":"7030:6:31","nodeType":"YulIdentifier","src":"7030:6:31"}],"functionName":{"name":"add","nativeSrc":"7015:3:31","nodeType":"YulIdentifier","src":"7015:3:31"},"nativeSrc":"7015:22:31","nodeType":"YulFunctionCall","src":"7015:22:31"},{"name":"dataEnd","nativeSrc":"7039:7:31","nodeType":"YulIdentifier","src":"7039:7:31"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6994:20:31","nodeType":"YulIdentifier","src":"6994:20:31"},"nativeSrc":"6994:53:31","nodeType":"YulFunctionCall","src":"6994:53:31"},"variableNames":[{"name":"value2","nativeSrc":"6984:6:31","nodeType":"YulIdentifier","src":"6984:6:31"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address","nativeSrc":"6085:979:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6159:9:31","nodeType":"YulTypedName","src":"6159:9:31","type":""},{"name":"dataEnd","nativeSrc":"6170:7:31","nodeType":"YulTypedName","src":"6170:7:31","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6182:6:31","nodeType":"YulTypedName","src":"6182:6:31","type":""},{"name":"value1","nativeSrc":"6190:6:31","nodeType":"YulTypedName","src":"6190:6:31","type":""},{"name":"value2","nativeSrc":"6198:6:31","nodeType":"YulTypedName","src":"6198:6:31","type":""}],"src":"6085:979:31"},{"body":{"nativeSrc":"7129:40:31","nodeType":"YulBlock","src":"7129:40:31","statements":[{"nativeSrc":"7140:22:31","nodeType":"YulAssignment","src":"7140:22:31","value":{"arguments":[{"name":"value","nativeSrc":"7156:5:31","nodeType":"YulIdentifier","src":"7156:5:31"}],"functionName":{"name":"mload","nativeSrc":"7150:5:31","nodeType":"YulIdentifier","src":"7150:5:31"},"nativeSrc":"7150:12:31","nodeType":"YulFunctionCall","src":"7150:12:31"},"variableNames":[{"name":"length","nativeSrc":"7140:6:31","nodeType":"YulIdentifier","src":"7140:6:31"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7070:99:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7112:5:31","nodeType":"YulTypedName","src":"7112:5:31","type":""}],"returnVariables":[{"name":"length","nativeSrc":"7122:6:31","nodeType":"YulTypedName","src":"7122:6:31","type":""}],"src":"7070:99:31"},{"body":{"nativeSrc":"7271:73:31","nodeType":"YulBlock","src":"7271:73:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7288:3:31","nodeType":"YulIdentifier","src":"7288:3:31"},{"name":"length","nativeSrc":"7293:6:31","nodeType":"YulIdentifier","src":"7293:6:31"}],"functionName":{"name":"mstore","nativeSrc":"7281:6:31","nodeType":"YulIdentifier","src":"7281:6:31"},"nativeSrc":"7281:19:31","nodeType":"YulFunctionCall","src":"7281:19:31"},"nativeSrc":"7281:19:31","nodeType":"YulExpressionStatement","src":"7281:19:31"},{"nativeSrc":"7309:29:31","nodeType":"YulAssignment","src":"7309:29:31","value":{"arguments":[{"name":"pos","nativeSrc":"7328:3:31","nodeType":"YulIdentifier","src":"7328:3:31"},{"kind":"number","nativeSrc":"7333:4:31","nodeType":"YulLiteral","src":"7333:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7324:3:31","nodeType":"YulIdentifier","src":"7324:3:31"},"nativeSrc":"7324:14:31","nodeType":"YulFunctionCall","src":"7324:14:31"},"variableNames":[{"name":"updated_pos","nativeSrc":"7309:11:31","nodeType":"YulIdentifier","src":"7309:11:31"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7175:169:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7243:3:31","nodeType":"YulTypedName","src":"7243:3:31","type":""},{"name":"length","nativeSrc":"7248:6:31","nodeType":"YulTypedName","src":"7248:6:31","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"7259:11:31","nodeType":"YulTypedName","src":"7259:11:31","type":""}],"src":"7175:169:31"},{"body":{"nativeSrc":"7412:184:31","nodeType":"YulBlock","src":"7412:184:31","statements":[{"nativeSrc":"7422:10:31","nodeType":"YulVariableDeclaration","src":"7422:10:31","value":{"kind":"number","nativeSrc":"7431:1:31","nodeType":"YulLiteral","src":"7431:1:31","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7426:1:31","nodeType":"YulTypedName","src":"7426:1:31","type":""}]},{"body":{"nativeSrc":"7491:63:31","nodeType":"YulBlock","src":"7491:63:31","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7516:3:31","nodeType":"YulIdentifier","src":"7516:3:31"},{"name":"i","nativeSrc":"7521:1:31","nodeType":"YulIdentifier","src":"7521:1:31"}],"functionName":{"name":"add","nativeSrc":"7512:3:31","nodeType":"YulIdentifier","src":"7512:3:31"},"nativeSrc":"7512:11:31","nodeType":"YulFunctionCall","src":"7512:11:31"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7535:3:31","nodeType":"YulIdentifier","src":"7535:3:31"},{"name":"i","nativeSrc":"7540:1:31","nodeType":"YulIdentifier","src":"7540:1:31"}],"functionName":{"name":"add","nativeSrc":"7531:3:31","nodeType":"YulIdentifier","src":"7531:3:31"},"nativeSrc":"7531:11:31","nodeType":"YulFunctionCall","src":"7531:11:31"}],"functionName":{"name":"mload","nativeSrc":"7525:5:31","nodeType":"YulIdentifier","src":"7525:5:31"},"nativeSrc":"7525:18:31","nodeType":"YulFunctionCall","src":"7525:18:31"}],"functionName":{"name":"mstore","nativeSrc":"7505:6:31","nodeType":"YulIdentifier","src":"7505:6:31"},"nativeSrc":"7505:39:31","nodeType":"YulFunctionCall","src":"7505:39:31"},"nativeSrc":"7505:39:31","nodeType":"YulExpressionStatement","src":"7505:39:31"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7452:1:31","nodeType":"YulIdentifier","src":"7452:1:31"},{"name":"length","nativeSrc":"7455:6:31","nodeType":"YulIdentifier","src":"7455:6:31"}],"functionName":{"name":"lt","nativeSrc":"7449:2:31","nodeType":"YulIdentifier","src":"7449:2:31"},"nativeSrc":"7449:13:31","nodeType":"YulFunctionCall","src":"7449:13:31"},"nativeSrc":"7441:113:31","nodeType":"YulForLoop","post":{"nativeSrc":"7463:19:31","nodeType":"YulBlock","src":"7463:19:31","statements":[{"nativeSrc":"7465:15:31","nodeType":"YulAssignment","src":"7465:15:31","value":{"arguments":[{"name":"i","nativeSrc":"7474:1:31","nodeType":"YulIdentifier","src":"7474:1:31"},{"kind":"number","nativeSrc":"7477:2:31","nodeType":"YulLiteral","src":"7477:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7470:3:31","nodeType":"YulIdentifier","src":"7470:3:31"},"nativeSrc":"7470:10:31","nodeType":"YulFunctionCall","src":"7470:10:31"},"variableNames":[{"name":"i","nativeSrc":"7465:1:31","nodeType":"YulIdentifier","src":"7465:1:31"}]}]},"pre":{"nativeSrc":"7445:3:31","nodeType":"YulBlock","src":"7445:3:31","statements":[]},"src":"7441:113:31"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7574:3:31","nodeType":"YulIdentifier","src":"7574:3:31"},{"name":"length","nativeSrc":"7579:6:31","nodeType":"YulIdentifier","src":"7579:6:31"}],"functionName":{"name":"add","nativeSrc":"7570:3:31","nodeType":"YulIdentifier","src":"7570:3:31"},"nativeSrc":"7570:16:31","nodeType":"YulFunctionCall","src":"7570:16:31"},{"kind":"number","nativeSrc":"7588:1:31","nodeType":"YulLiteral","src":"7588:1:31","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7563:6:31","nodeType":"YulIdentifier","src":"7563:6:31"},"nativeSrc":"7563:27:31","nodeType":"YulFunctionCall","src":"7563:27:31"},"nativeSrc":"7563:27:31","nodeType":"YulExpressionStatement","src":"7563:27:31"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7350:246:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7394:3:31","nodeType":"YulTypedName","src":"7394:3:31","type":""},{"name":"dst","nativeSrc":"7399:3:31","nodeType":"YulTypedName","src":"7399:3:31","type":""},{"name":"length","nativeSrc":"7404:6:31","nodeType":"YulTypedName","src":"7404:6:31","type":""}],"src":"7350:246:31"},{"body":{"nativeSrc":"7694:285:31","nodeType":"YulBlock","src":"7694:285:31","statements":[{"nativeSrc":"7704:53:31","nodeType":"YulVariableDeclaration","src":"7704:53:31","value":{"arguments":[{"name":"value","nativeSrc":"7751:5:31","nodeType":"YulIdentifier","src":"7751:5:31"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7718:32:31","nodeType":"YulIdentifier","src":"7718:32:31"},"nativeSrc":"7718:39:31","nodeType":"YulFunctionCall","src":"7718:39:31"},"variables":[{"name":"length","nativeSrc":"7708:6:31","nodeType":"YulTypedName","src":"7708:6:31","type":""}]},{"nativeSrc":"7766:78:31","nodeType":"YulAssignment","src":"7766:78:31","value":{"arguments":[{"name":"pos","nativeSrc":"7832:3:31","nodeType":"YulIdentifier","src":"7832:3:31"},{"name":"length","nativeSrc":"7837:6:31","nodeType":"YulIdentifier","src":"7837:6:31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7773:58:31","nodeType":"YulIdentifier","src":"7773:58:31"},"nativeSrc":"7773:71:31","nodeType":"YulFunctionCall","src":"7773:71:31"},"variableNames":[{"name":"pos","nativeSrc":"7766:3:31","nodeType":"YulIdentifier","src":"7766:3:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7892:5:31","nodeType":"YulIdentifier","src":"7892:5:31"},{"kind":"number","nativeSrc":"7899:4:31","nodeType":"YulLiteral","src":"7899:4:31","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7888:3:31","nodeType":"YulIdentifier","src":"7888:3:31"},"nativeSrc":"7888:16:31","nodeType":"YulFunctionCall","src":"7888:16:31"},{"name":"pos","nativeSrc":"7906:3:31","nodeType":"YulIdentifier","src":"7906:3:31"},{"name":"length","nativeSrc":"7911:6:31","nodeType":"YulIdentifier","src":"7911:6:31"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7853:34:31","nodeType":"YulIdentifier","src":"7853:34:31"},"nativeSrc":"7853:65:31","nodeType":"YulFunctionCall","src":"7853:65:31"},"nativeSrc":"7853:65:31","nodeType":"YulExpressionStatement","src":"7853:65:31"},{"nativeSrc":"7927:46:31","nodeType":"YulAssignment","src":"7927:46:31","value":{"arguments":[{"name":"pos","nativeSrc":"7938:3:31","nodeType":"YulIdentifier","src":"7938:3:31"},{"arguments":[{"name":"length","nativeSrc":"7965:6:31","nodeType":"YulIdentifier","src":"7965:6:31"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7943:21:31","nodeType":"YulIdentifier","src":"7943:21:31"},"nativeSrc":"7943:29:31","nodeType":"YulFunctionCall","src":"7943:29:31"}],"functionName":{"name":"add","nativeSrc":"7934:3:31","nodeType":"YulIdentifier","src":"7934:3:31"},"nativeSrc":"7934:39:31","nodeType":"YulFunctionCall","src":"7934:39:31"},"variableNames":[{"name":"end","nativeSrc":"7927:3:31","nodeType":"YulIdentifier","src":"7927:3:31"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7602:377:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7675:5:31","nodeType":"YulTypedName","src":"7675:5:31","type":""},{"name":"pos","nativeSrc":"7682:3:31","nodeType":"YulTypedName","src":"7682:3:31","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7690:3:31","nodeType":"YulTypedName","src":"7690:3:31","type":""}],"src":"7602:377:31"},{"body":{"nativeSrc":"8131:277:31","nodeType":"YulBlock","src":"8131:277:31","statements":[{"nativeSrc":"8141:26:31","nodeType":"YulAssignment","src":"8141:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"8153:9:31","nodeType":"YulIdentifier","src":"8153:9:31"},{"kind":"number","nativeSrc":"8164:2:31","nodeType":"YulLiteral","src":"8164:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8149:3:31","nodeType":"YulIdentifier","src":"8149:3:31"},"nativeSrc":"8149:18:31","nodeType":"YulFunctionCall","src":"8149:18:31"},"variableNames":[{"name":"tail","nativeSrc":"8141:4:31","nodeType":"YulIdentifier","src":"8141:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8188:9:31","nodeType":"YulIdentifier","src":"8188:9:31"},{"kind":"number","nativeSrc":"8199:1:31","nodeType":"YulLiteral","src":"8199:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8184:3:31","nodeType":"YulIdentifier","src":"8184:3:31"},"nativeSrc":"8184:17:31","nodeType":"YulFunctionCall","src":"8184:17:31"},{"arguments":[{"name":"tail","nativeSrc":"8207:4:31","nodeType":"YulIdentifier","src":"8207:4:31"},{"name":"headStart","nativeSrc":"8213:9:31","nodeType":"YulIdentifier","src":"8213:9:31"}],"functionName":{"name":"sub","nativeSrc":"8203:3:31","nodeType":"YulIdentifier","src":"8203:3:31"},"nativeSrc":"8203:20:31","nodeType":"YulFunctionCall","src":"8203:20:31"}],"functionName":{"name":"mstore","nativeSrc":"8177:6:31","nodeType":"YulIdentifier","src":"8177:6:31"},"nativeSrc":"8177:47:31","nodeType":"YulFunctionCall","src":"8177:47:31"},"nativeSrc":"8177:47:31","nodeType":"YulExpressionStatement","src":"8177:47:31"},{"nativeSrc":"8233:86:31","nodeType":"YulAssignment","src":"8233:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"8305:6:31","nodeType":"YulIdentifier","src":"8305:6:31"},{"name":"tail","nativeSrc":"8314:4:31","nodeType":"YulIdentifier","src":"8314:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8241:63:31","nodeType":"YulIdentifier","src":"8241:63:31"},"nativeSrc":"8241:78:31","nodeType":"YulFunctionCall","src":"8241:78:31"},"variableNames":[{"name":"tail","nativeSrc":"8233:4:31","nodeType":"YulIdentifier","src":"8233:4:31"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"8373:6:31","nodeType":"YulIdentifier","src":"8373:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"8386:9:31","nodeType":"YulIdentifier","src":"8386:9:31"},{"kind":"number","nativeSrc":"8397:2:31","nodeType":"YulLiteral","src":"8397:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8382:3:31","nodeType":"YulIdentifier","src":"8382:3:31"},"nativeSrc":"8382:18:31","nodeType":"YulFunctionCall","src":"8382:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8329:43:31","nodeType":"YulIdentifier","src":"8329:43:31"},"nativeSrc":"8329:72:31","nodeType":"YulFunctionCall","src":"8329:72:31"},"nativeSrc":"8329:72:31","nodeType":"YulExpressionStatement","src":"8329:72:31"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed","nativeSrc":"7985:423:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8095:9:31","nodeType":"YulTypedName","src":"8095:9:31","type":""},{"name":"value1","nativeSrc":"8107:6:31","nodeType":"YulTypedName","src":"8107:6:31","type":""},{"name":"value0","nativeSrc":"8115:6:31","nodeType":"YulTypedName","src":"8115:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8126:4:31","nodeType":"YulTypedName","src":"8126:4:31","type":""}],"src":"7985:423:31"},{"body":{"nativeSrc":"8532:195:31","nodeType":"YulBlock","src":"8532:195:31","statements":[{"nativeSrc":"8542:26:31","nodeType":"YulAssignment","src":"8542:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"8554:9:31","nodeType":"YulIdentifier","src":"8554:9:31"},{"kind":"number","nativeSrc":"8565:2:31","nodeType":"YulLiteral","src":"8565:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8550:3:31","nodeType":"YulIdentifier","src":"8550:3:31"},"nativeSrc":"8550:18:31","nodeType":"YulFunctionCall","src":"8550:18:31"},"variableNames":[{"name":"tail","nativeSrc":"8542:4:31","nodeType":"YulIdentifier","src":"8542:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8589:9:31","nodeType":"YulIdentifier","src":"8589:9:31"},{"kind":"number","nativeSrc":"8600:1:31","nodeType":"YulLiteral","src":"8600:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8585:3:31","nodeType":"YulIdentifier","src":"8585:3:31"},"nativeSrc":"8585:17:31","nodeType":"YulFunctionCall","src":"8585:17:31"},{"arguments":[{"name":"tail","nativeSrc":"8608:4:31","nodeType":"YulIdentifier","src":"8608:4:31"},{"name":"headStart","nativeSrc":"8614:9:31","nodeType":"YulIdentifier","src":"8614:9:31"}],"functionName":{"name":"sub","nativeSrc":"8604:3:31","nodeType":"YulIdentifier","src":"8604:3:31"},"nativeSrc":"8604:20:31","nodeType":"YulFunctionCall","src":"8604:20:31"}],"functionName":{"name":"mstore","nativeSrc":"8578:6:31","nodeType":"YulIdentifier","src":"8578:6:31"},"nativeSrc":"8578:47:31","nodeType":"YulFunctionCall","src":"8578:47:31"},"nativeSrc":"8578:47:31","nodeType":"YulExpressionStatement","src":"8578:47:31"},{"nativeSrc":"8634:86:31","nodeType":"YulAssignment","src":"8634:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"8706:6:31","nodeType":"YulIdentifier","src":"8706:6:31"},{"name":"tail","nativeSrc":"8715:4:31","nodeType":"YulIdentifier","src":"8715:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8642:63:31","nodeType":"YulIdentifier","src":"8642:63:31"},"nativeSrc":"8642:78:31","nodeType":"YulFunctionCall","src":"8642:78:31"},"variableNames":[{"name":"tail","nativeSrc":"8634:4:31","nodeType":"YulIdentifier","src":"8634:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8414:313:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8504:9:31","nodeType":"YulTypedName","src":"8504:9:31","type":""},{"name":"value0","nativeSrc":"8516:6:31","nodeType":"YulTypedName","src":"8516:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8527:4:31","nodeType":"YulTypedName","src":"8527:4:31","type":""}],"src":"8414:313:31"},{"body":{"nativeSrc":"8927:430:31","nodeType":"YulBlock","src":"8927:430:31","statements":[{"nativeSrc":"8937:26:31","nodeType":"YulAssignment","src":"8937:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"8949:9:31","nodeType":"YulIdentifier","src":"8949:9:31"},{"kind":"number","nativeSrc":"8960:2:31","nodeType":"YulLiteral","src":"8960:2:31","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8945:3:31","nodeType":"YulIdentifier","src":"8945:3:31"},"nativeSrc":"8945:18:31","nodeType":"YulFunctionCall","src":"8945:18:31"},"variableNames":[{"name":"tail","nativeSrc":"8937:4:31","nodeType":"YulIdentifier","src":"8937:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8984:9:31","nodeType":"YulIdentifier","src":"8984:9:31"},{"kind":"number","nativeSrc":"8995:1:31","nodeType":"YulLiteral","src":"8995:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8980:3:31","nodeType":"YulIdentifier","src":"8980:3:31"},"nativeSrc":"8980:17:31","nodeType":"YulFunctionCall","src":"8980:17:31"},{"arguments":[{"name":"tail","nativeSrc":"9003:4:31","nodeType":"YulIdentifier","src":"9003:4:31"},{"name":"headStart","nativeSrc":"9009:9:31","nodeType":"YulIdentifier","src":"9009:9:31"}],"functionName":{"name":"sub","nativeSrc":"8999:3:31","nodeType":"YulIdentifier","src":"8999:3:31"},"nativeSrc":"8999:20:31","nodeType":"YulFunctionCall","src":"8999:20:31"}],"functionName":{"name":"mstore","nativeSrc":"8973:6:31","nodeType":"YulIdentifier","src":"8973:6:31"},"nativeSrc":"8973:47:31","nodeType":"YulFunctionCall","src":"8973:47:31"},"nativeSrc":"8973:47:31","nodeType":"YulExpressionStatement","src":"8973:47:31"},{"nativeSrc":"9029:86:31","nodeType":"YulAssignment","src":"9029:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"9101:6:31","nodeType":"YulIdentifier","src":"9101:6:31"},{"name":"tail","nativeSrc":"9110:4:31","nodeType":"YulIdentifier","src":"9110:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9037:63:31","nodeType":"YulIdentifier","src":"9037:63:31"},"nativeSrc":"9037:78:31","nodeType":"YulFunctionCall","src":"9037:78:31"},"variableNames":[{"name":"tail","nativeSrc":"9029:4:31","nodeType":"YulIdentifier","src":"9029:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9136:9:31","nodeType":"YulIdentifier","src":"9136:9:31"},{"kind":"number","nativeSrc":"9147:2:31","nodeType":"YulLiteral","src":"9147:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9132:3:31","nodeType":"YulIdentifier","src":"9132:3:31"},"nativeSrc":"9132:18:31","nodeType":"YulFunctionCall","src":"9132:18:31"},{"arguments":[{"name":"tail","nativeSrc":"9156:4:31","nodeType":"YulIdentifier","src":"9156:4:31"},{"name":"headStart","nativeSrc":"9162:9:31","nodeType":"YulIdentifier","src":"9162:9:31"}],"functionName":{"name":"sub","nativeSrc":"9152:3:31","nodeType":"YulIdentifier","src":"9152:3:31"},"nativeSrc":"9152:20:31","nodeType":"YulFunctionCall","src":"9152:20:31"}],"functionName":{"name":"mstore","nativeSrc":"9125:6:31","nodeType":"YulIdentifier","src":"9125:6:31"},"nativeSrc":"9125:48:31","nodeType":"YulFunctionCall","src":"9125:48:31"},"nativeSrc":"9125:48:31","nodeType":"YulExpressionStatement","src":"9125:48:31"},{"nativeSrc":"9182:86:31","nodeType":"YulAssignment","src":"9182:86:31","value":{"arguments":[{"name":"value1","nativeSrc":"9254:6:31","nodeType":"YulIdentifier","src":"9254:6:31"},{"name":"tail","nativeSrc":"9263:4:31","nodeType":"YulIdentifier","src":"9263:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9190:63:31","nodeType":"YulIdentifier","src":"9190:63:31"},"nativeSrc":"9190:78:31","nodeType":"YulFunctionCall","src":"9190:78:31"},"variableNames":[{"name":"tail","nativeSrc":"9182:4:31","nodeType":"YulIdentifier","src":"9182:4:31"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"9322:6:31","nodeType":"YulIdentifier","src":"9322:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"9335:9:31","nodeType":"YulIdentifier","src":"9335:9:31"},{"kind":"number","nativeSrc":"9346:2:31","nodeType":"YulLiteral","src":"9346:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9331:3:31","nodeType":"YulIdentifier","src":"9331:3:31"},"nativeSrc":"9331:18:31","nodeType":"YulFunctionCall","src":"9331:18:31"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9278:43:31","nodeType":"YulIdentifier","src":"9278:43:31"},"nativeSrc":"9278:72:31","nodeType":"YulFunctionCall","src":"9278:72:31"},"nativeSrc":"9278:72:31","nodeType":"YulExpressionStatement","src":"9278:72:31"}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed","nativeSrc":"8733:624:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8883:9:31","nodeType":"YulTypedName","src":"8883:9:31","type":""},{"name":"value2","nativeSrc":"8895:6:31","nodeType":"YulTypedName","src":"8895:6:31","type":""},{"name":"value1","nativeSrc":"8903:6:31","nodeType":"YulTypedName","src":"8903:6:31","type":""},{"name":"value0","nativeSrc":"8911:6:31","nodeType":"YulTypedName","src":"8911:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8922:4:31","nodeType":"YulTypedName","src":"8922:4:31","type":""}],"src":"8733:624:31"},{"body":{"nativeSrc":"9529:348:31","nodeType":"YulBlock","src":"9529:348:31","statements":[{"nativeSrc":"9539:26:31","nodeType":"YulAssignment","src":"9539:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"9551:9:31","nodeType":"YulIdentifier","src":"9551:9:31"},{"kind":"number","nativeSrc":"9562:2:31","nodeType":"YulLiteral","src":"9562:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9547:3:31","nodeType":"YulIdentifier","src":"9547:3:31"},"nativeSrc":"9547:18:31","nodeType":"YulFunctionCall","src":"9547:18:31"},"variableNames":[{"name":"tail","nativeSrc":"9539:4:31","nodeType":"YulIdentifier","src":"9539:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9586:9:31","nodeType":"YulIdentifier","src":"9586:9:31"},{"kind":"number","nativeSrc":"9597:1:31","nodeType":"YulLiteral","src":"9597:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9582:3:31","nodeType":"YulIdentifier","src":"9582:3:31"},"nativeSrc":"9582:17:31","nodeType":"YulFunctionCall","src":"9582:17:31"},{"arguments":[{"name":"tail","nativeSrc":"9605:4:31","nodeType":"YulIdentifier","src":"9605:4:31"},{"name":"headStart","nativeSrc":"9611:9:31","nodeType":"YulIdentifier","src":"9611:9:31"}],"functionName":{"name":"sub","nativeSrc":"9601:3:31","nodeType":"YulIdentifier","src":"9601:3:31"},"nativeSrc":"9601:20:31","nodeType":"YulFunctionCall","src":"9601:20:31"}],"functionName":{"name":"mstore","nativeSrc":"9575:6:31","nodeType":"YulIdentifier","src":"9575:6:31"},"nativeSrc":"9575:47:31","nodeType":"YulFunctionCall","src":"9575:47:31"},"nativeSrc":"9575:47:31","nodeType":"YulExpressionStatement","src":"9575:47:31"},{"nativeSrc":"9631:86:31","nodeType":"YulAssignment","src":"9631:86:31","value":{"arguments":[{"name":"value0","nativeSrc":"9703:6:31","nodeType":"YulIdentifier","src":"9703:6:31"},{"name":"tail","nativeSrc":"9712:4:31","nodeType":"YulIdentifier","src":"9712:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9639:63:31","nodeType":"YulIdentifier","src":"9639:63:31"},"nativeSrc":"9639:78:31","nodeType":"YulFunctionCall","src":"9639:78:31"},"variableNames":[{"name":"tail","nativeSrc":"9631:4:31","nodeType":"YulIdentifier","src":"9631:4:31"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9738:9:31","nodeType":"YulIdentifier","src":"9738:9:31"},{"kind":"number","nativeSrc":"9749:2:31","nodeType":"YulLiteral","src":"9749:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9734:3:31","nodeType":"YulIdentifier","src":"9734:3:31"},"nativeSrc":"9734:18:31","nodeType":"YulFunctionCall","src":"9734:18:31"},{"arguments":[{"name":"tail","nativeSrc":"9758:4:31","nodeType":"YulIdentifier","src":"9758:4:31"},{"name":"headStart","nativeSrc":"9764:9:31","nodeType":"YulIdentifier","src":"9764:9:31"}],"functionName":{"name":"sub","nativeSrc":"9754:3:31","nodeType":"YulIdentifier","src":"9754:3:31"},"nativeSrc":"9754:20:31","nodeType":"YulFunctionCall","src":"9754:20:31"}],"functionName":{"name":"mstore","nativeSrc":"9727:6:31","nodeType":"YulIdentifier","src":"9727:6:31"},"nativeSrc":"9727:48:31","nodeType":"YulFunctionCall","src":"9727:48:31"},"nativeSrc":"9727:48:31","nodeType":"YulExpressionStatement","src":"9727:48:31"},{"nativeSrc":"9784:86:31","nodeType":"YulAssignment","src":"9784:86:31","value":{"arguments":[{"name":"value1","nativeSrc":"9856:6:31","nodeType":"YulIdentifier","src":"9856:6:31"},{"name":"tail","nativeSrc":"9865:4:31","nodeType":"YulIdentifier","src":"9865:4:31"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"9792:63:31","nodeType":"YulIdentifier","src":"9792:63:31"},"nativeSrc":"9792:78:31","nodeType":"YulFunctionCall","src":"9792:78:31"},"variableNames":[{"name":"tail","nativeSrc":"9784:4:31","nodeType":"YulIdentifier","src":"9784:4:31"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9363:514:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9493:9:31","nodeType":"YulTypedName","src":"9493:9:31","type":""},{"name":"value1","nativeSrc":"9505:6:31","nodeType":"YulTypedName","src":"9505:6:31","type":""},{"name":"value0","nativeSrc":"9513:6:31","nodeType":"YulTypedName","src":"9513:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9524:4:31","nodeType":"YulTypedName","src":"9524:4:31","type":""}],"src":"9363:514:31"},{"body":{"nativeSrc":"9928:32:31","nodeType":"YulBlock","src":"9928:32:31","statements":[{"nativeSrc":"9938:16:31","nodeType":"YulAssignment","src":"9938:16:31","value":{"name":"value","nativeSrc":"9949:5:31","nodeType":"YulIdentifier","src":"9949:5:31"},"variableNames":[{"name":"cleaned","nativeSrc":"9938:7:31","nodeType":"YulIdentifier","src":"9938:7:31"}]}]},"name":"cleanup_t_uint256","nativeSrc":"9883:77:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9910:5:31","nodeType":"YulTypedName","src":"9910:5:31","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"9920:7:31","nodeType":"YulTypedName","src":"9920:7:31","type":""}],"src":"9883:77:31"},{"body":{"nativeSrc":"10031:53:31","nodeType":"YulBlock","src":"10031:53:31","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10048:3:31","nodeType":"YulIdentifier","src":"10048:3:31"},{"arguments":[{"name":"value","nativeSrc":"10071:5:31","nodeType":"YulIdentifier","src":"10071:5:31"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10053:17:31","nodeType":"YulIdentifier","src":"10053:17:31"},"nativeSrc":"10053:24:31","nodeType":"YulFunctionCall","src":"10053:24:31"}],"functionName":{"name":"mstore","nativeSrc":"10041:6:31","nodeType":"YulIdentifier","src":"10041:6:31"},"nativeSrc":"10041:37:31","nodeType":"YulFunctionCall","src":"10041:37:31"},"nativeSrc":"10041:37:31","nodeType":"YulExpressionStatement","src":"10041:37:31"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"9966:118:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10019:5:31","nodeType":"YulTypedName","src":"10019:5:31","type":""},{"name":"pos","nativeSrc":"10026:3:31","nodeType":"YulTypedName","src":"10026:3:31","type":""}],"src":"9966:118:31"},{"body":{"nativeSrc":"10216:206:31","nodeType":"YulBlock","src":"10216:206:31","statements":[{"nativeSrc":"10226:26:31","nodeType":"YulAssignment","src":"10226:26:31","value":{"arguments":[{"name":"headStart","nativeSrc":"10238:9:31","nodeType":"YulIdentifier","src":"10238:9:31"},{"kind":"number","nativeSrc":"10249:2:31","nodeType":"YulLiteral","src":"10249:2:31","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10234:3:31","nodeType":"YulIdentifier","src":"10234:3:31"},"nativeSrc":"10234:18:31","nodeType":"YulFunctionCall","src":"10234:18:31"},"variableNames":[{"name":"tail","nativeSrc":"10226:4:31","nodeType":"YulIdentifier","src":"10226:4:31"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10306:6:31","nodeType":"YulIdentifier","src":"10306:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"10319:9:31","nodeType":"YulIdentifier","src":"10319:9:31"},{"kind":"number","nativeSrc":"10330:1:31","nodeType":"YulLiteral","src":"10330:1:31","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10315:3:31","nodeType":"YulIdentifier","src":"10315:3:31"},"nativeSrc":"10315:17:31","nodeType":"YulFunctionCall","src":"10315:17:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10262:43:31","nodeType":"YulIdentifier","src":"10262:43:31"},"nativeSrc":"10262:71:31","nodeType":"YulFunctionCall","src":"10262:71:31"},"nativeSrc":"10262:71:31","nodeType":"YulExpressionStatement","src":"10262:71:31"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10387:6:31","nodeType":"YulIdentifier","src":"10387:6:31"},{"arguments":[{"name":"headStart","nativeSrc":"10400:9:31","nodeType":"YulIdentifier","src":"10400:9:31"},{"kind":"number","nativeSrc":"10411:2:31","nodeType":"YulLiteral","src":"10411:2:31","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10396:3:31","nodeType":"YulIdentifier","src":"10396:3:31"},"nativeSrc":"10396:18:31","nodeType":"YulFunctionCall","src":"10396:18:31"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10343:43:31","nodeType":"YulIdentifier","src":"10343:43:31"},"nativeSrc":"10343:72:31","nodeType":"YulFunctionCall","src":"10343:72:31"},"nativeSrc":"10343:72:31","nodeType":"YulExpressionStatement","src":"10343:72:31"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10090:332:31","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10180:9:31","nodeType":"YulTypedName","src":"10180:9:31","type":""},{"name":"value1","nativeSrc":"10192:6:31","nodeType":"YulTypedName","src":"10192:6:31","type":""},{"name":"value0","nativeSrc":"10200:6:31","nodeType":"YulTypedName","src":"10200:6:31","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10211:4:31","nodeType":"YulTypedName","src":"10211:4:31","type":""}],"src":"10090:332:31"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":31,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10252":[{"length":32,"start":281},{"length":32,"start":859}],"10254":[{"length":32,"start":322},{"length":32,"start":676}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c80633feb0e8d1461006757806342d648e314610085578063dd40bb62146100a1578063e3fa9df8146100bf578063e585bcd5146100dd578063f323b896146100f9575b600080fd5b61006f610117565b60405161007c919061069b565b60405180910390f35b61009f600480360381019061009a919061083c565b61013b565b005b6100a96102a2565b6040516100b6919061069b565b60405180910390f35b6100c76102c6565b6040516100d49190610956565b60405180910390f35b6100f760048036038101906100f29190610978565b610354565b005b6101016104c0565b60405161010e9190610956565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60006101667f000000000000000000000000000000000000000000000000000000000000000061054e565b90508073ffffffffffffffffffffffffffffffffffffffff16637ab4339d84846040518363ffffffff1660e01b81526004016101a3929190610a82565b600060405180830381600087803b1580156101bd57600080fd5b505af11580156101d1573d6000803e3d6000fd5b505050506001819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f6dc85245364361a3417062b03ad416cbd908d1ac5d9ef4a123faedf2bfcfd055856040516102959190610ab2565b60405180910390a3505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600080548060200260200160405190810160405280929190818152602001828054801561034a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610300575b5050505050905090565b600061037f7f000000000000000000000000000000000000000000000000000000000000000061054e565b90508073ffffffffffffffffffffffffffffffffffffffff1663077f224a8585856040518463ffffffff1660e01b81526004016103be93929190610ad4565b600060405180830381600087803b1580156103d857600080fd5b505af11580156103ec573d6000803e3d6000fd5b505050506000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f7c8df6f7372bc8af86e2ff1c2b0aceb2f8717cca6a7a996f45f60276f878ab4086866040516104b2929190610b19565b60405180910390a350505050565b6060600180548060200260200160405190810160405280929190818152602001828054801561054457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104fa575b5050505050905090565b600061055b826000610562565b9050919050565b6000814710156105ab5747826040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016105a2929190610b69565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610654576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106858261065a565b9050919050565b6106958161067a565b82525050565b60006020820190506106b0600083018461068c565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61071d826106d4565b810181811067ffffffffffffffff8211171561073c5761073b6106e5565b5b80604052505050565b600061074f6106b6565b905061075b8282610714565b919050565b600067ffffffffffffffff82111561077b5761077a6106e5565b5b610784826106d4565b9050602081019050919050565b82818337600083830152505050565b60006107b36107ae84610760565b610745565b9050828152602081018484840111156107cf576107ce6106cf565b5b6107da848285610791565b509392505050565b600082601f8301126107f7576107f66106ca565b5b81356108078482602086016107a0565b91505092915050565b6108198161067a565b811461082457600080fd5b50565b60008135905061083681610810565b92915050565b60008060408385031215610853576108526106c0565b5b600083013567ffffffffffffffff811115610871576108706106c5565b5b61087d858286016107e2565b925050602061088e85828601610827565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6108cd8161067a565b82525050565b60006108df83836108c4565b60208301905092915050565b6000602082019050919050565b600061090382610898565b61090d81856108a3565b9350610918836108b4565b8060005b8381101561094957815161093088826108d3565b975061093b836108eb565b92505060018101905061091c565b5085935050505092915050565b6000602082019050818103600083015261097081846108f8565b905092915050565b600080600060608486031215610991576109906106c0565b5b600084013567ffffffffffffffff8111156109af576109ae6106c5565b5b6109bb868287016107e2565b935050602084013567ffffffffffffffff8111156109dc576109db6106c5565b5b6109e8868287016107e2565b92505060406109f986828701610827565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a3d578082015181840152602081019050610a22565b60008484015250505050565b6000610a5482610a03565b610a5e8185610a0e565b9350610a6e818560208601610a1f565b610a77816106d4565b840191505092915050565b60006040820190508181036000830152610a9c8185610a49565b9050610aab602083018461068c565b9392505050565b60006020820190508181036000830152610acc8184610a49565b905092915050565b60006060820190508181036000830152610aee8186610a49565b90508181036020830152610b028185610a49565b9050610b11604083018461068c565b949350505050565b60006040820190508181036000830152610b338185610a49565b90508181036020830152610b478184610a49565b90509392505050565b6000819050919050565b610b6381610b50565b82525050565b6000604082019050610b7e6000830185610b5a565b610b8b6020830184610b5a565b939250505056fea2646970667358221220b25fce66a8035e970c0f3d5ebc4d24003ce33b4637d2c9b3d65950d979c7945264736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3FEB0E8D EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x42D648E3 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xDD40BB62 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xE3FA9DF8 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0xE585BCD5 EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0xF323B896 EQ PUSH2 0xF9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x13B JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB6 SWAP2 SWAP1 PUSH2 0x69B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC7 PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF2 SWAP2 SWAP1 PUSH2 0x978 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x101 PUSH2 0x4C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166 PUSH32 0x0 PUSH2 0x54E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7AB4339D DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3 SWAP3 SWAP2 SWAP1 PUSH2 0xA82 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6DC85245364361A3417062B03AD416CBD908D1AC5D9EF4A123FAEDF2BFCFD055 DUP6 PUSH1 0x40 MLOAD PUSH2 0x295 SWAP2 SWAP1 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x300 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F PUSH32 0x0 PUSH2 0x54E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x77F224A DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7C8DF6F7372BC8AF86E2FF1C2B0ACEB2F8717CCA6A7A996F45F60276F878AB40 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x544 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4FA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH1 0x0 PUSH2 0x562 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SELFBALANCE LT ISZERO PUSH2 0x5AB JUMPI SELFBALANCE DUP3 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A2 SWAP3 SWAP2 SWAP1 PUSH2 0xB69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH23 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000 DUP4 PUSH1 0x60 SHL PUSH1 0xE8 SHR OR PUSH1 0x0 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 DUP4 PUSH1 0x78 SHL OR PUSH1 0x20 MSTORE PUSH1 0x37 PUSH1 0x9 DUP4 CREATE SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x654 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB06EBF3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x685 DUP3 PUSH2 0x65A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x695 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x71D DUP3 PUSH2 0x6D4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x73C JUMPI PUSH2 0x73B PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74F PUSH2 0x6B6 JUMP JUMPDEST SWAP1 POP PUSH2 0x75B DUP3 DUP3 PUSH2 0x714 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST PUSH2 0x784 DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B3 PUSH2 0x7AE DUP5 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x745 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x7CF JUMPI PUSH2 0x7CE PUSH2 0x6CF JUMP JUMPDEST JUMPDEST PUSH2 0x7DA DUP5 DUP3 DUP6 PUSH2 0x791 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7F7 JUMPI PUSH2 0x7F6 PUSH2 0x6CA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x807 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x67A JUMP JUMPDEST DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x836 DUP2 PUSH2 0x810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x853 JUMPI PUSH2 0x852 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0x6C5 JUMP JUMPDEST JUMPDEST PUSH2 0x87D DUP6 DUP3 DUP7 ADD PUSH2 0x7E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x88E DUP6 DUP3 DUP7 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x67A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DF DUP4 DUP4 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x903 DUP3 PUSH2 0x898 JUMP JUMPDEST PUSH2 0x90D DUP2 DUP6 PUSH2 0x8A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x918 DUP4 PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x949 JUMPI DUP2 MLOAD PUSH2 0x930 DUP9 DUP3 PUSH2 0x8D3 JUMP JUMPDEST SWAP8 POP PUSH2 0x93B DUP4 PUSH2 0x8EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x91C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x970 DUP2 DUP5 PUSH2 0x8F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x991 JUMPI PUSH2 0x990 PUSH2 0x6C0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9AF JUMPI PUSH2 0x9AE PUSH2 0x6C5 JUMP JUMPDEST JUMPDEST PUSH2 0x9BB DUP7 DUP3 DUP8 ADD PUSH2 0x7E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9DC JUMPI PUSH2 0x9DB PUSH2 0x6C5 JUMP JUMPDEST JUMPDEST PUSH2 0x9E8 DUP7 DUP3 DUP8 ADD PUSH2 0x7E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x9F9 DUP7 DUP3 DUP8 ADD PUSH2 0x827 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA54 DUP3 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0xA5E DUP2 DUP6 PUSH2 0xA0E JUMP JUMPDEST SWAP4 POP PUSH2 0xA6E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA1F JUMP JUMPDEST PUSH2 0xA77 DUP2 PUSH2 0x6D4 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA9C DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP PUSH2 0xAAB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACC DUP2 DUP5 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xAEE DUP2 DUP7 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB02 DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP PUSH2 0xB11 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP6 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB47 DUP2 DUP5 PUSH2 0xA49 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB63 DUP2 PUSH2 0xB50 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB7E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0xB8B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB5A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 PUSH0 0xCE PUSH7 0xA8035E970C0F3D MCOPY 0xBC 0x4D 0x24 STOP EXTCODECOPY 0xE3 EXTCODESIZE CHAINID CALLDATACOPY 0xD2 0xC9 0xB3 0xD6 MSIZE POP 0xD9 PUSH26 0xC7945264736F6C63430008180033000000000000000000000000 ","sourceMap":"169:1558:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;195:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1196:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;254:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1487:119;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;849:341;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1612:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;195:53;;;:::o;1196:285::-;1276:13;1292:39;1305:25;1292:12;:39::i;:::-;1276:55;;1353:5;1341:29;;;1371:3;1376:5;1341:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:17;1415:5;1392:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1468:5;1436:38;;1456:5;1436:38;;;1463:3;1436:38;;;;;;:::i;:::-;;;;;;;;1266:215;1196:285;;:::o;254:50::-;;;:::o;1487:119::-;1544:16;1579:20;1572:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1487:119;:::o;849:341::-;955:13;971:42;984:28;971:12;:42::i;:::-;955:58;;1038:5;1023:32;;;1056:4;1062:6;1070:5;1023:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:20;1112:5;1086:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1177:5;1133:50;;1156:5;1133:50;;;1163:4;1169:6;1133:50;;;;;;;:::i;:::-;;;;;;;;945:245;849:341;;;:::o;1612:113::-;1666:16;1701:17;1694:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1612:113;:::o;1405:123:7:-;1462:16;1497:24;1503:14;1519:1;1497:5;:24::i;:::-;1490:31;;1405:123;;;:::o;2255:910::-;2327:16;2383:5;2359:21;:29;2355:123;;;2438:21;2461:5;2411:56;;;;;;;;;;;;:::i;:::-;;;;;;;;2355:123;2764:48;2746:14;2740:4;2736:25;2730:4;2726:36;2723:90;2717:4;2710:104;2971:32;2954:14;2948:4;2944:25;2941:63;2935:4;2928:77;3050:4;3044;3037:5;3030:25;3018:37;;3098:1;3078:22;;:8;:22;;;3074:85;;3123:25;;;;;;;;;;;;;;3074:85;2255:910;;;;:::o;7:126:31:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:117;1029:1;1026;1019:12;1043:117;1152:1;1149;1142:12;1166:102;1207:6;1258:2;1254:7;1249:2;1242:5;1238:14;1234:28;1224:38;;1166:102;;;:::o;1274:180::-;1322:77;1319:1;1312:88;1419:4;1416:1;1409:15;1443:4;1440:1;1433:15;1460:281;1543:27;1565:4;1543:27;:::i;:::-;1535:6;1531:40;1673:6;1661:10;1658:22;1637:18;1625:10;1622:34;1619:62;1616:88;;;1684:18;;:::i;:::-;1616:88;1724:10;1720:2;1713:22;1503:238;1460:281;;:::o;1747:129::-;1781:6;1808:20;;:::i;:::-;1798:30;;1837:33;1865:4;1857:6;1837:33;:::i;:::-;1747:129;;;:::o;1882:308::-;1944:4;2034:18;2026:6;2023:30;2020:56;;;2056:18;;:::i;:::-;2020:56;2094:29;2116:6;2094:29;:::i;:::-;2086:37;;2178:4;2172;2168:15;2160:23;;1882:308;;;:::o;2196:146::-;2293:6;2288:3;2283;2270:30;2334:1;2325:6;2320:3;2316:16;2309:27;2196:146;;;:::o;2348:425::-;2426:5;2451:66;2467:49;2509:6;2467:49;:::i;:::-;2451:66;:::i;:::-;2442:75;;2540:6;2533:5;2526:21;2578:4;2571:5;2567:16;2616:3;2607:6;2602:3;2598:16;2595:25;2592:112;;;2623:79;;:::i;:::-;2592:112;2713:54;2760:6;2755:3;2750;2713:54;:::i;:::-;2432:341;2348:425;;;;;:::o;2793:340::-;2849:5;2898:3;2891:4;2883:6;2879:17;2875:27;2865:122;;2906:79;;:::i;:::-;2865:122;3023:6;3010:20;3048:79;3123:3;3115:6;3108:4;3100:6;3096:17;3048:79;:::i;:::-;3039:88;;2855:278;2793:340;;;;:::o;3139:122::-;3212:24;3230:5;3212:24;:::i;:::-;3205:5;3202:35;3192:63;;3251:1;3248;3241:12;3192:63;3139:122;:::o;3267:139::-;3313:5;3351:6;3338:20;3329:29;;3367:33;3394:5;3367:33;:::i;:::-;3267:139;;;;:::o;3412:654::-;3490:6;3498;3547:2;3535:9;3526:7;3522:23;3518:32;3515:119;;;3553:79;;:::i;:::-;3515:119;3701:1;3690:9;3686:17;3673:31;3731:18;3723:6;3720:30;3717:117;;;3753:79;;:::i;:::-;3717:117;3858:63;3913:7;3904:6;3893:9;3889:22;3858:63;:::i;:::-;3848:73;;3644:287;3970:2;3996:53;4041:7;4032:6;4021:9;4017:22;3996:53;:::i;:::-;3986:63;;3941:118;3412:654;;;;;:::o;4072:114::-;4139:6;4173:5;4167:12;4157:22;;4072:114;;;:::o;4192:184::-;4291:11;4325:6;4320:3;4313:19;4365:4;4360:3;4356:14;4341:29;;4192:184;;;;:::o;4382:132::-;4449:4;4472:3;4464:11;;4502:4;4497:3;4493:14;4485:22;;4382:132;;;:::o;4520:108::-;4597:24;4615:5;4597:24;:::i;:::-;4592:3;4585:37;4520:108;;:::o;4634:179::-;4703:10;4724:46;4766:3;4758:6;4724:46;:::i;:::-;4802:4;4797:3;4793:14;4779:28;;4634:179;;;;:::o;4819:113::-;4889:4;4921;4916:3;4912:14;4904:22;;4819:113;;;:::o;4968:732::-;5087:3;5116:54;5164:5;5116:54;:::i;:::-;5186:86;5265:6;5260:3;5186:86;:::i;:::-;5179:93;;5296:56;5346:5;5296:56;:::i;:::-;5375:7;5406:1;5391:284;5416:6;5413:1;5410:13;5391:284;;;5492:6;5486:13;5519:63;5578:3;5563:13;5519:63;:::i;:::-;5512:70;;5605:60;5658:6;5605:60;:::i;:::-;5595:70;;5451:224;5438:1;5435;5431:9;5426:14;;5391:284;;;5395:14;5691:3;5684:10;;5092:608;;;4968:732;;;;:::o;5706:373::-;5849:4;5887:2;5876:9;5872:18;5864:26;;5936:9;5930:4;5926:20;5922:1;5911:9;5907:17;5900:47;5964:108;6067:4;6058:6;5964:108;:::i;:::-;5956:116;;5706:373;;;;:::o;6085:979::-;6182:6;6190;6198;6247:2;6235:9;6226:7;6222:23;6218:32;6215:119;;;6253:79;;:::i;:::-;6215:119;6401:1;6390:9;6386:17;6373:31;6431:18;6423:6;6420:30;6417:117;;;6453:79;;:::i;:::-;6417:117;6558:63;6613:7;6604:6;6593:9;6589:22;6558:63;:::i;:::-;6548:73;;6344:287;6698:2;6687:9;6683:18;6670:32;6729:18;6721:6;6718:30;6715:117;;;6751:79;;:::i;:::-;6715:117;6856:63;6911:7;6902:6;6891:9;6887:22;6856:63;:::i;:::-;6846:73;;6641:288;6968:2;6994:53;7039:7;7030:6;7019:9;7015:22;6994:53;:::i;:::-;6984:63;;6939:118;6085:979;;;;;:::o;7070:99::-;7122:6;7156:5;7150:12;7140:22;;7070:99;;;:::o;7175:169::-;7259:11;7293:6;7288:3;7281:19;7333:4;7328:3;7324:14;7309:29;;7175:169;;;;:::o;7350:246::-;7431:1;7441:113;7455:6;7452:1;7449:13;7441:113;;;7540:1;7535:3;7531:11;7525:18;7521:1;7516:3;7512:11;7505:39;7477:2;7474:1;7470:10;7465:15;;7441:113;;;7588:1;7579:6;7574:3;7570:16;7563:27;7412:184;7350:246;;;:::o;7602:377::-;7690:3;7718:39;7751:5;7718:39;:::i;:::-;7773:71;7837:6;7832:3;7773:71;:::i;:::-;7766:78;;7853:65;7911:6;7906:3;7899:4;7892:5;7888:16;7853:65;:::i;:::-;7943:29;7965:6;7943:29;:::i;:::-;7938:3;7934:39;7927:46;;7694:285;7602:377;;;;:::o;7985:423::-;8126:4;8164:2;8153:9;8149:18;8141:26;;8213:9;8207:4;8203:20;8199:1;8188:9;8184:17;8177:47;8241:78;8314:4;8305:6;8241:78;:::i;:::-;8233:86;;8329:72;8397:2;8386:9;8382:18;8373:6;8329:72;:::i;:::-;7985:423;;;;;:::o;8414:313::-;8527:4;8565:2;8554:9;8550:18;8542:26;;8614:9;8608:4;8604:20;8600:1;8589:9;8585:17;8578:47;8642:78;8715:4;8706:6;8642:78;:::i;:::-;8634:86;;8414:313;;;;:::o;8733:624::-;8922:4;8960:2;8949:9;8945:18;8937:26;;9009:9;9003:4;8999:20;8995:1;8984:9;8980:17;8973:47;9037:78;9110:4;9101:6;9037:78;:::i;:::-;9029:86;;9162:9;9156:4;9152:20;9147:2;9136:9;9132:18;9125:48;9190:78;9263:4;9254:6;9190:78;:::i;:::-;9182:86;;9278:72;9346:2;9335:9;9331:18;9322:6;9278:72;:::i;:::-;8733:624;;;;;;:::o;9363:514::-;9524:4;9562:2;9551:9;9547:18;9539:26;;9611:9;9605:4;9601:20;9597:1;9586:9;9582:17;9575:47;9639:78;9712:4;9703:6;9639:78;:::i;:::-;9631:86;;9764:9;9758:4;9754:20;9749:2;9738:9;9734:18;9727:48;9792:78;9865:4;9856:6;9792:78;:::i;:::-;9784:86;;9363:514;;;;;:::o;9883:77::-;9920:7;9949:5;9938:16;;9883:77;;;:::o;9966:118::-;10053:24;10071:5;10053:24;:::i;:::-;10048:3;10041:37;9966:118;;:::o;10090:332::-;10211:4;10249:2;10238:9;10234:18;10226:26;;10262:71;10330:1;10319:9;10315:17;10306:6;10262:71;:::i;:::-;10343:72;10411:2;10400:9;10396:18;10387:6;10343:72;:::i;:::-;10090:332;;;;;:::o"},"methodIdentifiers":{"collectionDropImplementation()":"3feb0e8d","createCollectionDrop(string,string,address)":"e585bcd5","createEditionDrop(string,address)":"42d648e3","editionDropImplementation()":"dd40bb62","getCollectionContracts()":"e3fa9df8","getEditionContracts()":"f323b896"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collectionDropImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_editionDropImplementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CollectionDropDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"EditionDropDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"collectionDropImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createCollectionDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"createEditionDrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"editionDropImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCollectionContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEditionContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTFactory.sol\":\"NFTFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol\":{\"keccak256\":\"0x366f804cd7571a67c51bec726d9f25b44cb0fb52bdeeed88b397c24c7ea0865f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8fccf68ef3ff40ed155e23ed8e3d0de299dcef6012a0536828b16c65af2b3c8\",\"dweb:/ipfs/Qmahy3CJAgMoNJEpbJMjEKsZMc6sU8gCYrFan4WnmBrMZT\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x315bcaebd3738cfe34ddd3525c8d3f1694afaabe0fc9f3857727497b19fb9473\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58701c5c131b64e5a48e712c2b89b83a97ee5a2e720650f3941edbf1b90fe75\",\"dweb:/ipfs/QmW3bmSiiMqcTZLBRHFr2ztf9mriMuHrkqWbAv9WQhxFZ8\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x6694b63ddb2c59bbe341c846171798350e8f72fa02189fcdeaca864e28b54e1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d945d33e2189ac4e531e4ed228f59ca957b3898c4f9051f4b8c7ae44d72b23a\",\"dweb:/ipfs/QmRcEwubTe3xyXxthijs5fVzEgUFSxeddjd5PGfhBnkunX\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x7e918671c04972845975935ea13c9ce0be1228031ba0e929d0f1f68fd1f17214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3027ebaeef3e678ad9bae26f0556469878e992bf7dec94bede328a92be529419\",\"dweb:/ipfs/Qmdu4RfMYv9Q7iHWuYfyUL6fZKc73nM4YWizNP8w1xay56\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xbb7e8401583d26268ea9103013bcdcd90866a7718bd91105ebd21c9bf11f4f06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866a11ad89c93ee918078f7a46ae31e17d89216ce64603f0d34be7ed0a5c520e\",\"dweb:/ipfs/QmW3ckLEJg2v2NzuVLNJFmRuerGSipw6Dzg6ntbmqbAGoC\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/CollectionDrop.sol\":{\"keccak256\":\"0x6cd36652f75155d5992d1a06267ee8db9825bfe4fa71fb58715d0782d95db65f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7eccedf2003162fca15f61dac265bedae27f18f9f188689cc6e932c6e7b1647\",\"dweb:/ipfs/QmTW1dQrSSMYjn1qzzKDP6J61gqeujw5EVop4n3yzCXkHG\"]},\"contracts/EditionDrop.sol\":{\"keccak256\":\"0x0f60854a39e40faf5aba4d5fd2ba20a77e9e011d83aa763f1606040fc70dc2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7168160471fd0a4f680f044188f6018b57d411a577b548222c33507a066840fd\",\"dweb:/ipfs/QmZXdSpn7ARa5iuXGvrkMHdEhd3x3hzvUceod3jnNDp6xv\"]},\"contracts/NFTFactory.sol\":{\"keccak256\":\"0xdab2dd02640f40ae81723c090b998bb1d6b4437d890e7d7908a490ebb16d3d43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579a131c02b559a31ade7caa7f2d8a17a2d336dd6ad8ccd9b3cad9a13a1f4aec\",\"dweb:/ipfs/QmaFw5nvuJMGJfokgByksAj9K257iRjiaei8gZ8aDM2gpU\"]}},\"version\":1}"}}}}}